[{"path":"/articles/acceleration-filtering.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Complementary filtering for acceleration: low- & high-frequency","text":"vignette use data suction cup tag attached back beaked whale. want run example, download “testset1.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files Write testset1 object bw, “beaked whale”. use plott() inspect .  dataset contains deep dive followed shallow dive. want infer function looking locomotion effort sudden changes acceleration indicative prey capture attempts. also going look changes swimming gait.","code":"library(tagtools) bw_file_path <- \"nc_files/testset1.nc\" bw <- load_nc(bw_file_path) plott(X = list(Depth = bw$P, Acc = bw$A, Mag = bw$M))"},{"path":"/articles/acceleration-filtering.html","id":"complementary-filtering","dir":"Articles","previous_headings":"","what":"Complementary filtering","title":"Complementary filtering for acceleration: low- & high-frequency","text":"separate slow orientation changes postural dynamics locomotion, need choose filter cut-frequency stroke frequency. can estimate dominant stroke frequency using dsf(). bout steady swimming minutes 35 42 data. Use crop_to() pick accelerometer data interval: Mimic previous code similarly crop pressure (depth) magnetometer data: Plot three together make sure got right.  , run dsf() Aseg get mean stroking rate: Try magnetometer data: estimated stroke rates similar? Yes, . acceleration-based estimate .3821574, magnetometer-based estimate .3807932. magnetometer sensitive specific acceleration, stroking motions show Mseg? animal changing position, magnetometer reading change. Refer plots Mseg Dseg try figure axis stroking motions show . good starting choice filter cut-frequency 70% stroking rate (pick one estimates, average two). Call value fc. Run complementary filter separate slow fast time-scales. Recall stored bw bw$: complementary filter returns list containing two data matrices: low-pass filtered data high-pass filtered data. three-column matrix filter run column input data. like now two accelerometers tag—one sensitive low frequencies sensitive high frequencies. like get matrix cell array, : sampling rate original data. simplicity, make variable sampling_rate equal sampling rate use plott() plot two filtered accelerations along dive profile:  two versions acceleration sometimes called ‘static’ ‘dynamic’ acceleration. filtering worked, see Alow large, relatively slow changes acceleration mostly orientation. missing Ahigh, high frequency specific acceleration, propulsion strikes flinches. like, zoom section steady stroking used dsf—see stroking Ahigh, Alow.","code":"Aseg <- crop_to(X = bw$A, tcues = c(35*60, 42*60)) Dseg <- crop_to(X = bw$P, tcues = c(35*60, 42*60)) Mseg <- crop_to(X = bw$M, tcues = c(35*60, 42*60)) plott(X = list(Depth = Dseg, Acc = Aseg, Mag = Mseg), interactive = TRUE) dsfa <- dsf(Aseg)$fpk   # estimated stroking rate in Hz dsfm <- dsf(Mseg)$fpk # another estimate fc <- 'YourValueHere'           # your value for fc in Hz, a number, without quotes Af <- comp_filt(bw$A, fc = fc)  str(Af, max.level = 1) #> List of 2 #>  $ lowpass : num [1:137976, 1:3] -1.22 -1.22 -1.21 -1.19 -1.17 ... #>  $ highpass: num [1:137976, 1:3] -0.624 -0.558 -0.516 -0.511 -0.471 ... Alow <- Af[[1]]     # low frequency A data Ahigh <- Af[[2]]      # high frequency A data sampling_rate <- bw$A$sampling_rate plott(X = list(`Depth (m)` = bw$P$data,                `LF Accel` = Alow,                 `HF Accel` = Ahigh),       fsx = sampling_rate) plott(X = list(`Depth` = bw$P$data,                `LF Accel` = Alow,                 `HF Accel` = Ahigh),       fsx = sampling_rate, xlim = c(35*60, 42*60)/3600)"},{"path":"/articles/acceleration-filtering.html","id":"locomotion-style","dir":"Articles","previous_headings":"","what":"Locomotion style","title":"Complementary filtering for acceleration: low- & high-frequency","text":"want characterise locomotion style animal deep-dive ascent. Using plot made , zoom ascent see can identify intervals animal appears just swimming steadily (hint: look Alow fairly constant, indicating steady orientation). see changes swimming style throughout ascent? particular, check swimming styles time intervals (1) 36-38 minutes (2) 56-58 minutes. Write two objects (say, intvl1 intvl2) contain intervals seconds, using c(YourStartTime, YourEndTime). , crop high frequency acceleration data intervals using crop_to(...). (Try write code !) Now plott together. careful comparing, since plott puts different y-scales automatically fit data window!  Comparing two intervals swimming, conclude swimming styles? Look magnitude acceleration (units \\(m/s^2\\)). may want compare depth data intervals, .  one swimming style seem energetic ? magnitude acceleration peak lower first interval (\\(-0.5\\) \\(+1\\) \\(m/s^2\\)), time interval time animal swimming steadily upwards. However, acceleration changing quickly back forth: peaks come much frequently, 46 within two minutes. second time interval different, higher magnitudes acceleration (\\(-3\\) \\(+4\\) \\(m/s^2\\)). time interval also time animal swimming slightly upwards, visually obvious “bumps” path upwards, actually correspond individual acceleration peaks. Possibly, rather just ascending surface, whale exerting , accelerating quickly, try catch prey. Overall, second swimming style seems energetic first. Finally go back plot full high frequency acceleration data, Ahigh, portion cropped shallow dive. Use see whether active swimming shallow dive , , swimming gait used .  similarities swimming earlier? differences? two intervals look much similar intvl2 intvl3. Large spikes acceleration almost nonexistent, magnitude acceleration usually neatly \\(-1\\) \\(+1\\) \\(m/s^2\\). , number peaks intvl4 (47 peaks 2 minutes) almost exactly intvl2 (46 peaks 2 minutes). intvl5 slightly complicated. whale approaches zero depth end intvl5, almost acceleration stops momentarily final glide surface. surface, behavior erratic, representing perhaps kind relaxed frolicking, rather efficient swim upwards.","code":"intvl1 <- c(36*60, 38*60) intvl2 <- c(56*60, 58*60) Ah1 <- crop_to(Ahigh, sampling_rate = sampling_rate, tcues = intvl1) Ah2 <- crop_to(Ahigh, sampling_rate = sampling_rate, tcues = intvl2) plott(X = list(Ah1 = Ah1, Ah2 = Ah2), fsx = sampling_rate, xl = c(0, 1)) D1 <- crop_to(bw$P$data, sampling_rate = sampling_rate, tcues = intvl1) D2 <- crop_to(bw$P$data, sampling_rate = sampling_rate, tcues = intvl2) plot(x = (1:length(D1)), y = (-D1), xlab = \"samples\", ylab = \"Depth\") # plott doesn't make it very clear plot(x = (1:length(D2)), y = (-D2), xlab = \"samples\", ylab = \"Depth\") # so we'll just use plot plott(X = list(`Depth` = bw$P$data,                `LF Accel` = Alow,                 `HF Accel` = Ahigh),       fsx = sampling_rate) intvl3 <- c(77*60, 89*60) # whole shallow dive, for context intvl4 <- c(77*60, 79*60) # earlier in the shallow dive intvl5 <- c(87*60, 89*60) # later in the shallow dive Ah3 <- crop_to(X = Ahigh, sampling_rate = sampling_rate, tcues = intvl3) D3 <- crop_to(X = bw$P$data, sampling_rate = sampling_rate, tcues = intvl3) Ah4 <- crop_to(X = Ahigh, sampling_rate = sampling_rate, tcues = intvl4) D4 <- crop_to(X = bw$P$data, sampling_rate = sampling_rate, tcues = intvl4) Ah5 <- crop_to(X = Ahigh, sampling_rate = sampling_rate, tcues = intvl5) D5 <- crop_to(X = bw$P$data, sampling_rate = sampling_rate, tcues = intvl5)  plott(X = list(Depth = D3, HfAccel3 = Ah3), fsx = sampling_rate, interactive = TRUE) plot(x = (1:length(D4)), y = D4) plott(X = list(HfAccel4 = Ah4), fsx = sampling_rate, interactive = TRUE) plot(x = (1:length(D5)), y = D5) plott(X = list(HfAccel5 = Ah5), fsx = sampling_rate, interactive = TRUE)"},{"path":"/articles/acceleration-filtering.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Complementary filtering for acceleration: low- & high-frequency","text":"’ve learned separate low- high-frequency acceleration data complementary filter, done interpretation two sets data. Aaaaand… congrats! ’ve aced vignette. ’d like continue working vignettes, jerk-transients logical choice. magnetometer-filtering. three vignettes go together. Perhaps logical ordering acceleration-filtering, jerk-transients, magnetometer-filtering. , suits fancy/data! Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":""},{"path":"/articles/data-quality-error-correction.html","id":"checking-accelerometer-and-magnetometer-data","dir":"Articles","previous_headings":"","what":"Checking accelerometer and magnetometer data","title":"Data quality & error correction","text":"Biologging data always ready--use read tag. corrections may needed. Quality checking fairly easy pressure data aquatic mammals know breathe surface. Data accelerometers magnetometers difficult. one thing, three axes, also don’t intuitive feel look like. However, fortunately, quality checks can M data help catch correct problems. objective estimate orientation animal (pitch, roll heading) function time. first need check correct errors M.","code":""},{"path":"/articles/data-quality-error-correction.html","id":"data-quality-checks","dir":"Articles","previous_headings":"Checking accelerometer and magnetometer data","what":"Data quality checks","title":"Data quality & error correction","text":"practical use data tag attached back sperm whale. want run example, download “rawtestset3.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files Look overall structure get idea data stored, check info structure see data came . Inspect depth, acceleration magnetometer data plott:  Depth, sw$P, seems fine—looks like depth versus time plot diving whale. However, hard see whether problems accelerometer magnetometer data, sw$sw$M, respective plots. Two things can often go wrong raw tag data: sensors may well-calibrated, axes M may aligned animal’s axes. Luckily, can check data. much specific acceleration, vector magnitude acceleration measurement close magnitude gravity vector, .e., 9.8 \\(\\frac{m}{s^2}\\). magnetometer data also fairly constant vector magnitude equal field strength data came . 48 \\(\\mu\\)T case since tag deployed \\(28.48^{\\circ}\\), \\(-89.052^{\\circ}\\) latitude/longitude. (, \\(28.48^{\\circ}\\) north latitude, \\(89.052^{\\circ}\\) west longitude.) (useful website find geomagnetic field parameters, based tag deployed , : https://www.ngdc.noaa.gov/geomag-web/#igrfwmm.) Finally, angle M close magnetic inclination angle, also locally constant, \\(59^{\\circ}\\) case. Use check_AM() compute field strength M inclination angle. Recall stored sw$M stored sw$M, write result new object AMcheck another similar name. check object contains. able tell AMcheck list containing two vectors, AMcheck$fstr (field strength) AMcheck$incl (inclination). Open next code see plott .  top plot shows field strength M. close 9.8 48, respectively, little variation. , acceleration magnetometer data need re-calibration. Usually, problem M due stray magnetic fields tag. Fix ‘hard-iron correction’, function fix_offset_3d can . , recall M stored within sw sw$M. Write result object Mf, look Mf contains. show Mf list two elements, Mf$X Mf$G. Comparing Mf$G Mf$X sw$, ’ll notice Mf$X sw$structures contain kind data. Hence Mf$X can stand sw$M (Mf ). , try re-run check_AM() sw$Mf$X see field strength improved.  gone well, field strength pretty constant right around 48 \\(\\mu\\)T. ? Great work! Now look inclination angle (bottom plot). Chances , doesn’t look consistently close \\(59^{\\circ}\\). Therefore, need next step…","code":"library(tagtools) sw_file_path <- \"nc_files/rawtestset3.nc\" sw <- load_nc(sw_file_path) str(sw, max.level = 1) sw$info #> [1] \"results for `str(sw, max.level = 1)`:\" #> [1] \"-------------------------------------\" #> List of 5 #>  $ _empty:List of 1 #>  $ P     :List of 16 #>  $ A     :List of 18 #>  $ M     :List of 18 #>  $ info  :List of 36 #>  - attr(*, \"class\")= chr [1:2] \"animaltag\" \"list\" #> [1] \"-------------------------------------\" #> [1] \"and results for `sw$info`:\" #> [1] \"-------------------------------------\" #> $depid #> [1] \"sw03_165a\" #>  #> $dtype_source #> [1] \"sw03_165aprh.mat,sw03_165aaud.txt\" #>  #> $dtype_datetime_made #> [1] \"18/07/2017 22:15:00\" #>  #> $dtype_nfiles #> [1] \"1\" #>  #> $dtype_format #> [1] \"MAT\" #>  #> $device_serial #> [1] \"\" #>  #> $device_make #> [1] \"DTAG\" #>  #> $device_type #> [1] \"Archival\" #>  #> $device_model #> [1] \"DTAG2\" #>  #> $device_url #> [1] \"https://www.soundtags.org\" #>  #> $sensors_firm #> [1] \"Not specified\" #>  #> $sensors_soft #> [1] \"Not specified\" #>  #> $sensors_list #> [1] \"3axis Accelerometer,3 axis Magnetometer,Pressure,Sound\" #>  #> $animal_id #> [1] \"Unknown\" #>  #> $animal_species_common #> [1] \"Sperm whale\" #>  #> $animal_species_science #> [1] \"Physeter macrocephalus\" #>  #> $animal_dbase_url #> [1] \"http://www.arkive.org/sperm-whale/physeter-macrocephalus/\" #>  #> $animal_dbase_itis #> [1] \"180488\" #>  #> $dephist_device_tzone #> [1] \"0\" #>  #> $dephist_device_regset #> [1] \"dd/mm/yyyy HH:MM:SS\" #>  #> $dephist_device_datetime_start #> [1] \"2003-06-14 18:38:35\" #>  #> $dephist_deploy_locality #> [1] \"northern Gulf of Mexico\" #>  #> $dephist_deploy_location_lat #> [1] \"28.48\" #>  #> $dephist_deploy_location_lon #> [1] \"-89.052\" #>  #> $dephist_deploy_datetime_start #> [1] \"2003-06-14 18:38:35\" #>  #> $dephist_deploy_method #> [1] \"Suction cups\" #>  #> $project_name #> [1] \"GOM 2003\" #>  #> $project_datetime_start #> [1] \"2003-06-03\" #>  #> $project_datetime_end #> [1] \"2003-06-24\" #>  #> $provider_name #> [1] \"Mark Johnson\" #>  #> $provider_details #> [1] \"Univ St Andrews\" #>  #> $provider_email #> [1] \"info@animaltags.org\" #>  #> $provider_license #> [1] \"Contact data provider\" #>  #> $provider_cite #> [1] \"Contact data provider\" #>  #> $provider_doi #> [1] \"Contact data provider\" #>  #> $creation_date #> [1] \"02-Dec-2019 16:14:58\" plott(X = list(depth = sw$P, acc = sw$A, mag = sw$M)) AMcheck <- check_AM(sw$A, sw$M) str(AMcheck, max.level = 1) #> List of 2 #>  $ fstr: num [1:71975, 1:2] 9.76 9.62 9.39 9.32 9.31 ... #>  $ incl: num [1:71975, 1] -0.655 -0.634 -0.62 -0.577 -0.529 ... sampling_rate <- sw$A$sampling_rate # get the sampling rate of A and M for plotting # plott fstr, and incl (converting from radians to degrees) plott(X = list(fstr = AMcheck$fstr, incl = AMcheck$incl*180/pi), fsx = sampling_rate) Mf <- fix_offset_3d(sw$M) str(Mf, max.level = 1) #> List of 2 #>  $ X:List of 19 #>  $ G:List of 1 str(Mf$G, max.level = 1) str(Mf$X, max.level = 1) str(sw$A, max.level = 1) #> [1] \"----------------\" #> [1] \"results for Mf$G\" #> [1] \"----------------\" #> List of 1 #>  $ poly: num [1:3, 1:2] 1 1 1 9.64 -5.58 ... #> [1] \"----------------\" #> [1] \"results for Mf$X\" #> [1] \"----------------\" #> List of 19 #>  $ data              : num [1:71975, 1:3] -28.6 -28.1 -27.4 -26.6 -25.6 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 5 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"sw03_165a\" #>  $ creation_date     : chr \"07-Aug-2017 15:32:56\" #>  $ history           : chr \"fix_offset_3d\" #>  $ type              : chr \"mag\" #>  $ full_name         : chr \"Magnetometer\" #>  $ description       : chr \"triaxial magnetometer\" #>  $ unit              : chr \"uT\" #>  $ unit_name         : chr \"micro Tesla\" #>  $ unit_label        : chr \"\\\\muT\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"sensor\" #>  $ axes              : chr \"FRU\" #>  $ cal_poly          : num [1:3, 1:2] 1 1 1 9.64 -5.58 ... #> [1] \"----------------\" #> [1] \"results for sw$A\" #> [1] \"----------------\" #> List of 18 #>  $ data              : num [1:71975, 1:3] -3.49 -3.32 -3.04 -2.89 -2.73 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 5 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"sw03_165a\" #>  $ creation_date     : chr \"07-Aug-2017 15:32:56\" #>  $ history           : chr \"sens_struct,decdc(5)\" #>  $ type              : chr \"acc\" #>  $ full_name         : chr \"Acceleration\" #>  $ description       : chr \"triaxial acceleration\" #>  $ unit              : chr \"m/s2\" #>  $ unit_name         : chr \"meters per seconds squared\" #>  $ unit_label        : chr \"m/s^2\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"tag\" #>  $ axes              : chr \"FRU\" AMcheck2 <- check_AM(sw$A, Mf$X) plott(X = list(fstr = AMcheck2$fstr, incl = AMcheck2$incl*180/pi), fsx = sampling_rate)"},{"path":"/articles/data-quality-error-correction.html","id":"correcting-the-axes-of-triaxial-sensor-data","dir":"Articles","previous_headings":"Checking accelerometer and magnetometer data","what":"Correcting the axes of triaxial sensor data","title":"Data quality & error correction","text":"field strength okay M inclination angle wrong, strong indication magnetometer accelerometer axes don’t match. Assuming accelerometer axes correct, found trial error magnetometer axes mapped follows: make corrections Mf one--one, probably convenient . make happen, define ‘map’ matrix summarizes changes: Use function rotate_vecs() apply Map Mf$X make new ‘tag frame’ data structure: Mt now oriented tag’s frame reference. Add important information Mt structure Mt: Check field strength inclination sw$Mt . Try , check work code : write new object, perhaps AMcheck3, result check_AM sw$Mt. use new object AMcheck3 place AMcheck2 get two plots, newly corrected data.  good? Bear mind inferred inclination angle accelerometer magnetometer data usually bit noisy don’t expect incl exactly expected inclination angle. get pretty close, though (around \\(59^{\\circ}\\)). comfortable data pass quality checks, save new NetCDF file: corrections made get Mt stored structure information also saved automatically nc file - verify showing contents Mt. processing steps listed ‘history’ field traceable expect professional archive.","code":"Map <- matrix(c(-1, 0, 0,                 0, 0, 1,                 0, 1, 0),               nrow = 3, ncol = 3, byrow = TRUE) #>      [,1] [,2] [,3] #> [1,]   -1    0    0 #> [2,]    0    0    1 #> [3,]    0    1    0 Mt <- rotate_vecs(Mf$X,Map) Mt$frame <- 'tag' Mt$sensor_map <- Map        # save the Map matrix too str(Mt, max.level = 1) #> List of 20 #>  $ data              : num [1:71975, 1:3] 28.6 28.1 27.4 26.6 25.6 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 5 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"sw03_165a\" #>  $ creation_date     : chr \"07-Aug-2017 15:32:56\" #>  $ history           : chr \"fix_offset_3d\" #>  $ type              : chr \"mag\" #>  $ full_name         : chr \"Magnetometer\" #>  $ description       : chr \"triaxial magnetometer\" #>  $ unit              : chr \"uT\" #>  $ unit_name         : chr \"micro Tesla\" #>  $ unit_label        : chr \"\\\\muT\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"tag\" #>  $ axes              : chr \"FRU\" #>  $ cal_poly          : num [1:3, 1:2] 1 1 1 9.64 -5.58 ... #>  $ sensor_map        : num [1:3, 1:3] -1 0 0 0 0 1 0 1 0 AMcheck3 <- check_AM(sw$A, Mt) plott(X = list(fstr = AMcheck3$fstr, incl = AMcheck3$incl*180/pi), fsx = sampling_rate) save_nc('testset3_tag_frame', X = list(sw$A, Mt, sw$P, sw$info)) str(Mt) #> List of 20 #>  $ data              : num [1:71975, 1:3] 28.6 28.1 27.4 26.6 25.6 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 5 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"sw03_165a\" #>  $ creation_date     : chr \"07-Aug-2017 15:32:56\" #>  $ history           : chr \"fix_offset_3d\" #>  $ type              : chr \"mag\" #>  $ full_name         : chr \"Magnetometer\" #>  $ description       : chr \"triaxial magnetometer\" #>  $ unit              : chr \"uT\" #>  $ unit_name         : chr \"micro Tesla\" #>  $ unit_label        : chr \"\\\\muT\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"tag\" #>  $ axes              : chr \"FRU\" #>  $ cal_poly          : num [1:3, 1:2] 1 1 1 9.64 -5.58 ... #>  $ sensor_map        : num [1:3, 1:3] -1 0 0 0 0 1 0 1 0"},{"path":"/articles/data-quality-error-correction.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Data quality & error correction","text":"learned? powerful tools detecting correcting common errors raw data. Great work! ’ve completed vignette. ’d like continue working vignettes, tag--whale-frame probably good option. deals estimating correcting orientation tag animal. vignette use tag data aligned animal’s body axes, e.g., tag applied free-moving whale. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('tag-to-whale-frame')"},{"path":"/articles/Detectors.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Detectors","text":"      Scientists long struggled study animal behavior minimizing amount imposed stress upon animal observed (Brown et al., 2013; Schneirla, 1950). Difficulty also arises attempting observe animals environments time periods relatively inaccessible humans (Allen et al., 2016). two concerns arose scientific field biotelemetry (Kooyman, 2003). Since first use tagging devices animals 1963, field biotelemtery evolved discipline allows detailed behavioral studying animals ranging size chipmunks blue whales (Hammond et al., 2016; Acevedo-Gutiérrez et al., 2002; Kooyman, 2003).       Marine biologging become one prominent fields biotelemetry. variety unique tagging systems (.e. DTAGs (Johnson Tyack, 2003), Acousonde tags (Burgess et al., 1998), etc.) developed researchers around world try gain non-invasive access unique lives marine creatures. data obtained tags, scientists able determine exact moment time animal exhibited certain behavior (Johson et al., 2009; Goldbogen et al., 2006; Goldbogen et al., 2008; Miller et al., 2004). However, due often high sampling rate multisensor tags long duration data recording, process determining time every instance given behavior can quite laborious time consuming.       quest make data analysis efficient, scientists begun develop software functions, automatically detect animal behaviors multisensor data (Owen et al., 2016; Allen et al., 2016; Doniol-Valcroze et al., 2011; Kokubun et al., 2011; Cox et al., 2017; Ware et al., 2011; Viviant et al., 2010). functions scan data searching signal characteristics, known indicators unique animal behaviors. many methods specific data format requirements, flexible methods can easily applied data many species tag types facilitate inter-study inter-specific comparisons meta-analysis variety different animal behaviors.       light , developed function, usable three widely used software programs (R (R Core Team 2017), Matlab (MathWorks, Natick, MA, USA), Octave (Eaton et al., 2016)), generalizable wide variety data types/formats, animals, behaviors. function, called detect_peaks, part tagtools package R.","code":""},{"path":"/articles/Detectors.html","id":"function-design","dir":"Articles","previous_headings":"","what":"Function Design","title":"Detectors","text":"      detect_peaks function contains 6 specified inputs allows additional inputs added end command.       vignette, describing , user, need understand using function thought process behind significant step function script. Later , section titled Case Study, walk specific example function may used.       order make best use function, helpful understand things regarding design. name function suggests, function determines time animal behavior going large data sets locating large spikes/peaks data signal. peak determined represent behavior event surpasses predetermined threshold. function, default threshold level (input thresh) set 0.99 quantile signal. However, threshold level appropriate circumstances. may cases threshold level result many false positive detections (peak detected without present behavior) insufficient true positive detections (peak detected present behavior). Typically, threshold high, number missed detections high strongest peaks representing behavior events detected. threshold low, number true positive detections high, number false positives (Urick, 1967). Therefore, allow user change threshold level desire level default. information determining best threshold level can found case study .       peaks signal detected, blanking time (input bktime) used determine start end times peak well time peak reached maximum level signal. blanking time amount time within detected peaks determined represent one large, unified behavior event. default value blanking time set 0.80 quantile vector containing time differences consecutive signal values surpass specified threshold. first job blanking time determine adjacent peaks represent one multiple behavior events. detected peaks separated length time larger blanking time considered distinct behavior events. done, start times (point peak first exceeds threshold), end times (point peak finally recedes beneath threshold value), peak times (point peak reaches maximum signal strength), peak maximum (maximum value detected peak units signal) determined returned output.       function finished running, signal studied plotted (assuming input plot_peaks TRUE) determined peak labeled marker. point, able examine quality function’s performance detecting true positive events. determine wish threshold level blanking time altered, can click graph change values. example, want change threshold level, can click within plot given threshold level desired click “Finish”. rerun function return new peak detections new plot. want change blanking time, must click twice within plot click “Finish”. distance click determines new blanking time function rerun. want change threshold blanking time, must click three times. first click change threshold second two clicks alter blanking time. clicking three times, function rerun. occasion satisfied threshold blanking times used first run function, must simply click “Finish” button located just plot, peak detections returned. Along peak detections, threshold level blanking time used analysis also returned ouput.       final crucial thing understand using function input data can either signal vector matrix data. data signal vector, user wishes peaks detected , nothing given input FUN. However, data given input matrix, input FUN must given peak detector able detect peaks matrix data. input FUN function user wishes apply data matrix generate signal vector (passes peak detection process described ). signal vector metric whose values large events occur, small otherwise – specific event detected, better. Examples functions pass “FUN” tagtools package njerk, odba, etc., function (including custom function written user) can used. provide examples detect_peaks function works vector matrix inputs case study .","code":"detect_peaks(data, sr, FUN = NULL, thresh = NULL, bktime = NULL, plot_peaks = NULL,...)"},{"path":[]},{"path":"/articles/Detectors.html","id":"detecting-lunge-feeding-events-of-a-blue-whale-from-triaxial-acceleration-data","dir":"Articles","previous_headings":"Case Study","what":"Detecting lunge feeding events of a blue whale from triaxial acceleration data","title":"Detectors","text":"      case study, providing example use detect_peaks function order detect times lunge feedings events blue whale. Previous studies shown effectiveness using norm jerk triaxial acceleration detect presence lunge feeding events tag data (Simon et al., 2012; Owen et al., 2016). norm jerk square-root sum squares axis acceleration matrix. good proxy feeding behavior events blue whales, lunge feeding whales, known drastically increase speed acceleration approaching feeding patch. , upon opening mouthes engulf prey, extremely sudden decrease speed acceleration due drag. rapid increase decrease speed acceleration can observed norm jerk signal large peak signal. Thankfully, tagtools package function njerk can used convert acceleration matrix norm jerk signal vector.       begin, load data used case study. following data obtain members SOCAL Behavioral Response Study project (https://sea-inc.net/science/socal-brs/). particular blue whale tagged DTAG2, gathered multisensor data including, limited , triaxial accelerometer pressure (depth) data. particular data set used variety publications (DeRuiter et al., 2017; Goldbogen et al., 2013; Goldbogen et al., 2015). time , load acceleration matrix (within whale frame) blue whale data set. , use read_csv function package readr. (need , install_packages(\"readr\") trick.) acceleration matrix within whale frame labeled “Aw”. also create variable “sampling_rate” specifies sampling rate acceleration data, used run njerk function. , look first rows Aw sampling_rate confirm worked properly.       Next, generate norm jerk signal using function njerk. plot provides helpful visualization signal.        can see, used acceleration matrix now converted norm-jerk signal vector. plot, can already begin get idea lunge feeding events might notice occasional peaks signal. However, peaks right 63000 time value begin look completely unlike data. (equals 3.5 hours: 63000 signals times (one second per five signals) times (one hour per 3600 seconds) = 63000 / 18000 = 3.5.) good explanation time, tag fallen whale. Consequentially, past time, longer recording norm jerk whale’s movement, instead norm jerk tag floating surface ocean. likely peaks skew results, remove data sample 63000.       next step detecting event lunge feeding behavior gather rest data necessary use detect_peaks function. order run detect_peaks function, must variable sr, sampling rate data input. might think , “Isn’t sampling_rate, already gathered?” correct. However, due nature function, sampling rate must labeled something “sampling_rate”.       point, almost ready apply norm jerk signal detect_peaks function. One thing consider first, however, whether want set specified threshold /blanking time value okay simply using default values inputs. instance, let’s assume don’t know perfect threshold value blanking time . use default settings (now).  case need/want see jerk signal running detect_peaks function, produced results using following code:       Now, looking generated plot can see signal , now plot markers identifying peaks detected. time, can decide wish change level threshold blanking time, consequentally rerunning function. wish accept peak detections displayed, can end function obtain output list detection times levels. order fully walk capabilities function, let’s imagine wish change threshold blanking time values see output might change. , click within plot, given , list coordinates [x, y] clicked three different locations plot: [19873, 0.874], [20000, 1.258], [19950, 0.736]. Based three coordinates, threshold value function rerun 0.874, blanking time 50. new plot summary results. included new code provide helpful visual, using detect_peaks() , necessary retype function changing threshold /blanking time interactive plot.","code":"library(readr) bw11_210a_tagdata <- readr::read_csv('http://sldr.netlify.com/data/bw11_210a_tagdata.csv') Aw <- cbind(bw11_210a_tagdata$Awx, bw11_210a_tagdata$Awy, bw11_210a_tagdata$Awz) sampling_rate <- bw11_210a_tagdata$fs[1]   head(Aw, 5) head(sampling_rate) ##           [,1]     [,2]     [,3] ## [1,] -0.757237 0.256707 0.594229 ## [2,] -0.754772 0.243776 0.613680 ## [3,] -0.749972 0.231498 0.635822 ## [4,] -0.741841 0.231193 0.662992 ## [5,] -0.730536 0.256309 0.700784 ## [1] 5 library(tagtools) jerk <- njerk(A = Aw, sampling_rate = sampling_rate) X <- list(jerk = jerk) plott(X, 5, line_colors = \"blue\") jerk <- jerk[1:63000] sr <- bw11_210a_tagdata$fs[1] detect_peaks(data = jerk, sr = sr, FUN = NULL,                  thresh = NULL, bktime = NULL, plot_peaks = TRUE) detect_peaks(data = Aw[1:63000, ], sr = sr, FUN = \"njerk\",                  thresh = NULL, bktime = NULL, plot_peaks = TRUE, sampling_rate = sampling_rate) peaks <- detect_peaks(data = jerk, sr = sr, FUN = NULL,                            thresh = 0.874, bktime = 50, plot_peaks = TRUE) plott(X, sampling_rate, line_colors = \"blue\") plott(X, sampling_rate, line_colors = \"blue\") str(peaks) ## 'data.frame':    232 obs. of  6 variables: ##  $ start_time: num  326 687 1124 1130 1187 ... ##  $ end_time  : num  326 692 1125 1130 1191 ... ##  $ peak_time : num  326 690 1124 1130 1190 ... ##  $ peak_max  : num  0.871 1.149 0.806 0.672 0.931 ... ##  $ thresh    : num  0.67 0.67 0.67 0.67 0.67 ... ##  $ bktime    : num  3.2 3.2 3.2 3.2 3.2 3.2 3.2 3.2 3.2 3.2 ..."},{"path":"/articles/Detectors.html","id":"roc-curves-and-detection-optimization","dir":"Articles","previous_headings":"Case Study > Detecting lunge feeding events of a blue whale from triaxial acceleration data","what":"ROC Curves and Detection Optimization","title":"Detectors","text":"      Receiver operating characteristic (ROC) curves type plot used order enhance overall performance automated event detection functions determining optimal threshold level. plots generated determining true positive rate false positive rate event detection function (case detect_peaks) specified threshold level. single point plot specifies true positive rate false positive rate one specified threshold level. Therefore, order generate full ROC curve, event detections must performed variety different thresholds. rate true positive detections calulated dividing number true positive detections number actual events. rate false positive detections calculated dividing number false positive detections total number possible events within time tag recording. Determining number total possible events can difficult, unfortunately, biological system, value dependent upon long list determining factors. example, number times whale can lunge feed within given amount time dependent upon availability food source, energy required swim currents, time required filter water baleen engulfing prey, etc. paper written Jeremy Goldbogen Stanford University, fin whales determined able lunge feed every 44.5 ± 19.1 seconds (Goldbogen et al., 2006). Therefore, since blue whales similar size fin whales, averaging meters longer, let’s say blue whales able lunge feed minimum 30 seconds since previous feeding event. Using number, can determine total possible number lunge feeding events dividing total number samples data sampling_rate, dividing number 30. , get 420 total possible lunge feeding events (tpevents) blue whale.       number known events also hard determine requires trained scientist manually scroll signal, looking distinct characteristics plot known related desired behavioral event. Lucky us, hard work already completed members SOCAL BRS project. name vector containing known times lunges data set “events”. Now, event times determined members SOCAL BRS units seconds, must first multiply vector sampling rate order units samples.       Let’s now begin make ROC curve. run detect_peaks function using blanking time 30 seconds thresholds ranging .05 1.75 (roughly max jerk signal). determine rate false positive true positive detections threshold level using known lunge times. Using rates, able plot ROC curve. Shown true positive false positive rates corresponding ROC plot.       Looking ROC plot , see overall event detection using detect_peaks function quite successful. large amount area curve, representing high performing event detector. Now, next step going determine optimal threshold level based true false positive rates shown . generally accepted definition “optimal” threshold level highest ratio true positive false positive detections. However, interest case study, let us assume wish find threshold level obtained maximum number true positive detections. looking detection rates , see occured thresholds 0.20 0.65. Becauses multiple thresholds maximum true positive rate achieved, going find thresholds posseses highest ratio true positive false positive detections, use “optimal” threshold.       see last value possesses highest ratio. value represents ratio threshold 0.65. final step optimizing event detection method utilize “optimal” threshold use run detect_peaks function one final time.         resulting data shows lunge feeding events detected detect_peaks function using “optimal” threshold blanking time. included plot dive profile blue whale lunges detected detect_peaks function marked gold known lunge times marked red. One brief note dive profile plot shown gold red markings overlap slightly directly overlayed still represent correctly detected lunge feeding event. exact time lunge determined occured slightly different detect_peaks function manual detections performed SOCAL BRS researchers.       case study provides specific application tool determine times lunge feeding events bio-logging acceleration data, hope tool flexible enough use across many different signal types, species contexts.","code":"tpevents <- (63000 / sampling_rate) / 30 head(events, 8) ## [1]  340  700 1195 1505 1910 3980 4380 6555 ##       True_Positive_Rate False_Positive_Rate ##  [1,]         0.00000000         0.000000000 ##  [2,]         0.45555556         0.019047619 ##  [3,]         0.88888889         0.033333333 ##  [4,]         0.91111111         0.050000000 ##  [5,]         0.92222222         0.076190476 ##  [6,]         0.92222222         0.109523810 ##  [7,]         0.92222222         0.140476190 ##  [8,]         0.92222222         0.150000000 ##  [9,]         0.92222222         0.114285714 ## [10,]         0.92222222         0.095238095 ## [11,]         0.92222222         0.073809524 ## [12,]         0.92222222         0.071428571 ## [13,]         0.92222222         0.066666667 ## [14,]         0.92222222         0.057142857 ## [15,]         0.91111111         0.052380952 ## [16,]         0.87777778         0.050000000 ## [17,]         0.85555556         0.045238095 ## [18,]         0.81111111         0.035714286 ## [19,]         0.76666667         0.023809524 ## [20,]         0.66666667         0.014285714 ## [21,]         0.58888889         0.007142857 ## [22,]         0.50000000         0.007142857 ## [23,]         0.44444444         0.007142857 ## [24,]         0.35555556         0.004761905 ## [25,]         0.30000000         0.002380952 ## [26,]         0.20000000         0.002380952 ## [27,]         0.15555556         0.000000000 ## [28,]         0.12222222         0.000000000 ## [29,]         0.10000000         0.000000000 ## [30,]         0.05555556         0.000000000 ## [31,]         0.03333333         0.000000000 ## [32,]         0.02222222         0.000000000 ## [33,]         0.02222222         0.000000000 ## [34,]         0.02222222         0.000000000 ## [35,]         0.02222222         0.000000000 ## [36,]         0.01111111         0.000000000 ## [37,]         1.00000000         1.000000000 rates[5:14, 1] / rates[5:14, 2] ##  [1] 12.104167  8.420290  6.564972  6.148148  8.069444  9.683333 12.494624 ##  [8] 12.911111 13.833333 16.138889 peaks <- detect_peaks(data = Aw[1:63000, ], sr = 5, FUN = njerk, thresh = 0.65, bktime = 30, plot_peaks = FALSE, sampling_rate = 5) str(peaks) ## 'data.frame':    107 obs. of  6 variables: ##  $ start_time: num  326 687 1124 1490 1880 ... ##  $ end_time  : num  326 692 1191 1497 1899 ... ##  $ peak_time : num  326 690 1190 1492 1899 ... ##  $ peak_max  : num  0.871 1.149 0.931 1.259 1.064 ... ##  $ thresh    : num  0.65 0.65 0.65 0.65 0.65 0.65 0.65 0.65 0.65 0.65 ... ##  $ bktime    : num  30 30 30 30 30 30 30 30 30 30 ... depth <- bw11_210a_tagdata$depth cropped_depth <- depth[1:63000] klunge <- (((events / 5) / 60) / 60) dettimes <- (((peaks$peak_time / 5) / 60) / 60) depthevents <- cropped_depth[events] depthdetections <- cropped_depth[peaks$peak_time] Dive_Profile <- list(Dive_Profile = cropped_depth) plott(Dive_Profile, 5, r = TRUE, par_opts = list(mar=c(1,5,0,0), oma=c(2,0,2,1), las=1, lwd=1, cex = 1)) graphics::points(x = klunge, y = depthevents, col = \"red\", cex = 1.4, pch = 16) graphics::points(x = dettimes, y = depthdetections, col = \"gold\", cex = 1.4, pch = \"+:\")"},{"path":"/articles/Detectors.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"Detectors","text":"Acevedo-Gutiérrez, ., Croll, D.., Tershy, B.R. (2002). High feeding costs limit dive time largest whales. J. Exp. Biol. 205, 1747-1753. Allen, .N., Goldbogen, J.., Friedlaender, .S., Calambokidis, J. (2016). Development automated method detecting stereotyped feeding events multisensor data tagged rorqual whales. Ecology Evolution. 6(20), 7522–7535. Brown, D.D, Kays, R., Martin, W., Wilson, R., Klimley, .P. (2013). Observing unwatchable acceleration logging animal behavior. Animal Biotelemetry. 1(20). Burgess, W.C., Tyack, P.L., Le Boeuf, B.J., Costa, D.P. (1998). programmable acoustic recording tag Þrst results free-ranging northern elephant seals. Deep_seaResearch II. 45, 1327-1351. Cox, S.L., Orgeret, F., Gesta, M., Rodde, C., Heizer, ., Weimerskirch, H., Guinet, C. (2017). Processing acceleration dive data -board satellite relay tags investigate diving foraging behaviour free-ranging marine predators. Methods Ecology Evolution. doi:10.1111/2041-210X.12845. Doniol-Valcroze, T., Lesage, V., Giard, J., Michaud, R. (2011). Optimal foraging theory predicts diving feeding strategies largest marine predator. Behavioral Ecology. 22(4), 880-888. Eaton, J.W., Bateman, D., Hauberg, S., Wehbring, R. (2016). GNU Octave version 4.2.0 manual: high-level interactive language numerical computations. URL:https://docs.octave.org/interpreter/. Goldbogen, J.., Calambokidis, J., Shadwick, R.E., Oleson, E.M., McDonald, M.., Hildebrand, J.. (2006). Kinematics foraging dives lunge-feeding fin whales. J. Exp. Biol. 209, 1231-1244. Goldbogen, J.., Calambokidis, J., Croll, D.., Harvey, J.T., Newton, K.M., Oleson, E.M., Schorr, G., Shadwick, R.E. (2008). Foraging behavior humpback whales: kinematic respiratory patterns suggest high cost lunge. J. Exp. Biol. 211, 3712-3719. Goldbogen, J.., Hazen, E.L., Friedlaender, .S., Calambokidis, J., DeRuiter, S.L., Stimpert, .K., Southall, B.L. (2015). Prey density distribution drive three-dimensional foraging strategies largest filter feeder. Functional Ecology. 29, 951-961. Hammond, T.T., Springthorpe, D., Walsh, R.E., Berg-Kirkpatrick, T. (2016). Using accelerometers remotely automatically characterize behavior small animals. J. Exp. Biol. 219, 1618-1624. Johnson, M.P., Aguilar de Soto, N., Madsen, P.T. (2009). Studying behaviour sensory ecology marine mammals using acoustic recording tags: review. Marine Ecology Progress Series. 395, 55-73. Johnson, M.P., Tyack, P.L. (2003). digital acoustic recording tag measuring response wild marine mammals sound. Journal Oceanic Engineering. 28(1), 3-12. Kokubun, N., Kim, J., Shin, H., Naito, Y., Takahashi, . (2011). Penguin head movement detected using small accelerometers: proxy prey encounter rate. J. Exp. Biol. 214, 3760-3767. Kooyman, G.L. (2004). Genesis evolution bio-logging devices: 1963-2002. Mem. Natl Inst. Polar Res. 58, 15-22. MATLAB (2017a). MathWorks, Inc., Natick, Massachusetts, United States. Miller, P.O., Johnson, M.P., Tyack, P.L. (2004). Sperm whale behaviour indicates use echolocation click buzzes ‘creaks’ prey capture. Royal Society. 271, 2239-2247. Owen, K., Dunlop, R.., Monty, J.P., Chung, D., Noad, M.J, Donnelly, D., Goldizen, .W., Mackenzie, T. (2016) Detecting surface-feeding behavior rorqual whales accelerometer data. Marine Mammal Science. 32(1), 327-348. Owen, K., Jenner, C.S., Jenner, M.M., Andrews, R.D. (2016). week life pygmy blue whale: migratory dive depth overlaps large vessel drafts. Animal Biotelemetry. 4(17). R Core Team (2017). R: language environment statistical computing. R Foundation Statistical Computing, Vienna, Austria. URL:https://www.R-project.org/. Schneirla, T.C. (1950). relationship observation experimentation field study behavior. ANNALS New York Academy Sciences. 51, 1022-1044. Viviant, M., Trites, .W., Rosen, D..S., Monestiez, P., Guinet, C. (2010). Prey capture attempts can detected Steller sea lions marine predators using accelerometers. Polar Biol. 33, 713-719. Ware, C., Friedlaender, .S., Nowacek, D.P. Shallow deep lunge feeding humpback whales fjords West Antarctic Peninsula. Marine Mammal Science. 27(3), 587-605.","code":""},{"path":"/articles/dive-stats.html","id":"finding-dives-and-summarising-them","dir":"Articles","previous_headings":"","what":"Finding dives and summarising them","title":"Using dive_stats","text":"Consider dataset DTAG attached Cuvier’s beaked whale, Ziphius cavirostris. Load data file zc11_267a.nc. want run example, download “zc11_267a.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files Make plot dive profile. notice?  deep dives profile! perhaps expected Cuvier’s beaked whales, reputation mysteriously extreme excursions. probably want crop data analysis, period start recording tag yet deployed whale.  minimum depth threshold think use detect dives animal’s dives? Consider justify choice. less fifty meters seems like reasonable choice detect animal’s dives. , dives animal performs 100 meters depth. Use find_dives detect dives deeper chosen minimum depth mindepth. Going forward, code assumed minimum depth \\(50 m\\). Now use dive_stats compute summary statistics dives detected. look dive stats perhaps make plot . notice anything interesting?","code":"library(tagtools) ZC_file_path <- \"nc_files/zc11_267a.nc\" ZC <- load_nc(ZC_file_path) plott(X=list(Depth=ZC$P), r = TRUE) ZPCr = crop(ZC$P) # if you want to review history/other fields str(ZPCr, max.level = 1) #> [1] \"Results for `crop(ZC$P)`:\" #> [1] \"---------------------------------------\" #> [1] \"Position your cursor and then click once followed by clicking FINISH to change the start, or click twice in the same spot followed by clicking FINISH to change the end. If you wish to change both the start and end click once at the start time desired and twice at the end time desired.\" #> [1] \"Results for `str(ZPCr, max.level = 1)`:\" #> [1] \"---------------------------------------\" #> List of 18 #>  $ data              : num [1:330359(1d)] 2.15 2.13 2.16 2.16 2.13 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 5 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"zc11_267a\" #>  $ creation_date     : chr \"2017-08-08 04:55:39\" #>  $ history           : chr \"sens_struct\" #>  $ type              : chr \"P\" #>  $ full_name         : chr \"Depth\" #>  $ description       : chr \"dive depth\" #>  $ unit              : chr \"m H2O\" #>  $ unit_name         : chr \"meters H2O (salt)\" #>  $ unit_label        : chr \"meters\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"\" #>  $ frame             : chr \"\" #>  $ axes              : chr \"D\" mindepth <- # your chosen minimum depth here dt <- find_dives(ZPCr, mindepth=mindepth) ds <- dive_stats(ZPCr, dive_cues=dt[,c('start', 'end'),])  str(ds) #> 'data.frame':    25 obs. of  12 variables: #>  $ num      : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ max      : num  1737 356 395 391 438 ... #>  $ st       : num  6728 10925 12624 14304 16177 ... #>  $ et       : num  10806 12510 14230 16091 18027 ... #>  $ dur      : num  4078 1585 1606 1787 1850 ... #>  $ dest_st  : num  7698 11212 13093 14768 16636 ... #>  $ dest_et  : num  8954 11802 13705 15391 17170 ... #>  $ dest_dur : num  1255 590 612 623 534 ... #>  $ to_dur   : num  970 287 469 465 459 ... #>  $ from_dur : num  1852 709 525 700 857 ... #>  $ to_rate  : num  1.521 1.055 0.715 0.714 0.809 ... #>  $ from_rate: num  -0.797 -0.426 -0.638 -0.473 -0.434 ..."},{"path":"/articles/dive-stats.html","id":"optional-choose-an-extra-variable","dir":"Articles","previous_headings":"Finding dives and summarising them","what":"Optional: choose an extra variable","title":"Using dive_stats","text":"Choose auxiliary variable (anything interest - pitch, roll, heading, MSA, ODBA, njerk…). Compute auxiliary variable, recompute dive stats including auxiliary variable. One example auxiliary variable—pitch—given .","code":""},{"path":"/articles/dive-stats.html","id":"compute-pitch","dir":"Articles","previous_headings":"Finding dives and summarising them > Optional: choose an extra variable","what":"Compute pitch","title":"Using dive_stats","text":"function a2pr calculate pitch roll acceleration. use acceleration data, ’ll want cropped time window ’ve cropped depth data.  now compute pitch:","code":"ZACr <- crop_to(ZC$A, tcues = ZPCr$crop) # plot to confirm the cropping  plott(X=list(CroppedDepth=ZPCr, CroppedAccel=ZACr),        r=c(TRUE,FALSE)) # and reverse the y-axis for depth, but not acceleration ZPiCr <- a2pr(ZACr)$p # this is the variable you'll want to use later"},{"path":"/articles/dive-stats.html","id":"recompute-dive-stats","dir":"Articles","previous_headings":"Finding dives and summarising them > Optional: choose an extra variable","what":"Recompute dive stats","title":"Using dive_stats","text":"Use auxiliary variable choice (following example , ’ll use ZPiCr) my_aux_var. Examine /plot .","code":"dsAux <- dive_stats(P = matrix(ZPCr$data), sampling_rate = ZPCr$sampling_rate, dive_cues=dt[,c('start', 'end'),], X=matrix(my_aux_var)) # if you are using ZPiCr dsAux <- dive_stats(P = matrix(ZPCr$data),                      dive_cues=dt[,c('start', 'end'),],                      X = matrix(ZPiCr), # to avoid nrow != ncol errors                     angular = TRUE, # because this is pitch angle data                     sampling_rate = c(5, 5) # sampling rate is 5 for P & X                     ) str(ds, max.level = 1) str(dsAux, max.level = 1)  plott( # ... figure out what you want to plott; results not shown for this part   ) #> [1] \"Results for `str(ds, max.level = 1):`\" #> [1] \"-----------------------------------------\" #> 'data.frame':    25 obs. of  12 variables: #>  $ num      : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ max      : num  1737 356 395 391 438 ... #>  $ st       : num  6728 10925 12624 14304 16177 ... #>  $ et       : num  10806 12510 14230 16091 18027 ... #>  $ dur      : num  4078 1585 1606 1787 1850 ... #>  $ dest_st  : num  7698 11212 13093 14768 16636 ... #>  $ dest_et  : num  8954 11802 13705 15391 17170 ... #>  $ dest_dur : num  1255 590 612 623 534 ... #>  $ to_dur   : num  970 287 469 465 459 ... #>  $ from_dur : num  1852 709 525 700 857 ... #>  $ to_rate  : num  1.521 1.055 0.715 0.714 0.809 ... #>  $ from_rate: num  -0.797 -0.426 -0.638 -0.473 -0.434 ... #> [1] \"Results for `str(dsAux, max.level = 1):`\" #> [1] \"-----------------------------------------\" #> 'data.frame':    25 obs. of  20 variables: #>  $ num            : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ max            : num  1737 356 395 391 438 ... #>  $ st             : num  6728 10925 12624 14304 16177 ... #>  $ et             : num  10806 12510 14230 16091 18027 ... #>  $ dur            : num  4078 1585 1606 1787 1850 ... #>  $ dest_st        : num  7698 11212 13093 14768 16636 ... #>  $ dest_et        : num  8954 11802 13705 15391 17170 ... #>  $ dest_dur       : num  1255 590 612 623 534 ... #>  $ to_dur         : num  970 287 469 465 459 ... #>  $ from_dur       : num  1852 709 525 700 857 ... #>  $ to_rate        : num  1.521 1.055 0.715 0.714 0.809 ... #>  $ from_rate      : num  -0.797 -0.426 -0.638 -0.473 -0.434 ... #>  $ mean_angle     : num  0.3 0.369 0.327 0.346 0.338 ... #>  $ angle_var      : num  0.3087 0.0978 0.113 0.0972 0.0784 ... #>  $ mean_to_angle  : num  -0.85 -0.356 -0.252 -0.201 -0.201 ... #>  $ mean_dest_angle: num  0.209 0.348 0.345 0.378 0.337 ... #>  $ mean_from_angle: num  0.832 0.635 0.782 0.673 0.606 ... #>  $ to_angle_var   : num  0.0763 0.1025 0.0737 0.0446 0.0565 ... #>  $ dest_angle_var : num  0.2638 0.0326 0.0264 0.0195 0.022 ... #>  $ from_angle_var : num  0.0398 0.0245 0.0139 0.0581 0.0186 ..."},{"path":"/articles/dive-stats.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Using dive_stats","text":"’ve learned couple ways use dive-stats. Well done! ’d like continue working practicals, consider rotation-test fine-scale-tracking . Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('rotation-test') vignette('fine-scale-tracking')"},{"path":"/articles/find-dives.html","id":"load-the-test-data-set","dir":"Articles","previous_headings":"","what":"Load the test data set","title":"Using find_dives","text":"Load test dataset mn12_186a_raw.nc. dataset already converted source file offloaded tag NetCDF file. , metadata gleaned file added data. metadata added hand. want run example, download “mn12_186a_raw.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files Use load_nc load NetCDF file: creates animaltag list object MN workspace. can view Environment tab working RStudio, command line type: see lists , M, P, S, T info contained within list MN.","code":"library(tagtools) MN_file_path <- \"nc_files/mn12_186a_raw.nc\" MN <- load_nc(MN_file_path) names(MN) str(MN$A) # not run because output is very long! see the whole STRucture of MN: # str(MN) # shorter outline version: str(MN, max.level = 1) #> [1] \"Results for `names(MN)`:\" #> [1] \"------------------------\" #> [1] \"P\"    \"A\"    \"M\"    \"T\"    \"S\"    \"info\" #> [1] \"Results for `str(MN$A)`:\" #> [1] \"------------------------\" #> List of 19 #>  $ data              : num [1:1172115, 1:3] 2355 2340 2324 2315 2296 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 32 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"mn12_186a\" #>  $ creation_date     : chr \"07-Aug-2017 14:51:46\" #>  $ history           : chr \"read_ll3m\" #>  $ type              : chr \"acc\" #>  $ full_name         : chr \"Acceleration\" #>  $ description       : chr \"triaxial acceleration\" #>  $ unit              : chr \"1\" #>  $ unit_name         : chr \"counts\" #>  $ unit_label        : chr \"counts\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"tag\" #>  $ axes              : chr \"FRU\" #>  $ files             : chr \"20120704-57537-Mn-XXXX-U-NoName-Acceleration-X.TXT20120704-57537-Mn-XXXX-U-NoName-Acceleration-Y.TXT20120704-57\"| __truncated__ #> [1] \"Results for `str(MN$A)`:\" #> [1] \"------------------------\" #> List of 6 #>  $ P   :List of 17 #>  $ A   :List of 19 #>  $ M   :List of 19 #>  $ T   :List of 16 #>  $ S   :List of 17 #>  $ info:List of 25 #>  - attr(*, \"class\")= chr [1:2] \"animaltag\" \"list\""},{"path":"/articles/find-dives.html","id":"exercise-calculate-the-mean-duration-of-dives-deeper-than-5m","dir":"Articles","previous_headings":"","what":"Exercise: Calculate the mean duration of dives deeper than 5m","title":"Using find_dives","text":"goal data calculate mean duration dives deeper 5 m. can think way already, please go ahead try! can compare answer step--step procedure . raw depth data, problems dive profile. Try plot depth profile temperature. , see can find evidence plot: Incorrect calibration sensor Occasional outliers Coarse depth resolution Temperature sensitivity 1. Pay attention depths reported… looks like dive profile, mostly, looks like “surface” actually around \\(-10\\) m (, ten meters high air)! know humpback whales , fact, go ten meters sky routinely. suggests sensor well-calibrated. 2. Occasionally, peaks go higher yet ten meters high sky momentarily (like 15 meters). outliers. 3. Zoom shallow part dive notice . individual measurements precise meter; thus appear jump back forth suddenly expect relaxed whale surface.  4. temperature gradually rises recording nears end, spikes . accompanied gradually decreasing depth ten meters sky surface. Together, two trends strongly suggest depth data affected changing temperature tag sits near surface.","code":""},{"path":"/articles/find-dives.html","id":"hints-tips","dir":"Articles","previous_headings":"Exercise: Calculate the mean duration of dives deeper than 5m","what":"Hints & Tips","title":"Using find_dives","text":"Look info find species data come . depth values reasonable species? Zoom see size depth steps data. Use plott plot depth temperature:","code":"plott(X=list(Depth=MN$P, Temperature=MN$T), r=c(TRUE,FALSE)) # r=c(TRUE,FALSE) tells plot to reverse the y-axis for the Depth data (so that it looks like a dive profile), but not for the Temperature data (which would be silly)."},{"path":"/articles/find-dives.html","id":"what-to-do-about-periods-of-data-when-the-tag-is-not-on-the-animal","dir":"Articles","previous_headings":"Exercise: Calculate the mean duration of dives deeper than 5m","what":"What to do about periods of data when the tag is not on the animal","title":"Using find_dives","text":"tags way start logging soon tag deployed animal. Often data logging started time trigger alarm, researcher make guess tag deployed set start time appropriately. Often means tag logging data put animal. Equally, tags means detecting release tagged animal. consequence, may continue log data release. cases, logged data deployment use. reduce data just periods tag animal, use tool crop:  displays interactive depth plot. Follow instructions select obvious diving section data click finish. function returns new data structure contains just selected part dive profile. resulting sensor data list also contains fields document just . see : $history field keeps track operations perform data structure. helps traceability make processed data available archive. $crop $start_time fields show original data changed: start_time respect field ‘dephist_device_datetime_start’ $info structure says tag recording started. Use plott plot Pc make sure cropped correctly. Note results look little different depending exactly ’ve cropped data, come essentially thing.","code":"Pc = crop(MN$P) #> [1] \"Position your cursor and then click once followed by clicking FINISH to change the start, or click twice in the same spot followed by clicking FINISH to change the end. If you wish to change both the start and end click once at the start time desired and twice at the end time desired.\" Pc$history str(Pc, max.level = 1) #> [1] \"Results for `Pc$history`:\" #> [1] \"-------------------------------------\" #> [1] \"read_ll3m,crop_to\" #> [1] \"Results for `str(Pc, max.level = 1)`:\" #> [1] \"-------------------------------------\" #> List of 21 #>  $ data              : num [1:25306] -6.5 -6.5 -6.5 -6.5 -6.5 -6.5 -6.5 -6.5 -6.5 -7 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 1 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"mn12_186a\" #>  $ creation_date     : chr \"07-Aug-2017 14:51:49\" #>  $ history           : chr \"read_ll3m,crop_to\" #>  $ type              : chr \"press\" #>  $ full_name         : chr \"Pressure\" #>  $ description       : chr \"dive depth\" #>  $ unit              : chr \"m H2O\" #>  $ unit_name         : chr \"meters H2O (salt)\" #>  $ unit_label        : chr \"meters\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ axes              : chr \"D\" #>  $ files             : chr \"20120704-57537-Mn-XXXX-U-NoName-Depth.TXT\" #>  $ crop              : num [1:2] 0 25306 #>  $ crop_units        : chr \"seconds\" #>  $ start_time        : num 0 #>  $ start_time_units  : chr \"seconds\" plott(X = list(DepthCropped=Pc), r = TRUE) plott(X = list(DepthCropped=Pc), r = TRUE)"},{"path":"/articles/find-dives.html","id":"removing-outliers-","dir":"Articles","previous_headings":"Exercise: Calculate the mean duration of dives deeper than 5m","what":"Removing outliers.","title":"Using find_dives","text":"Outliers spikes data may result errors tag poor sensor performance rapidly changing environmental conditions. example data set, rapid changes temperature pressure animal surfaces cause small glitches data. representative animal’s behaviour need remove . good way median filter. Type: find function works. call using: variable Pcm now contains median-filtered, cropped depth data. Check history verify median filtering added. Compare unfiltered data using:  plots Pc upper panel Pcm lower one, reverses y-axis labeling plots (setting r TRUE times).","code":"?median_filter Pcm = median_filter(Pc,n=3) plott(X=list(Pc=Pc, Pcm=Pcm), r=c(TRUE,TRUE))"},{"path":"/articles/find-dives.html","id":"correcting-pressure-offsets-temperature-effects","dir":"Articles","previous_headings":"Exercise: Calculate the mean duration of dives deeper than 5m","what":"Correcting pressure offsets & temperature effects","title":"Using find_dives","text":"next step correct ‘0’ pressure offset depth sensor (animal 10 m water really surface). can also compensate temperature time. first crop temperature data match pressure data. can using: uses crop information stored Pc operation T. Plot together confirm time intervals (horizontal ticks) :  tag toolbox function correct pressure data called ‘fix_pressure’. Type find assumptions makes data. Use function calling: Compare compensated dive profile uncompensated cropped ones using plott. (code produce three plots, might make bit small. Hit “Zoom” view larger window.)  problems listed taken care ? ideas remaining one(s)? 1. Incorrect calibration sensor temperature sensitivity addressed now, since whale actually resting breathing surface, rather ten meters air. Additionally, occasional outliers removed median filter. However, none increased resolution depth data. order resolve last issue, ultimately, new data taken higher resolution.","code":"Tc <- crop_to(MN$T,tcues=Pc$crop) plott(X=list(Pcm=Pcm, Tc=Tc), r=c(TRUE,FALSE)) ? fix_pressure Pcmf <- fix_pressure(Pcm, Tc) plott(X=list(Pc=Pc, Pcm=Pcm, Pcmf=Pcmf$p), r=c(TRUE,TRUE,TRUE))"},{"path":"/articles/find-dives.html","id":"finding-dives-the-mean-dive-duration","dir":"Articles","previous_headings":"Exercise: Calculate the mean duration of dives deeper than 5m","what":"Finding dives & the mean dive duration","title":"Using find_dives","text":"find mean dive duration dives 5 m depth, measure dive hand depth plot (ginput useful function Matlab Octave measuring data plot – isn’t great equivalent R, interactive plots really commonly used). toolbox function called find_dives. See help function find options . find dives deeper 5 m compensated dive data, type: d return data frame start, end, maximum depth 51 dives (depending cropped data). can get mean dive duration & mean (maximum) dive depth structure? Code provides one possible answer. got mean dive depth, try plotting start end dives depth plot:  , plot might rather small. result might tricky make sense markers designate starts ends dives. able click Zoom view plot larger window. Note: cropped time units x-axis days, adjust multipliers points code accordingly. example , start end times returned find_dives seconds needed divide 3600*24 match unit (days) automatically selected time plott.","code":"? find_dives d <- find_dives(Pcmf$p,mindepth=5) str(d, max.level = 1) #> 'data.frame':    50 obs. of  4 variables: #>  $ start: num  2392 2604 3165 3626 4023 ... #>  $ end  : num  2481 2778 3361 3860 4213 ... #>  $ max  : num  5.75 10.74 10.24 48.7 22.23 ... #>  $ tmax : num  2432 2640 3196 3739 4073 ... total_dive_duration <- matrix(0) for(n in 1:nrow(d)) {   total_dive_duration <- total_dive_duration + d[n,2] - d[n,1]   } mean_dive_duration <- total_dive_duration/nrow(d) mean_dive_duration # since this is using data from find_dives, the mean duration is in seconds # and mean depth total_dive_depth <- matrix(0) for(n in 1:nrow(d)) {   total_dive_depth <- total_dive_depth + d[n,3] } mean_dive_depth <- total_dive_depth/nrow(d) mean_dive_depth plott(X=list(Pcmf=Pcmf$p), r=TRUE) points(d$start/(3600*24),rep(0,nrow(d)),col='green', pch=19) points(d$end/(3600*24),rep(0,nrow(d)),col='red', pch=17)"},{"path":"/articles/find-dives.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Using find_dives","text":"Great work! ’ve learned use find_dives. ’d like continue working practicals, dive-stats might good option ’re especially interested analyzing individual dives. Otherwise, consider fine-scale-tracking mahalanobis-distance. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (source code)","code":"vignette('dive-stats') vignette('fine-scale-tracking') vignette('mahalanobis-distance')"},{"path":"/articles/fine-scale-tracking.html","id":"load-and-explore-data","dir":"Articles","previous_headings":"","what":"Load and Explore Data","title":"Fine-scale tracking","text":"want run example, download “testset7.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files Load data set testset7.nc. dataset built tagtools package, can access using system.file. , check contents data structures answer following questions. (See code need hint.) species data come , data come ? humpback whale, Megaptera novaeangliae. sampling rate accelerometer data? 1 Hz. processing steps already applied magnetometer data? sens_struct, do_cal, tag2animal, crop_to, decdc(5)… , converted sensor structure, calibrated, put animal frame, cropped certain segment data, decimated factor five (result, sampling rate now acceleration data, 1 Hz). 3 columns POS (GPS position) data? three columns time, latitude, longitude. frame accelerometer data ? frame magnetometer data ? accelerometer data oriented animal frame, magnetometer data. Plot pressure accelerometer data plott() get sense animal might data segment. Note code example assumes called data set d7:  , plot GPS positions:","code":"str(d7$info, max.level = 1) #> List of 35 #>  $ depid                        : chr \"mn18_175d\" #>  $ dtype_source                 : chr \"mn18_175d001,mn18_175d002,mn18_175d003,mn18_175d004,mn18_175d005,mn18_175d006,mn18_175d007,mn18_175d008,mn18_17\"| __truncated__ #>  $ dtype_datetime_made          : chr \"2018/07/05 15:25:29\" #>  $ dtype_nfiles                 : num 18 #>  $ dtype_format                 : chr \"DTG\" #>  $ device_serial                : num 1.88e+09 #>  $ device_make                  : chr \"DTAG\" #>  $ device_type                  : chr \"Archival\" #>  $ device_model                 : chr \"DTAG4\" #>  $ device_url                   : chr \"https://www.soundtags.org\" #>  $ sensors_firm                 : chr \"Not specified\" #>  $ sensors_soft                 : chr \"Not specified\" #>  $ sensors_list                 : chr \"3axis Accelerometer,3 axis Magnetometer,Pressure,GPS,Sound\" #>  $ animal_id                    : chr \"Unknown\" #>  $ animal_species_common        : chr \"Humpback whale\" #>  $ animal_species_science       : chr \"Megaptera novaeangliae\" #>  $ animal_dbase_url             : chr \"http://www.arkive.org/humpback-whale/megaptera-novaeangliae/\" #>  $ dephist_device_tzone         : chr \"0\" #>  $ dephist_device_regset        : chr \"yyyy/mm/dd HH:MM:SS\" #>  $ dephist_device_datetime_start: chr \"2018/06/24 11:14:24\" #>  $ dephist_deploy_locality      : chr \"Cape Cod, Massachusetts\" #>  $ dephist_deploy_location_lat  : chr \"\" #>  $ dephist_deploy_location_lon  : chr \"\" #>  $ dephist_deploy_datetime_start: chr \"2018/06/24 11:14:24\" #>  $ dephist_deploy_method        : chr \"suction cup\" #>  $ project_name                 : chr \"ONR Tag Design\" #>  $ project_datetime_start       : chr \"\" #>  $ project_datetime_end         : chr \"\" #>  $ provider_name                : chr \"Susan Parks\" #>  $ provider_details             : chr \"Univ Syracuse\" #>  $ provider_email               : chr \"sparks@syr.edu\" #>  $ provider_license             : chr \"Contact data provider\" #>  $ provider_cite                : chr \"Contact data provider\" #>  $ provider_doi                 : chr \"Contact data provider\" #>  $ creation_date                : chr \"06-Dec-2019 10:34:49\" str(d7$Aa, max.level = 1) #> List of 23 #>  $ data              : num [1:10756, 1:3] -0.725 -1.73 -1.221 -1.632 -2.85 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 1 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"mn18_175d\" #>  $ creation_date     : chr \"09-Jul-2018 12:06:55\" #>  $ history           : chr \"sens_struct,do_cal,tag2animal,crop_to,decdc(5)\" #>  $ type              : chr \"acc\" #>  $ full_name         : chr \"Acceleration\" #>  $ description       : chr \"triaxial acceleration\" #>  $ unit              : chr \"m/s2\" #>  $ unit_name         : chr \"metres per second squared\" #>  $ unit_label        : chr \"m/s^2\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"seconds\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"animal\" #>  $ axes              : chr \"FRU\" #>  $ cal_poly          : num [1:6] 77.4183 77.7662 77.7547 -0.0921 -0.0762 ... #>  $ cal_map           : num [1:9] 0 -1 0 -1 0 0 0 0 1 #>  $ otab              : num [1:5] 0 0 -0.855 0.157 1.902 #>  $ crop              : num [1:2] 91265 102021 #>  $ crop_units        : chr \"seconds\" str(d7$POS, max.level = 1) #> List of 20 #>  $ data              : num [1:63, 1:3] 0.827 12.058 338.364 698.659 738.046 ... #>  $ sampling          : chr \"irregular\" #>  $ sampling_time     : chr \"column 1\" #>  $ sampling_time_unit: chr \"second\" #>  $ depid             : chr \"mn18_175d\" #>  $ creation_date     : chr \"05-Jul-2018 15:25:54\" #>  $ history           : chr \"sens_struct,crop_to\" #>  $ type              : chr \"pos\" #>  $ full_name         : chr \"Position\" #>  $ description       : chr \"GPS position\" #>  $ unit              : chr \"degrees\" #>  $ unit_name         : chr \"decimal degrees\" #>  $ unit_label        : chr \"degrees\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"seconds\" #>  $ column_name       : chr \"time,lat,long\" #>  $ frame             : chr \"WGS84\" #>  $ axes              : chr \"NE\" #>  $ crop              : num [1:2] 91265 102021 #>  $ crop_units        : chr \"seconds\" library(tagtools) d7_file_path <- \"\" d7 <- load_nc(d7_file_path) sampling_rate <- d7$P$sampling_rate plott(X = list(Depth = d7$P, Acceleration = d7$Aa), fsx = sampling_rate, interactive = TRUE) plot(d7$POS$data[,3], d7$POS$data[,2], type = 'b', pch = 20)"},{"path":[]},{"path":"/articles/fine-scale-tracking.html","id":"what-is-dead-reckoning","dir":"Articles","previous_headings":"Dead-reckoning","what":"What is Dead-reckoning?","title":"Fine-scale tracking","text":"Hearken back earliest trigonometry course. Chances , used angles distances calculate distances (right triangle, especially). , calculus, ’ve probably used angles rates change calculate distance rates change. Dead-reckoning essentially —using just heading forward speed order plot forward path. technique fairly commonplace sailing aviation, can made accurate help known position data. want background, consult video example simple trigonometry. However, per Wikipedia (simply says well), dead-reckoning “subject significant errors approximation. precise positional information, speed direction must accurately known times travel. notably, dead reckoning account directional drift travel fluid medium. errors tend compound greater distances”. see true course vignette—water seldom entirely still, quite current present data soon investigate.","code":""},{"path":"/articles/fine-scale-tracking.html","id":"why-use-dead-reckoning","dir":"Articles","previous_headings":"Dead-reckoning","what":"Why use Dead-reckoning?","title":"Fine-scale tracking","text":"plot shows mix intensive extensive movements, constraint getting positions animal surface means infer much movement behaviour within dives. Dead-reckoning accelerometer magnetometer data way estimate movement within dives without requiring external tracking infrastructure.","code":""},{"path":"/articles/fine-scale-tracking.html","id":"estimating-animal-speed","dir":"Articles","previous_headings":"Dead-reckoning","what":"Estimating Animal Speed","title":"Fine-scale tracking","text":"Dead-reckoning uses accelerometer magnetometer calculate direction travel. frame data need ? need animal frame. Thankfully, already ! estimate forward speed also required. don’t speed sensor—actually quite cumbersome, compared acceleration sensor. Nevertheless, can compute vertical speed (.e., differential depth) descents ascents, might good starting guess:  Set interactive = TRUE zoom individual dives plot get rough idea descent ascent speed whale. , interactive figure drives bit crazy, just set axis limits:","code":"v <- depth_rate(d7$P) plott(X = list(Depth = d7$P$data, `Vertical Speed` = v),        fsx = sampling_rate) plott(X = list(Depth = d7$P$data, `Vertical Speed` = v),         fsx = sampling_rate, xl = c(0,0.1))"},{"path":"/articles/fine-scale-tracking.html","id":"computing-a-dead-reckoned-track","dir":"Articles","previous_headings":"Dead-reckoning","what":"Computing a Dead-Reckoned Track","title":"Fine-scale tracking","text":"Call speed estimate speed spd use following line compute dead-reckoned track:  dead-reckoned track series distances north (south negative) east (west negative) starting point position (0, 0) plot. first two columns DR ‘northing’ ‘easting’ values. DR track defined Local Level Frame (LLF) opposed latitude longitude. LLF like map—region small enough can assume earth flat—centered starting point. spatial resolution dead-reckoned track look compared surface GPS positions? first glance, shape quite similar, might concern us yet. Also, spatial resolution looks much, much better! , making track seems like good idea.","code":"spd <- #???? (fill in your estimate here) DR <- ptrack(A = d7$Aa, M = d7$Ma, s = spd) plot(DR$easting, DR$northing, type = 'l',      xlab = 'Easting, m', ylab = 'Northing, m',      main = 'Dead-Reckoned Track')"},{"path":"/articles/fine-scale-tracking.html","id":"adding-gps-positions","dir":"Articles","previous_headings":"Dead-reckoning","what":"Adding GPS positions","title":"Fine-scale tracking","text":"plot GPS positions plot, need first convert LLF. first GPS position 0.8s dataset (\\$d7\\$POS\\$data[1,1]) can say dead-reckoned track starts point. convert latitude longitude LLF use:  well dead-reckoned track match GPS positions? match much . touch beginning… ’s . , shapes somewhat preserved, predicted track way farther north, quite ways farther east, actual known positions. dead-reckoned track always computed respect water, ground, plotting respect ground. accurate track take account water current. Can imagine current direction needed make dead-reckoned track closely match GPS positions? current need moving quite bit south, also distance west, order compensate large errors seeing. number ways combine GPS positions dead-reckoned track single track absolute accuracy GPS high temporal resolution dead-reckoning. simple method force dead-reckoned track meet GPS positions surfacing adding constant ‘current’ track point preceding dive. done fit_tracks:","code":"POSLLF <- lalo2llf(trk = d7$POS$data[,c(2:3)]) plot(DR$easting, DR$northing, type = 'l',      xlab = 'Easting, m', ylab = 'Northing, m',      main = 'Dead-Reckoned Track',      yl = c(-1000, 5000)) lines(POSLLF$easting, POSLLF$northing, type = 'b', col = 'red', pch = 20) FT <- fit_tracks(P = POSLLF, T = d7$POS$data[,1],                 D = DR[,c(1:2)],                 sampling_rate = d7$Aa$sampling_rate) # add to plot plot(DR$easting, DR$northing, type = 'l',      xlab = 'Easting, m', ylab = 'Northing, m',      main = 'Dead-Reckoned Track',      yl = c(-1000, 5000)) lines(POSLLF$easting, POSLLF$northing, type = 'b', col = 'red', pch = 20)  lines(FT$easting, FT$northing, col = 'darkgreen')"},{"path":"/articles/fine-scale-tracking.html","id":"a-digression-about-graphics","dir":"Articles","previous_headings":"Dead-reckoning","what":"A digression about graphics","title":"Fine-scale tracking","text":"Skip next section ’re interested improving plots. interested nicer, zoomable plot either , willing install, packages ggformula plotly, give following try!  OK, ’s track figure. zooming interaction? Ahhh, much nicer! note plotly() figures render interactive R sessions , using Rmarkdown, html output (PDF). figure also nicer can update chaining. example, change axis limits:","code":"# if you need to install: # install.packages(pkgs = c('ggformula', 'plotly')) library(ggformula) library(plotly) theme_set(theme_bw(base_size = 12))  track_fig <- gf_path(northing ~ easting, data = DR,          xlab = 'Easting, m', ylab = 'Northing, m') %>%   gf_path(northing ~ easting, data = POSLLF, color = 'darkred') %>%   gf_point(northing ~ easting, data = POSLLF, color = 'darkred') %>%   gf_path(northing ~ easting, data = FT, color = 'darkgreen')  track_fig #> Loading required package: ggplot2 #> Loading required package: ggstance #>  #> Attaching package: 'ggstance' #> The following objects are masked from 'package:ggplot2': #>  #>     geom_errorbarh, GeomErrorbarh #> Loading required package: scales #> Loading required package: ggridges #>  #> New to ggformula?  Try the tutorials:  #>  learnr::run_tutorial(\"introduction\", package = \"ggformula\") #>  learnr::run_tutorial(\"refining\", package = \"ggformula\") #>  #> Attaching package: 'plotly' #> The following object is masked from 'package:ggplot2': #>  #>     last_plot #> The following object is masked from 'package:stats': #>  #>     filter #> The following object is masked from 'package:graphics': #>  #>     layout track_fig %>% ggplotly() track_fig_zoom <- track_fig %>%   gf_lims(x = c(-500, 1500), y = c(-1100, 100)) track_fig_zoom #> Warning: Removed 10610 rows containing missing values (`geom_path()`)."},{"path":"/articles/fine-scale-tracking.html","id":"interpreting-the-tracks","dir":"Articles","previous_headings":"Dead-reckoning","what":"Interpreting the Tracks","title":"Fine-scale tracking","text":"Now, back main tutorial… Examine plot see green fitted track interpolates red GPS positions. green track believed, effectively surface positions capture movement animal? don’t capture movement animal well. much happens positions ’re able collect surface, missing surface positions collect/show.","code":""},{"path":"/articles/fine-scale-tracking.html","id":"tracks-colored-by-a-variable","dir":"Articles","previous_headings":"","what":"Tracks Colored by a Variable","title":"Fine-scale tracking","text":"often want plot track colored proportional another variable interest. example, can useful see animal diving along track. colour track depth, use col_line() P color information: –> interactive version? Zoom see scale track tortuosity: tortuosity within individual dives, tortuosity occurring across dives? tortuosity occurs across dives, tortuosity within dives well. following picture comes next chunk code. done want challenge, try colouring track absolute roll angle instead depth. use col_line3 plot 3-d positions (.e., FT$easting, FT$northing, d7\\$P\\$data), colour plot absolute roll angle remembering convert radians degrees.","code":"CF <- col_line(y = northing, x = easting, data = FT, color = d7$P$data) CF CF <- col_line(y = northing, x = easting, data = FT, color = d7$P$data) CF col_line(x = FT$easting, y = FT$northing, color = d7$P$data) pitch_roll <- a2pr(d7$Aa) roll_deg <- pitch_roll$r/pi*180 col_line3(x = FT$easting, y = FT$northing,            z = d7$P$data, c = roll_deg)"},{"path":"/articles/fine-scale-tracking.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Fine-scale tracking","text":"learned? can get —despite problems can arise —dead-reckoning. ’s ! Fantastic work vignette. ’d like continue working vignettes, take stab find-dives dive-stats. deal functions find_dives dive_stats, respectively. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('find-dives') vignette('dive-stats')"},{"path":[]},{"path":"/articles/install-load-tagtools.html","id":"prerequisites","dir":"Articles","previous_headings":"Installing tagtools for R","what":"Prerequisites","title":"Installing and loading tagtools","text":"begin, must R —recommended—RStudio installed computer. can download software RStudio.com (need free one). Alternatively, can work RStudio.cloud. free , nice download required. drawback , free RStudio.cloud account, limited certain number project-hours per month, RAM, CPU. One lot work RStudio, several hours day, run hours within week two. desktop version fewer restraints. happen new R also, nice standalone tutorial. practicals assume basic experience working R/RStudio, can execute provided code, making user-specific changes along way (e.g. help R find file downloaded).","code":""},{"path":"/articles/install-load-tagtools.html","id":"install-tagtools-from-github","dir":"Articles","previous_headings":"Installing tagtools for R","what":"Install tagtools from github","title":"Installing and loading tagtools","text":"devtools installed computer, can use install tagtools package directly github. want need install devtools, want information , see online installation guide r-project.org. code gives devtools command install. Click “Code” right open chunk, able copy-paste code R console. However, careful copy-pasting special characters _underscores_, ‘quotes’. get error, one thing check just single, simple underscore, 'straight quotes', whether 'single' \"double\" (rather “smart quotes”). asked something like “packages recent versions available”, harm update , “install sources packages need compilation”. package July 2021, overall process take ten fifteen minutes, depending speed internet machine, eight minutes spent building vignettes. Receiving abundance red messages end world—just R shows package installed. ends message \"* DONE (tagtools)\", ’re set!","code":"devtools::install_github('animaltags/tagtools_r',                          build_vignettes = FALSE)"},{"path":"/articles/install-load-tagtools.html","id":"install-tagtools-from-zip-archive","dir":"Articles","previous_headings":"Installing tagtools for R","what":"Install tagtools from zip archive","title":"Installing and loading tagtools","text":"want use devtools option, can install tagtools package archive files provided materials WMMC 2019 workshop (folder created unzipping wmmc-2019-workshop-materials.zip). archive files also available TagTools website. Try http://animaltags.org , https://animaltags.netlify.app . Note: choose install archive files (.zip .tgz), probably also manually install packages tagtools depends . use devtools method , . Windows users want use .zip archive Mac Linux users want use .tgz archive Save appropriate archive known location computer. , run: (fill absolute relative path archive file, archive file name). example, Mac, file saved Downloads, path might look like : can also use “install packages” GUI RStudio—go “Packages” tab, click “Install”, choose “Package Archive File” “Install ” pulldown menu, navigate archive file. follow prompts. must also make sure installed packages tagtools depends : Note writing object dpnds, vector 18 (text) strings, concatenated together c(). install.packages() can take dependencies input.","code":"install.packages('YourPath/YourFilename') # you'll have to edit this appropriately install.packages('/Users/YourUsernameHere/Downloads/FileName.tgz') dpnds <- c('CircStats', 'ggformula', 'graphics', 'hht',             'latex2exp', 'lubridate', 'magrittr',             'matlab', 'ncdf4', 'plotly', 'pracma',             'readr', 'rgl', 'signal', 'stats',             'utils', 'zoo', 'zoom') install.packages(pkgs = dpnds)"},{"path":"/articles/install-load-tagtools.html","id":"check-tagtools-installation","dir":"Articles","previous_headings":"Installing tagtools for R","what":"Check tagtools Installation","title":"Installing and loading tagtools","text":"tagtools successfully installed, able run often get message: “following object masked ‘package:stats’: smooth”—means loaded properly; congratulations! Another check make sure function help files accessible; example, Now point future check like , might get error saying function doesn’t exist. happens, make sure tagtools loaded library. won’t reinstall package install.packages() unless start working different machine, run library(tagtools) require(tagtools) every time restart RStudio. fewer packages loaded kinder computer’s memory, good R doesn’t automatically load everything. However, mean every time restart RStudio, must reload packages need, tagtools, . Thus beginning vignette one ’ll reminded run library(tagtools). command ? load_nc pulls help file function load_nc like , ’re set.","code":"library(tagtools) ?load_nc"},{"path":"/articles/install-load-tagtools.html","id":"accessing-other-vignettes-through-r-directly","dir":"Articles","previous_headings":"","what":"Accessing other vignettes through R directly","title":"Installing and loading tagtools","text":"’ve run devtools command, can read vignettes directly local RStudio without needing click website! syntax straightforward. see list vignettes just package, simply type: can run vignette vignette('package-index', package = 'tagtools'). instance, order see vignette, can run: package = \"tagtools\" argument end optional. However, good addition clarifies package working . , happened , say, another vectors-vs-structures vignette package, load one specific package vignette(\"vectors-vs-structures\", package = \"tagtools\").","code":"vignette(package = \"tagtools\") ## [1] \"Vignettes in package ‘tagtools’:\" ## [1] \"\" ## [1] \"complementary-filtering         complementary-filtering (source, html)\" ## [1] \"data-quality-error-correction   data-quality-error-correction (source, html)\" ## [1] \"Detectors                       Detectors (source, html)\" ## [1] \"detectors-draft                 detectors-draft (source, html)\" ## [1] \"dive-stats                      dive-stats (source, html)\" ## [1] \"find-dives                      find-dives (source, html)\" ## [1] \"fine-scale-tracking             fine-scale-tracking (source, html)\" ## [1] \"install-load-tagtools           install-load-tagtools (source, html)\" ## [1] \"jerk-transients                 jerk-transients (source, html)\" ## [1] \"load-tag-data                   load-tag-data (source, html)\" ## [1] \"mahalanobis-distance            mahalanobis-distance (source, html)\" ## [1] \"more-filtering                  more-filtering (source, html)\" ## [1] \"plots-and-cropping              plots-and-cropping (source, html)\" ## [1] \"rotation-test                   rotation-test (source, html)\" ## [1] \"tag-to-whale-frame              tag-to-whale-frame (source, html)\" ## [1] \"vectors-vs-structures           vectors-vs-structures (source, html)\" vignette(\"install-load-tagtools\", package = \"tagtools\")"},{"path":"/articles/install-load-tagtools.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Installing and loading tagtools","text":"learned far? Important setup steps help avoid confusion delay moving forward. Congrats! ’d like continue working vignettes, load-tag-data plots--cropping good options help get started tools ’ve just installed loaded. Perhaps best starting option ‘load-tag-data’, helpful familiarizing process loading data, well making sure important metadata included data. vectors-vs-structures quick review way R stores data structures, can extracted individual vectors/scalars. already feel confident setup structures R, try plots--cropping—’ll get start visualizing data types ’ve learning load. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('load-tag-data', package = 'tagtools') vignette('vectors-vs-structures', package = 'tagtools') vignette('plots-and-cropping', package = 'tagtools')"},{"path":"/articles/jerk-transients.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Jerk: a way to emphasize rapid changes in acceleration","text":"’ve finished complementary-filtering within R session, skip Acceleration transients, jerk dynamic acceleration. , ’ll want first section. practical use data suction cup tag attached back beaked whale. want run example, download “testset1.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files Write testset1.nc object bw, “beaked whale”. use plott() get look .  dataset contains deep dive followed shallow dive. want infer function looking locomotion effort sudden changes acceleration indicative prey capture attempts. also going look changes swimming gait.","code":"library(tagtools) bw_file_path <- \"nc_files/testset1.nc\" bw <- load_nc(bw_file_path) plott(X = list(Depth = bw$P, Acc = bw$A, Mag = bw$M))"},{"path":"/articles/jerk-transients.html","id":"acceleration-transients-jerk-and-dynamic-acceleration","dir":"Articles","previous_headings":"","what":"Acceleration transients, jerk and dynamic acceleration","title":"Jerk: a way to emphasize rapid changes in acceleration","text":"want look indications foraging two dives. Sudden changes (transients) acceleration often associated prey capture attempts. One way emphasise rapid changes acceleration differentiating produce jerk. effectively high-pass filtering acceleration constantly-sloping filter—higher frequency, emphasised. don’t know kind movement involved prey capture attempt, don’t know axis acceleration relevant. safer just compute magnitude jerk three axes get single vector (also called “norm-jerk”). way, peak axes show . njerk computes acceleration. Try running njerk acceleration data (stored?) writing result J. , also grab sampling rate, can plot jerk data.  dive profile largest jerk transients (peaks) appear? largest jerk transients appear mostly bottom deeper dive. Check biggest peaks see short .","code":"J <- njerk(bw$A) fs <- bw$A$sampling_rate plott(X = list(Depth = bw$P$data, Jerk = J), fsx = fs)"},{"path":"/articles/jerk-transients.html","id":"effects-of-sampling-rate-on-jerk","dir":"Articles","previous_headings":"Acceleration transients, jerk and dynamic acceleration","what":"Effects of Sampling Rate on jerk","title":"Jerk: a way to emphasize rapid changes in acceleration","text":"size clarity jerk peaks depends sampling rate. using 25 Hz data. see get 5 Hz data, try decimating acceleration computing jerk: Compute decimated jerk decimated acceleration, plot jerk computed full bandwidth acceleration:  Check obvious peaks around minute 20 minute 30 look ‘signal--noise’ jerk transients. clear jerk transients decimated signal compared original data rate? tell frequency content transients? jerk transients definitely less clear decimated signal compared original data rate. Consider peak near 0.75 hours original (25 Hz)signal: corresponding peak near 0.75 hours decimated signal. Similarly, consider two peaks near 1.5 hours original. Though jerk higher around area decimated signal, peaks quite unclear. tells us important high-resolution data—since acceleration changing quickly, possible stop observing just 0.2 seconds (true 5 Hz data), miss important event. Put concisely, jerk signal lot high frequency content.","code":"str(bw$A, max.level = 1) # look at the data before decimation Ad <- decdc(bw$A, 5) # decimate by 5 times. New sampling rate is 25/5 Hz str(Ad, max.level = 1) # and after decimation #> [1] \"results for str(bw$A, max.level = 1)\" #> [1] \"------------------------------------\" #> List of 18 #>  $ data              : num [1:137976, 1:3] -1.85 -1.78 -1.73 -1.7 -1.64 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 25 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"md13_134a\" #>  $ creation_date     : chr \"30-Jul-2017 23:13:50\" #>  $ history           : chr \"sens_struct\" #>  $ type              : chr \"acc\" #>  $ full_name         : chr \"Acceleration\" #>  $ description       : chr \"triaxial acceleration\" #>  $ unit              : chr \"m/s2\" #>  $ unit_name         : chr \"meters per seconds squared\" #>  $ unit_label        : chr \"m/s^2\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"animal\" #>  $ axes              : chr \"FRU\" #> [1] \"results for str(Ad, max.level = 1)\" #> [1] \"------------------------------------\" #> List of 18 #>  $ data              : num [1:27595, 1:3] -1.797 -1.484 -0.966 -0.28 0.339 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 5 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"md13_134a\" #>  $ creation_date     : chr \"30-Jul-2017 23:13:50\" #>  $ history           : chr \"decdc(5)\" #>  $ type              : chr \"acc\" #>  $ full_name         : chr \"Acceleration\" #>  $ description       : chr \"triaxial acceleration\" #>  $ unit              : chr \"m/s2\" #>  $ unit_name         : chr \"meters per seconds squared\" #>  $ unit_label        : chr \"m/s^2\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"animal\" #>  $ axes              : chr \"FRU\" Jd <- njerk(Ad) plott(X = list(Depth = bw$P$data, `25 Hz Jerk` = J, `5Hz Jerk` = Jd),       fsx = c(fs, fs, fs/5))"},{"path":"/articles/jerk-transients.html","id":"detecting-jerk-peaks","dir":"Articles","previous_headings":"Acceleration transients, jerk and dynamic acceleration","what":"Detecting Jerk Peaks","title":"Jerk: a way to emphasize rapid changes in acceleration","text":"find potential prey capture attempts, need run detector norm-jerk signal. Although easy see peaks eye data, detectors require information good job: need know threshold peak really peak blanking time, .e., minimum time must elapse detection another detection can happen. tagtools includes interactive peak detectors allow choose threshold see effect transients detected. use blanking time 5s, .e., expect shortest time prey captures 5s:  Follow instructions console change threshold. need pick threshold excludes jerk transients strong propulsion locomotion ascent still detects jerk transients bottom part deep dive. (Balancing false detections missed detections often easy detector matter finding trade-works application.) figure given, ’ve set threshold 100. function returns list information detected peaks. detection, start end times reported (seconds), along time peak occurred height peak. Finally, selected threshold blanking time reported. can plot height time detection along dive profile follows:  Bearing mind jerk peaks might come strong locomotory strokes, strong evidence foraging deep dive? strong evidence foraging shallow dive? Yes, strong evidence foraging deep dive, since jerk peaks present , likely strong locomotory strokes . strong locomotory strokes , turn, evidence foraging. However, almost evidence foraging shallow dive, since jerk peaks . Now, done complementary-filtering recently, one question . Adding inference complementary-filtering locomotion shallow dive, can conclude general behaviour animal shallow dive? Namely, resting, traveling foraging? Write marvelous thoughts. know now whale likely foraging shallow dive, since sudden movements (jerk peaks) happening earlier dive. Additionally, though animal accelerating quickly (striking/flinching), still moving (locomotion). seems likely traveling resting.","code":"pks <- detect_peaks(J, fs, bktime = 5)  # 5s blanking time, threshold is interactive #> GRAPH HELP: #> For changing only the thresh level, click once within the plot and then push enter #>  to specify the y-value at which your new thresh level will be. #> For changing just the bktime value, click twice within the plot and then push enter #>  to specify the length for which your bktime will be. #> To change both the bktime and the thresh, click three times within the plot: #>  the first click will change the thresh level, #>  the second and third clicks will change the bktime. #> To return your results without changing the thresh and bktime from their default #>  values, simply push enter. plott(X = list(Depth = bw$P)) # note: the code below assumes your plott x-axis is in hours. # if it were in minutes use /60 instead of /3600, etc. points(pks$peak_time/fs/3600, bw$P$data[round(pks$peak_time)], pch = 8)"},{"path":"/articles/jerk-transients.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Jerk: a way to emphasize rapid changes in acceleration","text":"’ve learned accentuate quick movements animal using jerk, used accentuated picture gain understanding animal’s behaviour. , congrats! bounced vignette. ’d like continue working vignettes, acceleration-filtering magnetometer-filtering logical choices. ’ll gain insight dataset, ways analysing locomotion, . Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('acceleration-filtering') vignette('magnetometer-filtering')"},{"path":[]},{"path":"/articles/load-tag-data.html","id":"load-the-test-data-set","dir":"Articles","previous_headings":"Loading an .nc File","what":"Load the test data set","title":"Load tag data","text":"example, load data file CATs tag. data file already stored .nc file called ‘cats_test_raw.nc’. want run example, download “cats_test_raw.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files. Click Code right see . especially concise two-line method always work installation tagtools support, eight built-datasets come package. make frequent use method vignettes. especially nice saves hassle (tracking dataset saved setting working directory , figuring working directory moving dataset ). However, worth understand steps manually, though requires separate mental task, real world get data somewhere else. keep track working directory reasons, . , familiarize following commands: Additionally, working directory visible top console:  Now, navigated working directory file finder /ensured dataset file, cats_test_raw.nc, located (whether changing working directory copy-pasting file working directory), can run load_nc “hand”—see code: right! Whichever way just run MN <- load_nc(...), creates animaltag list object MN workspace. can view Environment tab working RStudio.  command line/console, type: see variables Acc, Gyr, Depth, Light, info contained within list MN.","code":"library(tagtools) # always start with this cats_file_path <- \"nc_files/cats_test_raw.nc\" MN <- load_nc(cats_file_path) getwd() # prints your current working directory. Often this will not be a tidy folder, but contain other things. So, to avoid that...  setwd(\"/Path/To/Tidy/Working/Directory/In/Quotes\") # on Mac or Linux, paths look like this, with forward slashes between folders. For instance: setwd(\"/Library/Frameworks/R.framework/Versions/4.1/Resources/library/tagtools/extdata/\") # depending on your system, this may set your working directory to the folder containing the built-in datasets setwd(\"C:\\Users\\Sam Fynewever\\Program Files\") # on Windows, paths look like this, with a letter and colon at the beginning, then backslashes between folders MN <- load_nc(\"cats_test_raw\") # no .nc required this way! names(MN) str(MN, max.level = 1) str(MN$A) #> [1] \"First the results for names(MN):\" #> [1] \"--------------------------------------------\" #> [1] \"A\"    \"M\"    \"G\"    \"LL\"   \"P\"    \"info\" #> [1] \"Then the results for str(MN, max.level = 1):\" #> [1] \"--------------------------------------------\" #> List of 6 #>  $ A   :List of 19 #>  $ M   :List of 19 #>  $ G   :List of 19 #>  $ LL  :List of 19 #>  $ P   :List of 19 #>  $ info:List of 11 #>  - attr(*, \"class\")= chr [1:2] \"animaltag\" \"list\" #> [1] \"and finally the results for str(MN$A):\" #> [1] \"--------------------------------------------\" #> List of 19 #>  $ data              : num [1:720000, 1:3] -2.42 -2.4 -2.35 -2.3 -2.2 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 400 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"cats_test_raw\" #>  $ creation_date     : chr \"2023-06-14 12:58:08.013504\" #>  $ history           : chr \"read_cats\" #>  $ type              : chr \"A\" #>  $ full_name         : chr \"Acceleration\" #>  $ description       : chr \"triaxial acceleration\" #>  $ unit              : chr \"m/s2\" #>  $ unit_name         : chr \"metres per second squared\" #>  $ unit_label        : chr \"m/s^2\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"tag\" #>  $ axes              : chr \"FRU\" #>  $ files             : chr \"20160730-091117-Froback-11-part.csv\""},{"path":"/articles/load-tag-data.html","id":"explore-the-test-dataset","dir":"Articles","previous_headings":"","what":"Explore the test dataset","title":"Load tag data","text":"Now can find variables just typing name followed enter. example, info (tag-wide metadata), run info structure tells data came , collected, animal, type tag. info general metadata store dataset. can find specific field info, e.g., get sensors_list:","code":"MN$info #> $creation_date #> [1] \"2023-06-14 12:58:11.202458\" #>  #> $depid #> [1] \"cats_test_raw\" #>  #> $data_source #> [1] \"20160730-091117-Froback-11-part.csv\" #>  #> $data_nfiles #> [1] \"1\" #>  #> $data_format #> [1] \"csv\" #>  #> $device_make #> [1] \"CATS\" #>  #> $device_type #> [1] \"Archival\" #>  #> $dephist_device_tzone #> [1] \"0\" #>  #> $dephist_device_regset #> [1] \"dd-mm-yyyy HH:MM:SS\" #>  #> $dephist_device_datetime_start #> [1] \"2016-07-27 16:29:38\" #>  #> $sensors_list #> [1] \"3 axis Accelerometer,3 axis Magnetometer,3 axis Gyroscope,Temperature,Pressure,Light level,\" MN$info$sensors_list #> [1] \"3 axis Accelerometer,3 axis Magnetometer,3 axis Gyroscope,Temperature,Pressure,Light level,\""},{"path":"/articles/load-tag-data.html","id":"updating-and-adding-metadata","dir":"Articles","previous_headings":"Explore the test dataset","what":"Updating and adding metadata","title":"Load tag data","text":"lot metadata missing file! read_cats() can auto-fill information standard CATS tags, contained file . metadata must added user. example, add field called ‘data_owner’ value ‘Jeremy Goldbogen, Dave Cade’, enter: way add metadata dataset sending archive (e.g., dataset accompany journal paper). Although rules call field, working toward establishing set best practices. Entering metadata hand typing R console tedious, also recipe inconsistencies. (Let’s avoid !) end, tried provide couple options, considered .","code":"MN$info$data_owner <- 'Jeremy Goldbogen, Dave Cade' MN$info$data_owner #> [1] \"Jeremy Goldbogen, Dave Cade\""},{"path":"/articles/load-tag-data.html","id":"saving-metadata-with-make_info","dir":"Articles","previous_headings":"Explore the test dataset","what":"Saving Metadata with make_info","title":"Load tag data","text":"can use make_info() create metadata info structure information researcher, tag type, study species. function allows user generate “skeleton” info structure tag deployment, common pieces metadata filled . Additional information can added manually using custom script saving info part netCDF (.nc) file. example, Note may need add researchers, species, perhaps tag types template files. find stored machine, can run: , navigate folder make edits like. may need restart R take effect. succeeded running make_info(), can view results:","code":"more_info <- make_info(depid = 'cats_test', tagtype = 'CATS',                         species = 'mn', owner = 'jg') # results a few chunks later system.file('extdata', 'researchers.csv', package='tagtools') #> [1] \"C:/Users/wyq/AppData/Local/Temp/RtmpWAVJva/temp_libpath20f05a415b53/tagtools/extdata/researchers.csv\" more_info #> $animal_dbase_url #> [1] NA #>  #> $animal_id #> [1] \"Unknown\" #>  #> $animal_species_common #> [1] \"Humpback whale\" #>  #> $animal_species_science #> [1] \"Megaptera novaeangliae\" #>  #> $dephist_deploy_datetime_start #> [1] \"UNKNOWN\" #>  #> $dephist_deploy_locality #> [1] \"\" #>  #> $dephist_deploy_location_lat #> [1] \"\" #>  #> $dephist_deploy_location_lon #> [1] \"\" #>  #> $dephist_deploy_method #> [1] \"\" #>  #> $dephist_device_datetime_start #> [1] \"UNKNOWN\" #>  #> $dephist_device_regset #> [1] \"dd/mm/yyyy HH:MM:SS\" #>  #> $dephist_device_tzone #> [1] \"0\" #>  #> $depid #> [1] \"cats_test\" #>  #> $device_make #> [1] \"CATS\" #>  #> $device_model #> [1] \"\" #>  #> $device_serial #> [1] \"UNKNOWN\" #>  #> $device_type #> [1] \"Archival\" #>  #> $device_url #> [1] \"http://www.cats.is/\" #>  #> $dtype_datetime_made #> [1] \"2023-07-07 18:38:32\" #>  #> $dtype_format #> [1] \".csv\" #>  #> $dtype_nfiles #> [1] \"UNKNOWN\" #>  #> $dtype_source #> [1] \"UNKNOWN\" #>  #> $project_datetime_end #> [1] \"\" #>  #> $project_datetime_start #> [1] \"\" #>  #> $project_name #> [1] \"\" #>  #> $provider_cite #> [1] \"Contact data provider\" #>  #> $provider_details #> [1] \"Stanford University\" #>  #> $provider_doi #> [1] \"Contact data provider\" #>  #> $provider_email #> [1] \"jergold@stanford.edu\" #>  #> $provider_license #> [1] \"Contact data provider\" #>  #> $provider_name #> [1] \"Jeremy Goldbogen\" #>  #> $sensors_firm #> [1] \"Not specified\" #>  #> $sensors_list #> [1] \"3axis Accelerometer,3 axis Magnetometer,3 axis Gyroscope,Pressure,Light,GPS,Video\" #>  #> $sensors_soft #> [1] \"Not specified\""},{"path":"/articles/load-tag-data.html","id":"combining-info-and-more_info","dir":"Articles","previous_headings":"Explore the test dataset","what":"Combining info and more_info","title":"Load tag data","text":"Now two different info structures—one just created make_info() one got created .nc file using read_cats(). can combine two together, keeping fields original info duplicates:","code":"more_info[names(MN$info)] <- MN$info MN$info <- more_info MN$info #> $animal_dbase_url #> [1] NA #>  #> $animal_id #> [1] \"Unknown\" #>  #> $animal_species_common #> [1] \"Humpback whale\" #>  #> $animal_species_science #> [1] \"Megaptera novaeangliae\" #>  #> $dephist_deploy_datetime_start #> [1] \"UNKNOWN\" #>  #> $dephist_deploy_locality #> [1] \"\" #>  #> $dephist_deploy_location_lat #> [1] \"\" #>  #> $dephist_deploy_location_lon #> [1] \"\" #>  #> $dephist_deploy_method #> [1] \"\" #>  #> $dephist_device_datetime_start #> [1] \"2016-07-27 16:29:38\" #>  #> $dephist_device_regset #> [1] \"dd-mm-yyyy HH:MM:SS\" #>  #> $dephist_device_tzone #> [1] \"0\" #>  #> $depid #> [1] \"cats_test_raw\" #>  #> $device_make #> [1] \"CATS\" #>  #> $device_model #> [1] \"\" #>  #> $device_serial #> [1] \"UNKNOWN\" #>  #> $device_type #> [1] \"Archival\" #>  #> $device_url #> [1] \"http://www.cats.is/\" #>  #> $dtype_datetime_made #> [1] \"2023-07-07 18:38:32\" #>  #> $dtype_format #> [1] \".csv\" #>  #> $dtype_nfiles #> [1] \"UNKNOWN\" #>  #> $dtype_source #> [1] \"UNKNOWN\" #>  #> $project_datetime_end #> [1] \"\" #>  #> $project_datetime_start #> [1] \"\" #>  #> $project_name #> [1] \"\" #>  #> $provider_cite #> [1] \"Contact data provider\" #>  #> $provider_details #> [1] \"Stanford University\" #>  #> $provider_doi #> [1] \"Contact data provider\" #>  #> $provider_email #> [1] \"jergold@stanford.edu\" #>  #> $provider_license #> [1] \"Contact data provider\" #>  #> $provider_name #> [1] \"Jeremy Goldbogen\" #>  #> $sensors_firm #> [1] \"Not specified\" #>  #> $sensors_list #> [1] \"3 axis Accelerometer,3 axis Magnetometer,3 axis Gyroscope,Temperature,Pressure,Light level,\" #>  #> $sensors_soft #> [1] \"Not specified\" #>  #> $creation_date #> [1] \"2023-06-14 12:58:11.202458\" #>  #> $data_source #> [1] \"20160730-091117-Froback-11-part.csv\" #>  #> $data_nfiles #> [1] \"1\" #>  #> $data_format #> [1] \"csv\" #>  #> $data_owner #> [1] \"Jeremy Goldbogen, Dave Cade\""},{"path":"/articles/load-tag-data.html","id":"saving-metadata-with-a-gui-editor","dir":"Articles","previous_headings":"Explore the test dataset","what":"Saving metadata with a GUI editor","title":"Load tag data","text":"Another option entering user-generated metadata use animaltags metadata editor. interface allows type information pre-named fields, allowing fully customize information also using standard field names. launch editor, run: web browser window open can fill metadata fields tag.  Depending individual platform, editor may tabs open. Simply click one tabs (Device Information, Tag Animal Information, etc.) open . Perhaps don’t currently metadata hand fill fields . , point might already metadata stored CSV spreadsheet, specific format reader recognizes (magically pick metadata saved CSV order choosing). either case, function reads metadata .csv file useful. .csv spreadsheet metadata workshop materials can use now. Upload “Browse”, click “Open CSV” harvest data. automate data entry process . done, scroll bottom editor, fill file name save work, click “Save”. Note number fields strongly suggest filling …get warning try save left blank. can choose computer save (temporary) file, confirm file name . , file working directory, can load info R animaltags info structure via: finally, combine rest . Try emulate two lines , changing names needed, without opening chunk . check work :","code":"metadata_editor() yet_more_info <- csv2struct('the_file_you_just_saved.csv') # results not included, will depend on your individual file yet_more_info[names(MN$info)] <- MN$info MN$info <- yet_more_info"},{"path":"/articles/load-tag-data.html","id":"saving-the-data","dir":"Articles","previous_headings":"","what":"Saving the data","title":"Load tag data","text":"’ve now made quite additions metadata info structure, probably want save .nc file. ’s . ’s ! worked smoothly, .nc file contain additions ’ve working .","code":"MN$info[is.na(MN$info)] <- NULL add_nc('cats_test_raw', X = MN$info, vname = 'info')"},{"path":"/articles/load-tag-data.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Load tag data","text":"learned far? important steps hopefully, ’re working data frequently, become healthy routines consistent, rigorous documentation. Great work! ’d like continue working practicals, vectors-vs-structures plots--cropping two good choices. vectors-vs-structures quick review way R stores data structures, can extracted individual vectors/scalars. plots--cropping, ’ll get start visualizing data types ’ve learning load. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('vectors-vs-structures', package = 'tagtools') vignette('plots-and-cropping', package = 'tagtools')"},{"path":"/articles/magnetometer-filtering.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"More complementary filtering: magnetometer & dynamic acceleration","text":"’ve done acceleration-filtering jerk-transients within R session, skip Spoilers. , within R session, ’ve done , skip Complementary Filter Magnetometer. , ’ll want section load necessary data, take look . vignettes use data suction cup tag attached back beaked whale. data testset1. want run example, download “testset1.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files Use load_nc() read —write testset1.nc object bw, “beaked whale”. use plott() get look .  dataset contains deep dive followed shallow dive. want infer function looking locomotion effort sudden changes acceleration indicative prey capture attempts. also going look changes swimming gait.","code":"library(tagtools) bw_file_path <- \"nc_files/testset1.nc\" bw <- load_nc(bw_file_path) plott(X = list(Depth = bw$P, Acc = bw$A, Mag = bw$M))"},{"path":"/articles/magnetometer-filtering.html","id":"spoilers","dir":"Articles","previous_headings":"","what":"Spoilers","title":"More complementary filtering: magnetometer & dynamic acceleration","text":"’ve done acceleration-filtering jerk-transients R session, skip Complementary Filter Magnetometer. , ’ll want section. ’ll bunch spoilers two vignettes objects need. Paste code , shouldn’t mess already , whether ’ve done one .","code":"# stuff from acceleration-filtering fc = 0.267032715030423 # filter cut-off frequency Af <- comp_filt(bw$A, fc = fc) # filtering acceleration data Alow <- Af[[1]] # low-frequency acceleration Ahigh <- Af[[2]] # high-frequency acceleration sampling_rate <- bw$A$sampling_rate # sampling rate for this data intvl1 <- c(36*60, 38*60)  intvl2 <- c(56*60, 58*60) # two interesting time intervals: 36-38 and 56-58 minutes Ah1 <- crop_to(Ahigh, sampling_rate = sampling_rate, tcues = intvl1) # high-frequency acceleration data in the first interval Ah2 <- crop_to(Ahigh, sampling_rate = sampling_rate, tcues = intvl2) # high-frequency acceleration data in the first interval  # stuff from jerk-transients (might depend on stuff from complementary-filtering, just paste it all) J <- njerk(bw$A) # get jerk Ad <- decdc(bw$A, 5) # decimate accel data by a factor of 5 Jd <- njerk(Ad) # decimated jerk"},{"path":"/articles/magnetometer-filtering.html","id":"complementary-filter-for-magnetometer","dir":"Articles","previous_headings":"","what":"Complementary Filter for Magnetometer","title":"More complementary filtering: magnetometer & dynamic acceleration","text":"Let’s get started! Try applying complementary filter magnetometer data, bw$M, plot high frequency magnetometer data two intervals swimming might looked Locomotion style section acceleration-filtering. Make new figure plot comparison.  magnetometer signals compare intervals accelerometer (Ah1 Ah2)? Either hearken back acceleration-filtering open following:  see similar increase magnitude magnetometer data interval 2 acceleration? Actually, . case acceleration, first interval magnitude peaks usually \\(-1\\) \\(+1.5\\) \\(m/s^2\\) , whereas second interval magnitude peaks \\(-3\\) \\(+4\\) \\(m/s^2\\). contrast, case magnetometer data, magnitude peaks \\(-4\\) \\(+4\\) \\(\\mu T\\)interval 1 interval 2. Remember magnetometer sensitive postural dynamics specific acceleration. Can conclude whether difference swimming styles result larger amplitude swimming strokes (.e., larger orientation dynamic due body undulations) larger specific acceleration, bit ? magnetometer reporting difference, accelerometer . difference swimming styles must due larger specific acceleration, postural dynamics.","code":"Mf <- comp_filt(bw$M, fc = fc)  Mhigh <- Mf[[2]]    # high frequency M data Mh1 <- crop_to(Mhigh, sampling_rate = sampling_rate, tcues = intvl1) Mh2 = crop_to(Mhigh, sampling_rate = sampling_rate, tcues = intvl2) plott(X = list(`Mh Interval 1` = Mh1, `Mh interval 2` = Mh2), fsx = sampling_rate) # Spoilers from acceleration-filtering. If you want to see how the accelerometer signals in these time intervals look, here's the code.  plott(X = list(`Ah Interval 1` = Ah1, `Ah interval 2` = Ah2), fsx = sampling_rate)"},{"path":"/articles/magnetometer-filtering.html","id":"jerk-vs--dynamic-acceleration","dir":"Articles","previous_headings":"","what":"Jerk vs. Dynamic Acceleration","title":"More complementary filtering: magnetometer & dynamic acceleration","text":"may know, high-pass filter emphasize rapid changes acceleration. Jerk effectively filter emphasises higher frequencies progressively . also use filter flat cut-frequency, like complementary filter used make Ahigh. get magnitude three axes together like njerk(), use norm2(). gives sometimes called dynamic acceleration: Plot DA J compare :  Check obvious peaks around minute 20 minute 30 see clear look DA J. signal gives lowest noise peaks, .e., best signal--noise ratio? suggest frequency content acceleration transients? Give thought answers–’re close. Jerk gives better signal--noise ratio dynamic acceleration. suggests acceleration transients happen quickly, important high-resolution data. right?","code":"DA <- norm2(Ahigh) plott(X = list(`Dyn. Acc` = DA, Jerk = J), fsx = sampling_rate)"},{"path":"/articles/magnetometer-filtering.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"More complementary filtering: magnetometer & dynamic acceleration","text":"’ve learned separate low- high-frequency magnetometer data complementary filter, done interpretation two sets data. Fabulous work! pranced way vignette. ’d like continue working vignettes, fine-scale-tracking fairly logical option. , ’ll consider dead-reckoned paths way visualize animal might move, can lead large errors, correct errors. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('fine-scale-tracking')"},{"path":"/articles/mahalanobis-distance.html","id":"what-is-mahalanobis-distance","dir":"Articles","previous_headings":"","what":"What is Mahalanobis distance?","title":"Mahalanobis distance","text":"Put concisely, Mahalanobis distance way comparing different data expect like. plotting one variable seeing distribution like graphically, can determine accurately ---ordinary something computing distance point centroid points. picture taken Schwarz et al. 2012, J. Neuroscience Methods 206(2): 120-131 appears “Statistics ”Tag Data” lecture animaltags website.  See blog post another explanation Mahalanobis distance. can also consult slides topic “Statistics Tag Data” lecture animaltags website, http://animaltags.org/ https://animaltags.netlify.app .","code":""},{"path":"/articles/mahalanobis-distance.html","id":"load-inspect-data","dir":"Articles","previous_headings":"","what":"Load & inspect data","title":"Mahalanobis distance","text":"Consider dataset zc11_267a. want run example, download “zc11_267a.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files  might use Mahalanobis distance summarise multivariate tag data single data stream? input variables might choose try quantify whale might changed behavior response sonar sounds? (need context, can check paper https://royalsocietypublishing.org/doi/10.1098/rsbl.2013.0223.) Use tag tool function m_dist compute Mahalanobis distance using chosen inputs, using model guide (note choices inputs kind ridiculous—better!). choose averaging window length -window overlap. can use experiment start end times provided. justify choices?  included dive depth input variable, affect resulting distance metric? think ? another, better way include information dive profile Mahalanobis distance metric? think “change” behavior response sonar exposure? wanted set threshold detecting “change”, ?","code":"library(tagtools) ZC_file_path <- \"nc_files/zc11_267a.nc\" zc <- load_nc(ZC_file_path) str(zc, max.level = 1) plott(X = list(Depth = zc$P$data, Accel = zc$A$data), fsx = zc$P$sampling_rate, interactive = TRUE) #> List of 4 #>  $ A   :List of 18 #>  $ P   :List of 18 #>  $ head:List of 10 #>  $ info:List of 19 #>  - attr(*, \"class\")= chr [1:2] \"animaltag\" \"list\" MDdata <- data.frame(jerk = njerk(zc$A, sampling_rate = zc$A$sampling_rate)$data, Mx = zc$P$data) est <- as.numeric(as.POSIXct('2011-09-24 14:45:00') - as.POSIXct(zc$info$dephist_device_datetime_start))*3600 eet <- as.numeric(as.POSIXct('2011-09-24 15:15:00') - as.POSIXct(zc$info$dephist_device_datetime_start))*3600 MD <- m_dist(data = MDdata, sampling_rate=zc$P$sampling_rate, smoothDur = 10, overlap = 9.5, expStart = est, expEnd = eet) plot(MD$t, MD$dist, type = 'l')"},{"path":"/articles/mahalanobis-distance.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Mahalanobis distance","text":"’ve learned use m_dist calculate Mahalanobis distance real-world data. Well done! ’d like continue working vignettes, consider rotation-test fine-scale-tracking. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('rotation-test') vignette('fine-scale-tracking')"},{"path":"/articles/plots-and-cropping.html","id":"setup-load-cats_test_raw-nc-as-a-large-list-mn","dir":"Articles","previous_headings":"","what":"Setup: load “cats_test_raw.nc” as a large list, MN","title":"Plots and cropping","text":"’ve already completed load-tag-data within R session, can skip bit Exploratory data plots. , don’t worry! ’ll catch code . example, make use CATS tag data file already stored .nc file called ‘cats_test_raw.nc’. want run example, download “cats_test_raw.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files","code":"library(tagtools) cats_file_path <- \"nc_files/cats_test_raw.nc\" MN <- load_nc(cats_file_path)"},{"path":"/articles/plots-and-cropping.html","id":"exploratory-data-plots","dir":"Articles","previous_headings":"","what":"Exploratory data plots","title":"Plots and cropping","text":"tag toolbox function plotting tag sensor data without getting structure:  Notice two t’s function name: plott(). plott() general purpose tag data plotter; key features : depth data, automatically plots reversed y-axis: increasing depths going downwards. nicer visualizing dive actually going , ascent actually going , screen. “t” stands “time”; plott also automatically converts horizontal axis convenient time unit like hours days instead seconds, date-time recording start time given. input interactive set TRUE (code ), can zoom data using keyboard entries. first input plott() data, must form list (sensor data lists matrices/vectors). careful data inputs, since, code , often contained within structures. Rather typing just variable Depth, important put MN$depth. list items named, names used axis labels. features info, run help function ? plott:","code":"plott(X = list(Depth = MN$P, Acceleration = MN$A, Gyroscope = MN$G), interactive = FALSE) ? plott"},{"path":"/articles/plots-and-cropping.html","id":"cropping-data-from-a-plot","dir":"Articles","previous_headings":"","what":"Cropping data from a plot","title":"Plots and cropping","text":"tags way start logging soon tag deployed animal. Often data logging started time trigger alarm, researcher make guess tag deployed set start time appropriately. Often means tag logging data put animal. token, tags means detecting release tagged animal. consequence, may continue log data release. cases, logged data deployment use. reduce data just periods tag animal, use tool crop():  displays interactive depth plot. (know reverse y-axis, ’s looks upside .) Follow instructions select obvious diving section data click finish. Alternatively, click desired left limit twice desired right limit, finish click cropping complete. function returns new data structure contains just selected part dive profile. ’ve cropped depth data relevant segment, stored Pc. Now, use plott plot Pc make sure cropped correctly. (Now especially good time try write code , since ’ve used plott . Hint: remember input X list.)  gone well, plott absolutely beautiful. alternative crop, already know start end times (appropriate units) like crop data , can use crop_to. instance, get back something like just crop depth data: resulting sensor data list also contains fields document just . look like: history keeps track operations perform data structure. helps traceability make processed data available archive. crop start_time fields show original data changed: start_time respect field dephist_device_datetime_start info structure says tag recording started.","code":"Pc = crop(MN$P) #> [1] \"Position your cursor and then click once followed by clicking FINISH to change the start, or click twice in the same spot followed by clicking FINISH to change the end. If you wish to change both the start and end click once at the start time desired and twice at the end time desired.\" plott(X = list(Depth = Pc)) Pc <- crop_to(X=MN$P, tcues=c(974, 1800)) Pc$history #> [1] \"read_cats,crop_to\""},{"path":"/articles/plots-and-cropping.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Plots and cropping","text":"’ve learned make plots using tagtools function plott, well crop plots. Congratulations! ’ve completed vignette. ’d like continue working vignettes, data-quality-error-correction probably good option. , ’ll start use unique data processing tools tagtools provides. , might consider tag--whale-frame. vignette deals one specific problem error correction: orienting data animal’s frame reference (, various reasons, may oriented different frame reference). Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('data-quality-error-correction', package = 'tagtools') vignette('tag-to-whale-frame', package = 'tagtools')"},{"path":"/articles/rotation-test.html","id":"rotation-test","dir":"Articles","previous_headings":"","what":"Rotation test","title":"Rotation test","text":"fortunate obtain number test datasets different sources permission make publicly available tag tool kit. One dataset (obtained anonymous Scottish contacts) particularly exciting possibly unique world: fragment tag data obtained high-resolution movement tag deployed Nessie, Loch Ness Monster. Unfortunately several tag sensors malfunctioned, able salvage dive depth data used example. dataset called nessie.nc. want run example, download “nessie.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files Read data: make plot dive profile (course want see ):  According Scottish lore, Nessie surfaces often hour around noon rest day (glare water, lure lunch, make difficult people spot ). really? Use find_dives find start times submergences, use proxy breath times. case, want use threshold shallow practicable. think just use regression model surfacing rate answer question? ? , data autocorrelated? Uh,… ’s just complicated? help pls Use rotation test test whether number surfacings 11:30 12:30 actually higher ’d expect. can conclude? Since p-value high, appears Nessie , contrary popular belief, actually surface (significantly) hour 11:30am 12:30pm. , great work! Now mystery forever gone… knowledge power! ’d like continue working practicals, consider dive-stats. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"library(tagtools) nessie_file_path <- \"nc_files/nessie.nc\" nessie <- load_nc(nessie_file_path) str(nessie, max.level = 1) #> List of 2 #>  $ P   :List of 16 #>  $ info:List of 17 #>  - attr(*, \"class\")= chr [1:2] \"animaltag\" \"list\" plott(X = list(Depth = nessie$P), interactive = TRUE) th <- # ??? set a very shallow threshold #find dives dt <- find_dives(nessie$P, mindepth = th) str(dt, max.level = 1) #> 'data.frame':    3471 obs. of  4 variables: #>  $ start: num  0.52 0.64 0.84 1.2 1.48 1.6 1.76 1.88 2.12 2.24 ... #>  $ end  : num  0.6 0.72 0.92 1.28 1.56 1.68 1.84 1.96 2.2 2.32 ... #>  $ max  : num  0.601 0.606 0.622 0.615 0.615 ... #>  $ tmax : num  0.6 0.72 0.92 1.28 1.56 1.68 1.84 1.96 2.2 2.32 ... # make time variables t <- as.POSIXct(nessie$info$dephist_device_datetime_start, tz = 'GMT') + c(1:nrow(nessie$P$data))/nessie$P$sampling_rate # find data times between 11:30 and 12:30 s <- as.POSIXct('2017-01-13 11:30:00', tz = 'GMT') e <- as.POSIXct('2017-01-13 12:30:00', tz = 'GMT') noon <- range(which(t < e & t > s))  #convert to seconds noon <- noon/nessie$P$sampling_rate #do test RTR <- rotation_test(event_times = dt$start, exp_period = noon, full_period = c(0,length(nessie$P$data)/nessie$P$sampling_rate), n_rot = 10000, ts_fun = length) #> $result #>   statistic CI_low CI_up n_rot conf_level   p_value #> 1       153      0   844 10000       0.95 0.7457254 vignette('dive-stats')"},{"path":"/articles/tag-to-whale-frame.html","id":"from-tag-frame-to-sperm-whale-frame","dir":"Articles","previous_headings":"","what":"From tag frame to sperm whale frame","title":"Tag orientation: From tag frame to sperm whale frame","text":"tags placed free-swimming animals, tag axes generally coincide animal’s axes. tag M data therefore tell tag, animal, oriented. can corrected know orientation tag animal, .e., pitch, roll heading tag animal horizontal pointing north. Three steps needed : First tag orientation whale inferred looking accelerometer values animal near surface. orientation may change tag moves slides deployment make ‘orientation table’ describes sequence orientations tag. table used convert tag frame measurements animal frame.","code":""},{"path":"/articles/tag-to-whale-frame.html","id":"estimate-the-tag-orientations-on-the-whale","dir":"Articles","previous_headings":"From tag frame to sperm whale frame","what":"Estimate the tag orientations on the whale","title":"Tag orientation: From tag frame to sperm whale frame","text":"Use load_nc() read testset5.nc, pilot whale Canary Islands. Write object sw follow along code vignette. want run example, download “testset5.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files use prh_predictor1() infer tag--animal orientation. function animals like pilot whales log (less) surface diving steeply. assumes two things: animal rests horizontally surface (least average). dives steeply away surface without rolling, least initially. good assumptions animal, prh_predictor2() may work. suitable whales beaked whales make short dives breaths surface. tools try predict tag orientation whale parameterized pitch, roll yaw (shall call p0, r0, h0). use prh_predictor1(), need define minimum dive depth analyse—let’s say 400 m. call tool like : graphical interface open showing dive profile (top), estimated tag--animal orientations throughout deployment (middle panel), quality estimates (bottom panel). middle panel, colored stars show p0, r0 h0 estimates start dive. quality measure <0.05 bottom panel indicates data fit well assumptions method. tag move animal dive dive, p0, r0 h0 fairly constant across dives. constant can due sudden change (e.g., tag gets hit) slow movement tag animal. case seems change orientation dives 6 7. function automatically picks segments data analyse, check well, especially ‘quality’ number > 0.05. third dive slightly bad quality: type e main figure “edit” click one third dive orientation points. Note prompts appear top figure window(s), update based recent user actions. new plot drawn second figure window (pull automatically come front) top panel shows acceleration data tag frame current dive edge. Blue, orange red (depending Matlab/Octave version) yellow represent x, y z axes, respectively. bottom panel shows acceleration data correction using p0, r0 h0 estimates printed panel. Two black rectangles show data segments chosen analysis may need moved: left-hand ‘surface’ segment positioned just start dive. right-hand ‘dive’ segment just start dive. surface segment cover interval consistent surfacing behaviour (either logging shallow diving). dive segment contain roll-free steep diving, .e., blue red lines (x- y-axes) close -9.8 m/s2 0, respectively, lower panel. segment edges numbered 1 4 left. change segment, hover mouse plot type relevant number, click mouse want newly-drawn box edge . segment move p0, r0, h0 quality re-calculated. satisfied estimate quality, type q return first figure.","code":"library(tagtools) sw_file_path <- \"nc_files/testset5.nc\" sw <- load_nc(sw_file_path) PRH = prh_predictor1(sw$P, sw$A, TH = 400)"},{"path":"/articles/tag-to-whale-frame.html","id":"produce-the-orientation-table","dir":"Articles","previous_headings":"From tag frame to sperm whale frame","what":"Produce the orientation table","title":"Tag orientation: From tag frame to sperm whale frame","text":"need create orientation table (OTAB) summarizes tag orientation animal function time. row OTAB matrix describes orientation tag animal time interval. two moves, OTAB three lines: initial orientation orientation move. row defines tag oriented animal columns: t1, t2, p0, r0, h0. t1 t2 start end times move (seconds-since-tag-), p0, r0, h0 new orientation Euler angles move (radians). initial orientation (.e., first row OTAB) always t1 = t2 = 0. subsequent moves, move instantaneous, use t2 = t1. move gradual, set t1 time movement appears start set t2 time move appears complete. Making OTAB bit black art. prh_predictor1() infinitely precise, apparent change less 10 degrees probably worth worrying . going assume just one move (.e., 6th dive) pilot whale data. Position mouse blue (p0), red orange (r0), yellow (h0) lines move click left button get angle (degrees). Make first OTAB line: p0, r0 h0 readings. pi/180 converts radians. second OTAB line, read p0, r0 h0 values move decide move actually happens (let’s say sudden move end dive, e.g., 10100 seconds). : Finally, type ‘q’ quit prh_predictor1. Now can make OTAB matrix:","code":"otab1 <- matrix(data = c(0,0, c(p0, r0 , h0)*pi/180), nrow = 1) otab2 <- matrix(data = c(10100, 10100, c(p0, r0, h0)*pi/180), nrow = 1) OTAB <- rbind(otab1,                otab2)"},{"path":"/articles/tag-to-whale-frame.html","id":"tag-frame-to-animal-frame","dir":"Articles","previous_headings":"From tag frame to sperm whale frame","what":"Tag frame to animal frame","title":"Tag orientation: From tag frame to sperm whale frame","text":"Use OTAB convert tag frame measurements (M) animal frame: particular dataset, provided, case want also convert tag frame magnetometer measurements animal frame, similar way, using code form: Aa now contain acceleration data like recorded tag aligned animal’s axes, .e., animal frame. Compute pitch roll Aa plot check make sense: pitch roll vectors radians (hence *180/pi covert degrees) sampling rate Aa. Zoom check animal realistic orientation surface, ascent descent. comfortable tag well aligned animal frame, can add corrected data archive file: need also save pitch roll can easily re-computed Aa. archive file contain source data data corrected. orientation correction steps OTAB stored Aa, information saved automatically archive file. Nice work!","code":"Aa <- tag2animal(sw$A, OTAB = OTAB) Ma <- tag2animal(sw$M, OTAB = OTAB) pr <- a2pr(Aa) pitch <- pr$p roll <- pr$r rm(pr)  plott(X = list(depth = P, pitch = pitch*180/pi, roll = roll*180/pi),       fsx = Aa.sampling_rate, interactive = TRUE) add_nc('testset5_animal_frame', Aa)"},{"path":"/articles/tag-to-whale-frame.html","id":"extra-quality-check","dir":"Articles","previous_headings":"From tag frame to sperm whale frame > Tag frame to animal frame","what":"Extra quality check","title":"Tag orientation: From tag frame to sperm whale frame","text":"time want something extra, following check. code compute smoothed pitch angle; 12 smoothing parameter. Signal components 1/12 Nyquist frequency filtered . Now find whale’s vertical speed m/sec: plot . Feel free convert favorite graphics system - love ggformula… Aa done right, fairly good negative correlation depth rate pitch. outliers didn’t put tag orientation change quite right place. feel like making fine adjustments, improve OTAB perform check . data, likely spend lot time making small adjustments.","code":"pitch_s <- a2pr(tagtools::smooth(Aa.data, 12)) v <- depth_rate(sw$P) plot(v, pitch_s*180/pi, type = 'p', pch = 16,      ylab = 'smooth pitch (degrees)',      xlab = 'speed (m/sec)')"},{"path":"/articles/tag-to-whale-frame.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Tag orientation: From tag frame to sperm whale frame","text":"’ve learned estimate tag orientation time, well correct estimates problematic. Congrats! made vignette. ’d like continue working vignettes, consider acceleration-filtering. , ’ll look acceleration data, consider quick changes acceleration (high-frequency acceleration) versus slower changes (low-frequency acceleration) interpret animal’s behavior. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('acceleration-filtering')"},{"path":"/articles/TagTools.html","id":"more-background-whats-in-a-vignette","dir":"Articles","previous_headings":"","what":"More background: What’s in a Vignette?","title":"Tagtools vignettes: overview and introduction","text":"Already familiar concept? Feel free skip Introductory vignettes! vignette contains various chunks information one , including plain text chunks (like one), code chunks, —especially package—collapsible answers results sections. really plain text chunks code chunks running directly HTML code make easily hidden default, openable click button. example code chunk. Click “Code” right expand . package, often include results given code chunk directly code chunk, especially interesting visible result. code example , let’s see results.  code provided vignettes presented way run smoothly. code checked quite times bugs, including every time package built using following command:","code":"# This is a code chunk! print(\"Hello, Biologger!\") print(sqrt(256)) yData <- sin(c(1:24)*pi/12) plot(x = c(1:length(yData)), y = yData, xlab = \"X\", ylab = \"sin(π/12 X)\") #> [1] \"Hello, Biologger!\" #> [1] 16 devtools::install_github('stacyderuiter/TagTools/R/tagtools', build_vignettes = TRUE)"},{"path":"/articles/TagTools.html","id":"introductory-vignettes","dir":"Articles","previous_headings":"","what":"Introductory vignettes","title":"Tagtools vignettes: overview and introduction","text":"’re new package, vignettes ! Anyone benefit reviewing basics making sure package loaded correctly, loading data, converting (sensor) data structures vectors, using plotter function, plott.","code":""},{"path":[]},{"path":"/articles/TagTools.html","id":"install-load-tagtools","dir":"Articles","previous_headings":"Introductory vignettes","what":"1. install-load-tagtools","title":"Tagtools vignettes: overview and introduction","text":"vignette('install-load-tagtools') Estimated time complete: 15 minutes. vignette especially helpful new users haven’t yet installed tagtools. couple different options installation given, helpful information interpret messages R sends installing. example, know getting lot red messages row isn’t always bad thing (fact, package install, can mean everything running smoothly)?","code":""},{"path":"/articles/TagTools.html","id":"load-tag-data","dir":"Articles","previous_headings":"Introductory vignettes","what":"2. load-tag-data","title":"Tagtools vignettes: overview and introduction","text":"vignette('load-tag-data') Estimated time complete: 20 minutes. vignette deals functions load_nc, add_nc, save_nc, form backbone dealing data NetCDF files. particular, ’ll use load_nc every vignette one. vignette, learn couple different ways load data, particularly important ’re finding data somewhere tagtools package (eight built-datasets). ’ll also learn add edit metadata—important data data.","code":""},{"path":"/articles/TagTools.html","id":"vectors-vs-structures","dir":"Articles","previous_headings":"Introductory vignettes","what":"3. vectors-vs-structures","title":"Tagtools vignettes: overview and introduction","text":"vignette('vectors-vs-structures') Estimated time complete: 15 minutes. quick vignette talks differences vectors (scalars, matrices—standalone objects) data structures (contain one object). Particularly important understand $ operator, used extensively R datasets. instance, acceleration data dataset called bw, beaked_whale, might found bw$.","code":""},{"path":"/articles/TagTools.html","id":"plots-and-cropping","dir":"Articles","previous_headings":"Introductory vignettes","what":"4. plots-and-cropping","title":"Tagtools vignettes: overview and introduction","text":"vignette('plots--cropping') Estimated time complete: 25 minutes. first vignette can include really compelling graphic lure try ! ’ll learn use tagtools plotter function plott, crop irrelevant data (beginning end recording) , allowing plot just data actually animal.","code":""},{"path":[]},{"path":"/articles/TagTools.html","id":"data-quality-error-correction","dir":"Articles","previous_headings":"Calibration","what":"1. data-quality-error-correction","title":"Tagtools vignettes: overview and introduction","text":"vignette('data-quality-error-correction') Estimated time complete: 25 minutes. ’ll find common sources error accelerometer magnetometer data, see ways errors can corrected. Quality checking fairly easy pressure (depth) data aquatic mammals know breathe surface. Data accelerometers magnetometers difficult. one thing, three axes, also don’t intuitive feel look like. However, fortunately, quality checks can M data help catch correct problems.","code":""},{"path":"/articles/TagTools.html","id":"tag-to-whale-frame","dir":"Articles","previous_headings":"Calibration","what":"2. tag-to-whale-frame","title":"Tagtools vignettes: overview and introduction","text":"vignette('tag--whale-frame') Estimated time complete: 25 minutes. ’ll correct data oriented properly animal’s frame reference. tags placed free-swimming animals, tag axes generally coincide animal’s axes. tag M data therefore tell tag, animal, oriented. can corrected know orientation tag animal (pitch, roll heading tag animal horizontal pointing north). Three steps needed : First tag orientation whale inferred looking accelerometer values animal near surface. orientation may change tag moves slides deployment make ‘orientation table’ describes sequence orientations tag. table used convert tag frame measurements animal frame.","code":""},{"path":"/articles/TagTools.html","id":"filtering","dir":"Articles","previous_headings":"","what":"Filtering","title":"Tagtools vignettes: overview and introduction","text":"three vignettes particularly interrelated, recommend together. applying sort filter (e.g. high-pass filtering, low-pass filtering) gain insight data (e.g. acceleration magnetometer).","code":""},{"path":"/articles/TagTools.html","id":"acceleration-filtering","dir":"Articles","previous_headings":"Filtering","what":"1. acceleration-filtering","title":"Tagtools vignettes: overview and introduction","text":"vignette('acceleration-filtering') Estimated time complete: 20 minutes. ’ll use complementary filters acceleration data taken beaked whale. separate intervals movements distinct frequency bands, .e., posture (low frequency) strikes/flinches (high frequency), order gain insight movements animal.","code":""},{"path":"/articles/TagTools.html","id":"jerk-transients","dir":"Articles","previous_headings":"Filtering","what":"2. jerk-transients","title":"Tagtools vignettes: overview and introduction","text":"vignette('jerk-transients') Estimated time complete: 20 minutes. work acceleration data time, know acceleration second derivative position. Take third derivative ’ll called jerk, can used effectively high-pass filter. also illuminate particular value high-resolution data (especially data lot high-frequency content).","code":""},{"path":"/articles/TagTools.html","id":"magnetometer-filtering","dir":"Articles","previous_headings":"Filtering","what":"3. magnetometer-filtering","title":"Tagtools vignettes: overview and introduction","text":"vignette('magnetometer-filtering') Estimated time complete: 20 minutes. ’ll use techniques acceleration-filtering, magnetometer data.","code":""},{"path":"/articles/TagTools.html","id":"advanced-processing","dir":"Articles","previous_headings":"","what":"Advanced processing","title":"Tagtools vignettes: overview and introduction","text":"vignettes bit hodge-podge: things can now experience working tagtools package. Slightly less guidance given, slightly independence expected/required.","code":""},{"path":"/articles/TagTools.html","id":"fine-scale-tracking","dir":"Articles","previous_headings":"Advanced processing","what":"1. fine-scale-tracking","title":"Tagtools vignettes: overview and introduction","text":"vignette('fine-scale-tracking') Estimated time complete: 40 minutes. longer vignette—shortened older practical. dead-reckon travel path animal based estimates forward speed… without knowledge currents (thus, estimate animal might traveled relative object “dead water”). Large errors result. help correction, full picture animal movement can emerge, compared gathered simply using GPS data.","code":""},{"path":"/articles/TagTools.html","id":"find-dives","dir":"Articles","previous_headings":"Advanced processing","what":"2. find-dives","title":"Tagtools vignettes: overview and introduction","text":"vignette('find-dives') Estimated time complete: 20 mins vignette starts quick review, ’ll find correct different sources error depth data. , ’ll locate beginnings endings dives, plot beginnings endings depth profile using function find_dives. ’ll also simple analysis, like calculating mean dive depth.","code":""},{"path":"/articles/TagTools.html","id":"dive-stats","dir":"Articles","previous_headings":"Advanced processing","what":"3. dive-stats","title":"Tagtools vignettes: overview and introduction","text":"vignette('dive-stats') Estimated time complete: 25 mins vignette also nice review previous concepts—cropping data, calibrating data, finding dives. , ’ll use function dive_stats efficiently compute summary statistics dives depth profile.","code":"#>   num       max      st      et    dur dest_st dest_et dest_dur to_dur from_dur #> 1   1 1737.0414  6728.0 10805.8 4077.8  7698.2  8953.6   1255.4  970.2   1852.4 #> 2   2  356.2372 10925.0 12510.4 1585.4 11211.6 11802.0    590.4  286.6    708.6 #> 3   3  395.3293 12623.6 14229.6 1606.0 13092.8 13704.6    611.8  469.2    525.2 #> 4   4  390.7887 14303.6 16091.0 1787.4 14768.4 15391.0    622.6  464.8    700.2 #> 5   5  437.5752 16177.2 18026.8 1849.6 16636.4 17170.0    533.6  459.2    857.0 #> 6   6  365.1476 18088.0 20000.2 1912.2 18572.0 19160.8    588.8  484.0    839.6 #>     to_rate  from_rate #> 1 1.5208853 -0.7970521 #> 2 1.0548637 -0.4260587 #> 3 0.7149649 -0.6382696 #> 4 0.7144625 -0.4733356 #> 5 0.8086120 -0.4336557 #> 6 0.6405371 -0.3693056"},{"path":"/articles/TagTools.html","id":"rotation-test","dir":"Articles","previous_headings":"Advanced processing","what":"4. rotation-test","title":"Tagtools vignettes: overview and introduction","text":"vignette('rotation-test') Estimated time complete: 20 mins ’ll use statistical method test whether hypothesis holds scrutiny, using dataset (?) beloved lake creature. ’s nice one find-dives, since ’ll use similar techniques one.","code":"#> $result #>   statistic CI_low CI_up n_rot conf_level   p_value #> 1       153      0   844 10000       0.95 0.7387261"},{"path":"/articles/TagTools.html","id":"mahalanobis-distance","dir":"Articles","previous_headings":"Advanced processing","what":"5. mahalanobis-distance","title":"Tagtools vignettes: overview and introduction","text":"vignette('mahalanobis-distance') Estimated time complete: 25 mins ’ll compare data data see ordinary , using dataset whale underwent controlled exposure military sonar.","code":""},{"path":"/articles/TagTools.html","id":"miscellaneous","dir":"Articles","previous_headings":"","what":"Miscellaneous","title":"Tagtools vignettes: overview and introduction","text":"Detectors (detectors-draft) vignette deal function detect_peaks. lack newer features vignettes (hideable results, answers), worth trying nevertheless.","code":""},{"path":"/articles/TagTools.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Tagtools vignettes: overview and introduction","text":"Thanks reading—best luck! Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":""},{"path":"/articles/vectors-vs-structures.html","id":"setup-write-cats_test_raw-nc-and-load-it-as-a-large-list-mn","dir":"Articles","previous_headings":"","what":"Setup: write “cats_test_raw.nc”, and load it as a large list, MN","title":"Vectors and scalars versus structures","text":"vignette use NetCDF file cats_test_raw.nc. want run example, download “cats_test_raw.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files write file “cats_test_raw.nc”, load current R session list object called MN. Looks good? Good work! Confused? See vignette load-tag-data.","code":"library(tagtools) cats_file_path <- \"nc_files/cats_test_raw.nc\" MN <- load_nc(cats_file_path)"},{"path":"/articles/vectors-vs-structures.html","id":"sensor-data-structures-extracting-data-vectors","dir":"Articles","previous_headings":"","what":"Sensor data structures & extracting data vectors","title":"Vectors and scalars versus structures","text":"caught , return sensor data structures. Like $info: structures contain data information . Typing variable names followed enter show . example, try Acceleration: Matlab, Octave R look little different, information. Specifically, variable , contained within large list MN. MN$access , R. results tell acceleration data sampled nominal rate 32 Hz (32 samples per second) units meters per second squared. familiar data vectors structures, can easily get data structure, standalone object, using: makes matrix acceleration data scalar sampling_rate sampling rate, case 32. can also just keep everything stored list object, like (R clear reason pull ). , ’d just keep typing MN$$data MN$$sampling_rate instead sampling_rate. move forward plots--cropping, still use animaltag list MN, pulling data directly .","code":"MN$info #> $creation_date #> [1] \"2023-06-14 12:58:11.202458\" #>  #> $depid #> [1] \"cats_test_raw\" #>  #> $data_source #> [1] \"20160730-091117-Froback-11-part.csv\" #>  #> $data_nfiles #> [1] \"1\" #>  #> $data_format #> [1] \"csv\" #>  #> $device_make #> [1] \"CATS\" #>  #> $device_type #> [1] \"Archival\" #>  #> $dephist_device_tzone #> [1] \"0\" #>  #> $dephist_device_regset #> [1] \"dd-mm-yyyy HH:MM:SS\" #>  #> $dephist_device_datetime_start #> [1] \"2016-07-27 16:29:38\" #>  #> $sensors_list #> [1] \"3 axis Accelerometer,3 axis Magnetometer,3 axis Gyroscope,Temperature,Pressure,Light level,\" str(MN$A, max.level = 1) # display the STRucture of MN$A #> List of 19 #>  $ data              : num [1:720000, 1:3] -2.42 -2.4 -2.35 -2.3 -2.2 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 400 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"cats_test_raw\" #>  $ creation_date     : chr \"2023-06-14 12:58:08.013504\" #>  $ history           : chr \"read_cats\" #>  $ type              : chr \"A\" #>  $ full_name         : chr \"Acceleration\" #>  $ description       : chr \"triaxial acceleration\" #>  $ unit              : chr \"m/s2\" #>  $ unit_name         : chr \"metres per second squared\" #>  $ unit_label        : chr \"m/s^2\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"tag\" #>  $ axes              : chr \"FRU\" #>  $ files             : chr \"20160730-091117-Froback-11-part.csv\" A <- MN$A$data sampling_rate <- MN$A$sampling_rate str(A, max.level = 1) sampling_rate #> [1] \"Results for str(A, max.level = 1):\" #> [1] \"----------------------------------\" #>  num [1:720000, 1:3] -2.42 -2.4 -2.35 -2.3 -2.2 ... #> [1] \"----------------------------------\" #> [1] \"Result for sampling_rate:\" #> [1] \"----------------------------------\" #> [1] 400"},{"path":"/articles/vectors-vs-structures.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Vectors and scalars versus structures","text":"’ve learned distinguish vectors structures, go structure vector (scalar). Nice work! ’re set vectors-vs-structures. ’d like keep working practicals, plots--cropping logical continuation. ’s particularly nice learn use plotter comes tagtools, called plott. Otherwise, might consider jumping ahead data-quality-error-correction. , ’ll get started work fixing errors data. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('plots-and-cropping', package = 'tagtools') vignette('data-quality-error-correction', package = 'tagtools')"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stacy DeRuiter. Author, maintainer, copyright holder. Mark Johnson. Author, copyright holder. David Sweeney. Author. Ye Joo McNamara-Oh. Author. Samuel Fynewever. Author. (Oghenkevwe) Racheal Tejevbo. Author. Tiago Marques. Author. Yuqian Wang. Author. (Oghenesuvwe) Su Ogedegbe. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"DeRuiter S, Johnson M, Sweeney D, McNamara-Oh Y, Fynewever S, Tejevbo (, Marques T, Wang Y, Ogedegbe ( (2023). tagtools: Work Data High-Resolution Biologging Tags. <https://animaltags.org>, <https://animaltags.github.io/tagtools_r/index.html>.","code":"@Manual{,   title = {tagtools: Work with Data from High-Resolution Biologging Tags},   author = {Stacy DeRuiter and Mark Johnson and David Sweeney and Ye Joo McNamara-Oh and Samuel Fynewever and (Oghenkevwe) Racheal Tejevbo and Tiago Marques and Yuqian Wang and (Oghenesuvwe) Su Ogedegbe},   year = {2023},   note = {, }, }"},{"path":"/index.html","id":"tagtools_r","dir":"","previous_headings":"","what":"Work with Data from High-Resolution Biologging Tags","title":"Work with Data from High-Resolution Biologging Tags","text":"repository contains R package R version animaltag tool kit. Install CRAN : install.packages(\"tagtools\") Install development version github running: remotes::install_github(\"animaltags/tagtools_r\") Documentation vignettes available : https://animaltags.github.io/tagtools_r/ High-resolution movement-sensor tags typically include accelerometers measure body posture sudden movements changes speed, magnetometers measure direction travel, pressure sensors measure dive depth aquatic marine animals. subset tags include sensors speed, turning rate (gyroscopes), sound. package provides software tools facilitate calibration, processing, analysis data. Tools provided : Data Import/export, Calibration (raw data calibrated data scientific units), Visualization (e.g., time-series plots, multiple events overlaid, long-term spectral averages), Data Processing (e.g., event detection, derived metrics like jerk dynamic acceleration, Dive detection dive parameter calculation, Integrating movement data sensors eg acoustic camera, integrating position data onboard GPS, visual observations, etc. movement data, statistical Analysis (e.g., track reconstruction, Mahalanobis distance analysis). material based upon research supported United States Office Naval Research Award Number N00014-16-1-3089.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/reference/a2pr.html","id":null,"dir":"Reference","previous_headings":"","what":"Pitch and roll from acceleration — a2pr","title":"Pitch and roll from acceleration — a2pr","text":"Pitch roll estimation triaxial accelerometer data. non-iterative estimator |pitch| constrained <= 90 degrees. pitch roll estimates give least-square-norm error -vector measured estimated pitch roll. animal frame, resulting pitch roll define orientation animal respect navigation frame. tag frame, pitch roll define tag orientation respect navigation frame.","code":""},{"path":"/reference/a2pr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pitch and roll from acceleration — a2pr","text":"","code":"a2pr(A, sampling_rate = NULL, fc = NULL)"},{"path":"/reference/a2pr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pitch and roll from acceleration — a2pr","text":"nx3 acceleration matrix columns [ax ay az] acceleration sensor list (e.g., readtag.R). Acceleration can consistent unit, e.g., g m/s^2. sampling_rate (optional) sampling rate sensor data Hz (samples per second). needed filtering required. sensor data list, sampling_rate obtained metadata ($sampling_rate). fc (optional) cut-frequency low-pass filter apply computing pitch roll. filter cut-frequency Hertz. filter length 4*sampling_rate/fc. Filtering adds group delay. fc specified, filtering performed.","code":""},{"path":"/reference/a2pr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pitch and roll from acceleration — a2pr","text":"list 2 elements: p:  pitch estimate radians r:  roll estimate radians","code":""},{"path":"/reference/a2pr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Pitch and roll from acceleration — a2pr","text":"Output sampling rate input sampling rate. Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. frames, positive pitch angle anti-clockwise rotation around y-axis. positive roll angle clockwise rotation around x-axis. descending animal negative pitch angle animal rolled right side positive roll angle.","code":""},{"path":[]},{"path":"/reference/a2pr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pitch and roll from acceleration — a2pr","text":"","code":"samplematrix <- matrix(c(0.77, -0.6, -0.22, 0.45, -0.32, 0.99, 0.2, -0.56, 0.5),   byrow = TRUE, nrow = 3 ) list <- a2pr(samplematrix)"},{"path":"/reference/absorption.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the absorption coefficient for sound in seawater — absorption","title":"Calculates the absorption coefficient for sound in seawater — absorption","text":"Calculates absorption coefficient sound seawater","code":""},{"path":"/reference/absorption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the absorption coefficient for sound in seawater — absorption","text":"","code":"absorption(freq, temperature, d)"},{"path":"/reference/absorption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the absorption coefficient for sound in seawater — absorption","text":"freq frequency Hz temperature temperature degrees C d depth meters","code":""},{"path":"/reference/absorption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the absorption coefficient for sound in seawater — absorption","text":"sound absorption dB per metre.","code":""},{"path":"/reference/absorption.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculates the absorption coefficient for sound in seawater — absorption","text":"Input arguments can scalars, mixture vectors scalars long argument either vector length nx1 (n vector arguments) scalar. Kinsler Frey pp. 159-160","code":""},{"path":"/reference/absorption.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the absorption coefficient for sound in seawater — absorption","text":"","code":"absorption(140e3, 13, 10) #> [1] 0.04354982"},{"path":"/reference/acc_wgs84.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate total acceleration — acc_wgs84","title":"Calculate total acceleration — acc_wgs84","text":"function calculates total acceleration due gravitation centripetal force earth's surface according WGS84 international gravity formula.","code":""},{"path":"/reference/acc_wgs84.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate total acceleration — acc_wgs84","text":"","code":"acc_wgs84(latitude)"},{"path":"/reference/acc_wgs84.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate total acceleration — acc_wgs84","text":"latitude latitude degrees.","code":""},{"path":"/reference/acc_wgs84.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate total acceleration — acc_wgs84","text":"g given units $m/s^2$","code":""},{"path":"/reference/acc_wgs84.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate total acceleration — acc_wgs84","text":"Source: http://solid_earth.ou.edu/notes/potential/igf.htm","code":""},{"path":"/reference/acc_wgs84.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate total acceleration — acc_wgs84","text":"","code":"acc_wgs84(50) #> [1] 9.810704"},{"path":"/reference/add_nc.html","id":null,"dir":"Reference","previous_headings":"","what":"Save an item to a NetCDF or add one tag sensor or metadata variable to a NetCDF archive file. — add_nc","title":"Save an item to a NetCDF or add one tag sensor or metadata variable to a NetCDF archive file. — add_nc","text":"Add one tag sensor metadata variable NetCDF archive file. archive file exist, created. file assumed current working directory unless pathname added beginning fname.","code":""},{"path":"/reference/add_nc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save an item to a NetCDF or add one tag sensor or metadata variable to a NetCDF archive file. — add_nc","text":"","code":"add_nc(file, D, vname)"},{"path":"/reference/add_nc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save an item to a NetCDF or add one tag sensor or metadata variable to a NetCDF archive file. — add_nc","text":"file name netCDF file save. name include .nc suffix, added automatically. D sensor data metadata list saved. vname name sensor data stream saved. Defaults entry \"name\" sensor metadata list provided user (option specify name provided facilitate calling function save_nc).","code":""},{"path":"/reference/add_nc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save an item to a NetCDF or add one tag sensor or metadata variable to a NetCDF archive file. — add_nc","text":"return; adds structure animaltag object","code":""},{"path":[]},{"path":"/reference/add_nc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save an item to a NetCDF or add one tag sensor or metadata variable to a NetCDF archive file. — add_nc","text":"","code":"# \\dontshow{ .old_wd <- setwd(tempdir()) # } BW <- beaked_whale add_nc(\"beaked_whale\", njerk(BW$A), \"Jerk\")  # \\dontshow{ setwd(.old_wd) # }"},{"path":"/reference/apply_cal.html","id":null,"dir":"Reference","previous_headings":"","what":"Implement a calibration on tag sensor data — apply_cal","title":"Implement a calibration on tag sensor data — apply_cal","text":"Given appropriate set calibration constants information, function apply calibration procedure tag sensor data set. Cal fields currently supported : poly, cross, map, tcomp, tref","code":""},{"path":"/reference/apply_cal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implement a calibration on tag sensor data — apply_cal","text":"","code":"apply_cal(X, cal, T = NULL)"},{"path":"/reference/apply_cal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implement a calibration on tag sensor data — apply_cal","text":"X tag sensor data list, matrix vector containing tag sensor data cal calibration list data X , example, spherical_cal. T tag sensor data list vector temperature measurements use temperature compensation. T sensor data list, must size sampling rate data X. T required tcomp item cal list.","code":""},{"path":"/reference/apply_cal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implement a calibration on tag sensor data — apply_cal","text":"tag sensor data structure (matrix vector, X matrix vector) calibration implemented. Data size sampling rate input data X, units may changed.","code":""},{"path":"/reference/apply_cal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Implement a calibration on tag sensor data — apply_cal","text":"","code":"t <- apply_cal(harbor_seal$A,spherical_cal(harbor_seal$A$data))"},{"path":"/reference/beaked_whale.html","id":null,"dir":"Reference","previous_headings":"","what":"Set of sensor lists for a beaked_whale — beaked_whale","title":"Set of sensor lists for a beaked_whale — beaked_whale","text":"Data _Mesoplodon densirostris_ tag ID md13_134a. device used DTAG3 deployed 2013-05-14 12:42:00 El Hierro, Canary Islands, Spain.","code":""},{"path":"/reference/beaked_whale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set of sensor lists for a beaked_whale — beaked_whale","text":"","code":"beaked_whale"},{"path":"/reference/beaked_whale.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Set of sensor lists for a beaked_whale — beaked_whale","text":"set sensor lists: sensor list contining triaxial acceleration matrix sampled 25 Hz M sensor list containing triaxial magnetometer matrix sampled 25 Hz P sensor list containing pressure (depth) vector sampled 25 Hz","code":""},{"path":"/reference/block_acf.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute autocorrelation function — block_acf","title":"Compute autocorrelation function — block_acf","text":"function allows calculation autocorrelation function (ACF) dataset multiple independent units (example, data several individuals, data multiple dives individual animal, etc.). groups (individual, dive, etc.) coded categorical variable. function calculates correlation coefficients levels categorical variable, respecting divisions levels (example, individual animals kept separate).","code":""},{"path":"/reference/block_acf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute autocorrelation function — block_acf","text":"","code":"block_acf(resids, blocks, max_lag, make_plot = TRUE, ...)"},{"path":"/reference/block_acf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute autocorrelation function — block_acf","text":"resids variable ACF computed (often vector residuals fitted model) blocks categorical variable indicating groupings (must length resids. ACF computed data points within block.) max_lag ACF computed 0-max_lag lags, ignoring observations span blocks. Defaults minimum number observations block. function allow specify max_lag longer shortest block choose. make_plot Logical. plot produced? Defaults TRUE. ... Additional arguments passed plot.acf","code":""},{"path":"/reference/block_acf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute autocorrelation function — block_acf","text":"data frame 1 variable containing values ACF.","code":""},{"path":"/reference/block_acf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute autocorrelation function — block_acf","text":"","code":"block_acf(   resids = ChickWeight$weight,   blocks = ChickWeight$Chick )"},{"path":"/reference/block_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute mean of sample blocks — block_mean","title":"Compute mean of sample blocks — block_mean","text":"function used compute means successive blocks samples.","code":""},{"path":"/reference/block_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute mean of sample blocks — block_mean","text":"","code":"block_mean(X, n, nov)"},{"path":"/reference/block_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute mean of sample blocks — block_mean","text":"X vector matrix containing samples signal column. n number samples X use analysis block. nov (optional) number samples next block overlaps previous block. default value 0.","code":""},{"path":"/reference/block_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute mean of sample blocks — block_mean","text":"list 2 elements: Y:  vector matrix containing mean value block. X mxn matrix, Y pxn p number complete n-length blocks nov can made m samples, .e., n+(p-1)*(n-nov) < m t:  time output Y reported, units samples X.  t[1] = 12, value Y[1] corresponds “time” 12 samples X.","code":""},{"path":"/reference/block_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute mean of sample blocks — block_mean","text":"","code":"samplematrix <- matrix(c(1, 3, 5, 7, 9, 11, 13, 15, 17), byrow = TRUE, ncol = 3) list <- block_mean(samplematrix, n = 3, nov = 1)"},{"path":"/reference/block_rms.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute RMS of sample blocks — block_rms","title":"Compute RMS of sample blocks — block_rms","text":"function used compute RMS (root-mean-square) successive blocks samples.","code":""},{"path":"/reference/block_rms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute RMS of sample blocks — block_rms","text":"","code":"block_rms(X, n, nov = NULL)"},{"path":"/reference/block_rms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute RMS of sample blocks — block_rms","text":"X vector matrix containing samples signal column. n number samples X use analysis block. nov number samples next block overlaps previous block.","code":""},{"path":"/reference/block_rms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute RMS of sample blocks — block_rms","text":"list 2 elements: Y:  vector matrix containing RMS value block. X mxn matrix, Y pxn p number complete n-length blocks nov can made m samples, .e., n+(p-1)*(n-nov) < m t:  time output Y reported, units samples X.  t[1] = 12, value Y[1] corresponds “time” 12 samples X. times Y values reported centers averaging windows.","code":""},{"path":"/reference/block_rms.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute RMS of sample blocks — block_rms","text":"Output sampling rate input sampling rate s v size p. Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. frames, positive pitch angle anti-clockwise rotation around y-axis. descending animal negative pitch angle.","code":""},{"path":"/reference/block_rms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute RMS of sample blocks — block_rms","text":"","code":"X <- matrix(c(1:20), byrow = TRUE, nrow = 4) block_rms(X, n = 2, nov = NULL) #> $Y #>           [,1]      [,2]      [,3]      [,4]      [,5] #> [1,]  4.301163  5.147815  6.041523  6.964194  7.905694 #> [2,] 13.729530 14.713939 15.700318 16.688319 17.677670 #>  #> $t #> [1] 1 3 #>"},{"path":"/reference/body_axes.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the cardinal axes of an animal — body_axes","title":"Generate the cardinal axes of an animal — body_axes","text":"function used generate cardinal axes animal (.e., longitudinal, transverse, ventro-dorsal) accelerometer magnetic field measurements. functions generates approximate orthonormal basis measurement M : () normalizing M unit length, (ii) rotating magnetometer measurement horizontal plane (Mh), (iii) computing cross-product, N, Mh generate third axis, (iv) transposing [Mh,N,] form body axis basis.","code":""},{"path":"/reference/body_axes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the cardinal axes of an animal — body_axes","text":"","code":"body_axes(A, M, sampling_rate = NULL, fc = NULL)"},{"path":"/reference/body_axes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the cardinal axes of an animal — body_axes","text":"acceleration matrix columns [ax ay az], sensor data list. Acceleration can consistent unit, e.g., g $m/s^2$. M magnetometer signal matrix, M=[mx,,mz], sensor data list, consistent unit (e.g., uT Gauss). sampling_rate sampling rate M Hz (optional M sensor data lists) fc (optional) cut-frequency low-pass filter apply M computing axes. filter cut-frequency Hz. filter length 4*fs/fc. Filtering adds group delay. fc specified, filtering  performed.","code":""},{"path":"/reference/body_axes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the cardinal axes of an animal — body_axes","text":"W, list entries x, y, z; nx3 matrix body axes n number rows M . W$x nx3 matrix (length-3 vector M one row) containing X longitudinal (caudo-rostral) axes. W$y nx3 matrix (length-3 vector M one row) containing Y transverse (left-right) axes. W$z nx3 matrix (length-3 vector M one row) containing Z ventro-dorsal axes. W$sampling_rate sampling rate M.","code":""},{"path":"/reference/body_axes.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generate the cardinal axes of an animal — body_axes","text":"Output sampling rate input sampling rate. Irregularly sampled data can used, filtering must applied (fc = NULL). Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. function return animal's cardinal axes tag attached sensor axes aligned animal's axes tag M measurements rotated account orientation tag animal. Otherwise, axes returned function cardinal axes tag, animal.","code":""},{"path":"/reference/body_axes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the cardinal axes of an animal — body_axes","text":"","code":"samplematrix1 <- matrix(c(7, 2, 3, 6, 4, 9), byrow = TRUE, ncol = 3) samplematrix2 <- matrix(c(6, 5, 3, 4, 8, 9), byrow = TRUE, ncol = 3) W <- body_axes(A = samplematrix1, M = samplematrix2, fc = NULL)"},{"path":"/reference/buffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Buffers a signal vector into matrix — buffer","title":"Buffers a signal vector into matrix — buffer","text":"function used buffer signal vector matrix data frames. input nodelay TRUE, signal buffered delay. nodelay FALSE, specifies vector samples precede x[1] overlapping buffer.","code":""},{"path":"/reference/buffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Buffers a signal vector into matrix — buffer","text":"","code":"buffer(x, n, overlap, opt, nodelay = FALSE)"},{"path":"/reference/buffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Buffers a signal vector into matrix — buffer","text":"x signal vector buffered n desired length data segments (rows). overlap desired amount overlap consecutive frames (columns) output matrix opt vector samples specified precede x[1] overlapping buffer nodelay logical statement determine vector buffered without delay. Default FALSE (delay)","code":""},{"path":"/reference/buffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Buffers a signal vector into matrix — buffer","text":"list 3 elements returned nodelay = FALSE: X:  matrix buffered signal vector \"vec\" \"n\" data segments overlap consecutive frames specified \"p\". matrix starts \"opt\" values nodelay FALSE. z:   remainder vector included matrix last column full number rows. opt:  last values, length \"p\", matrix \"X\". nodelay = TRUE, matrix buffered signal vector \"vec\" \"n\" data segments overlap consecutive frames specified \"overlap\". matrix starts \"opt\" values nodelay FALSE.","code":""},{"path":"/reference/buffer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Buffers a signal vector into matrix — buffer","text":"","code":"x <- c(1:10) n <- 3 overlap <- 2 opt <- c(2, 1) list1 <- buffer(x, n, overlap, opt) list2 <- buffer(x, n, overlap, nodelay = TRUE)"},{"path":"/reference/check_AM.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute field intensity of tag acceleration and magnetometer data. — check_AM","title":"Compute field intensity of tag acceleration and magnetometer data. — check_AM","text":"Compute field intensity acceleration magnetometer data,  inclination angle magnetic field.  useful checking quality calibration,  detecting drift, validating mapping  sensor axes tag axes.","code":""},{"path":"/reference/check_AM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute field intensity of tag acceleration and magnetometer data. — check_AM","text":"","code":"check_AM(A, M = NULL, fs = NULL, find_incl = TRUE)"},{"path":"/reference/check_AM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute field intensity of tag acceleration and magnetometer data. — check_AM","text":"accelerometer sensor structure matrix columns [ax ay az]. Acceleration can consistent unit, e.g., g m/s^2. M magnetometer sensor structure matrix, M=[mx,,mz] consistent  unit (e.g., uT Gauss). fs (optional) sampling rate sensor data Hz (samples per second). needed M sensor structures filtering required. find_incl (optional; logical) inclination computed returned? Default TRUE.","code":""},{"path":"/reference/check_AM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute field intensity of tag acceleration and magnetometer data. — check_AM","text":"find_incl false, matrix fstr returned. Otherwise, check_AM returns list elements: fstr,  estimated field intensity M units M.          fstr vector two column matrix. one type data input,          fstr column vector. M input, fstr two columns          field strength 1st column field strength M          2nd column. incl,  estimated field inclination angle (.e., angle respect    horizontal plane) radians. incl column vector. convention, field    vector pointing horizon positive inclination angle.    returned function called M data.","code":""},{"path":"/reference/check_AM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute field intensity of tag acceleration and magnetometer data. — check_AM","text":"sampling rate fstr incl input sampling rate. function automatically low-pass filters data cut-frequency  5 Hz sampling rate greater 10 Hz.  Frame: function assumes [north,east,] navigation frame  [forward,right,] local frame.","code":""},{"path":"/reference/check_AM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute field intensity of tag acceleration and magnetometer data. — check_AM","text":"","code":"AMcheck <- check_AM(   A = matrix(c(-0.3, 0.52, 0.8), nrow = 1),   M = matrix(c(22, -22, 14), nrow = 1),   fs = 1 )"},{"path":"/reference/cline.html","id":null,"dir":"Reference","previous_headings":"","what":"Add colored line segments to a plot — cline","title":"Add colored line segments to a plot — cline","text":"function adds colored line segments existing plot.  line plotted points specified inputs x y, colored according factor input z (one color level z).","code":""},{"path":"/reference/cline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add colored line segments to a plot — cline","text":"","code":"cline(x, y, z, color_vector)"},{"path":"/reference/cline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add colored line segments to a plot — cline","text":"x x positions points plotted y y positions points plotted z factor, length x y. Line segments resulting plot colored according levels z. color_vector list colors use (length match number levels z).","code":""},{"path":"/reference/cline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add colored line segments to a plot — cline","text":"adds colored lines graph","code":""},{"path":"/reference/cline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add colored line segments to a plot — cline","text":"","code":"cline(x=ChickWeight$Time, y=ChickWeight$weight,        z=as.factor(ChickWeight$Diet),        color_vector=c('black', 'grey20',                       'grey50', 'grey70')) #> Error in plot.xy(xy.coords(x, y), type = type, ...): plot.new has not been called yet"},{"path":"/reference/col_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot coloured line(s) in 2 dimensions — col_line","title":"Plot coloured line(s) in 2 dimensions — col_line","text":"function used plot two dimensional lines individual line possessing different color.","code":""},{"path":"/reference/col_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot coloured line(s) in 2 dimensions — col_line","text":"","code":"col_line(x, y, color, ...)"},{"path":"/reference/col_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot coloured line(s) in 2 dimensions — col_line","text":"x vector matrix values display horizontal axis. y vector matrix values display vertical axis. color vector matrix values representing colour draw point. ... Additional inputs plot()","code":""},{"path":"/reference/col_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot coloured line(s) in 2 dimensions — col_line","text":"graph colored line","code":""},{"path":"/reference/col_line.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot coloured line(s) in 2 dimensions — col_line","text":"x, y c must size. x, y, c matrices, one line drawn column. color axis default span range values c, .e., caxis c(min(min(c)), max(max(c))). can changed calling caxis colline.","code":""},{"path":"/reference/col_line3.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot coloured line(s) in 3 dimensions with plot_ly — col_line3","title":"Plot coloured line(s) in 3 dimensions with plot_ly — col_line3","text":"function used plot three dimensional lines segments colored. may just simple use plotly::plot_ly() directly.","code":""},{"path":"/reference/col_line3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot coloured line(s) in 3 dimensions with plot_ly — col_line3","text":"","code":"col_line3(x, y, z = 0, c, ...)"},{"path":"/reference/col_line3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot coloured line(s) in 3 dimensions with plot_ly — col_line3","text":"x name object variable containing data x axis y name object variable containing data y axis z name object variable containing data z axis c name object variable color ... Additional inputs plot_ly()","code":""},{"path":"/reference/col_line3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot coloured line(s) in 3 dimensions with plot_ly — col_line3","text":"plot_ly() graphics object","code":""},{"path":"/reference/col_line3.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot coloured line(s) in 3 dimensions with plot_ly — col_line3","text":"x, y, z c must size vectors. color axis default span range values c, .e., caxis c(min(min(c)), max(max(c))).","code":""},{"path":[]},{"path":"/reference/col_line3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot coloured line(s) in 3 dimensions with plot_ly — col_line3","text":"","code":"col_line3(1:20, 1:20, 1:20, 1:20)  {\"x\":{\"visdat\":{\"15c47446599f\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"15c47446599f\",\"attrs\":{\"15c47446599f\":{\"x\":{},\"y\":{},\"z\":{},\"mode\":\"lines\",\"color\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"x\"},\"yaxis\":{\"title\":\"y\"},\"zaxis\":{\"title\":\"-z\"}},\"hovermode\":\"closest\",\"showlegend\":false,\"legend\":{\"yanchor\":\"top\",\"y\":0.5}},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],\"y\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],\"z\":[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20],\"mode\":\"lines\",\"type\":\"scatter3d\",\"marker\":{\"colorbar\":{\"title\":\"c\",\"ticklen\":2},\"cmin\":1,\"cmax\":20,\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":false,\"color\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],\"line\":{\"colorbar\":{\"title\":\"\",\"ticklen\":2},\"cmin\":1,\"cmax\":20,\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":false,\"color\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]}},\"line\":{\"colorbar\":{\"title\":\"c\",\"ticklen\":2},\"cmin\":1,\"cmax\":20,\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":false,\"color\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]},\"frame\":null},{\"x\":[1,20],\"y\":[1,20],\"type\":\"scatter3d\",\"mode\":\"markers\",\"opacity\":0,\"hoverinfo\":\"none\",\"showlegend\":false,\"marker\":{\"colorbar\":{\"title\":\"c\",\"ticklen\":2,\"len\":0.5,\"lenmode\":\"fraction\",\"y\":1,\"yanchor\":\"top\"},\"cmin\":1,\"cmax\":20,\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":true,\"color\":[1,20],\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"z\":[-20,-1],\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/comp_filt.html","id":null,"dir":"Reference","previous_headings":"","what":"Complementary filtering of a signal. — comp_filt","title":"Complementary filtering of a signal. — comp_filt","text":"function breaks signal X two frequency bands sum signals separate bands equal original signal.","code":""},{"path":"/reference/comp_filt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complementary filtering of a signal. — comp_filt","text":"","code":"comp_filt(X, sampling_rate = NULL, fc)"},{"path":"/reference/comp_filt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complementary filtering of a signal. — comp_filt","text":"X sensor vector matrix (.e., signal column) sensor list (e.g., readtag.R). sampling_rate sampling rate sensor data Hz (samples per second). fc Specifies cut-frequency frequencies complementary filters. Frequencies Hz. one frequency given, X split low- high-frequency component. fc contains one value, X split multiple complementary bands. filter length 4*sampling_rate/fc. Filtering adds group delay.","code":""},{"path":"/reference/comp_filt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complementary filtering of a signal. — comp_filt","text":"list filtered signals. n+1 sections list n length fc. List sections ordered Xf lowest highest frequency. list section contains vector matrix size X, sampling rate X.","code":""},{"path":"/reference/comp_filt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complementary filtering of a signal. — comp_filt","text":"Possible input combinations: comp_filt(X,sampling_rate,fc) X vector matrix, comp_filt(X,fc = fc) X list","code":""},{"path":"/reference/comp_filt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complementary filtering of a signal. — comp_filt","text":"","code":"Xf <- comp_filt(X = beaked_whale$A$data, sampling_rate = beaked_whale$A$sampling_rate, fc = .15) xf <- list(Xf1 = Xf[[1]], Xf2 = Xf[[2]]) plott(xf, beaked_whale$A$sampling_rate)"},{"path":"/reference/crop.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive data cropping tool. — crop","title":"Interactive data cropping tool. — crop","text":"function plots input data # allows user select start end times cropping.","code":""},{"path":"/reference/crop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive data cropping tool. — crop","text":"","code":"crop(X, sampling_rate = NULL, T = NULL, quiet = FALSE)"},{"path":"/reference/crop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive data cropping tool. — crop","text":"X sensor list, vector matrix. X can regularly irregularly sampled data frame unit. sampling_rate sampling rate X Hz. needed X sensor list. X regularly sampled, sampling_rate one number. T vector sampling times X. needed X sensor list X regularly sampled. quiet quiet false, print screen","code":""},{"path":"/reference/crop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive data cropping tool. — crop","text":"list 3 elements: Y:  sensor list, vector matrix containing cropped data segment. input sensor list, output also . output units, frame sampling characteristics input. T:  vector sampling times Y. returned X irregularly sampled X sensor list. X sensor list, sampling times stored list. tcues:  tcues two-element vector containing start end time cue seconds data segment kept, .e., tcues = c(start_time, end_time).","code":""},{"path":"/reference/crop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interactive data cropping tool. — crop","text":"Possible input combinations include: crop(X) X sensor list, crop(X, sampling_rate) X vector matrix.","code":""},{"path":"/reference/crop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive data cropping tool. — crop","text":"","code":"data <- beaked_whale Pc <- crop(data$P, quiet=TRUE)    Ydata <- Pc$data plot(-Ydata)"},{"path":"/reference/crop_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce the time span of a dataset — crop_all","title":"Reduce the time span of a dataset — crop_all","text":"function used reduce time span dataset cropping data falls two time cues.","code":""},{"path":"/reference/crop_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce the time span of a dataset — crop_all","text":"","code":"crop_all(tcues, X)"},{"path":"/reference/crop_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce the time span of a dataset — crop_all","text":"tcues two-element vector containing start end time cue seconds data segment keep, .e., tcues = c(start_time, end_time). X sensor list set sensor lists (e.g., load_nc).","code":""},{"path":"/reference/crop_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce the time span of a dataset — crop_all","text":"sensor list set sensor lists containing cropped data segment. output data units, frame sampling characteristics input. list may many sublists additional sensor structures required match input.","code":""},{"path":"/reference/crop_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reduce the time span of a dataset — crop_all","text":"Possible input combinations: crop_all(X) X sensor list set sensor lists, crop_all(tcues, X, Y, ...) X, Y, ... sensor lists.","code":""},{"path":"/reference/crop_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce the time span of a dataset — crop_all","text":"","code":"d <- find_dives(beaked_whale$P,300)           X <- crop_all(c(d$start[1], d$end[1]), beaked_whale)  #crop all data to 1st dive          plott(X = list(X$P, X$A), r = c(1, 0), panel_labels = c('Depth', 'Acc'))"},{"path":"/reference/crop_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce the time span of data — crop_to","title":"Reduce the time span of data — crop_to","text":"function used reduce time span data cropping data falls two time cues.","code":""},{"path":"/reference/crop_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce the time span of data — crop_to","text":"","code":"crop_to(X, sampling_rate = NULL, tcues, T = NULL)"},{"path":"/reference/crop_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce the time span of data — crop_to","text":"X sensor list, vector, matrix. X can regularly irregularly samples data frame unit. sampling_rate sampling rate X Hz. needed X sensor structure. tcues two-element vector containing start end time cues seconds data segment keep (.e., tcues <- c(start_time, end_time)). T vector sampling times X. needed X sensor list X regularly sampled.","code":""},{"path":"/reference/crop_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce the time span of data — crop_to","text":"Cropped data format X, unless X irregularly sampled sensor list. case, function returns list 2 elements: X:  sensor list, vector matrix containing cropped data segment. input sensor list, output also . output units, frame sampling characteristics input. T:  vector sampling times Y. returned X irregularly sampled X sensor list. (X sensor list, sampling times stored list.)","code":""},{"path":"/reference/crop_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce the time span of data — crop_to","text":"","code":"d <- find_dives(beaked_whale$P,300)           P2 <- crop_to(beaked_whale$P, tcues = c(d$start[1], d$end[1]))  #crop to 1st dive          plott(X = list(P2), r=c(1), panel_labels=c('Depth'))"},{"path":"/reference/csv2struct.html","id":null,"dir":"Reference","previous_headings":"","what":"Read tag metadata from csv — csv2struct","title":"Read tag metadata from csv — csv2struct","text":"Read CSV metadata file convert metadata list. metadata file comma-separated text file (.csv) containing line metadata entry. first comma-separated field line name entry. last field line contains value assigned metadata entry. value can string number always saved string structure - downstream users metadata parse/decode entries.","code":""},{"path":"/reference/csv2struct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read tag metadata from csv — csv2struct","text":"","code":"csv2struct(fname)"},{"path":"/reference/csv2struct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read tag metadata from csv — csv2struct","text":"fname Name text file read. file extension provided, '.csv' added automatically. file located current working directory, fname must include correct relative absolute path.","code":""},{"path":"/reference/csv2struct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read tag metadata from csv — csv2struct","text":"metadata list populated fname (one list element per row file). list elements stored \"character\" class objects (even field contains number, date, etc) - attempt made determine appropriate class item.","code":""},{"path":"/reference/csv2struct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read tag metadata from csv — csv2struct","text":"","code":"hold <- system.file(\"extdata\",\"metadata_example.csv\", package = \"tagtools\", mustWork = TRUE) S <- csv2struct(hold)"},{"path":"/reference/decdc.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce the sampling rate — decdc","title":"Reduce the sampling rate — decdc","text":"function used reduce sampling rate time series integer factor.","code":""},{"path":"/reference/decdc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce the sampling rate — decdc","text":"","code":"decdc(x, df)"},{"path":"/reference/decdc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce the sampling rate — decdc","text":"x data structure, vector matrix containing signal(s) decimated. x matrix, column decimated separately. df decimation factor. output sampling rate input sampling rate divided df. df must integer greater 1.","code":""},{"path":"/reference/decdc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce the sampling rate — decdc","text":"y decimated signal vector matrix. number columns x 1/df rows.","code":""},{"path":"/reference/decdc.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Reduce the sampling rate — decdc","text":"Decimation performed first low-pass filtering x keeping 1 sample every df. symmetric FIR filter length 12*df cutoff frequency 0.4*fs/df used. group delay filter removed. large decimation factors (e.g., df>>50), better perform several decimations lower factors. example decimate 120, use: decdc(decdc(x,10),12).","code":""},{"path":"/reference/decdc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce the sampling rate — decdc","text":"","code":"s <- matrix(sin(2 * pi / 100 * c(0:1000) - 1), ncol = 1) plot(c(1:length(s)), s)   y <- decdc(x = s, df = 4) plot(c(1:length(y)), y)"},{"path":"/reference/decz.html","id":null,"dir":"Reference","previous_headings":"","what":"Decimate sampling rate recursively. — decz","title":"Decimate sampling rate recursively. — decz","text":"Recursive sampling rate decimator. function can run iteratively long data set, e.g., decimate entire recording large read memory.","code":""},{"path":"/reference/decz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decimate sampling rate recursively. — decz","text":"","code":"decz(x, df = NULL, Z = NULL, nf = 12, frbw = 0.8)"},{"path":"/reference/decz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decimate sampling rate recursively. — decz","text":"x vector, matrix, tag data list containing signal(s) decimated. x matrix, column decimated separately. inputs df Z provided, value df stored Z override user-provided df. df decimation factor. output sampling rate input sampling rate divided df. df must integer greater 1. df can also three element vector case: df(1) decimation factor; df(2) number output samples spanned filter (default value 12). larger value makes filter steeper; df(3) fractional bandwidth filter (default value 0.8) relative output Nyquist frequency. df(2) greater 12, df(3) can closer 1. Z 'state' list generated previous call decz. function keeps track filter internal values (.e., memory) call--call. nf number output samples spanned filter (default value 12). larger value makes filter steeper. frbw fractional bandwidth filter (default value 0.8) relative output Nyquist frequency. nf greater 12, frbw can closer 1.","code":""},{"path":"/reference/decz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decimate sampling rate recursively. — decz","text":"list elements: y:  decimated signal vector matrix. number columns x , average, 1/df rows. Z:  state list (internal tracking filter internal values). Contains elements df (decimation factor), nf (used compute filter length), frbw (bandwidth filter relative new Nyquist frequency), h (FIR filter coefficients), n (filter length), z (padded signal used filtering), ov (\"overflow\" samples passed future iterations).","code":""},{"path":"/reference/decz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decimate sampling rate recursively. — decz","text":"first time decz called, use following format: y = decz(x,df). subsequent calls decz contiguous input data : decz(x,Z). final call input data : decz(x = NULL, Z = Z). output y contains segment decimated signal need concatenated. Decimation performed way decdc. group delay filter removed. large decimation factors (e.g., df much greater 50), better perform several nested decimations lower factors.","code":""},{"path":[]},{"path":"/reference/decz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decimate sampling rate recursively. — decz","text":"","code":"plott(list(Accel = beaked_whale$A)) # acceleration data before decimation  a_rows <- nrow(beaked_whale$A$data) a_ind <- data.frame(start = c(1, floor(a_rows / 3), floor(2 * a_rows / 3))) a_ind$end <- c(a_ind$start[2:3] - 1, a_rows) df <- 10 Z <- NULL y <- NULL for (k in 1:nrow(a_ind)) {   decz_out <- decz(     x = beaked_whale$A$data[c(a_ind[k, 1]:a_ind[k, 2]), ],     df = df, Z = Z   )   df <- NULL   Z <- decz_out$Z   y <- rbind(y, decz_out$y) }"},{"path":"/reference/depth2pressure.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert depth to pressure — depth2pressure","title":"Convert depth to pressure — depth2pressure","text":"function used convert depth (meters) pressure Pascals.","code":""},{"path":"/reference/depth2pressure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert depth to pressure — depth2pressure","text":"","code":"depth2pressure(d, latitude)"},{"path":"/reference/depth2pressure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert depth to pressure — depth2pressure","text":"d depth meters latitude latitude degrees","code":""},{"path":"/reference/depth2pressure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert depth to pressure — depth2pressure","text":"pressure Pa","code":""},{"path":"/reference/depth2pressure.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert depth to pressure — depth2pressure","text":"Based Leroy Parthiot (1998) formula. See: http://resource.npl.co.uk/acoustics/techguides/soundseawater/content.html#UNESCO","code":""},{"path":"/reference/depth2pressure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert depth to pressure — depth2pressure","text":"","code":"depth2pressure(1000, 27) #> [1] 10075403"},{"path":"/reference/depth_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the vertical velocity — depth_rate","title":"Estimate the vertical velocity — depth_rate","text":"function used estimate vertical velocity differentiating depth altitude time series. low-pass filter reduces sensor noise amplified differentiation.","code":""},{"path":"/reference/depth_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the vertical velocity — depth_rate","text":"","code":"depth_rate(p, fs, fc, depth)"},{"path":"/reference/depth_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the vertical velocity — depth_rate","text":"p vector depth altitude data, animaltags list object containing depth altitude data. fs (required p vector) sampling rate p Hz. fc (optional) smoothing filter cut-frequency Hz. fc given, default value used 0.2 Hz (5 second time constant). depth (optional) behavior animals. Required dealing animals behave descent ascent.","code":""},{"path":"/reference/depth_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the vertical velocity — depth_rate","text":"v, vertical velocity sampling rate p. v vector dimensions p. unit v depends unit p. example, p meters, v meters/second","code":""},{"path":"/reference/depth_rate.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate the vertical velocity — depth_rate","text":"low-pass filter symmetric FIR length 4fs/fc. group delay filters removed. Usually, function handles data pertaining diving animals, data measured depth beneath water surface. ascending data coming birds alike data, setting depth = FALSE help calculating right vertical velocity.","code":""},{"path":"/reference/depth_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the vertical velocity — depth_rate","text":"","code":"v <- depth_rate(p = beaked_whale$P) plott(list(beaked_whale$P$data, v),   fs = beaked_whale$P$sampling_rate,   r = c(1, 0), panel_labels = c(\"Depth\\n(m)\", \"Vertical Velocity\\n(m/s)\") )"},{"path":"/reference/detect_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect peaks in signal vector data — detect_peaks","title":"Detect peaks in signal vector data — detect_peaks","text":"function detects peaks time series data exceed specified threshold returns peak's start time, end time, maximum peak value, time maximum peak value, threshold level, blanking time.","code":""},{"path":"/reference/detect_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect peaks in signal vector data — detect_peaks","text":"","code":"detect_peaks(   data,   sr,   FUN = NULL,   thresh = NULL,   bktime = NULL,   plot_peaks = NULL,   quiet = FALSE,   ... )"},{"path":"/reference/detect_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect peaks in signal vector data — detect_peaks","text":"data vector (positive values) matrix data used peak detection. data matrix, must specify FUN applied data. sr sampling rate Hz date. fs tagtools functions. used calculate bktime case input bktime missing. FUN function applied data data run peak detector. specify function name (.e. njerk). left blank, data input immediately passed peak detector. thresh threshold level peaks signal detected. Inputs must units signal. input thresh missing/empty, default level 0.99 quantile bktime specified length time (seconds) signal values detected threshold value (moment first peak recedes threshold level moment second peak surpasses threshold level) required value considered separate unique peak. input bktime missing/empty default value blanking time set .80 quantile vector time differences signal values specified threshold. plot_peaks conditional input. input TRUE missing, interactive plot generated, allowing user manipulate thresh bktime values observe changes peak detection. input FALSE, interactive plot generated. Look console help use plot upon running function. quiet quiet true, print screen ... Additional inputs passed FUN","code":""},{"path":"/reference/detect_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect peaks in signal vector data — detect_peaks","text":"data frame containing start times, end times, peak times, peak maxima, thresh, bktime. times presented sampling value.","code":""},{"path":"/reference/detect_peaks.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Detect peaks in signal vector data — detect_peaks","text":"specified description input plot_peaks, interactive plot can generated, allowing user manipulate thresh bktime values observe changes peak detection. plot output given input plot_peaks specified true input left missing/empty.","code":""},{"path":"/reference/detect_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect peaks in signal vector data — detect_peaks","text":"","code":"BW <- beaked_whale detect_peaks(data = BW$A$data, sr = BW$A$sampling_rate,  FUN = njerk, thresh = NULL, bktime = NULL,  plot_peaks = NULL, sampling_rate = BW$A$sampling_rate, quiet=TRUE)   #>    start_time end_time peak_time  peak_max    thresh bktime #> 1         176      177       176 0.6430418 0.5039995  104.8 #> 2         745      752       745 0.5283571 0.5039995  104.8 #> 3        1051     1115      1114 1.4400981 0.5039995  104.8 #> 4        1223     1335      1224 0.7419494 0.5039995  104.8 #> 5        1462     1567      1462 0.7495490 0.5039995  104.8 #> 6        1712     1863      1768 0.7573250 0.5039995  104.8 #> 7        1996     1996      1996 0.6457465 0.5039995  104.8 #> 8        3923     3950      3923 0.5477980 0.5039995  104.8 #> 9        4061     4061      4061 0.5163881 0.5039995  104.8 #> 10       4185     4185      4185 0.5174222 0.5039995  104.8 #> 11       5308     5308      5308 0.5044518 0.5039995  104.8 #> 12       5502     5502      5502 0.5258842 0.5039995  104.8"},{"path":"/reference/dive_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute summary statistics for dives or flights — dive_stats","title":"Compute summary statistics for dives or flights — dive_stats","text":"Given depth/altitude profile series dive/flight start end times, compute summary dive statistics.","code":""},{"path":"/reference/dive_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute summary statistics for dives or flights — dive_stats","text":"","code":"dive_stats(   P,   X = NULL,   dive_cues,   sampling_rate = NULL,   prop = 0.85,   angular = FALSE,   X_name = NULL,   na.rm = TRUE )"},{"path":"/reference/dive_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute summary statistics for dives or flights — dive_stats","text":"P Depth data. vector (one-column matrix), tag sensor data list. X (optional) Another data stream (vector (one-column matrix) tag sensor data list) compute mean variability. angular TRUE, interpreted angular data (example pitch, roll, heading) means variances computed accordingly. unit measure must radians (degrees). Currently, X must regularly sampled. dive_cues two-column data frame matrix dive/flight start times first column dive/flight end times second. May obtained find_dives. Units seconds since start tag recording. sampling_rate (optional ignored P X tag sensor data lists) Sampling rate P (X, X given). omitted, input data must sensor data lists. one value given P X input, assumed sampling rate. P X different sampling rates, input can two elements (first P, second X). prop proportion maximal excursion use defining \"destination\" phase dive flight. example, prop 0.85 (default), destination phase lasts first last time depth/altitude exceeds 0.85 times within-dive maximum. angular X angular data? Defaults FALSE. X_name short name use X variable output data frame. example, X pitch data, use X_name='pitch' get outputs column names like mean_pitch, etc. Defaults 'angle' angular data 'aux' non-angular data. na.rm Logical, default TRUE. TRUE, returned mean values ignore missing values, computing average non-missing observations.","code":""},{"path":"/reference/dive_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute summary statistics for dives or flights — dive_stats","text":"data frame one row dive/flight columns detailed . times seconds, rates units x/sec x units P. max  maximum depth altitude st start time dive (seconds) - input dive_cues et end time dive (seconds) - input dive_cues dur  duration excursion dest_st  start time destination phase seconds since start tag recording (also end time phase) dest_et  end time destination phase seconds since start tag recording (also start phase). dest_dur  duration seconds destination phase to_dur  duration seconds phase from_dur  duration seconds phase mean_angle  angular=TRUE X input, mean angle entire excursion. Values phase also provided columns mean_to_angle, mean_dest_angle, mean_from_angle. angle_var  angular=TRUE X input, angular variance entire excursion. Values phase also provided individually columns to_angle_var, dest_angle_var, from_angle_var. mean_aux  angular=FALSE X input, mean value X entire excursion. Values phase also provided columns mean_to_aux, mean_dest_aux, mean_from_aux. aux_sd  angular=FALSE X input, standard deviation X entire excursion. Values phase also provided individually columns to_aux_sd, dest_aux_sd, from_aux_sd. #'","code":""},{"path":"/reference/dive_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute summary statistics for dives or flights — dive_stats","text":"addition maximum excursion duration, dive_stats divides excursion three phases: \"\" (descent dives, ascent flights), \"\" (ascent dives, descent flights), \"destination\". \"destination\" (bottom dives top flights) phase excursion identified using \"proportion maximum depth/altitude\" method, whereby example bottom phase dive lasts first last time depth exceeds stated proportion maximum depth. Average vertical velocity computed phases using simple method: total depth/altitude change divided total time. angular data variable also supplied (example, pitch, roll heading), circular mean (computed via circ.mean) variance (computed via circ.disp reporting var output) also computed dive phase dive whole.","code":""},{"path":[]},{"path":"/reference/draw_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw time axis on plott plot. — draw_axis","title":"Draw time axis on plott plot. — draw_axis","text":"function called plott add time axis plot created plott. Users unlikely need call function directly.","code":""},{"path":"/reference/draw_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw time axis on plott plot. — draw_axis","text":"","code":"draw_axis(side = 1, x = NULL, date_time, last_panel)"},{"path":"/reference/draw_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw time axis on plott plot. — draw_axis","text":"side See axis. x date-time date object, types objects can converted appropriately. date_time Logical. data plotted date-time (POSIX) time seconds? last_panel Logical. last panel (words, x axis tick labels drawn)?","code":""},{"path":"/reference/draw_axis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw time axis on plott plot. — draw_axis","text":"time axis graph","code":""},{"path":"/reference/dsf.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the dominant stroke frequency — dsf","title":"Estimate the dominant stroke frequency — dsf","text":"function can used estimate dominant stroke frequency triaxial accelerometer data [ax,ay,az].","code":""},{"path":"/reference/dsf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the dominant stroke frequency — dsf","text":"","code":"dsf(A, sampling_rate = NULL, fc = NULL, Nfft = NULL)"},{"path":"/reference/dsf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the dominant stroke frequency — dsf","text":"sensor data list nx3 acceleration matrix columns [ax ay az]. Acceleration can consistent unit, e.g., g m/s^2. sampling_rate sampling rate sensor data Hz (samples per second). fc (optional) cut-frequency Hz low-pass filter apply computing spectra. prevents high frequency transients e.g., foraging, dominating spectra. filter  length 6*sampling_rate/fc. fc specified, defaults 2.5 Hz. fc>sampling_rate/2, filtering operation skipped. Nfft (optional) FFT length therefore frequency resolution. default value power two closest 20*sampling_rate, .e., analysis block length 20 s frequency resolution 0.05 Hz. shorter FFT may required movement behaviour variable. longer FFT may work well propulsion continuous stereotyped.","code":""},{"path":"/reference/dsf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the dominant stroke frequency — dsf","text":"list 2 elements: fpk: dominant stroke frequency (.e., peak frequency sum acceleration power spectra) Hz. Quadratic interpolation used spectral peak improve resolution. q:  quality peak measured peak power divided mean power spectra. dimensionless number large clear spectral peak.","code":""},{"path":"/reference/dsf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate the dominant stroke frequency — dsf","text":"Animals tend produce propulsive movements narrow frequency range. movements cause cyclical changes posture /specific acceleration, measured animal-attached accelerometer. Thus sections accelerometer data largely contain propulsion show spectral peak one axes dominant stroke frequency.","code":""},{"path":"/reference/dsf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate the dominant stroke frequency — dsf","text":"Frame: function makes assumption accelerometer frame. Data frame can used. Data selection: function works best sensor matrix, , covers interval propulsion main activity. complete dive interval running flapping flight. interval length least Nfft/sampling_rate seconds, .e., 20 s default FFT length.","code":""},{"path":"/reference/dsf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the dominant stroke frequency — dsf","text":"","code":"dsf(harbor_seal$A) #> $fpk #> [1] 1.224956 #>  #> $q #> [1] 3.262381 #>"},{"path":"/reference/euler2rotmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a rotation (or direction cosine) matrix — euler2rotmat","title":"Make a rotation (or direction cosine) matrix — euler2rotmat","text":"function used make rotation (direction cosine) matrix sets Euler angles, pitch, roll, heading.","code":""},{"path":"/reference/euler2rotmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a rotation (or direction cosine) matrix — euler2rotmat","text":"","code":"euler2rotmat(p, r, h)"},{"path":"/reference/euler2rotmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a rotation (or direction cosine) matrix — euler2rotmat","text":"p pitch angle radians. r roll angle radians. h heading yaw angle radians.","code":""},{"path":"/reference/euler2rotmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a rotation (or direction cosine) matrix — euler2rotmat","text":"One 3x3 rotation matrices. p, r, h scalars, Q 3x3 matrix, Q = H","code":""},{"path":"/reference/euler2rotmat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a rotation (or direction cosine) matrix — euler2rotmat","text":"","code":"vec1 <- matrix(c(1:10), nrow = 10) vec2 <- matrix(c(11:20), nrow = 10) vec3 <- matrix(c(21:30), nrow = 10) Q <- euler2rotmat(p = vec1, r = vec2, h = vec3)"},{"path":"/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a sub-sample of data — extract","title":"Extract a sub-sample of data — extract","text":"function used extract sub-sample data vector matrix.","code":""},{"path":"/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a sub-sample of data — extract","text":"","code":"extract(x, sampling_rate, tst, ted)"},{"path":"/reference/extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a sub-sample of data — extract","text":"x vector matrix measurements. x matrix, column treated separate measurement vector. sampling_rate sampling rate Hz data x. tst Defines start time seconds interval extracted x. ted Defines end time seconds interval extracted x.","code":""},{"path":"/reference/extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a sub-sample of data — extract","text":"X:  matrix containing sub-sample x. X number columns x. length sub-sample round(sampling_rate*(tend-tstart)) samples.","code":""},{"path":"/reference/extract.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract a sub-sample of data — extract","text":"Output sampling rate input sampling rate. either tst ted beyond length x, non-existing samples replaced NaN X.","code":""},{"path":"/reference/extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a sub-sample of data — extract","text":"","code":"BW <- beaked_whale t <- extract(x = BW$A$data, sampling_rate = BW$A$sampling_rate, tst = 3, ted = 100)"},{"path":"/reference/extract_cues.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract multiple sub-samples of data — extract_cues","title":"Extract multiple sub-samples of data — extract_cues","text":"function used extract multiple sub-samples data vector matrix.","code":""},{"path":"/reference/extract_cues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract multiple sub-samples of data — extract_cues","text":"","code":"extract_cues(x, sampling_rate, cues, len)"},{"path":"/reference/extract_cues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract multiple sub-samples of data — extract_cues","text":"x vector matrix measurements. x matrix, column treated separate measurement vector. sampling_rate sampling rate Hz data x. cues defines start time seconds intervals extracted x. len length interval extract seconds. scalar.","code":""},{"path":"/reference/extract_cues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract multiple sub-samples of data — extract_cues","text":"list 2 elements: X:  matrix containing sub-samples x. x vector, X many columns cues, .e., cue generates column X. x pxm matrix, X qxmxn matrix n size cues q length interval requested, .e., round(sampling_rate*len) samples. cues:  list cues actually used. cues require data outside x rejected.","code":""},{"path":"/reference/extract_cues.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract multiple sub-samples of data — extract_cues","text":"Output sampling rate input sampling rate.","code":""},{"path":"/reference/extract_cues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract multiple sub-samples of data — extract_cues","text":"","code":"BW <- beaked_whale # beaked_whale must be in your working directory list <- extract_cues(x = BW$A$data, sampling_rate = BW$A$sampling_rate, cues = c(6, 40), len = 11)"},{"path":"/reference/find_dives.html","id":null,"dir":"Reference","previous_headings":"","what":"Find time cues for dives — find_dives","title":"Find time cues for dives — find_dives","text":"function used find time cues start end either dives depth record flights altitude record.","code":""},{"path":"/reference/find_dives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find time cues for dives — find_dives","text":"","code":"find_dives(p, mindepth, sampling_rate = NULL, surface = 1, findall = 0)"},{"path":"/reference/find_dives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find time cues for dives — find_dives","text":"p depth altitude time series (sensor data list  vector) meters. mindepth threshold meters recognize dive flight. Dives shallow flights lower mindepth ignored. sampling_rate sampling rate sensor data Hz (samples per second). surface (optional) threshold meters animal presumed reached surface. Default value 1. smaller value can used dive/altitude data accurate need detect shallow dives/flights. findall (optional) TRUE, forces algorithm include incomplete dives start end record. Default FALSE recognizes complete dives.","code":""},{"path":"/reference/find_dives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find time cues for dives — find_dives","text":"T data frame one row dive/flight found. columns T : start (time seconds start dive/flight), end (time seconds start dive/flight), max (maximum depth/altitude reached dive/flight), tmax\t(time seconds animal reaches max depth/altitude).","code":""},{"path":"/reference/find_dives.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find time cues for dives — find_dives","text":"","code":"BW <- beaked_whale T <- find_dives(p = BW$P$data,  sampling_rate = BW$P$sampling_rate,  mindepth = 5, surface = 2,  findall = FALSE)"},{"path":"/reference/fir_nodelay.html","id":null,"dir":"Reference","previous_headings":"","what":"Delay-free filtering — fir_nodelay","title":"Delay-free filtering — fir_nodelay","text":"function used gather delay-free filtering using linear-phase (symmetric) FIR filter followed group delay correction. Delay-free filtering needed relative timing signals important e.g., integrating signals sampled different rates.","code":""},{"path":"/reference/fir_nodelay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delay-free filtering — fir_nodelay","text":"","code":"fir_nodelay(x, n, fc, qual = \"low\", return_coefs = FALSE)"},{"path":"/reference/fir_nodelay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delay-free filtering — fir_nodelay","text":"x signal filtered. can multi-channel signal column, e.g., acceleration matrix. number samples (.e., number rows x) must larger filter length, n. n length symmetric FIR filter use units input samples (.e., samples x). length least 4/fc. longer filter gives steeper cut-. fc filter cut-frequency relative sampling_rate/2=1. single number given, filter low-pass high-pass. fc vector two numbers, filter bandpass filter lower upper cut-frequencies given fc(1) fc(2). bandpass filter, n least 4/fc(1) 4/diff(fc) whichever larger. qual optional qualifier determining filter : \"low\" low-pass (default value fc single number), \"high\" high-pass. Default \"low\". return_coefs Logical. Return filter coefficients instead filtered signal? TRUE, function return FIR filter coefficients instead filtered signal. Default FALSE.","code":""},{"path":"/reference/fir_nodelay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delay-free filtering — fir_nodelay","text":"return_coefs FALSE (default), fir_nodelay() returns filtered signal (size x). return_coefs TRUE, returns vector filter coefficients .","code":""},{"path":"/reference/fir_nodelay.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Delay-free filtering — fir_nodelay","text":"filter generated call fir1: h <- fir1(n, fc, qual). h always odd length filter even n even. needed ensure filter symmetric group delay integer number samples. filter support n samples, .e., uses n samples x compute sample y. input samples used n/2 samples n/2 samples sample number computed. means samples start end output vector y need input samples start x end x. faked reversing first n/2 samples x concatenating start x. trick used end x. result, first last n/2 samples y untrustworthy. initial condition problem true filter FIR filter used makes easy identify precisely samples unreliable.","code":""},{"path":"/reference/fir_nodelay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delay-free filtering — fir_nodelay","text":"","code":"x <- sin(t(2 * pi * 0.05 * (1:100)) +   t(cos(2 * pi * 0.25 * (1:100)))) Y <- fir_nodelay(x = x, n = 30, fc = 0.2, qual = \"low\") plot(c(1:length(x)), x,   type = \"l\", col = \"grey42\",   xlab = \"index\", ylab = \"input x and output y\" ) lines(c(1:length(Y)), Y, lwd = 2)"},{"path":"/reference/fit_tracks.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate track with reference positions — fit_tracks","title":"Integrate track with reference positions — fit_tracks","text":"Simple track integration method merge infrequent accurate positions regularly sampled track absolutely accurate.","code":""},{"path":"/reference/fit_tracks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate track with reference positions — fit_tracks","text":"","code":"fit_tracks(P, T = NULL, D, sampling_rate)"},{"path":"/reference/fit_tracks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate track with reference positions — fit_tracks","text":"P two column matrix data frame containing anchor positions. first column \"northing\" second \"easting\" coordinates. (data frame input, columns two names, position, used present). T vector times corresponding positions P. P data frame column called \"T\" column used. Times seconds since start regularly sampled track. T must number rows P. Times must greater equal 0 less time length regularly sampled track. D two column matrix containing regularly sampled track points. D data frame columns named 'northing' 'easting' used regardless position; otherwise first column northing second easting. two columns contain 'x' 'y' coordinates track points local level frame. Units, axes frame must match P. sampling_rate sampling rate Hz D.","code":""},{"path":"/reference/fit_tracks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrate track with reference positions — fit_tracks","text":"D, data frame 4 columns: \"northing\" \"easting\" along new track, \"current_n\" \"current_e\", track increments needed match tracks. difference two tracks due medium moving, increments can considered estimate current m/s. axes frame input data.","code":""},{"path":"/reference/fix_offset_3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the offset in each axis — fix_offset_3d","title":"Estimate the offset in each axis — fix_offset_3d","text":"function used estimate offset axis triaxial field measurement, e.g., accelerometer magnetometer. useful correcting drift calibration errors sensor.","code":""},{"path":"/reference/fix_offset_3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the offset in each axis — fix_offset_3d","text":"","code":"fix_offset_3d(X)"},{"path":"/reference/fix_offset_3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the offset in each axis — fix_offset_3d","text":"X sensor list matrix containing measurements triaxial field sensor accelerometer magnetometer. X can units frame.","code":""},{"path":"/reference/fix_offset_3d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the offset in each axis — fix_offset_3d","text":"list 2 elements: X:  sensor list matrix containing adjusted triaxial sensor measurements. size sampling rate units input data. input sensor list, output also. G:  calibration list containing one field: G$poly. first column G$poly contains 1 function adjust scale factor X. second column G$poly offset added column X.","code":""},{"path":"/reference/fix_offset_3d.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate the offset in each axis — fix_offset_3d","text":"function usable field sensors. work gyroscope data.","code":""},{"path":"/reference/fix_offset_3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the offset in each axis — fix_offset_3d","text":"","code":"s <- fix_offset_3d(harbor_seal$A)"},{"path":"/reference/fix_pressure.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct a depth or altitude profile — fix_pressure","title":"Correct a depth or altitude profile — fix_pressure","text":"function used correct depth altitude profile offsets caused miscalibration temperature. function finds minima dive/altitude profile consistent surfacing/landing. uses depth/height points fit temperature regression.","code":""},{"path":"/reference/fix_pressure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct a depth or altitude profile — fix_pressure","text":"","code":"fix_pressure(p, t, sampling_rate, maxp = NULL)"},{"path":"/reference/fix_pressure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct a depth or altitude profile — fix_pressure","text":"p sensor list vector depth/altitude meters t sensor list vector temperature degrees Celsius sampling_rate sampling_rate p t Hz. needed p t sensor lists. depth temperature must sampling rate (use `decdc` needed achieve ). maxp maximum depth altitude reading pressure data animal actually surface. rough measurement potential error pressure data. unit meters. Start small value, e.g., 2m rerun fix_pressure larger value still obvious temperature-related errors resulting depth/altitude profile.","code":""},{"path":"/reference/fix_pressure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct a depth or altitude profile — fix_pressure","text":"list 2 elements: p:  sensor list vector corrected depth/altitude measurements sampling rate input data. input sensor list, output also . pc:  list containing pressure offset temperature correction coefficients. fields: pc$tref temperature compensation polynomial. used within function correct pressure follows: p + stats::polyval(pc$tcomp, t - pc$tref).","code":""},{"path":"/reference/fix_pressure.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Correct a depth or altitude profile — fix_pressure","text":"function makes number assumptions depth/altitude data behaviour animals: First, depth data incorrect outlier (negative) values fall well beyond surface. can reduced using median_filter.m calling fix_depth. Second, animal assumed near surface least 2","code":""},{"path":"/reference/get_researcher.html","id":null,"dir":"Reference","previous_headings":"","what":"Find matching researcher in a list of known tag researchers — get_researcher","title":"Find matching researcher in a list of known tag researchers — get_researcher","text":"Find matching researcher list known tag researchers","code":""},{"path":"/reference/get_researcher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find matching researcher in a list of known tag researchers — get_researcher","text":"","code":"get_researcher(initial)"},{"path":"/reference/get_researcher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find matching researcher in a list of known tag researchers — get_researcher","text":"initial two-letter code researcher interest (first letter first name first letter last name)","code":""},{"path":"/reference/get_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Find matching species in a list of marine mammals — get_species","title":"Find matching species in a list of marine mammals — get_species","text":"Find matching species list marine mammals","code":""},{"path":"/reference/get_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find matching species in a list of marine mammals — get_species","text":"","code":"get_species(initial)"},{"path":"/reference/get_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find matching species in a list of marine mammals — get_species","text":"initial two-letter code species interest (first letter Genus first letter species)","code":""},{"path":"/reference/harbor_seal.html","id":null,"dir":"Reference","previous_headings":"","what":"Set of sensor lists for a harbor seal — harbor_seal","title":"Set of sensor lists for a harbor seal — harbor_seal","text":"Data _Phoca vitulina_ tag ID 'hs16_265c'. device used DTAG4 deployed 2016-09-21 07:55:22 Husum, Germany.","code":""},{"path":"/reference/harbor_seal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set of sensor lists for a harbor seal — harbor_seal","text":"","code":"harbor_seal"},{"path":"/reference/harbor_seal.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Set of sensor lists for a harbor seal — harbor_seal","text":"set sensor lists: sensor list contining triaxial acceleration matrix sampled 5 Hz M sensor list containing triaxial magnetometer matrix sampled 5 Hz P sensor list containing pressure (depth) vector sampled 5 Hz POS sensor list containing position matrix columns [sampling time, latitude, longitude]","code":""},{"path":"/reference/hilbert_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the envelope of X using Hilbert transform.\r\n \r\nCompute the envelope of the signal matrix X using the Hilbert transform. \r\nTo avoid long transforms, this function uses the overlap and add method. — hilbert_env","title":"Compute the envelope of X using Hilbert transform.\r\n \r\nCompute the envelope of the signal matrix X using the Hilbert transform. \r\nTo avoid long transforms, this function uses the overlap and add method. — hilbert_env","text":"Compute envelope X using Hilbert transform. Compute envelope signal matrix X using Hilbert transform.  avoid long transforms, function uses overlap add method.","code":""},{"path":"/reference/hilbert_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the envelope of X using Hilbert transform.\r\n \r\nCompute the envelope of the signal matrix X using the Hilbert transform. \r\nTo avoid long transforms, this function uses the overlap and add method. — hilbert_env","text":"","code":"hilbert_env(X, N = 1024)"},{"path":"/reference/hilbert_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the envelope of X using Hilbert transform.\r\n \r\nCompute the envelope of the signal matrix X using the Hilbert transform. \r\nTo avoid long transforms, this function uses the overlap and add method. — hilbert_env","text":"X vector matrix signals. X matrix, column treated separate signal. signals must regularly sampled result correctly interpretable envelope. N (optional) specifies transform length used.  default value 1024 may fine situations.","code":""},{"path":"/reference/hilbert_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the envelope of X using Hilbert transform.\r\n \r\nCompute the envelope of the signal matrix X using the Hilbert transform. \r\nTo avoid long transforms, this function uses the overlap and add method. — hilbert_env","text":"E, envelope X. E size X: number columns  number samples per signal. units X envelope, values >=0.","code":""},{"path":"/reference/hilbert_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the envelope of X using Hilbert transform.\r\n \r\nCompute the envelope of the signal matrix X using the Hilbert transform. \r\nTo avoid long transforms, this function uses the overlap and add method. — hilbert_env","text":"","code":"s <- matrix(sin(0.1 * c(1:10000)), ncol = 1) *  matrix(sin(0.001 * c(1:10000)), ncol = 1) E <- hilbert_env(s) plot(c(1:length(s)), s, col = 'grey34') lines(c(1:length(E)), E, col = 'black')"},{"path":"/reference/hilbert_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the Hilbert transform of a signal — hilbert_transform","title":"Return the Hilbert transform of a signal — hilbert_transform","text":"function used compute Hilbert transform signal. based function HilbertTransform() (defunct) package hht, modified EMD package Donghoh Kim Hee-Seok Oh (http://dasan.sejong.ac.kr/~dhkim/software.emd.html)","code":""},{"path":"/reference/hilbert_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the Hilbert transform of a signal — hilbert_transform","text":"","code":"hilbert_transform(x)"},{"path":"/reference/hilbert_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the Hilbert transform of a signal — hilbert_transform","text":"x signal vector buffered","code":""},{"path":"/reference/hilbert_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the Hilbert transform of a signal — hilbert_transform","text":"\"analytic signal,\" words Hilbert transform input signal x","code":""},{"path":"/reference/hilbert_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the Hilbert transform of a signal — hilbert_transform","text":"","code":"t <- seq(from = 0, by = 1/1024, to = 1) x <- sin(2*pi*60*t) y <- hilbert_transform(x)"},{"path":"/reference/htrack.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple horizontal dead-reckoned track — htrack","title":"Simple horizontal dead-reckoned track — htrack","text":"function used estimate simple horizontal dead-reckoned track (pseudo-track) based speed heading. differs ptrack animals body angle considered. makes appropriate animals always move direction longitudinal axis.","code":""},{"path":"/reference/htrack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple horizontal dead-reckoned track — htrack","text":"","code":"htrack(A, M, s, sampling_rate = NULL, fc = 0.2)"},{"path":"/reference/htrack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple horizontal dead-reckoned track — htrack","text":"nx3 acceleration matrix columns [ax ay az] acceleration sensor list. Acceleration can consistent unit, e.g., g m/s^2. M magnetometer signal matrix, M = [mx,,mz] consistent unit (e.g., uT Gauss) magnetometer sensor list. M must size (measured sampling rate). s forward speed animal m/s. s can single number meaning animal assumed travel constant speed. s can also vector number rows M, e.g., generated ocdr. sampling_rate sampling rate sensor data Hz (samples per second). fc (optional) Specifies cut-frequency low-pass filter apply M computing heading. filter cut-frequency Hz. filter length 4*sampling_rate/fc. Filtering adds group delay. fc empty given, default value 0.2 Hz (.e., 5 second time constant) used.","code":""},{"path":"/reference/htrack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple horizontal dead-reckoned track — htrack","text":"Data frame T containing estimated track local level frame. track defined meters northward eastward movement (termed 'northing' 'easting', .e, columns T northing easting relative animal's position start measurements (defined [0,0]). track sampling rate input data row T defines track coordinates times 0,1/sampling_rate,2/sampling_rate,... relative start time measurements.","code":""},{"path":"/reference/htrack.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Simple horizontal dead-reckoned track — htrack","text":"Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. M must rotated needed match animal's cardinal axes otherwise track meaningful. Unless local declination angle also corrected rotframe, dead-reckoned track use magnetic north rather true north. CAUTION: dead-reckoned tracks usually inaccurate.  useful get idea animals move rather go. animals probably travel exactly direction longitudinal axis. Additionally, measuring precise orientation longitudinal axis non-rigid animal fraught error.  Moreover, net flow medium, animal advected flow addition autonomous movement. swimming animals can lead substantial errors. forward speed assumed respect medium track derived 'track-made-good', .e., geographic movement animal. estimates movement animal respect medium.  numerous sources error use risk!","code":""},{"path":[]},{"path":"/reference/htrack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple horizontal dead-reckoned track — htrack","text":"","code":"bwhtrack <- htrack(A = beaked_whale$A, M = beaked_whale$M, s = 4) plot(bwhtrack$easting, bwhtrack$northing, xlab = \"Easting, m\", ylab = \"Northing, m\")"},{"path":"/reference/image_irreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an image with an irregular grid. — image_irreg","title":"Plot an image with an irregular grid. — image_irreg","text":"function used plot image irregular grid. useful plotting matrix data (.e., sampled data function two parameters) one sampling schemes regularly spaced. image_irreg plots R(,j) coloured patch centered x(), y(j) dimension determined x[] - x[-1] y[] - y[-1].","code":""},{"path":"/reference/image_irreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an image with an irregular grid. — image_irreg","text":"","code":"image_irreg(x, y, R)"},{"path":"/reference/image_irreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an image with an irregular grid. — image_irreg","text":"x vector horizontal axis coordinates value R. y vector vertical axis coordinates value R. R matrix measurements display. values R converted colours current colormap caxis. R must length(x) length(y). Use NaN patch display.","code":""},{"path":"/reference/image_irreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an image with an irregular grid. — image_irreg","text":"image plot irregular grid","code":""},{"path":"/reference/inclination.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the inclination angle — inclination","title":"Estimate the inclination angle — inclination","text":"function used estimate local magnetic field vector inclination angle directly acceleration magnetic field measurements.","code":""},{"path":"/reference/inclination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the inclination angle — inclination","text":"","code":"inclination(A, M, fc = NULL)"},{"path":"/reference/inclination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the inclination angle — inclination","text":"accelerometer data structure signal matrix, = [ax,ay,az] consistent unit (e.g., g m/s2). can frame. M magnetometer data structure signal matrix, M = [mx,,mz] consistent unit (e.g., uT Gauss). M must frame . fc (optional) cut-frequency low-pass filter apply M computing inclination angle. filter cut-frequency respect 1=Nyquist frequency. Filtering adds group delay. fc specified, filtering performed.","code":""},{"path":"/reference/inclination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the inclination angle — inclination","text":"magnetic field inclination angle radians.","code":""},{"path":"/reference/inclination.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate the inclination angle — inclination","text":"Output sampling rate input sampling rate. Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. frames, magnetic field vector positive inclination angle points horizon. frames can used long M frame however interpretation incl differ accordingly.","code":""},{"path":"/reference/inclination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the inclination angle — inclination","text":"","code":"A <- matrix(c(1, -0.5, 0.1, 0.8, -0.2, 0.6, 0.5, -0.9, -0.7),   byrow = TRUE, nrow = 3, ncol = 3 ) M <- matrix(c(1.3, -0.25, 0.16, 0.78, -0.3, 0.5, 0.5, -0.49, -0.6),   byrow = TRUE, nrow = 3, ncol = 3 ) incl <- inclination(A, M)"},{"path":"/reference/interp2length.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate regularly sampled data to increase its sampling rate and match its length to another variable. — interp2length","title":"Interpolate regularly sampled data to increase its sampling rate and match its length to another variable. — interp2length","text":"function used reduce time span data cropping data falls two time cues.","code":""},{"path":"/reference/interp2length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate regularly sampled data to increase its sampling rate and match its length to another variable. — interp2length","text":"","code":"interp2length(X, Z, fs_in = NULL, fs_out = NULL, n_out = NULL)"},{"path":"/reference/interp2length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate regularly sampled data to increase its sampling rate and match its length to another variable. — interp2length","text":"X sensor list, vector, matrix. x contains  matrix, column treated independent signal. Z sensor structure, vector matrix whose sampling rate length matched. fs_in sampling rate Hz data X. needed X sensor structure. fs_out required new sampling rate Hz. needed Z given. n_out optional length output data. n_out given, output data length input data length * fs_out/fs_in.","code":""},{"path":"/reference/interp2length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate regularly sampled data to increase its sampling rate and match its length to another variable. — interp2length","text":"Y sensor structure, vector matrix interpolated data number columns X.","code":""},{"path":"/reference/interp2length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolate regularly sampled data to increase its sampling rate and match its length to another variable. — interp2length","text":"","code":"plott(X = list(harbor_seal$P), fsx = 5)           P_dec <- decdc(harbor_seal$P, 5)          P_interp <- interp2length(X = P_dec, Z = harbor_seal$A)          plott(X = list(P_interp$data), fsx = 1)"},{"path":"/reference/interp_nan.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove NAs from sensor data and return indices of (rows of) filled values — interp_nan","title":"Remove NAs from sensor data and return indices of (rows of) filled values — interp_nan","text":"internal function used htrack","code":""},{"path":"/reference/interp_nan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove NAs from sensor data and return indices of (rows of) filled values — interp_nan","text":"","code":"interp_nan(data)"},{"path":"/reference/interp_nan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove NAs from sensor data and return indices of (rows of) filled values — interp_nan","text":"data data vector matrix","code":""},{"path":"/reference/interp_nan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove NAs from sensor data and return indices of (rows of) filled values — interp_nan","text":"list entries data (input data NAs filled ) k logical vector indicating position (data vector) rows (data matrix) NAs filled . Internal NAs filled via linear interoplation, leading trailing ones filled using first following last preceding good value.","code":""},{"path":"/reference/interp_nan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove NAs from sensor data and return indices of (rows of) filled values — interp_nan","text":"","code":"A <- matrix(c(NA, NA, 3, 4, 5, 6, 7, 8, 9, 10, NA, NA, 13, 14, 15, 16, NA, NA), ncol = 2) result <- interp_nan(A)"},{"path":"/reference/inv_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify invariant axis in triaxial movement measurements. — inv_axis","title":"Identify invariant axis in triaxial movement measurements. — inv_axis","text":"function processes tri-axial movement data (example, accelerometer, magentometer gyroscope) identify one axis varies least, .e., invariant axis.","code":""},{"path":"/reference/inv_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify invariant axis in triaxial movement measurements. — inv_axis","text":"","code":"inv_axis(data)"},{"path":"/reference/inv_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify invariant axis in triaxial movement measurements. — inv_axis","text":"data triaxial sensor measurement axis e.g., accelerometer magnetometer. frame unit matter.","code":""},{"path":"/reference/inv_axis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify invariant axis in triaxial movement measurements. — inv_axis","text":"list two entries: V  3x1 numeric vector defining least varying axis data. vector direction vector magnitude 1 unit-less. vector defined frame , first, second, third entries correspond first, second third columns data matrix, axis orientation conventions preserved. q  proportion movement invariant axis. small number (e.g., less 0.05) implies little movement occurs axis movement largely planar (.e., two-dimensional). fraction much larger 0.05, motion better described three-dimensional. q proportion unitless.","code":""},{"path":"/reference/inv_axis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify invariant axis in triaxial movement measurements. — inv_axis","text":"Rotational linear movement types propulsion largely occur 2 dimensions e.g., body rotation cetacean caudal propulsion occurs around animal's transverse axis. Likewise sychronized wing flaps flight pectoral swimming may generate acceleration longitudinal dorso-ventral axes much less transverse axis. function identifies direction axis moves least movement matrix.","code":""},{"path":"/reference/inv_axis.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Identify invariant axis in triaxial movement measurements. — inv_axis","text":"function returns one invariant axis applies entire input signal important choose relevant sub-sample movement data, , analyse.","code":""},{"path":"/reference/inv_axis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify invariant axis in triaxial movement measurements. — inv_axis","text":"","code":"s <- matrix(sin( 2 * pi * 0.1 * c(1:100)), ncol=1)  A <- s %*% c(0.9, -0.4, 0.3) + s^2 %*% c(0, 0.2, 0.1)  inv_axis_out <- inv_axis(A)"},{"path":"/reference/julian_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert between dates and Julian day numbers. — julian_day","title":"Convert between dates and Julian day numbers. — julian_day","text":"function used convert dates Julian day numbers.  three different input arrangements, returns different output. description different input arrangements, see .","code":""},{"path":"/reference/julian_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert between dates and Julian day numbers. — julian_day","text":"","code":"julian_day(y = NULL, m = NULL, d = NULL)"},{"path":"/reference/julian_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert between dates and Julian day numbers. — julian_day","text":"y single year vector years m single month vector months d single day vector days","code":""},{"path":"/reference/julian_day.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert between dates and Julian day numbers. — julian_day","text":"See description section details return.","code":""},{"path":"/reference/julian_day.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert between dates and Julian day numbers. — julian_day","text":"Possible input combinations:  (n <- julian_day()) returns Julian day number today.  (n = julian_day(y,d)) y single year vector years d single day number vector daynumbers,  returns date vector [year,month,day] year, day pair.  (n = julian_day(y,m,d)) y single year vector years, m single month vector months, d single month day vector month days,  returns Julian day number year, month, day.","code":""},{"path":"/reference/julian_day.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert between dates and Julian day numbers. — julian_day","text":"","code":"julian_day(y = 2016, d = 12, m = 10) #> [1] 286 julian_day(y = 2016, 286) #> [1] \"2016-10-12\""},{"path":"/reference/lalo2llf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert latitude-longitude track points into a local level frame — lalo2llf","title":"Convert latitude-longitude track points into a local level frame — lalo2llf","text":"Convert latitude-longitude track points local level frame","code":""},{"path":"/reference/lalo2llf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert latitude-longitude track points into a local level frame — lalo2llf","text":"","code":"lalo2llf(trk, pt = NULL)"},{"path":"/reference/lalo2llf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert latitude-longitude track points into a local level frame — lalo2llf","text":"trk data frame, two-column matrix, two-element vector  track points c(latitude, longitude) sensor data  structure. pt c(latitude, longitude) centre point local level frame. pt given, first point track used.","code":""},{"path":"/reference/lalo2llf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert latitude-longitude track points into a local level frame — lalo2llf","text":"data frame columns northing easting track points local level frame. Northing easting metres. axes frame true (geographic) north true east.","code":""},{"path":"/reference/lalo2llf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert latitude-longitude track points into a local level frame — lalo2llf","text":"function assumes track surface geoid,  also uses simple spherical model geoid.  accurate conversion Cartesian frame, use spatial mapping packages Matlab/Octave.","code":""},{"path":"/reference/lalo2llf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert latitude-longitude track points into a local level frame — lalo2llf","text":"","code":"coordinates <- matrix(c( -122.4194, 37.7749, -73.9352,  40.7306), nrow = 2, ncol = 2, byrow = TRUE) lalo2llf(coordinates, c(15,19)) #>    northing easting #> 1 -15270044 2015179 #> 2  -9882479 2332425"},{"path":"/reference/load_nc.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a tag dataset from a netCDF file. — load_nc","title":"Load a tag dataset from a netCDF file. — load_nc","text":"function loads tag dataset netCDF file (archival file format supported tagtools package suitable submission online data archives).","code":""},{"path":"/reference/load_nc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a tag dataset from a netCDF file. — load_nc","text":"","code":"load_nc(file, which_vars = NULL)"},{"path":"/reference/load_nc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a tag dataset from a netCDF file. — load_nc","text":"file File name (path, necessary) netCDF file read, quoted character string. which_vars (Optional) list quoted character strings giving exact names variables read . Default read variables present file. parameters read .","code":""},{"path":"/reference/load_nc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a tag dataset from a netCDF file. — load_nc","text":"animaltag object (list) containing sensor metadata structures. item names X names variables NetCDF file (plus \"info\" one), e.g., file contains P, output object X fields X$, X$P X$info (file metadata).","code":""},{"path":"/reference/load_nc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a tag dataset from a netCDF file. — load_nc","text":"","code":"hold <- system.file(\"extdata\",\"beaked_whale.nc\", package = \"tagtools\", mustWork = TRUE) load_nc(hold) #> $A #> $A$data #>                  [,1]          [,2]          [,3] #>    [1,] -0.0905510709 -7.068307e-02  9.957775e-01 #>    [2,]  0.1894828975 -2.138358e-02  1.020548e+00 #>    [3,]  0.4733029008  1.026979e-01  9.025471e-01 #>    [4,]  0.3593535721  7.401373e-02  8.712770e-01 #>    [5,] -0.0779317394 -8.193118e-02  9.551228e-01 #>    [6,] -0.3016069531 -2.120885e-01  9.020090e-01 #>    [7,] -0.2464129478 -1.765319e-01  9.647387e-01 #>    [8,] -0.1591745764 -9.774879e-02  1.044656e+00 #>    [9,] -0.1473190337 -6.694137e-02  9.646837e-01 #>   [10,] -0.0980779305 -2.458237e-02  9.554624e-01 #>   [11,]  0.0095986724 -3.783819e-02  1.051377e+00 #>   [12,]  0.2190675735  2.085935e-02  1.033759e+00 #>   [13,]  0.4075216055  8.376012e-02  8.521667e-01 #>   [14,]  0.2379166037 -6.010238e-04  8.910755e-01 #>   [15,] -0.1608123779  8.299458e-03  1.012814e+00 #>   [16,] -0.3264217973 -2.330410e-02  9.297769e-01 #>   [17,] -0.2913093865 -9.244533e-02  9.603509e-01 #>   [18,] -0.3500491083 -6.118843e-02  9.637005e-01 #>   [19,] -0.2835480273 -8.374819e-02  9.436157e-01 #>   [20,] -0.1294840723 -4.478823e-02  9.952421e-01 #>   [21,] -0.0867461711 -6.946511e-02  9.942092e-01 #>   [22,] -0.0425612964 -7.667614e-02  1.001541e+00 #>   [23,]  0.1336205751 -1.822168e-02  1.034403e+00 #>   [24,]  0.3783641756 -3.295342e-02  9.503804e-01 #>   [25,]  0.3110841811  1.147525e-02  8.499618e-01 #>   [26,] -0.0615753904  2.636712e-02  9.448094e-01 #>   [27,] -0.2755948305  1.003246e-02  1.005949e+00 #>   [28,] -0.2553305626 -7.407499e-03  9.867141e-01 #>   [29,] -0.2804008126 -1.223094e-02  9.534131e-01 #>   [30,] -0.2438736111 -3.233340e-02  9.539954e-01 #>   [31,] -0.0330066793 -4.698473e-02  1.019510e+00 #>   [32,]  0.1362114996  2.342394e-02  1.031231e+00 #>   [33,]  0.3871419132  3.300231e-02  9.417306e-01 #>   [34,]  0.4705815017 -7.027594e-04  8.231512e-01 #>   [35,]  0.1031920388  1.301535e-02  9.299108e-01 #>   [36,] -0.1451035589 -6.931687e-03  1.051377e+00 #>   [37,] -0.2256761938 -8.260423e-02  9.359654e-01 #>   [38,] -0.3161315024 -1.072972e-01  9.119763e-01 #>   [39,] -0.2128027380 -8.321024e-02  1.005787e+00 #>   [40,] -0.0945163071 -5.895269e-02  1.027497e+00 #>   [41,]  0.0136388317 -2.689004e-02  1.006881e+00 #>   [42,]  0.2888557315  3.695114e-02  9.694065e-01 #>   [43,]  0.4573687017  4.977755e-02  8.747854e-01 #>   [44,]  0.1942685694 -3.104811e-02  8.877674e-01 #>   [45,] -0.1297898889 -1.102572e-01  1.039067e+00 #>   [46,] -0.2291790098 -3.448017e-02  9.977547e-01 #>   [47,] -0.3250446320 -3.773632e-02  8.774684e-01 #>   [48,] -0.2405226976 -1.372374e-01  9.608579e-01 #>   [49,] -0.0191084519 -1.375492e-02  1.033126e+00 #>   [50,]  0.1165961623  1.262216e-03  1.041513e+00 #>   [51,]  0.3425871730 -6.390296e-02  9.666331e-01 #>   [52,]  0.4099724591  4.075773e-02  8.486385e-01 #>   [53,]  0.0760061294  2.590955e-02  9.121590e-01 #>   [54,] -0.1822672337 -1.437875e-01  9.924554e-01 #>   [55,] -0.1981642395 -1.491727e-01  1.000472e+00 #>   [56,] -0.2699268460 -1.206132e-02  9.667695e-01 #>   [57,] -0.2738094628  4.028140e-03  9.475896e-01 #>   [58,] -0.0922369510 -2.324547e-02  9.898177e-01 #>   [59,]  0.1007263884 -3.833355e-02  1.029094e+00 #>   [60,]  0.3257743120 -4.914896e-02  9.833272e-01 #>   [61,]  0.4184836745  1.931662e-02  8.876655e-01 #>   [62,]  0.1310918778  4.794877e-02  9.206949e-01 #>   [63,] -0.2267983109  1.979611e-02  9.578922e-01 #>   [64,] -0.3316554725 -3.618469e-03  9.396418e-01 #>   [65,] -0.2740059197 -1.683122e-02  9.804647e-01 #>   [66,] -0.2905399203 -1.728554e-02  9.845927e-01 #>   [67,] -0.3051510453 -4.502603e-03  9.636763e-01 #>   [68,] -0.1773667634 -1.053399e-02  9.645689e-01 #>   [69,] -0.0748959854 -5.552280e-02  9.863405e-01 #>   [70,]  0.0784670860 -3.817529e-02  1.028802e+00 #>   [71,]  0.3425616622 -2.763668e-02  1.011155e+00 #>   [72,]  0.4915361106 -1.009466e-02  8.667591e-01 #>   [73,]  0.2650476396  2.252194e-02  8.238848e-01 #>   [74,] -0.1149062663  1.608997e-02  9.948660e-01 #>   [75,] -0.3072086573 -1.822214e-02  9.906380e-01 #>   [76,] -0.3426406384 -9.235200e-02  8.905236e-01 #>   [77,] -0.2215887606 -9.190936e-02  9.979014e-01 #>   [78,] -0.0315029845 -5.433627e-02  1.051933e+00 #>   [79,]  0.0583698712  3.120027e-03  9.791157e-01 #>   [80,]  0.1146359369  5.888365e-02  9.891672e-01 #>   [81,]  0.3757732213 -2.982137e-02  9.496757e-01 #>   [82,]  0.4438850582 -7.182079e-02  8.737444e-01 #>   [83,]  0.0186160225  2.482437e-03  9.453465e-01 #>   [84,] -0.2456569225 -4.965384e-02  9.682468e-01 #>   [85,] -0.2309775800 -9.994336e-03  9.605742e-01 #>   [86,] -0.3329881430  4.062320e-02  9.507592e-01 #>   [87,] -0.4086807072 -5.763462e-02  9.135399e-01 #>   [88,] -0.2579346299  2.751439e-02  9.833678e-01 #>   [89,] -0.2705861330  5.541954e-02  9.765012e-01 #>   [90,] -0.4169968367 -8.245187e-03  8.864101e-01 #>   [91,] -0.2903558612  5.767995e-02  9.406754e-01 #>   [92,] -0.1523205340  1.046671e-01  1.009912e+00 #>   [93,] -0.1522736251  3.781321e-02  1.007876e+00 #>   [94,] -0.1218742728 -3.899839e-02  9.891947e-01 #>   [95,] -0.0077907396 -7.812453e-03  9.897128e-01 #>   [96,]  0.1619624197 -2.158148e-02  9.937589e-01 #>   [97,]  0.2998063564 -8.802731e-02  9.874128e-01 #>   [98,]  0.4350645244 -1.899699e-02  9.199355e-01 #>   [99,]  0.4378876984  6.522935e-02  8.063729e-01 #>  [100,]  0.0846317783  4.312095e-02  9.311981e-01 #>  [101,] -0.1777317226  4.555944e-02  1.037076e+00 #>  [102,] -0.1339237690  1.671801e-02  9.969929e-01 #>  [103,] -0.2781327069 -3.085543e-02  9.428132e-01 #>  [104,] -0.3912465572 -1.438163e-02  9.084955e-01 #>  [105,] -0.1427930146 -8.794240e-03  1.007207e+00 #>  [106,]  0.0401132964 -8.894428e-02  1.017677e+00 #>  [107,]  0.1646331549 -8.936404e-02  9.800135e-01 #>  [108,]  0.4402516484 -1.132355e-02  9.445049e-01 #>  [109,]  0.4512190819 -4.595235e-03  8.712101e-01 #>  [110,]  0.0271101557 -2.709388e-02  9.110116e-01 #>  [111,] -0.2778779268 -5.839003e-02  9.522681e-01 #>  [112,] -0.2815253139 -8.984634e-02  9.574929e-01 #>  [113,] -0.2367410660 -1.205779e-01  9.845496e-01 #>  [114,] -0.2653358281 -1.038663e-01  9.739538e-01 #>  [115,] -0.2892273068 -3.991473e-02  9.788362e-01 #>  [116,] -0.2063383460 -2.192909e-02  9.891151e-01 #>  [117,] -0.0892452300 -5.435830e-02  9.765955e-01 #>  [118,]  0.0265578777 -5.628390e-02  1.000296e+00 #>  [119,]  0.1432844698 -6.505162e-02  1.004781e+00 #>  [120,]  0.2327534407 -8.624779e-02  9.876252e-01 #>  [121,]  0.4189842045  4.615129e-03  9.507418e-01 #>  [122,]  0.5009309649  7.453819e-02  8.131605e-01 #>  [123,]  0.1463604122  1.565311e-03  8.715411e-01 #>  [124,] -0.2109243423 -6.127850e-02  1.006550e+00 #>  [125,] -0.2483258545 -6.652455e-02  9.909405e-01 #>  [126,] -0.2102726847 -7.397663e-02  9.707606e-01 #>  [127,] -0.3262299597 -8.376923e-02  9.405293e-01 #>  [128,] -0.4026580453 -8.124323e-02  9.325668e-01 #>  [129,] -0.2712750435 -9.413388e-02  9.602478e-01 #>  [130,] -0.2160878479 -6.450053e-02  9.870049e-01 #>  [131,] -0.2595910728 -5.433119e-02  9.752024e-01 #>  [132,] -0.1820872426 -7.376829e-02  9.625987e-01 #>  [133,] -0.0785765871 -4.967728e-02  1.010276e+00 #>  [134,] -0.0507869162 -3.972042e-04  1.013861e+00 #>  [135,]  0.0046390770 -3.665197e-02  9.606897e-01 #>  [136,]  0.1132205129 -7.067738e-02  1.014929e+00 #>  [137,]  0.3514449596  4.693823e-02  1.008914e+00 #>  [138,]  0.4605998397  1.103030e-01  8.374254e-01 #>  [139,]  0.1142383516  7.932488e-04  8.636799e-01 #>  [140,] -0.1710513830 -3.339320e-02  1.021807e+00 #>  [141,] -0.1546720117 -5.719688e-02  1.029327e+00 #>  [142,] -0.2389894426 -8.172535e-02  9.618093e-01 #>  [143,] -0.3056438863 -3.599203e-02  9.118564e-01 #>  [144,] -0.1808400750 -8.834422e-02  9.781541e-01 #>  [145,] -0.1184154451 -6.222605e-02  1.050050e+00 #>  [146,] -0.0677892119  2.661942e-02  1.000315e+00 #>  [147,]  0.1436330527 -6.060658e-02  9.674205e-01 #>  [148,]  0.4182412028 -8.141080e-02  9.326503e-01 #>  [149,]  0.3864734471  3.233870e-02  8.980516e-01 #>  [150,]  0.0030276654  6.071342e-03  9.571755e-01 #>  [151,] -0.2132250816 -5.391946e-02  9.746232e-01 #>  [152,] -0.2065346837 -7.821884e-02  9.640742e-01 #>  [153,] -0.3225225806 -8.681304e-02  9.487820e-01 #>  [154,] -0.3244120479 -5.999997e-02  9.582201e-01 #>  [155,] -0.1923148632 -5.368224e-02  9.688802e-01 #>  [156,] -0.3125935495 -7.767913e-02  9.478266e-01 #>  [157,] -0.3566554785 -4.126820e-02  9.755450e-01 #>  [158,] -0.1558010578  7.309997e-03  1.001176e+00 #>  [159,] -0.0381407402 -3.729952e-02  9.845243e-01 #>  [160,] -0.0160002168 -2.880934e-02  9.674430e-01 #>  [161,]  0.0883610174 -1.502766e-02  9.926309e-01 #>  [162,]  0.3565163612 -2.728855e-02  1.019733e+00 #>  [163,]  0.5128514767  6.321902e-02  8.850504e-01 #>  [164,]  0.2678472102 -1.762663e-03  8.344688e-01 #>  [165,] -0.0956785381 -1.373041e-01  9.884515e-01 #>  [166,] -0.2646863461 -8.700196e-02  9.578223e-01 #>  [167,] -0.4250092804 -1.685025e-02  8.740257e-01 #>  [168,] -0.5001127124 -7.169487e-02  8.826764e-01 #>  [169,] -0.4032016397 -1.225804e-01  9.157010e-01 #>  [170,] -0.2454264313 -1.110715e-01  9.955810e-01 #>  [171,] -0.0919833258 -4.536031e-02  1.020519e+00 #>  [172,]  0.0084284116  1.893117e-02  1.000584e+00 #>  [173,]  0.1418194026 -2.685313e-03  9.686181e-01 #>  [174,]  0.2485099882  6.671418e-03  9.532598e-01 #>  [175,]  0.5703512430  3.371583e-02  8.897592e-01 #>  [176,]  0.5725788474  4.566209e-02  8.127777e-01 #>  [177,] -0.0697492659  3.187887e-02  8.397473e-01 #>  [178,] -0.6651989818  7.048398e-04  6.895025e-01 #>  [179,] -0.8074983954  5.734440e-02  5.942423e-01 #>  [180,] -0.8144943714  1.386141e-01  5.375744e-01 #>  [181,] -0.8782740831  1.082097e-01  4.440260e-01 #>  [182,] -0.8962023258  6.421488e-02  4.126180e-01 #>  [183,] -0.9169169068  3.339002e-02  3.956139e-01 #>  [184,] -0.9209426045 -9.215773e-04  4.108713e-01 #>  [185,] -0.9084010124 -3.565276e-02  4.165221e-01 #>  [186,] -0.9180927873 -5.355570e-02  3.822415e-01 #>  [187,] -0.9171571732 -5.074997e-02  3.870870e-01 #>  [188,] -0.9226958156 -3.966165e-02  3.849423e-01 #>  [189,] -0.9112203717 -3.688039e-02  4.155222e-01 #>  [190,] -0.9204755425 -1.601716e-02  3.920281e-01 #>  [191,] -0.9175531268 -1.052640e-02  4.112257e-01 #>  [192,] -0.9076355100 -1.872626e-02  4.138285e-01 #>  [193,] -0.9173280001 -1.141058e-02  4.017369e-01 #>  [194,] -0.9072933197 -2.499792e-03  4.240119e-01 #>  [195,] -0.9024553895 -4.685306e-03  4.383944e-01 #>  [196,] -0.8837116957 -2.063428e-03  4.589110e-01 #>  [197,] -0.9036636949  6.346439e-03  4.314544e-01 #>  [198,] -0.8908507228  8.449395e-03  4.537580e-01 #>  [199,] -0.9076651931  1.556897e-02  4.168343e-01 #>  [200,] -0.8990438581  1.430966e-02  4.389038e-01 #>  [201,] -0.9100140333  1.760996e-02  4.049183e-01 #>  [202,] -0.9058962464  1.903383e-02  4.261711e-01 #>  [203,] -0.8985044956  1.686809e-02  4.261800e-01 #>  [204,] -0.9163113832  2.151212e-02  4.074236e-01 #>  [205,] -0.8984147310  2.301877e-02  4.313522e-01 #>  [206,] -0.9173663855  2.152056e-02  3.989946e-01 #>  [207,] -0.8999944329  2.517827e-02  4.324565e-01 #>  [208,] -0.9164068103  3.633053e-02  3.910465e-01 #>  [209,] -0.9097945690  3.244714e-02  4.144174e-01 #>  [210,] -0.9068406820  1.354896e-02  4.072261e-01 #>  [211,] -0.9135330319 -2.528380e-03  4.102527e-01 #>  [212,] -0.8998945951 -3.379911e-03  4.202070e-01 #>  [213,] -0.9347115755 -3.501750e-03  3.543942e-01 #>  [214,] -0.9106044173  9.015474e-04  4.210098e-01 #>  [215,] -0.8980435729  5.640065e-03  4.391094e-01 #>  [216,] -0.9208472967 -3.734146e-03  3.939711e-01 #>  [217,] -0.9231685996  1.851691e-02  3.868173e-01 #>  [218,] -0.9251639247  4.682967e-02  3.804491e-01 #>  [219,] -0.9206808805  5.405246e-02  3.882669e-01 #>  [220,] -0.9167988300  5.355845e-02  3.933406e-01 #>  [221,] -0.9234514832  4.887800e-02  3.801784e-01 #>  [222,] -0.9256100655  3.970031e-02  3.762385e-01 #>  [223,] -0.9250761867  3.937750e-02  3.757981e-01 #>  [224,] -0.9246152043  4.941255e-02  3.775516e-01 #>  [225,] -0.9187599421  4.634616e-02  3.912674e-01 #>  [226,] -0.9155694842  3.571766e-02  3.996554e-01 #>  [227,] -0.9157486558  3.279847e-02  3.986253e-01 #>  [228,] -0.9166042209  3.039912e-02  3.959726e-01 #>  [229,] -0.9166665077  2.695434e-02  3.965326e-01 #>  [230,] -0.9152861238  2.131615e-02  3.999742e-01 #>  [231,] -0.9147697091  1.123127e-02  4.018387e-01 #>  [232,] -0.9128037095  9.032707e-04  4.065490e-01 #>  [233,] -0.9097218513 -1.385719e-04  4.126800e-01 #>  [234,] -0.9097443819 -5.458396e-03  4.128381e-01 #>  [235,] -0.9090552926 -1.315076e-02  4.144130e-01 #>  [236,] -0.9097449183 -4.104483e-03  4.121029e-01 #>  [237,] -0.9129524827  5.287895e-03  4.036633e-01 #>  [238,] -0.9148705602  8.116691e-03  3.998005e-01 #>  [239,] -0.9150043726  1.621782e-02  3.982421e-01 #>  [240,] -0.9195486903  2.819788e-02  3.851235e-01 #>  [241,] -0.9259650707  2.920421e-02  3.695996e-01 #>  [242,] -0.9260448813  2.514012e-02  3.696929e-01 #>  [243,] -0.9231160283  2.738263e-02  3.752703e-01 #>  [244,] -0.9233170748  2.759319e-02  3.745393e-01 #>  [245,] -0.9237473607  2.407606e-02  3.731667e-01 #>  [246,] -0.9243280292  3.083428e-02  3.711317e-01 #>  [247,] -0.9249709249  4.239467e-02  3.675263e-01 #>  [248,] -0.9273032546  4.789424e-02  3.604223e-01 #>  [249,] -0.9294847250  4.533669e-02  3.575898e-01 #>  [250,] -0.9267400503  3.341175e-02  3.629627e-01 #>  [251,] -0.9279367328  2.496512e-02  3.608494e-01 #>  [252,] -0.9295263290  2.185031e-02  3.583097e-01 #>  [253,] -0.9290110469  1.693657e-02  3.585309e-01 #>  [254,] -0.9298511744  1.458213e-02  3.573656e-01 #>  [255,] -0.9289637804  7.785663e-03  3.597520e-01 #>  [256,] -0.9276643991 -5.498031e-03  3.636934e-01 #>  [257,] -0.9252846241 -4.888595e-03  3.703900e-01 #>  [258,] -0.9223807454  1.186482e-03  3.780180e-01 #>  [259,] -0.9202565551 -4.204093e-03  3.838000e-01 #>  [260,] -0.9194349647 -1.218213e-02  3.860443e-01 #>  [261,] -0.9187678099 -1.263443e-02  3.877828e-01 #>  [262,] -0.9180216789 -1.508719e-02  3.897817e-01 #>  [263,] -0.9177783728 -2.541292e-02  3.885293e-01 #>  [264,] -0.9191123247 -2.234403e-02  3.855191e-01 #>  [265,] -0.9187604189 -1.429824e-02  3.875825e-01 #>  [266,] -0.9149802327 -2.045889e-02  3.952886e-01 #>  [267,] -0.9133803844 -2.666332e-02  3.992153e-01 #>  [268,] -0.9136843085 -3.560099e-02  3.981995e-01 #>  [269,] -0.9137794971 -4.101085e-02  3.968122e-01 #>  [270,] -0.9147543907 -3.918235e-02  3.944390e-01 #>  [271,] -0.9158410430 -4.254055e-02  3.914254e-01 #>  [272,] -0.9181937575 -3.677059e-02  3.856432e-01 #>  [273,] -0.9210703373 -2.281445e-02  3.827794e-01 #>  [274,] -0.9159615636 -1.406088e-02  3.946166e-01 #>  [275,] -0.9124308228 -8.337103e-03  4.000784e-01 #>  [276,] -0.9156842828 -2.742407e-03  3.928354e-01 #>  [277,] -0.9169504046 -4.245965e-04  3.902423e-01 #>  [278,] -0.9160190821 -5.320461e-03  3.925001e-01 #>  [279,] -0.9161287546 -1.478822e-02  3.913903e-01 #>  [280,] -0.9174310565 -2.266038e-02  3.877062e-01 #>  [281,] -0.9179646969 -2.629782e-02  3.861625e-01 #>  [282,] -0.9188255072 -2.940638e-02  3.840632e-01 #>  [283,] -0.9186580777 -3.163217e-02  3.845873e-01 #>  [284,] -0.9170174599 -3.299252e-02  3.881051e-01 #>  [285,] -0.9160872102 -2.710810e-02  3.889773e-01 #>  [286,] -0.9183783531 -1.462319e-02  3.843450e-01 #>  [287,] -0.9214136004 -1.187267e-02  3.793957e-01 #>  [288,] -0.9191327691 -1.720148e-02  3.848959e-01 #>  [289,] -0.9140713811 -1.433454e-02  3.957853e-01 #>  [290,] -0.9117959738  2.498948e-03  4.002645e-01 #>  [291,] -0.9141520262  1.593931e-02  3.934540e-01 #>  [292,] -0.9190745354  2.274626e-02  3.821353e-01 #>  [293,] -0.9209560156  3.158080e-02  3.772863e-01 #>  [294,] -0.9213014245  3.065621e-02  3.756121e-01 #>  [295,] -0.9223275185  2.034649e-02  3.744071e-01 #>  [296,] -0.9214590192  1.324213e-02  3.768275e-01 #>  [297,] -0.9191293120  8.672171e-03  3.819084e-01 #>  [298,] -0.9184007645  1.048860e-03  3.852066e-01 #>  [299,] -0.9182734489 -9.960853e-03  3.845581e-01 #>  [300,] -0.9197686315 -9.247181e-03  3.796247e-01 #>  [301,] -0.9232055545 -1.909347e-03  3.714041e-01 #>  [302,] -0.9259414673 -1.005968e-02  3.637010e-01 #>  [303,] -0.9281189442 -2.484507e-02  3.582516e-01 #>  [304,] -0.9300682545 -3.113461e-02  3.535938e-01 #>  [305,] -0.9288457632 -1.949751e-02  3.546027e-01 #>  [306,] -0.9297346473  8.492732e-03  3.509594e-01 #>  [307,] -0.9344421029  3.433466e-02  3.384205e-01 #>  [308,] -0.9355763793  5.837807e-02  3.297578e-01 #>  [309,] -0.9367256761  7.960179e-02  3.209921e-01 #>  [310,] -0.9383398890  8.823789e-02  3.137210e-01 #>  [311,] -0.9383221865  9.681476e-02  3.096491e-01 #>  [312,] -0.9394297600  1.037034e-01  3.050206e-01 #>  [313,] -0.9401581287  1.024551e-01  3.037061e-01 #>  [314,] -0.9387087226  1.051220e-01  3.067900e-01 #>  [315,] -0.9376616478  1.061115e-01  3.072715e-01 #>  [316,] -0.9411438704  1.014360e-01  2.992876e-01 #>  [317,] -0.9430375695  9.672201e-02  2.981786e-01 #>  [318,] -0.9385254979  9.053903e-02  3.124971e-01 #>  [319,] -0.9338573217  9.155802e-02  3.257405e-01 #>  [320,] -0.9326734543  9.272864e-02  3.286528e-01 #>  [321,] -0.9352282882  7.845494e-02  3.252757e-01 #>  [322,] -0.9364117980  6.450628e-02  3.261541e-01 #>  [323,] -0.9319086671  7.266087e-02  3.369542e-01 #>  [324,] -0.9296144843  8.112016e-02  3.414358e-01 #>  [325,] -0.9331170321  7.390222e-02  3.352143e-01 #>  [326,] -0.9319311380  7.131593e-02  3.396155e-01 #>  [327,] -0.9269460440  7.316785e-02  3.523798e-01 #>  [328,] -0.9254106879  6.452143e-02  3.590811e-01 #>  [329,] -0.9245423675  5.313353e-02  3.637968e-01 #>  [330,] -0.9219329357  5.024270e-02  3.708931e-01 #>  [331,] -0.9196876287  4.661995e-02  3.768358e-01 #>  [332,] -0.9193505645  4.404594e-02  3.784337e-01 #>  [333,] -0.9206570387  4.191491e-02  3.764135e-01 #>  [334,] -0.9184486866  3.304843e-02  3.807119e-01 #>  [335,] -0.9170433879  3.533518e-02  3.838971e-01 #>  [336,] -0.9191407561  4.574261e-02  3.793986e-01 #>  [337,] -0.9177857637  4.933218e-02  3.808943e-01 #>  [338,] -0.9156087637  5.164235e-02  3.869854e-01 #>  [339,] -0.9141634703  5.148975e-02  3.912815e-01 #>  [340,] -0.9145472050  4.469304e-02  3.904445e-01 #>  [341,] -0.9165754318  3.960929e-02  3.859267e-01 #>  [342,] -0.9157020450  4.436133e-02  3.859444e-01 #>  [343,] -0.9150519967  5.121784e-02  3.869451e-01 #>  [344,] -0.9156868458  5.539837e-02  3.858052e-01 #>  [345,] -0.9142881036  6.547459e-02  3.869715e-01 #>  [346,] -0.9127389193  8.178128e-02  3.883469e-01 #>  [347,] -0.9115151763  9.081706e-02  3.891565e-01 #>  [348,] -0.9112931490  8.738355e-02  3.897114e-01 #>  [349,] -0.9101645947  8.827493e-02  3.922656e-01 #>  [350,] -0.9094253778  9.349705e-02  3.909168e-01 #>  [351,] -0.9129320383  9.848574e-02  3.827718e-01 #>  [352,] -0.9103280306  1.191289e-01  3.861313e-01 #>  [353,] -0.8994733095  1.399026e-01  4.033142e-01 #>  [354,] -0.8924878836  1.614921e-01  4.112616e-01 #>  [355,] -0.8895491362  1.911707e-01  4.064044e-01 #>  [356,] -0.8917362690  1.969040e-01  3.958614e-01 #>  [357,] -0.8972007036  1.830874e-01  3.866256e-01 #>  [358,] -0.9026229978  1.808917e-01  3.740728e-01 #>  [359,] -0.9063576460  1.854403e-01  3.560859e-01 #>  [360,] -0.9169753194  1.861482e-01  3.247659e-01 #>  [361,] -0.9453175664  2.141045e-01  2.615775e-01 #>  [362,] -0.8571345210  1.298766e-01  4.069440e-01 #>  [363,] -0.7803595066 -9.391664e-03  5.922934e-01 #>  [364,] -0.8592690229  3.432312e-02  5.123837e-01 #>  [365,] -0.8956275582  5.240215e-02  4.423419e-01 #>  [366,] -0.8979338408  2.014606e-03  4.269528e-01 #>  [367,] -0.9159856439  2.433604e-04  3.888326e-01 #>  [368,] -0.9282330871  2.121151e-02  3.561634e-01 #>  [369,] -0.9364920855  3.335963e-02  3.339165e-01 #>  [370,] -0.9389659166  4.288498e-02  3.250371e-01 #>  [371,] -0.9368253350  7.477280e-02  3.241985e-01 #>  [372,] -0.9347949624  9.927342e-02  3.210092e-01 #>  [373,] -0.9376876950  1.075029e-01  3.060924e-01 #>  [374,] -0.9451687932  1.158758e-01  2.816160e-01 #>  [375,] -0.9459080696  1.200946e-01  2.779601e-01 #>  [376,] -0.9428125620  1.153693e-01  2.733632e-01 #>  [377,] -0.9610810280  1.138102e-01  2.395869e-01 #>  [378,] -0.9270319939  1.234448e-01  3.188494e-01 #>  [379,] -0.8991904855  1.403851e-01  3.241603e-01 #>  [380,] -0.9464203119  1.585685e-01  2.375442e-01 #>  [381,] -0.9385020137  1.478580e-01  3.004235e-01 #>  [382,] -0.9315934181  1.217888e-01  3.162778e-01 #>  [383,] -0.9437098503  1.195455e-01  2.901637e-01 #>  [384,] -0.9404455423  1.324669e-01  2.886113e-01 #>  [385,] -0.9418533444  1.490065e-01  2.779382e-01 #>  [386,] -0.9422268271  1.552687e-01  2.783849e-01 #>  [387,] -0.9357979298  1.480290e-01  3.031358e-01 #>  [388,] -0.9240581989  1.433435e-01  3.394894e-01 #>  [389,] -0.9178366065  1.446406e-01  3.571362e-01 #>  [390,] -0.9165880084  1.420033e-01  3.631057e-01 #>  [391,] -0.9104915857  1.397634e-01  3.785267e-01 #>  [392,] -0.9074975848  1.398495e-01  3.880941e-01 #>  [393,] -0.9076159596  1.181704e-01  3.946298e-01 #>  [394,] -0.9036798477  8.835349e-02  4.090828e-01 #>  [395,] -0.9029745460  6.632339e-02  4.160881e-01 #>  [396,] -0.9059045315  1.704853e-02  4.108092e-01 #>  [397,] -0.9120728970 -4.517192e-02  3.921696e-01 #>  [398,] -0.9204925895 -8.500373e-02  3.687168e-01 #>  [399,] -0.9201638699 -1.101132e-01  3.636248e-01 #>  [400,] -0.9151499271 -1.399454e-01  3.646661e-01 #>  [401,] -0.9158886671 -1.539037e-01  3.588567e-01 #>  [402,] -0.9155184627 -1.405803e-01  3.666625e-01 #>  [403,] -0.9089971185 -1.248614e-01  3.873306e-01 #>  [404,] -0.9058477283 -1.070243e-01  4.012587e-01 #>  [405,] -0.9023521543 -9.462810e-02  4.133291e-01 #>  [406,] -0.8985696435 -9.558258e-02  4.202296e-01 #>  [407,] -0.8989282250 -9.215088e-02  4.193119e-01 #>  [408,] -0.9020401239 -7.638247e-02  4.150910e-01 #>  [409,] -0.9049094915 -5.936503e-02  4.114849e-01 #>  [410,] -0.9070121646 -4.110745e-02  4.061664e-01 #>  [411,] -0.9152632952 -1.828895e-02  3.899383e-01 #>  [412,] -0.9186326861  1.759940e-03  3.832543e-01 #>  [413,] -0.9174569249  1.860061e-02  3.800616e-01 #>  [414,] -0.9253455400  3.613887e-02  3.600084e-01 #>  [415,] -0.9302335382  5.570311e-02  3.455059e-01 #>  [416,] -0.9299756885  8.138434e-02  3.388537e-01 #>  [417,] -0.9295655489  1.157409e-01  3.321516e-01 #>  [418,] -0.9246073961  1.453703e-01  3.355690e-01 #>  [419,] -0.9206311703  1.575050e-01  3.365554e-01 #>  [420,] -0.9285963774  1.509422e-01  3.111056e-01 #>  [421,] -0.9394832253  1.430215e-01  2.879283e-01 #>  [422,] -0.9345498085  1.452619e-01  3.075411e-01 #>  [423,] -0.9170554876  1.468316e-01  3.527966e-01 #>  [424,] -0.9107308984  1.413710e-01  3.685746e-01 #>  [425,] -0.9181913137  1.411218e-01  3.504556e-01 #>  [426,] -0.9252835512  1.428022e-01  3.295427e-01 #>  [427,] -0.9318180680  1.440600e-01  3.114663e-01 #>  [428,] -0.9341563582  1.432449e-01  3.026576e-01 #>  [429,] -0.9364877939  1.420528e-01  2.965437e-01 #>  [430,] -0.9359487891  1.447730e-01  2.994079e-01 #>  [431,] -0.9317022562  1.408090e-01  3.110229e-01 #>  [432,] -0.9310628772  1.387305e-01  3.158396e-01 #>  [433,] -0.9309104085  1.427668e-01  3.148049e-01 #>  [434,] -0.9293867946  1.533969e-01  3.139621e-01 #>  [435,] -0.9258996248  1.737877e-01  3.128475e-01 #>  [436,] -0.9252592921  1.930838e-01  3.017755e-01 #>  [437,] -0.9264766574  2.164468e-01  2.813111e-01 #>  [438,] -0.9278513193  2.402010e-01  2.572706e-01 #>  [439,] -0.9283190966  2.432405e-01  2.504497e-01 #>  [440,] -0.9249219298  2.380270e-01  2.619032e-01 #>  [441,] -0.9219757318  2.504137e-01  2.690347e-01 #>  [442,] -0.9116441011  2.801659e-01  2.878007e-01 #>  [443,] -0.8935491443  2.909032e-01  3.229377e-01 #>  [444,] -0.8954830170  2.801640e-01  3.195744e-01 #>  [445,] -0.9073344469  2.885592e-01  2.924285e-01 #>  [446,] -0.8972895741  2.966143e-01  3.113285e-01 #>  [447,] -0.8933671117  2.747031e-01  3.291783e-01 #>  [448,] -0.9027653337  2.697066e-01  3.190003e-01 #>  [449,] -0.9018200040  2.626606e-01  3.324733e-01 #>  [450,] -0.8983863592  2.127347e-01  3.669696e-01 #>  [451,] -0.8991927505  1.665218e-01  3.942489e-01 #>  [452,] -0.8947485089  1.074028e-01  4.267778e-01 #>  [453,] -0.8854148984  1.275175e-03  4.566255e-01 #>  [454,] -0.8833911419 -1.087533e-01  4.515072e-01 #>  [455,] -0.8792643547 -1.967470e-01  4.293653e-01 #>  [456,] -0.8724817634 -2.397536e-01  4.179946e-01 #>  [457,] -0.8730973005 -2.362342e-01  4.150961e-01 #>  [458,] -0.8806115389 -2.306243e-01  4.030010e-01 #>  [459,] -0.8870039582 -2.330157e-01  3.894574e-01 #>  [460,] -0.8860382438 -2.318655e-01  3.899466e-01 #>  [461,] -0.8853568435 -2.345574e-01  3.885438e-01 #>  [462,] -0.8873902559 -2.574757e-01  3.712404e-01 #>  [463,] -0.8885609508 -2.789184e-01  3.516524e-01 #>  [464,] -0.8951370120 -2.647237e-01  3.404638e-01 #>  [465,] -0.9038488865 -2.407256e-01  3.414022e-01 #>  [466,] -0.8976062536 -2.452823e-01  3.604069e-01 #>  [467,] -0.8849183917 -2.485546e-01  3.864139e-01 #>  [468,] -0.8822041154 -2.386492e-01  3.983827e-01 #>  [469,] -0.8807134628 -2.409428e-01  4.014342e-01 #>  [470,] -0.8719232082 -2.645675e-01  4.059034e-01 #>  [471,] -0.8576975465 -3.076982e-01  4.111321e-01 #>  [472,] -0.8533299565 -2.419544e-01  4.499231e-01 #>  [473,] -0.8599190712 -2.940084e-02  5.007131e-01 #>  [474,] -0.8529229164  1.708119e-01  4.994504e-01 #>  [475,] -0.8365708590  3.045463e-01  4.581755e-01 #>  [476,] -0.8185248971  4.006606e-01  4.201550e-01 #>  [477,] -0.7924131751  4.609358e-01  4.082923e-01 #>  [478,] -0.7695282698  4.740448e-01  4.291255e-01 #>  [479,] -0.7567641139  4.417462e-01  4.789723e-01 #>  [480,] -0.7442292571  3.875617e-01  5.414791e-01 #>  [481,] -0.7367042899  3.283252e-01  5.902386e-01 #>  [482,] -0.7366902828  2.674370e-01  6.194162e-01 #>  [483,] -0.7391276956  2.177605e-01  6.355426e-01 #>  [484,] -0.7427735329  1.893888e-01  6.413682e-01 #>  [485,] -0.7466768026  1.770155e-01  6.406888e-01 #>  [486,] -0.7530647516  1.725219e-01  6.346086e-01 #>  [487,] -0.7602260709  1.833492e-01  6.227486e-01 #>  [488,] -0.7659522295  2.091849e-01  6.077727e-01 #>  [489,] -0.7699458599  2.187775e-01  5.983537e-01 #>  [490,] -0.7735492587  2.090909e-01  5.958492e-01 #>  [491,] -0.7794697285  2.120950e-01  5.877979e-01 #>  [492,] -0.7880328298  2.239140e-01  5.725157e-01 #>  [493,] -0.7941505313  2.299832e-01  5.609450e-01 #>  [494,] -0.7991926670  2.319724e-01  5.512118e-01 #>  [495,] -0.8068733811  2.355859e-01  5.372829e-01 #>  [496,] -0.8103109002  2.478897e-01  5.296403e-01 #>  [497,] -0.8046108484  2.499333e-01  5.370591e-01 #>  [498,] -0.8068191409  2.372899e-01  5.364808e-01 #>  [499,] -0.8178296685  2.277283e-01  5.263599e-01 #>  [500,] -0.8202725649  2.114614e-01  5.283238e-01 #>  [501,] -0.8165720105  2.026116e-01  5.344719e-01 #>  [502,] -0.8202738166  2.036927e-01  5.283900e-01 #>  [503,] -0.8286810517  2.225923e-01  5.140289e-01 #>  [504,] -0.8182114959  2.830897e-01  5.100484e-01 #>  [505,] -0.7946060300  2.967711e-01  5.404512e-01 #>  [506,] -0.7595630288  2.359131e-01  6.182660e-01 #>  [507,] -0.7008903623  1.546673e-01  7.118804e-01 #>  [508,] -0.6386889219  6.653486e-02  7.806564e-01 #>  [509,] -0.5853216052 -2.231182e-02  8.268741e-01 #>  [510,] -0.5505326986 -1.958681e-01  8.186414e-01 #>  [511,] -0.5640661120 -4.519359e-01  6.957254e-01 #>  [512,] -0.5624380112 -6.302999e-01  5.606238e-01 #>  [513,] -0.5106000304 -7.033906e-01  5.157445e-01 #>  [514,] -0.4593471587 -7.272869e-01  5.229172e-01 #>  [515,] -0.4347669482 -7.067025e-01  5.621095e-01 #>  [516,] -0.4255309403 -6.553562e-01  6.242450e-01 #>  [517,] -0.4219873846 -5.900860e-01  6.819503e-01 #>  [518,] -0.4429749548 -5.097820e-01  7.302629e-01 #>  [519,] -0.4584781229 -4.188635e-01  7.787517e-01 #>  [520,] -0.4754022956 -3.054746e-01  8.188102e-01 #>  [521,] -0.5058096051 -1.807419e-01  8.405401e-01 #>  [522,] -0.5174543858 -6.223032e-02  8.522082e-01 #>  [523,] -0.5336290002  7.814930e-02  8.408340e-01 #>  [524,] -0.5665661693  2.808763e-01  7.737949e-01 #>  [525,] -0.5854635835  4.551408e-01  6.790329e-01 #>  [526,] -0.5752739310  5.380400e-01  6.201373e-01 #>  [527,] -0.5599387288  5.980518e-01  5.758663e-01 #>  [528,] -0.5502398014  6.558766e-01  5.221418e-01 #>  [529,] -0.5335449576  6.963757e-01  4.810704e-01 #>  [530,] -0.5146540403  7.109660e-01  4.785681e-01 #>  [531,] -0.5105022192  6.529420e-01  5.604782e-01 #>  [532,] -0.5157252550  4.576822e-01  7.193362e-01 #>  [533,] -0.5045240521  1.657106e-01  8.444720e-01 #>  [534,] -0.4969446361 -1.251666e-01  8.565115e-01 #>  [535,] -0.4971279800 -3.561856e-01  7.975307e-01 #>  [536,] -0.4654340446 -5.339903e-01  7.084343e-01 #>  [537,] -0.4509184957 -6.500255e-01  6.164129e-01 #>  [538,] -0.4481489956 -6.937498e-01  5.764664e-01 #>  [539,] -0.4038927853 -7.106199e-01  5.825658e-01 #>  [540,] -0.3666429818 -7.167389e-01  6.009355e-01 #>  [541,] -0.3394412398 -6.773823e-01  6.555033e-01 #>  [542,] -0.3191184700 -5.885702e-01  7.338517e-01 #>  [543,] -0.3444013000 -5.402837e-01  7.600220e-01 #>  [544,] -0.3655343056 -4.902700e-01  7.880688e-01 #>  [545,] -0.3558723032 -3.572410e-01  8.581279e-01 #>  [546,] -0.3612990677 -1.873776e-01  9.093649e-01 #>  [547,] -0.3786890507 -2.550700e-02  9.241275e-01 #>  [548,] -0.3930292726  1.206930e-01  9.115322e-01 #>  [549,] -0.4220774472  2.443304e-01  8.684189e-01 #>  [550,] -0.4831581414  3.257598e-01  8.078697e-01 #>  [551,] -0.5150409341  3.673251e-01  7.772191e-01 #>  [552,] -0.4656135738  4.280268e-01  7.847370e-01 #>  [553,] -0.3810956180  5.779032e-01  7.288164e-01 #>  [554,] -0.3670314252  7.638072e-01  5.324709e-01 #>  [555,] -0.3832591176  8.550240e-01  3.871931e-01 #>  [556,] -0.3298823237  8.663541e-01  3.892439e-01 #>  [557,] -0.2962723374  8.400218e-01  4.546720e-01 #>  [558,] -0.2636153996  7.365953e-01  6.243962e-01 #>  [559,] -0.2054608017  5.440276e-01  8.204327e-01 #>  [560,] -0.1812618971  2.902586e-01  9.362930e-01 #>  [561,] -0.2075427771  1.722705e-02  9.676871e-01 #>  [562,] -0.2477934808 -2.777947e-01  9.285633e-01 #>  [563,] -0.2012011260 -5.796950e-01  7.962860e-01 #>  [564,] -0.1237298772 -8.015165e-01  5.959236e-01 #>  [565,] -0.0829023868 -8.775245e-01  4.898644e-01 #>  [566,] -0.0743630379 -8.661958e-01  4.912708e-01 #>  [567,] -0.0381047428 -8.258899e-01  5.640154e-01 #>  [568,]  0.1024011672 -7.002041e-01  7.144636e-01 #>  [569,]  0.1050733030 -4.281773e-01  8.676428e-01 #>  [570,]  0.0434057564 -1.847940e-01  9.785885e-01 #>  [571,]  0.1488734931 -2.213043e-03  9.969313e-01 #>  [572,]  0.1979295164  2.373178e-01  9.525924e-01 #>  [573,]  0.2326174825  4.054591e-01  9.082115e-01 #>  [574,]  0.2681072950  5.217178e-01  8.218044e-01 #>  [575,]  0.1594780087  6.337061e-01  7.477104e-01 #>  [576,]  0.1708091199  6.493312e-01  7.629612e-01 #>  [577,]  0.2149186879  6.749146e-01  7.133203e-01 #>  [578,]  0.1688646227  7.088361e-01  6.937611e-01 #>  [579,]  0.2280348986  5.998951e-01  7.899194e-01 #>  [580,]  0.1733384877  3.907298e-01  8.930430e-01 #>  [581,]  0.0580875576  1.491679e-01  9.773982e-01 #>  [582,]  0.0301580280 -7.932098e-02  9.908594e-01 #>  [583,] -0.0227405783 -2.465145e-01  9.593140e-01 #>  [584,] -0.0878681764 -3.507924e-01  9.266572e-01 #>  [585,] -0.1101849452 -4.265005e-01  8.959097e-01 #>  [586,] -0.1551179588 -4.466462e-01  8.676129e-01 #>  [587,] -0.1956336051 -3.937205e-01  8.878601e-01 #>  [588,] -0.1222726107 -3.024659e-01  9.435902e-01 #>  [589,] -0.1066711619 -1.813231e-01  9.707285e-01 #>  [590,] -0.1373387575 -1.169353e-01  9.837601e-01 #>  [591,] -0.1255232096 -1.407984e-01  9.803637e-01 #>  [592,] -0.1518859416 -1.886524e-01  9.656942e-01 #>  [593,] -0.1486005783 -2.272430e-01  9.644451e-01 #>  [594,] -0.0851898640 -3.148971e-01  9.568264e-01 #>  [595,] -0.1009632051 -5.146191e-01  8.365402e-01 #>  [596,] -0.2108370960 -6.482118e-01  7.253632e-01 #>  [597,] -0.1584960818 -6.432087e-01  7.507408e-01 #>  [598,] -0.1351097226 -6.775910e-01  7.111601e-01 #>  [599,] -0.1482956409 -6.768898e-01  7.155249e-01 #>  [600,] -0.1102957428 -5.903648e-01  7.929089e-01 #>  [601,] -0.0880856067 -5.027220e-01  8.547220e-01 #>  [602,] -0.0863688514 -3.485645e-01  9.177554e-01 #>  [603,] -0.0909754112 -2.026924e-01  9.716371e-01 #>  [604,] -0.0917418078 -8.783768e-02  9.809558e-01 #>  [605,] -0.1141279489  1.175508e-02  9.898021e-01 #>  [606,] -0.1093914285  8.392113e-02  9.840695e-01 #>  [607,] -0.1272408217  1.570495e-01  9.765173e-01 #>  [608,] -0.1070721745  2.143100e-01  9.699983e-01 #>  [609,] -0.1264932454  2.635394e-01  9.530995e-01 #>  [610,] -0.1022048891  2.817120e-01  9.564074e-01 #>  [611,] -0.1090307683  2.927904e-01  9.466304e-01 #>  [612,] -0.1005310416  2.778110e-01  9.557841e-01 #>  [613,] -0.1323607862  2.524036e-01  9.513246e-01 #>  [614,] -0.0950655341  2.041078e-01  9.825169e-01 #>  [615,] -0.1058638617  1.558395e-01  9.756248e-01 #>  [616,] -0.2026963383  1.065505e-01  9.688078e-01 #>  [617,] -0.1680426598  6.876079e-02  9.883796e-01 #>  [618,] -0.1158983782  6.393472e-02  9.948003e-01 #>  [619,] -0.0835213438  4.399777e-02  9.998063e-01 #>  [620,] -0.0753932521  4.737861e-03  9.995635e-01 #>  [621,] -0.0583027788 -4.744383e-02  1.000516e+00 #>  [622,] -0.0387048647 -8.129820e-02  9.943582e-01 #>  [623,] -0.0581452847 -8.320682e-02  9.940091e-01 #>  [624,] -0.0254724044 -5.911208e-02  1.007720e+00 #>  [625,] -0.0729415640  4.213744e-02  9.770151e-01 #>  [626,] -0.1720098406  1.302706e-01  9.746264e-01 #>  [627,] -0.0588209815  6.622357e-02  1.011464e+00 #>  [628,] -0.0328013673  4.374492e-03  9.927397e-01 #>  [629,] -0.1520669460  2.694261e-02  9.767984e-01 #>  [630,] -0.1494460106  9.589726e-02  9.930867e-01 #>  [631,] -0.1332145333  2.841138e-01  9.367689e-01 #>  [632,] -0.2038683891  5.122441e-01  8.280736e-01 #>  [633,] -0.1120229214  6.590251e-01  7.818314e-01 #>  [634,]  0.0271634609  8.038608e-01  6.166570e-01 #>  [635,] -0.0081146862  9.288554e-01  4.097937e-01 #>  [636,]  0.0766180232  9.197107e-01  4.416817e-01 #>  [637,]  0.1878055632  8.662180e-01  5.014041e-01 #>  [638,]  0.1023956761  8.358427e-01  5.194052e-01 #>  [639,]  0.0442506857  7.824721e-01  6.158214e-01 #>  [640,]  0.1299344003  6.634573e-01  7.659267e-01 #>  [641,]  0.1390636116  3.950867e-01  8.905797e-01 #>  [642,]  0.0033456727  1.507260e-01  9.708549e-01 #>  [643,]  0.0378756151 -8.496363e-03  1.015658e+00 #>  [644,]  0.0509976745 -2.682887e-01  9.427333e-01 #>  [645,] -0.0627962202 -4.223972e-01  8.967464e-01 #>  [646,] -0.0309232641 -4.516853e-01  8.924492e-01 #>  [647,] -0.0109900376 -5.182425e-01  8.492104e-01 #>  [648,]  0.0240022652 -5.649665e-01  8.241999e-01 #>  [649,]  0.0393003076 -5.625698e-01  8.147771e-01 #>  [650,]  0.0430058353 -4.927120e-01  8.618223e-01 #>  [651,] -0.0010361895 -3.828380e-01  9.074168e-01 #>  [652,] -0.0378346741 -3.281108e-01  9.411263e-01 #>  [653,] -0.0581118055 -3.143648e-01  9.339901e-01 #>  [654,] -0.0718264431 -2.480988e-01  9.541792e-01 #>  [655,]  0.0030043742 -1.568576e-01  9.887457e-01 #>  [656,]  0.0482049435 -6.694125e-02  9.921185e-01 #>  [657,]  0.0600916259  3.328511e-02  9.925807e-01 #>  [658,]  0.0549660884  1.159608e-01  9.888214e-01 #>  [659,]  0.0485457815  2.088073e-01  9.712510e-01 #>  [660,]  0.0294749551  2.859321e-01  9.550958e-01 #>  [661,]  0.0185654107  3.192473e-01  9.448552e-01 #>  [662,]  0.0124796499  3.554780e-01  9.318790e-01 #>  [663,]  0.0029202895  3.934492e-01  9.175525e-01 #>  [664,] -0.0060230480  3.994035e-01  9.151787e-01 #>  [665,] -0.0134646613  3.776536e-01  9.230987e-01 #>  [666,] -0.0243279617  3.532714e-01  9.312948e-01 #>  [667,] -0.0238988660  3.273652e-01  9.434411e-01 #>  [668,] -0.0185244102  3.043975e-01  9.493659e-01 #>  [669,] -0.0427030288  2.929454e-01  9.514679e-01 #>  [670,] -0.0192304421  2.707696e-01  9.686832e-01 #>  [671,] -0.0475739688  2.358978e-01  9.658324e-01 #>  [672,] -0.0720024630  2.046406e-01  9.763370e-01 #>  [673,] -0.0318579637  1.853776e-01  9.869420e-01 #>  [674,]  0.0019400101  1.458091e-01  9.942169e-01 #>  [675,]  0.0629918799  8.379214e-02  1.005965e+00 #>  [676,]  0.2318427116  3.613993e-02  1.000348e+00 #>  [677,]  0.3542580605  6.254590e-02  9.600675e-01 #>  [678,]  0.2460857332  1.172369e-01  9.469556e-01 #>  [679,]  0.1289965510  1.589336e-01  9.666469e-01 #>  [680,]  0.0890720934  2.395813e-01  9.618497e-01 #>  [681,]  0.0344979167  2.603132e-01  9.607529e-01 #>  [682,]  0.0284893084  2.154143e-01  9.762259e-01 #>  [683,]  0.0753223971  2.267137e-01  9.711661e-01 #>  [684,]  0.0177761279  2.866726e-01  9.415612e-01 #>  [685,] -0.0959381312  4.096917e-01  9.034013e-01 #>  [686,] -0.0469443649  5.914957e-01  8.248169e-01 #>  [687,]  0.0031333216  7.415274e-01  6.754823e-01 #>  [688,] -0.0633674189  7.756768e-01  6.220399e-01 #>  [689,] -0.0051508071  7.415057e-01  6.871847e-01 #>  [690,]  0.1216101721  7.768015e-01  6.453174e-01 #>  [691,]  0.1083166674  8.707844e-01  4.821202e-01 #>  [692,]  0.0966057926  9.079570e-01  4.301060e-01 #>  [693,]  0.1521397233  9.040453e-01  4.231128e-01 #>  [694,]  0.1534205675  8.948296e-01  4.262937e-01 #>  [695,]  0.1801322997  8.616256e-01  4.889424e-01 #>  [696,]  0.1931462437  8.267691e-01  5.408924e-01 #>  [697,]  0.2185226381  7.480542e-01  6.371864e-01 #>  [698,]  0.2185844034  6.534034e-01  7.258921e-01 #>  [699,]  0.2099624574  5.852241e-01  7.849007e-01 #>  [700,]  0.1770578027  5.248063e-01  8.277816e-01 #>  [701,]  0.2019636333  4.556496e-01  8.760387e-01 #>  [702,]  0.1647535414  3.988834e-01  8.897614e-01 #>  [703,]  0.1376542151  3.547111e-01  9.237289e-01 #>  [704,]  0.2649950981  3.274240e-01  9.290576e-01 #>  [705,]  0.2899594605  3.384192e-01  8.993171e-01 #>  [706,]  0.2065081894  3.531076e-01  9.051808e-01 #>  [707,]  0.1700922847  3.610423e-01  9.160965e-01 #>  [708,]  0.1510253698  3.728978e-01  9.137864e-01 #>  [709,]  0.1123619154  3.855091e-01  9.109929e-01 #>  [710,]  0.0867453516  3.917906e-01  9.150872e-01 #>  [711,]  0.1002998427  3.901177e-01  9.140270e-01 #>  [712,]  0.1094656438  3.983550e-01  9.126780e-01 #>  [713,]  0.1274383664  4.070574e-01  9.068958e-01 #>  [714,]  0.0956983417  4.100053e-01  9.023705e-01 #>  [715,]  0.1239902601  3.832447e-01  9.209124e-01 #>  [716,]  0.1102344096  3.762340e-01  9.151643e-01 #>  [717,]  0.1190063953  3.929875e-01  9.185935e-01 #>  [718,]  0.0946772918  4.141196e-01  8.969645e-01 #>  [719,]  0.0816512778  4.217971e-01  9.102390e-01 #>  [720,]  0.0848784149  4.629348e-01  8.782812e-01 #>  [721,]  0.0255178176  4.623497e-01  8.816138e-01 #>  [722,]  0.1176697165  3.527931e-01  9.426671e-01 #>  [723,]  0.1660184264  2.719012e-01  9.497000e-01 #>  [724,]  0.1621486694  2.382409e-01  9.667861e-01 #>  [725,]  0.1086651236  2.730419e-01  9.454456e-01 #>  [726,]  0.0030075801  3.212776e-01  9.361715e-01 #>  [727,]  0.0618934110  2.858734e-01  9.684551e-01 #>  [728,]  0.0682988018  2.734719e-01  9.533707e-01 #>  [729,] -0.0225863885  2.919506e-01  9.528402e-01 #>  [730,] -0.0041695987  2.827204e-01  9.628885e-01 #>  [731,]  0.0091135204  3.284326e-01  9.375544e-01 #>  [732,] -0.0163064692  4.141777e-01  9.185493e-01 #>  [733,] -0.0478203818  5.199063e-01  8.509784e-01 #>  [734,] -0.1464001983  6.376382e-01  7.423446e-01 #>  [735,] -0.1636783481  6.134878e-01  7.815993e-01 #>  [736,] -0.0819118470  4.789933e-01  8.798542e-01 #>  [737,] -0.1022638828  3.921543e-01  9.063373e-01 #>  [738,] -0.1725175232  3.723483e-01  9.101774e-01 #>  [739,] -0.1724030375  3.588181e-01  9.234875e-01 #>  [740,] -0.1734627932  3.401824e-01  9.197573e-01 #>  [741,] -0.2884245515  3.488325e-01  8.697580e-01 #>  [742,] -0.3266122639  3.384677e-01  8.904444e-01 #>  [743,] -0.2794813216  2.219123e-01  9.385696e-01 #>  [744,] -0.2427607924  6.968100e-02  9.624267e-01 #>  [745,] -0.2846724987 -9.784830e-02  8.647847e-01 #>  [746,] -0.6450494528 -3.334419e-01  5.585408e-01 #>  [747,] -0.8266410828 -5.075857e-01  3.151840e-01 #>  [748,] -0.7389752865 -6.929713e-01  5.510893e-02 #>  [749,] -0.5418914557 -9.112170e-01  2.102600e-02 #>  [750,] -0.2690529227 -9.960234e-01  2.163356e-01 #>  [751,] -0.1696359217 -8.983258e-01  4.055971e-01 #>  [752,] -0.2301675230 -5.649101e-01  7.347896e-01 #>  [753,] -0.3282290995 -1.011833e-01  9.354341e-01 #>  [754,] -0.3640329242  2.690453e-01  8.933191e-01 #>  [755,] -0.4161006510  4.462010e-01  7.976461e-01 #>  [756,] -0.4212648571  5.140346e-01  7.574764e-01 #>  [757,] -0.4163803756  5.329000e-01  7.342333e-01 #>  [758,] -0.4437346756  5.297691e-01  7.234298e-01 #>  [759,] -0.4378097653  5.346332e-01  7.156263e-01 #>  [760,] -0.4945803583  5.019531e-01  6.939868e-01 #>  [761,] -0.5693526268  4.274220e-01  6.941069e-01 #>  [762,] -0.6060768962  3.208294e-01  7.201738e-01 #>  [763,] -0.6281011701  2.185628e-01  7.383437e-01 #>  [764,] -0.6888723969  1.743741e-01  6.860614e-01 #>  [765,] -0.7794154882  1.588303e-01  5.991431e-01 #>  [766,] -0.8145216703  1.303288e-01  5.669124e-01 #>  [767,] -0.8119930029  9.101225e-02  5.708132e-01 #>  [768,] -0.8157702684  1.428178e-01  5.549450e-01 #>  [769,] -0.8264498115  3.087020e-01  4.708913e-01 #>  [770,] -0.8213295341  4.379860e-01  3.945414e-01 #>  [771,] -0.7795667648  4.406374e-01  4.409697e-01 #>  [772,] -0.7905324101  3.472561e-01  4.848297e-01 #>  [773,] -0.8315235972  2.694591e-01  4.836063e-01 #>  [774,] -0.8320195675  2.427311e-01  4.884922e-01 #>  [775,] -0.8622596860  2.127867e-01  4.388328e-01 #>  [776,] -0.9111527205  1.716808e-01  3.561301e-01 #>  [777,] -0.9373014569  1.308388e-01  3.077683e-01 #>  [778,] -0.9458539486  6.188937e-02  3.112444e-01 #>  [779,] -0.9390766621 -3.227462e-02  3.338943e-01 #>  [780,] -0.9376209378 -1.296079e-01  3.217333e-01 #>  [781,] -0.9307146668 -2.460843e-01  2.938873e-01 #>  [782,] -0.8884877563 -3.600908e-01  3.072404e-01 #>  [783,] -0.8511875868 -3.967619e-01  3.439541e-01 #>  [784,] -0.8572277427 -3.655896e-01  3.528953e-01 #>  [785,] -0.8800953031 -3.119737e-01  3.503907e-01 #>  [786,] -0.8934363127 -2.610706e-01  3.603277e-01 #>  [787,] -0.8999204636 -2.209021e-01  3.699429e-01 #>  [788,] -0.9070151448 -1.751691e-01  3.738301e-01 #>  [789,] -0.9189842939 -1.362585e-01  3.591964e-01 #>  [790,] -0.9346950054 -1.099446e-01  3.252261e-01 #>  [791,] -0.9492623806 -9.241988e-02  2.887395e-01 #>  [792,] -0.9553863406 -8.423620e-02  2.698765e-01 #>  [793,] -0.9577617645 -7.342552e-02  2.595637e-01 #>  [794,] -0.9636592865 -5.848896e-02  2.453328e-01 #>  [795,] -0.9655019045 -5.513328e-02  2.340290e-01 #>  [796,] -0.9695326090 -5.641230e-02  2.197357e-01 #>  [797,] -0.9706161618 -6.030461e-02  2.233617e-01 #>  [798,] -0.9609169960 -6.672221e-02  2.481205e-01 #>  [799,] -0.9613481760 -6.701129e-02  2.508579e-01 #>  [800,] -0.9640977383 -7.088882e-02  2.430925e-01 #>  [801,] -0.9649684429 -7.324630e-02  2.324429e-01 #>  [802,] -0.9697396755 -7.881039e-02  2.209329e-01 #>  [803,] -0.9632992744 -8.356403e-02  2.382507e-01 #>  [804,] -0.9614256620 -6.894159e-02  2.498263e-01 #>  [805,] -0.9641759396 -5.323563e-02  2.515861e-01 #>  [806,] -0.9605703354 -4.939963e-02  2.563880e-01 #>  [807,] -0.9661484361 -5.135035e-02  2.320381e-01 #>  [808,] -0.9742326736 -6.121023e-02  1.991342e-01 #>  [809,] -0.9749677777 -6.951854e-02  1.891932e-01 #>  [810,] -0.9742380381 -6.460412e-02  1.930441e-01 #>  [811,] -0.9740957022 -6.206805e-02  1.954751e-01 #>  [812,] -0.9746266603 -5.913064e-02  1.953742e-01 #>  [813,] -0.9751614332 -4.729993e-02  1.891989e-01 #>  [814,] -0.9799623489 -3.831128e-02  1.698670e-01 #>  [815,] -0.9820798039 -4.735406e-02  1.729248e-01 #>  [816,] -0.9713011384 -9.104708e-02  2.061177e-01 #>  [817,] -0.9607021213 -1.465975e-01  2.251957e-01 #>  [818,] -0.9549188614 -2.209019e-01  2.126544e-01 #>  [819,] -0.9366019368 -2.966127e-01  2.259372e-01 #>  [820,] -0.9046618342 -3.036260e-01  3.034122e-01 #>  [821,] -0.8928627372 -2.433466e-01  3.798496e-01 #>  [822,] -0.8906364441 -1.105675e-01  4.461532e-01 #>  [823,] -0.8747918010  1.030393e-01  4.802059e-01 #>  [824,] -0.8585288525  3.482040e-01  4.111297e-01 #>  [825,] -0.8006805182  5.263233e-01  3.456816e-01 #>  [826,] -0.7420955896  5.800017e-01  3.557124e-01 #>  [827,] -0.7257274985  5.724908e-01  3.914044e-01 #>  [828,] -0.7248481512  5.214027e-01  4.438639e-01 #>  [829,] -0.7420487404  4.331566e-01  5.116489e-01 #>  [830,] -0.7316610813  3.195463e-01  6.195874e-01 #>  [831,] -0.6748451591  1.132680e-01  7.333760e-01 #>  [832,] -0.6623120308 -1.154241e-01  7.435573e-01 #>  [833,] -0.6884217262 -1.843884e-01  7.107658e-01 #>  [834,] -0.6758391857 -1.031617e-01  7.382479e-01 #>  [835,] -0.6455121040 -4.504524e-05  7.727989e-01 #>  [836,] -0.6551738381  1.084178e-01  7.489102e-01 #>  [837,] -0.6889469624  2.707798e-01  6.751779e-01 #>  [838,] -0.7049329877  3.827347e-01  6.138141e-01 #>  [839,] -0.7026884556  3.309357e-01  6.410241e-01 #>  [840,] -0.6748228073  1.770964e-01  7.176597e-01 #>  [841,] -0.6805716753  5.667762e-02  7.256404e-01 #>  [842,] -0.7250715494  3.370290e-02  6.907961e-01 #>  [843,] -0.7432218790  5.881868e-02  6.633738e-01 #>  [844,] -0.7839541435  9.937161e-02  6.087348e-01 #>  [845,] -0.8159302473  7.492432e-02  5.851416e-01 #>  [846,] -0.8043502569 -2.975288e-02  5.986048e-01 #>  [847,] -0.8036726117 -7.972229e-02  5.953473e-01 #>  [848,] -0.8073045015 -7.267132e-02  5.937179e-01 #>  [849,] -0.8018600345 -7.860399e-02  6.009870e-01 #>  [850,] -0.7984970808 -8.464422e-02  6.026826e-01 #>  [851,] -0.8004837632 -7.089987e-02  6.009279e-01 #>  [852,] -0.8052669764 -5.396596e-02  5.939215e-01 #>  [853,] -0.8246222138 -2.599403e-02  5.633624e-01 #>  [854,] -0.8541445732  8.860448e-03  5.219527e-01 #>  [855,] -0.8645510674  3.040499e-02  5.072921e-01 #>  [856,] -0.8644825816  4.923640e-02  5.029741e-01 #>  [857,] -0.8791868091  5.589902e-02  4.715856e-01 #>  [858,] -0.9012193680  6.456181e-02  4.271529e-01 #>  [859,] -0.9133834839  8.460022e-02  3.940966e-01 #>  [860,] -0.9296512604  9.652807e-02  3.461219e-01 #>  [861,] -0.9474946856  9.641931e-02  2.984123e-01 #>  [862,] -0.9452494979  1.268083e-01  2.949767e-01 #>  [863,] -0.9309482574  2.084601e-01  2.994255e-01 #>  [864,] -0.9180478454  2.902558e-01  2.848554e-01 #>  [865,] -0.8822768927  3.874944e-01  2.977135e-01 #>  [866,] -0.8163732290  4.970666e-01  3.244467e-01 #>  [867,] -0.7633354068  5.753427e-01  3.237025e-01 #>  [868,] -0.7346509695  5.906408e-01  3.480473e-01 #>  [869,] -0.7210355997  5.747435e-01  3.977061e-01 #>  [870,] -0.6881836653  5.921338e-01  4.367486e-01 #>  [871,] -0.6542463899  5.999009e-01  4.735788e-01 #>  [872,] -0.6228885055  6.054443e-01  5.155495e-01 #>  [873,] -0.5569624305  6.226922e-01  5.751357e-01 #>  [874,] -0.4877155721  5.868627e-01  6.623054e-01 #>  [875,] -0.4717605114  4.643539e-01  7.461684e-01 #>  [876,] -0.4895300865  2.987635e-01  8.191186e-01 #>  [877,] -0.4755081236  1.389224e-01  8.686702e-01 #>  [878,] -0.4942068756 -1.455970e-02  8.610950e-01 #>  [879,] -0.5359495878 -9.154278e-02  8.400598e-01 #>  [880,] -0.5500467420 -8.097240e-02  8.390345e-01 #>  [881,] -0.5477687120 -1.289320e-01  8.283190e-01 #>  [882,] -0.5752022266 -2.351393e-01  7.847421e-01 #>  [883,] -0.5895848870 -3.297523e-01  7.490944e-01 #>  [884,] -0.5702027082 -3.775900e-01  7.349418e-01 #>  [885,] -0.5991511941 -3.193680e-01  7.325291e-01 #>  [886,] -0.6515161991 -2.097910e-01  7.266555e-01 #>  [887,] -0.6924206018 -1.264549e-01  7.144303e-01 #>  [888,] -0.6924062967 -6.000949e-02  7.238950e-01 #>  [889,] -0.6986289620  3.934764e-03  7.129395e-01 #>  [890,] -0.7420175672  5.938872e-02  6.658303e-01 #>  [891,] -0.7876719236  1.018028e-01  6.031702e-01 #>  [892,] -0.8342070580  1.098600e-01  5.389745e-01 #>  [893,] -0.8591154218  8.090412e-02  5.027640e-01 #>  [894,] -0.8804098368  4.045228e-02  4.655626e-01 #>  [895,] -0.9104908109 -3.143340e-04  4.073900e-01 #>  [896,] -0.9371875525 -4.232998e-02  3.357106e-01 #>  [897,] -0.9566392303 -7.358918e-02  2.741069e-01 #>  [898,] -0.9612137079 -9.108386e-02  2.530683e-01 #>  [899,] -0.9560683370 -1.054980e-01  2.619043e-01 #>  [900,] -0.9559339285 -1.156668e-01  2.568161e-01 #>  [901,] -0.9640981555 -1.293931e-01  2.301382e-01 #>  [902,] -0.9625074267 -1.592229e-01  2.201949e-01 #>  [903,] -0.9521056414 -2.192932e-01  2.178073e-01 #>  [904,] -0.9355931878 -2.905596e-01  2.244405e-01 #>  [905,] -0.9180071950 -2.962293e-01  2.759453e-01 #>  [906,] -0.9093734026 -2.297964e-01  3.504232e-01 #>  [907,] -0.9029085636 -1.434754e-01  4.088656e-01 #>  [908,] -0.9004990458 -7.374448e-02  4.307223e-01 #>  [909,] -0.9102709889 -3.752139e-02  4.094814e-01 #>  [910,] -0.9302793145 -2.882179e-02  3.686452e-01 #>  [911,] -0.9403719306 -7.093897e-02  3.510934e-01 #>  [912,] -0.9171448946 -1.672051e-01  3.791479e-01 #>  [913,] -0.8835006356 -2.365993e-01  4.209304e-01 #>  [914,] -0.8653419018 -2.534368e-01  4.467703e-01 #>  [915,] -0.8553972244 -2.511957e-01  4.655977e-01 #>  [916,] -0.8465451002 -2.850023e-01  4.690910e-01 #>  [917,] -0.8254735470 -3.778505e-01  4.583737e-01 #>  [918,] -0.7782484889 -4.581567e-01  4.797018e-01 #>  [919,] -0.6982262731 -5.431560e-01  5.154024e-01 #>  [920,] -0.6052141786 -6.104053e-01  5.534699e-01 #>  [921,] -0.5624551773 -5.045747e-01  6.565592e-01 #>  [922,] -0.5775387883 -2.897560e-01  7.580184e-01 #>  [923,] -0.6329088211 -1.331566e-01  7.556503e-01 #>  [924,] -0.7084630728 -4.112504e-02  6.970337e-01 #>  [925,] -0.7688919306  1.422578e-02  6.347744e-01 #>  [926,] -0.8117728233  3.376902e-02  5.846409e-01 #>  [927,] -0.8287288547  2.769452e-02  5.582789e-01 #>  [928,] -0.8530567288  2.876127e-02  5.120177e-01 #>  [929,] -0.8992679119  3.896913e-02  4.261187e-01 #>  [930,] -0.9361484051  4.169392e-02  3.435810e-01 #>  [931,] -0.9469186068  3.828598e-02  3.129232e-01 #>  [932,] -0.9522826672  1.387092e-02  2.934160e-01 #>  [933,] -0.9632270336 -4.249795e-02  2.587540e-01 #>  [934,] -0.9641938806 -1.200744e-01  2.288426e-01 #>  [935,] -0.9660977125 -1.665464e-01  2.115041e-01 #>  [936,] -0.9535461664 -1.881060e-01  2.369627e-01 #>  [937,] -0.9440135360 -1.980330e-01  2.622293e-01 #>  [938,] -0.9415475726 -2.028570e-01  2.838530e-01 #>  [939,] -0.9200190306 -2.284015e-01  3.175965e-01 #>  [940,] -0.9215828180 -2.255341e-01  3.242442e-01 #>  [941,] -0.9184144139 -1.891524e-01  3.589176e-01 #>  [942,] -0.9037237763 -1.647555e-01  3.929717e-01 #>  [943,] -0.9194959402 -1.679040e-01  3.659386e-01 #>  [944,] -0.9217137694 -1.894414e-01  3.567530e-01 #>  [945,] -0.9076827168 -2.013683e-01  3.718691e-01 #>  [946,] -0.9114856720 -2.099728e-01  3.630380e-01 #>  [947,] -0.9080468416 -2.180076e-01  3.660840e-01 #>  [948,] -0.9035394192 -2.054113e-01  3.751214e-01 #>  [949,] -0.9193238020 -1.845245e-01  3.450554e-01 #>  [950,] -0.9393198490 -1.772587e-01  2.938729e-01 #>  [951,] -0.9455018044 -1.665074e-01  2.792663e-01 #>  [952,] -0.9461835623 -1.404445e-01  2.856969e-01 #>  [953,] -0.9531121850 -1.286430e-01  2.746082e-01 #>  [954,] -0.9544739127 -1.244293e-01  2.739582e-01 #>  [955,] -0.9512538314 -1.213964e-01  2.856342e-01 #>  [956,] -0.9471974373 -1.488386e-01  2.926642e-01 #>  [957,] -0.9394527078 -2.030875e-01  3.024037e-01 #>  [958,] -0.9166011810 -2.184954e-01  3.592245e-01 #>  [959,] -0.8844976425 -1.501540e-01  4.461665e-01 #>  [960,] -0.8865608573 -4.928710e-02  4.668845e-01 #>  [961,] -0.8982328773  4.323135e-02  4.493160e-01 #>  [962,] -0.8926881552  1.729150e-01  4.283767e-01 #>  [963,] -0.8807916641  3.005812e-01  3.983209e-01 #>  [964,] -0.8572276831  3.290706e-01  4.171330e-01 #>  [965,] -0.8273606300  3.249652e-01  4.691432e-01 #>  [966,] -0.8061656952  3.371004e-01  5.048680e-01 #>  [967,] -0.7978320718  2.631495e-01  5.467089e-01 #>  [968,] -0.8038433194  1.642741e-01  5.682217e-01 #>  [969,] -0.8124428988  2.255259e-01  5.519793e-01 #>  [970,] -0.7806406617  3.508157e-01  5.408280e-01 #>  [971,] -0.7769054770  4.018114e-01  4.877408e-01 #>  [972,] -0.7553637624  3.991702e-01  5.176181e-01 #>  [973,] -0.7139475346  3.756110e-01  5.805860e-01 #>  [974,] -0.7124674320  3.570925e-01  5.908271e-01 #>  [975,] -0.6787390709  4.042807e-01  6.215566e-01 #>  [976,] -0.5901594162  4.997982e-01  6.406036e-01 #>  [977,] -0.6244059205  5.205412e-01  5.424799e-01 #>  [978,] -0.6270198822  6.080323e-01  5.330121e-01 #>  [979,] -0.2869180143  6.877190e-01  7.516688e-01 #>  [980,] -0.2425333858  3.232554e-01  8.650832e-01 #>  [981,] -0.5054563284  7.898669e-03  8.388212e-01 #>  [982,] -0.6779955626  4.821658e-02  7.135362e-01 #>  [983,] -0.7755995393  1.910955e-02  6.261212e-01 #>  [984,] -0.7857375741 -9.773609e-02  6.193196e-01 #>  [985,] -0.7931231856 -1.737630e-01  5.932013e-01 #>  [986,] -0.7979959846 -1.818665e-01  5.861923e-01 #>  [987,] -0.7944082618 -1.529970e-01  5.940219e-01 #>  [988,] -0.8169130087 -1.890856e-01  5.671631e-01 #>  [989,] -0.7936946154 -3.169680e-01  5.523288e-01 #>  [990,] -0.7478828430 -3.428594e-01  5.784029e-01 #>  [991,] -0.7653861642 -2.449251e-01  5.968189e-01 #>  [992,] -0.7941929102 -1.801434e-01  5.880536e-01 #>  [993,] -0.8354177475 -1.615912e-01  5.150632e-01 #>  [994,] -0.8971877694 -1.331425e-01  4.167362e-01 #>  [995,] -0.9092369676 -9.393111e-02  4.215377e-01 #>  [996,] -0.8739219308 -8.861700e-02  4.929587e-01 #>  [997,] -0.8547481894 -1.098815e-01  5.164303e-01 #>  [998,] -0.8583986759 -1.468421e-01  5.147089e-01 #>  [999,] -0.8223115802 -2.288269e-01  5.386337e-01 #> [1000,] -0.8075994849 -3.200117e-01  4.953068e-01 #> [1001,] -0.8420622945 -3.703768e-01  4.157014e-01 #> [1002,] -0.8348929882 -3.926193e-01  4.140808e-01 #> [1003,] -0.8192986846 -4.090674e-01  4.233855e-01 #> [1004,] -0.8096809387 -4.124107e-01  4.424827e-01 #> [1005,] -0.7802718878 -3.853818e-01  5.037689e-01 #> [1006,] -0.7744697332 -3.369514e-01  5.438976e-01 #> [1007,] -0.7918851376 -2.816024e-01  5.476538e-01 #> [1008,] -0.8161647916 -2.308212e-01  5.407915e-01 #> [1009,] -0.8189789057 -1.888597e-01  5.607105e-01 #> [1010,] -0.7863188386 -1.809516e-01  6.200643e-01 #> [1011,] -0.7261641622 -3.114013e-01  6.377122e-01 #> [1012,] -0.6941454411 -4.557366e-01  5.791974e-01 #> [1013,] -0.7373886704 -4.627975e-01  4.853602e-01 #> [1014,] -0.8143625259 -4.201522e-01  3.885942e-01 #> [1015,] -0.8301206827 -3.651364e-01  4.212250e-01 #> [1016,] -0.8220452666 -3.014920e-01  4.896825e-01 #> [1017,] -0.8397334814 -2.366076e-01  4.995641e-01 #> [1018,] -0.8416937590 -1.974440e-01  5.111418e-01 #> [1019,] -0.8450277448 -1.672284e-01  5.148971e-01 #> [1020,] -0.8525448442 -1.255481e-01  5.135482e-01 #> [1021,] -0.8639057279 -6.981981e-02  5.071298e-01 #> [1022,] -0.8711618781  3.318264e-02  4.979889e-01 #> [1023,] -0.8708177805  1.355730e-01  4.960336e-01 #> [1024,] -0.8519148231  1.130868e-01  5.323328e-01 #> [1025,] -0.8191722035 -8.540787e-03  5.756704e-01 #> [1026,] -0.8486432433 -9.090243e-02  5.092471e-01 #> [1027,] -0.9264856577 -1.414189e-01  3.392189e-01 #> [1028,] -0.9508898258 -2.071818e-01  2.562424e-01 #> [1029,] -0.9261974096 -2.573938e-01  2.960343e-01 #> [1030,] -0.9034802914 -2.800419e-01  3.384530e-01 #> [1031,] -0.8905933499 -2.885340e-01  3.615710e-01 #> [1032,] -0.8894892335 -2.794313e-01  3.680825e-01 #> [1033,] -0.8970073462 -2.839976e-01  3.779099e-01 #> [1034,] -0.8450194001 -3.248066e-01  4.568110e-01 #> [1035,] -0.7931266427 -3.364862e-01  5.102384e-01 #> [1036,] -0.8269647360 -2.807320e-01  5.111168e-01 #> [1037,] -0.7957729697 -2.043016e-01  5.962808e-01 #> [1038,] -0.7258462906 -1.615756e-01  6.901588e-01 #> [1039,] -0.6732746363 -1.680216e-01  7.460601e-01 #> [1040,] -0.5623784065 -1.601988e-01  8.277459e-01 #> [1041,] -0.4235725105 -1.033057e-01  9.330267e-01 #> [1042,] -0.1199788824 -3.440716e-02  1.024674e+00 #> [1043,]  0.2989811599  3.008971e-02  9.888552e-01 #> [1044,]  0.6331689358  7.953648e-02  8.093029e-01 #> [1045,]  0.8409073949  1.175452e-01  5.649268e-01 #> [1046,]  0.9702451229  1.472649e-01  2.171125e-01 #> [1047,]  1.0535695553  1.903739e-01 -5.714944e-02 #> [1048,]  1.0217711926  1.789978e-01  2.697995e-02 #> [1049,]  1.0090825558  8.814614e-02  8.839238e-02 #> [1050,]  0.9840143919  1.168055e-01  1.704745e-01 #> [1051,]  0.7839871645  3.995225e-01  4.433967e-01 #> [1052,]  0.3804941177  7.954681e-01  1.016843e-01 #> [1053,] -0.1815999299  7.532879e-01 -5.958694e-01 #> [1054,] -0.6926891804  4.254828e-01 -4.983086e-01 #> [1055,] -0.8892381787  3.474177e-01  3.585646e-02 #> [1056,] -0.8703136444  3.248550e-01  2.666200e-01 #> [1057,] -0.8950827122  2.806117e-01  6.300670e-02 #> [1058,] -0.9593092203  2.608628e-01 -2.037765e-01 #> [1059,] -0.9619770646  2.761250e-01  9.762787e-02 #> [1060,] -0.6558271646  3.206177e-01  6.953278e-01 #> [1061,] -0.0405258052  3.545522e-01  9.396297e-01 #> [1062,]  0.4757499397  3.731253e-01  8.196162e-01 #> [1063,]  0.7471523285  2.703277e-01  6.441780e-01 #> [1064,]  0.8769980669 -2.464030e-03  4.930975e-01 #> [1065,]  0.9521081448 -2.912272e-01  3.336607e-01 #> [1066,]  0.8146953583 -4.117988e-01  4.333035e-01 #> [1067,]  0.6417788267 -2.054094e-01  7.019823e-01 #> [1068,]  0.7706491351  6.931642e-02  6.667446e-01 #> [1069,]  0.8938689232  5.418356e-02  4.960307e-01 #> [1070,]  0.9647662044 -3.620285e-02  3.143364e-01 #> [1071,]  0.9941083193 -1.147652e-01  2.116235e-01 #> [1072,]  0.9651800394 -6.847240e-02  2.271917e-01 #> [1073,]  0.9953925014  5.158738e-02  1.069641e-01 #> [1074,]  0.9974916577  5.138565e-02 -2.120004e-02 #> [1075,]  0.9660650492  4.477916e-02 -1.595841e-01 #> [1076,]  0.9041969180  4.645673e-02 -3.395330e-01 #> [1077,]  0.8092249036  5.320897e-02 -6.004362e-01 #> [1078,]  0.5087492466 -2.855799e-01 -8.831298e-01 #> [1079,]  0.0191243775 -7.524589e-01 -2.544827e-01 #> [1080,] -0.0819850937 -4.908242e-01  8.104454e-01 #> [1081,]  0.3490782082 -7.550480e-02  9.517785e-01 #> [1082,]  0.7780309916  3.890933e-02  6.566492e-01 #> [1083,]  0.9211820364  1.266037e-01  4.886873e-01 #> [1084,]  0.9702156782  7.516231e-02  2.785967e-01 #> [1085,]  1.0156387091  3.656732e-02  1.094462e-01 #> [1086,]  0.9803545475  1.293948e-01  1.142528e-02 #> [1087,]  0.9223935604  1.875788e-01 -2.405082e-01 #> [1088,]  0.8085298538  2.029430e-01 -5.399041e-01 #> [1089,]  0.6260831356  1.146685e-01 -7.505242e-01 #> [1090,]  0.3373609483  2.360825e-02 -9.302881e-01 #> [1091,] -0.0601349697  3.275153e-01 -8.488449e-01 #> [1092,] -0.3494798839  7.506224e-01 -4.601381e-01 #> [1093,] -0.5064338446  7.602028e-01 -2.562113e-01 #> [1094,] -0.6523596644  6.234226e-01 -1.244979e-01 #> [1095,] -0.7439472675  5.907760e-01 -1.481879e-01 #> [1096,] -0.8006591201  4.677487e-01 -3.694692e-01 #> [1097,] -0.8439273834  3.420893e-01 -3.492966e-01 #> [1098,] -0.9134303331  1.993564e-01 -2.630913e-01 #> [1099,] -1.0671510696  1.954899e-01  3.914594e-02 #> [1100,] -0.6555926204  1.317766e-01  7.532181e-01 #> [1101,] -0.1943609565 -5.364174e-01  3.466264e-01 #> [1102,] -0.6177154183 -3.126727e-01 -5.765051e-01 #> [1103,] -0.8591791987  5.809299e-01 -9.761659e-02 #> [1104,] -0.6995948553  5.395471e-01  4.521214e-01 #> [1105,] -0.7726373076  3.199980e-01  4.526288e-01 #> [1106,] -0.7879818082  3.985035e-01  5.928676e-01 #> [1107,] -0.4351940453  3.063472e-02  7.553017e-01 #> [1108,] -0.5762283206 -3.430459e-01  5.121555e-01 #> [1109,] -1.0072715282 -4.292381e-02  3.233867e-01 #> [1110,] -0.8420571089  2.326985e-01  5.806649e-01 #> [1111,] -0.3343144655  2.480548e-02  9.297402e-01 #> [1112,] -0.3647727966 -5.573782e-01  4.122559e-01 #> [1113,] -0.7003653646  3.260396e-01 -5.968288e-01 #> [1114,] -0.0861443281  1.210408e+00 -1.069095e-01 #> [1115,]  0.5079194903  3.290347e-01  8.647653e-01 #> [1116,]  0.3843019307 -2.201029e-01  9.064443e-01 #> [1117,]  0.4020174146 -2.143312e-01  8.364252e-01 #> [1118,]  0.5670374632 -1.903261e-01  8.138397e-01 #> [1119,]  0.7132704854 -1.885583e-01  6.824517e-01 #> [1120,]  0.8201529384 -2.524685e-01  5.279443e-01 #> [1121,]  0.8754394650 -2.000809e-01  4.550088e-01 #> [1122,]  0.8817594647 -8.246469e-02  4.853355e-01 #> [1123,]  0.8246932030 -8.009755e-03  5.632181e-01 #> [1124,]  0.7548661828  2.343688e-02  6.512052e-01 #> [1125,]  0.7205760479  1.980705e-02  6.893200e-01 #> [1126,]  0.7044040561 -1.102249e-03  6.885123e-01 #> [1127,]  0.7876016498 -7.377476e-02  6.277687e-01 #> [1128,]  0.8437663317  3.007765e-02  5.576548e-01 #> [1129,]  0.7497744560  3.160419e-01  5.843734e-01 #> [1130,]  0.7955730557  3.960505e-01  4.972817e-01 #> [1131,]  0.8928382993  4.392581e-01  2.138746e-01 #> [1132,]  0.8685377240  5.350458e-01 -3.567884e-02 #> [1133,]  0.8670684695  5.073184e-01 -6.229343e-02 #> [1134,]  0.9047174454  4.339929e-01  6.176943e-02 #> [1135,]  0.9058868885  3.677932e-01  2.184411e-01 #> [1136,]  0.9116460681  2.671123e-01  3.265532e-01 #> [1137,]  0.8966603875  1.986544e-01  3.961874e-01 #> [1138,]  0.8794548512  1.869070e-01  4.520045e-01 #> [1139,]  0.9573646188  1.455957e-01  3.246946e-01 #> [1140,]  0.9731123447  1.763624e-01  2.302036e-01 #> [1141,]  0.9502265453  2.049354e-01  2.750938e-01 #> [1142,]  0.9979118109  1.477782e-01  2.002684e-01 #> [1143,]  1.0021290779  1.730312e-01  1.662877e-01 #> [1144,]  0.9957438111  1.833115e-01  1.555155e-01 #> [1145,]  0.9816555381  1.551169e-01  1.670866e-01 #> [1146,]  0.9775193334  1.550619e-01  2.106507e-01 #> [1147,]  0.9611479044  1.493346e-01  2.416494e-01 #> [1148,]  0.9665083885  1.241646e-01  2.583060e-01 #> [1149,]  0.9814899564  1.102772e-01  2.161352e-01 #> [1150,]  0.9440519214  1.127015e-01  2.877028e-01 #> [1151,]  0.9701358080  9.609877e-02  2.568244e-01 #> [1152,]  0.9769961238  1.078808e-01  1.858259e-01 #> [1153,]  0.9687536955  1.203919e-01  2.087030e-01 #> [1154,]  0.9914512038  1.223614e-01  1.822480e-01 #> [1155,]  0.9441139698  1.545701e-01  2.744932e-01 #> [1156,]  0.9506697059  1.607604e-01  3.377823e-01 #> [1157,]  0.9470061064  1.673653e-01  3.216345e-01 #> [1158,]  0.9172660708  1.832488e-01  3.792547e-01 #> [1159,]  0.9458093047  1.819472e-01  3.272479e-01 #> [1160,]  0.9131072760  2.104528e-01  3.495885e-01 #> [1161,]  0.9410955310  2.281334e-01  3.213330e-01 #> [1162,]  0.9243595004  2.530976e-01  3.036208e-01 #> [1163,]  0.9133858681  2.593137e-01  3.526758e-01 #> [1164,]  0.9191238880  2.593894e-01  3.230521e-01 #> [1165,]  0.9034823775  2.786810e-01  3.501188e-01 #> [1166,]  0.9201011658  2.828992e-01  3.192875e-01 #> [1167,]  0.8971315622  2.831547e-01  3.496986e-01 #> [1168,]  0.9120809436  2.661971e-01  3.562277e-01 #> [1169,]  0.8909608126  2.557310e-01  3.755295e-01 #> [1170,]  0.9238554239  2.328234e-01  3.624870e-01 #> [1171,]  0.9061630964  2.109490e-01  3.675288e-01 #> [1172,]  0.8572525978  2.046903e-01  4.773569e-01 #> [1173,]  0.8105022907  2.217249e-01  5.312318e-01 #> [1174,]  0.7853372097  2.300662e-01  5.844952e-01 #> [1175,]  0.8042644262  2.503471e-01  5.583460e-01 #> [1176,]  0.6989507079  2.883399e-01  6.275420e-01 #> [1177,]  0.6546604633  3.013079e-01  6.976511e-01 #> [1178,]  0.6315752864  3.366520e-01  6.939681e-01 #> [1179,]  0.6456807852  3.667522e-01  6.797633e-01 #> [1180,]  0.6609705687  4.317141e-01  6.235703e-01 #> [1181,]  0.6857747436  4.429205e-01  6.023206e-01 #> [1182,]  0.6818925142  4.105705e-01  6.056349e-01 #> [1183,]  0.6811248660  3.457018e-01  6.426041e-01 #> [1184,]  0.8255524635  2.459839e-01  5.698183e-01 #> [1185,]  0.7892800570  2.290154e-01  5.597653e-01 #> [1186,]  0.6962364912  1.879553e-01  6.873234e-01 #> [1187,]  0.7225393653  1.367207e-01  6.924546e-01 #> [1188,]  0.6478649378  1.424561e-01  7.296729e-01 #> [1189,]  0.6170978546  9.258788e-02  7.840388e-01 #> [1190,]  0.5543737411  3.631300e-02  8.121814e-01 #> [1191,]  0.5528377295 -3.175113e-02  8.390957e-01 #> [1192,]  0.5798256397 -1.908286e-01  7.866084e-01 #> [1193,]  0.5503499508 -3.075055e-01  7.731125e-01 #> [1194,]  0.5282412767 -3.287280e-01  7.711623e-01 #> [1195,]  0.5009016395 -2.926945e-01  8.055180e-01 #> [1196,]  0.5884387493 -3.728289e-01  7.253600e-01 #> [1197,]  0.6186290383 -4.824959e-01  6.263388e-01 #> [1198,]  0.6954639554 -4.816885e-01  5.532497e-01 #> [1199,]  0.7715927958 -4.642869e-01  4.549173e-01 #> [1200,]  0.8470377922 -3.761508e-01  3.710495e-01 #> [1201,]  0.9581241012 -2.801746e-01  2.282873e-01 #> [1202,]  0.9370224476 -2.106492e-01  2.771476e-01 #> [1203,]  0.9065894485 -1.680846e-01  3.955909e-01 #> [1204,]  0.8780638576 -1.162206e-01  4.542879e-01 #> [1205,]  0.8688493371 -7.316804e-02  5.046267e-01 #> [1206,]  0.8643051982 -3.420797e-02  5.022859e-01 #> [1207,]  0.8630884290  1.036660e-02  5.170158e-01 #> [1208,]  0.8714318871  5.114246e-02  4.970352e-01 #> [1209,]  0.8256430626  1.319375e-01  5.460061e-01 #> [1210,]  0.8288032413  1.847404e-01  5.472627e-01 #> [1211,]  0.7923202515  2.259174e-01  5.645798e-01 #> [1212,]  0.7761502266  2.371506e-01  5.957864e-01 #> [1213,]  0.7276192904  2.723565e-01  6.217993e-01 #> [1214,]  0.6706013083  2.929737e-01  6.837254e-01 #> [1215,]  0.6075982451  2.726363e-01  7.343992e-01 #> [1216,]  0.5640828013  2.245474e-01  7.914563e-01 #> [1217,]  0.4830952287  1.643264e-01  8.371816e-01 #> [1218,]  0.4305360317  8.675765e-02  8.907108e-01 #> [1219,]  0.4203737676 -9.053007e-04  8.971162e-01 #> [1220,]  0.4111790061 -2.550038e-02  9.107595e-01 #> [1221,]  0.3732884228 -7.341067e-05  9.152156e-01 #> [1222,]  0.3420105278  9.482390e-02  9.258878e-01 #> [1223,]  0.3894445896  2.188735e-02  9.576139e-01 #> [1224,] -0.0590322390 -2.881878e-01  7.389673e-01 #> [1225,] -0.7136312127 -4.659335e-01  4.383088e-01 #> [1226,] -0.6136797667 -7.235550e-01  4.105336e-01 #> [1227,] -0.1312849075 -1.057659e+00  1.991601e-01 #> [1228,]  0.2417166829 -1.056452e+00  4.061167e-03 #> [1229,]  0.5432360172 -8.595546e-01  8.440346e-02 #> [1230,]  0.7395341396 -6.971708e-01  1.087634e-01 #> [1231,]  0.7806631327 -5.509529e-01  2.326732e-01 #> [1232,]  0.8282991052 -4.500623e-01  3.650406e-01 #> [1233,]  0.8391672373 -3.178065e-01  4.196202e-01 #> [1234,]  0.7759399414 -1.237528e-01  5.922826e-01 #> [1235,]  0.7933706641 -1.019172e-02  6.306940e-01 #> [1236,]  0.7257862687  8.588149e-02  6.564740e-01 #> [1237,]  0.7142700553  1.439590e-01  7.053404e-01 #> [1238,]  0.6826189160  1.925200e-01  6.949651e-01 #> [1239,]  0.5754002333  1.978574e-01  7.842704e-01 #> [1240,]  0.4858354032  1.276223e-01  8.454304e-01 #> [1241,]  0.3680333197  1.578745e-01  8.954594e-01 #> [1242,]  0.3718208373  2.588332e-01  8.899028e-01 #> [1243,]  0.3294014335  2.588668e-01  8.795877e-01 #> [1244,]  0.3500868678  3.535446e-01  8.814717e-01 #> [1245,]  0.7016263008  6.116942e-01  4.031693e-01 #> [1246,]  0.8608604670  6.321442e-01 -1.960506e-01 #> [1247,]  0.7874423862  5.382861e-01 -2.096723e-01 #> [1248,]  0.8191128373  5.653527e-01 -9.948365e-02 #> [1249,]  0.8192766905  5.892462e-01 -1.587779e-02 #> [1250,]  0.7555745244  5.680563e-01  2.527449e-01 #> [1251,]  0.7468253970  5.149764e-01  4.454556e-01 #> [1252,]  0.6978186965  4.734784e-01  5.172565e-01 #> [1253,]  0.6506723762  4.064754e-01  6.403298e-01 #> [1254,]  0.6634178162  3.122540e-01  6.879852e-01 #> [1255,]  0.5317149162  2.696379e-01  7.623275e-01 #> [1256,]  0.5276584625  1.825240e-01  8.434721e-01 #> [1257,]  0.5267753601  6.561293e-02  8.317612e-01 #> [1258,]  0.4316519797  5.742871e-03  8.858771e-01 #> [1259,]  0.4196547568 -8.595123e-02  9.009987e-01 #> [1260,]  0.3047301471 -2.110849e-01  8.982477e-01 #> [1261,]  0.2854235172 -2.673180e-01  9.221665e-01 #> [1262,]  0.2914038002 -2.465545e-01  9.116122e-01 #> [1263,]  0.2933993340 -1.672215e-01  9.294547e-01 #> [1264,]  0.4685491621 -5.529020e-02  9.083834e-01 #> [1265,]  0.4892441928  8.496550e-02  8.621032e-01 #> [1266,]  0.3307515979  2.170437e-01  9.024875e-01 #> [1267,]  0.3278932571  2.517470e-01  9.202192e-01 #> [1268,]  0.2437145859  2.889957e-01  8.968871e-01 #> [1269,]  0.1165203825  3.156322e-01  9.363025e-01 #> [1270,]  0.0327987298  3.043656e-01  9.298424e-01 #> [1271,] -0.0641160533  2.667446e-01  9.420726e-01 #> [1272,] -0.0840558112  1.940652e-01  9.754055e-01 #> [1273,] -0.0299801081  1.347200e-01  9.939671e-01 #> [1274,] -0.0299461037  2.444862e-02  9.831479e-01 #> [1275,] -0.0841053054 -8.154875e-04  9.841242e-01 #> [1276,] -0.0805087537  5.850959e-02  9.872831e-01 #> [1277,] -0.1773739308  1.017901e-01  9.412488e-01 #> [1278,] -0.3263496459  2.785532e-01  8.457786e-01 #> [1279,] -0.4188095033  5.038593e-01  7.622568e-01 #> [1280,] -0.3292093277  6.864958e-01  6.908353e-01 #> [1281,] -0.2006267607  8.300171e-01  5.492297e-01 #> [1282,] -0.1553310454  9.056513e-01  4.354570e-01 #> [1283,] -0.0811873451  9.403365e-01  3.769212e-01 #> [1284,] -0.0393228643  9.321710e-01  3.886935e-01 #> [1285,] -0.0046869400  8.272052e-01  5.739565e-01 #> [1286,]  0.1735156178  5.892793e-01  8.076586e-01 #> [1287,]  0.2371783853  3.366500e-01  9.062145e-01 #> [1288,]  0.1801539660  1.556750e-01  9.679722e-01 #> [1289,]  0.2036431879 -6.760138e-02  9.662709e-01 #> [1290,]  0.0965732262 -2.349434e-01  9.384815e-01 #> [1291,] -0.0278997496 -3.417587e-01  9.229195e-01 #> [1292,] -0.0920904204 -4.059579e-01  8.943569e-01 #> [1293,] -0.1028344855 -2.347333e-03  9.440600e-01 #> [1294,] -0.1517435461  3.794887e-01  9.338978e-01 #> [1295,] -0.2098817378  3.272157e-01  9.140114e-01 #> [1296,] -0.2191026509  2.797533e-01  9.284201e-01 #> [1297,] -0.2324893773  2.622930e-01  9.413336e-01 #> [1298,] -0.1760031730  2.008335e-01  9.701816e-01 #> [1299,] -0.1387110204  1.768941e-01  9.724725e-01 #> [1300,] -0.1954008192  1.773649e-01  9.578386e-01 #> [1301,] -0.2471754998  1.565437e-01  9.547763e-01 #> [1302,] -0.2590481937  1.104821e-01  9.606759e-01 #> [1303,] -0.2749443054  5.396141e-02  9.577785e-01 #> [1304,] -0.3227924705 -1.087213e-02  9.433666e-01 #> [1305,] -0.3506647944 -9.345315e-02  9.348922e-01 #> [1306,] -0.3407660425 -1.717850e-01  9.260455e-01 #> [1307,] -0.3829002976 -2.143372e-01  8.905665e-01 #> [1308,] -0.4721887410 -1.987634e-01  8.562324e-01 #> [1309,] -0.5171360970 -1.073846e-01  8.482347e-01 #> [1310,] -0.5398542881  6.315909e-02  8.355625e-01 #> [1311,] -0.5523146987  2.390626e-01  8.040571e-01 #> [1312,] -0.5496329665  4.045101e-01  7.371541e-01 #> [1313,] -0.5379815698  5.083635e-01  7.006850e-01 #> [1314,] -0.5079227090  4.369154e-01  7.480819e-01 #> [1315,] -0.5316525698  3.225803e-01  7.674993e-01 #> [1316,] -0.6404155493  2.876524e-01  6.908380e-01 #> [1317,] -0.7792525887  2.825174e-01  5.340716e-01 #> [1318,] -0.8869634867  2.382510e-01  3.754743e-01 #> [1319,] -0.9429122210  1.543875e-01  2.607782e-01 #> [1320,] -0.9693364501  1.721799e-01  1.563422e-01 #> [1321,] -0.9355120659  3.544454e-01  1.096643e-01 #> [1322,] -0.8352947235  5.595462e-01  1.022651e-01 #> [1323,] -0.7642123699  6.531830e-01  5.978562e-02 #> [1324,] -0.7197937965  6.709346e-01  1.437514e-01 #> [1325,] -0.6821410656  6.703534e-01  2.797031e-01 #> [1326,] -0.6999170780  6.326855e-01  3.090839e-01 #> [1327,] -0.6943787336  5.984390e-01  3.792655e-01 #> [1328,] -0.6922995448  5.680830e-01  4.260615e-01 #> [1329,] -0.6951389909  5.516132e-01  4.457412e-01 #> [1330,] -0.6767476201  5.940599e-01  4.186166e-01 #> [1331,] -0.7012346387  5.504580e-01  4.380546e-01 #> [1332,] -0.6895462871  5.893598e-01  4.362705e-01 #> [1333,] -0.3935535252  9.479142e-01  1.041629e-01 #> [1334,] -0.2744057775  9.856735e-01 -6.697758e-03 #> [1335,] -0.6093092561  5.605885e-01  3.675003e-01 #> [1336,] -0.8606263995  1.073948e-01  5.125576e-01 #> [1337,] -0.8815386891 -2.144665e-01  4.513154e-01 #> [1338,] -0.8191601634 -3.616647e-01  4.761764e-01 #> [1339,] -0.7879565954 -3.621364e-01  5.148300e-01 #> [1340,] -0.7877731919 -3.075778e-01  5.580606e-01 #> [1341,] -0.7471101880 -2.981135e-01  6.193746e-01 #> [1342,] -0.6989154220 -3.153056e-01  6.579397e-01 #> [1343,] -0.6910805106 -3.101037e-01  6.665569e-01 #> [1344,] -0.6928294897 -3.277203e-01  6.653328e-01 #> [1345,] -0.6592689753 -3.794025e-01  6.739823e-01 #> [1346,] -0.6279594898 -3.525416e-01  7.022146e-01 #> [1347,] -0.6568444371 -2.385913e-01  7.134119e-01 #> [1348,] -0.7183398008 -1.446908e-01  6.805078e-01 #> [1349,] -0.7792847157 -7.291822e-02  6.185783e-01 #> [1350,] -0.8289335370  4.868239e-03  5.619854e-01 #> [1351,] -0.8454870582  5.022072e-02  5.383266e-01 #> [1352,] -0.8570517302  7.878900e-02  5.078254e-01 #> [1353,] -0.8706184030  1.344825e-01  4.832501e-01 #> [1354,] -0.8498513699  2.109870e-01  5.030903e-01 #> [1355,] -0.8134229183  2.437661e-01  5.452178e-01 #> [1356,] -0.7828776836  2.042987e-01  5.942784e-01 #> [1357,] -0.7784164548  1.489285e-01  6.156723e-01 #> [1358,] -0.7832202315  1.020102e-01  6.252614e-01 #> [1359,] -0.7780197263  1.243848e-02  6.404372e-01 #> [1360,] -0.7727441192 -1.161884e-01  6.396811e-01 #> [1361,] -0.7643647194 -1.813803e-01  6.365914e-01 #> [1362,] -0.7592955232 -1.908538e-01  6.372765e-01 #> [1363,] -0.7587888837 -2.119927e-01  6.353781e-01 #> [1364,] -0.7474393845 -2.288801e-01  6.422709e-01 #> [1365,] -0.7362673283 -2.112528e-01  6.548063e-01 #> [1366,] -0.7371873260 -1.743902e-01  6.600581e-01 #> [1367,] -0.7545491457 -1.138126e-01  6.488056e-01 #> [1368,] -0.7931733727 -4.064614e-02  6.120470e-01 #> [1369,] -0.8199222684 -1.913606e-02  5.858996e-01 #> [1370,] -0.8119822145 -3.940181e-02  6.007620e-01 #> [1371,] -0.7800629139 -4.930735e-02  6.424515e-01 #> [1372,] -0.7474221587 -4.662924e-02  6.709531e-01 #> [1373,] -0.7672494650 -4.539616e-02  6.442796e-01 #> [1374,] -0.7892303467 -2.118411e-02  6.307071e-01 #> [1375,] -0.7662259936  1.355413e-02  6.599116e-01 #> [1376,] -0.7471503019  4.916748e-02  6.730546e-01 #> [1377,] -0.7550001144  8.687635e-02  6.573346e-01 #> [1378,] -0.7697690129  9.531085e-02  6.410329e-01 #> [1379,] -0.7763423324  7.906136e-02  6.349580e-01 #> [1380,] -0.7730618119  3.760586e-02  6.477911e-01 #> [1381,] -0.7544746399 -1.718009e-02  6.682470e-01 #> [1382,] -0.7590673566 -5.117945e-02  6.635159e-01 #> [1383,] -0.7519072294 -7.901396e-02  6.720216e-01 #> [1384,] -0.7284078598 -1.018167e-01  6.888720e-01 #> [1385,] -0.7294425964 -1.125066e-01  6.895269e-01 #> [1386,] -0.7153034210 -1.386938e-01  7.034553e-01 #> [1387,] -0.6757611632 -1.737203e-01  7.358114e-01 #> [1388,] -0.6347255707 -2.395453e-01  7.588356e-01 #> [1389,] -0.5769297481 -3.353861e-01  7.698309e-01 #> [1390,] -0.5207112432 -3.757776e-01  7.840675e-01 #> [1391,] -0.5002492070 -3.571260e-01  8.064188e-01 #> [1392,] -0.4410064518 -3.327865e-01  8.571252e-01 #> [1393,] -0.3148892522 -3.130509e-01  9.187587e-01 #> [1394,] -0.1938464493 -3.143102e-01  9.439933e-01 #> [1395,] -0.1321780384 -3.682358e-01  9.315495e-01 #> [1396,] -0.0240185354 -4.206336e-01  9.267542e-01 #> [1397,]  0.0552882738 -4.391907e-01  8.970835e-01 #> [1398,] -0.0278034583 -4.966328e-01  8.549363e-01 #> [1399,] -0.0058280299 -7.086542e-01  7.055671e-01 #> [1400,]  0.1108798683 -9.174907e-01  4.575227e-01 #> [1401,]  0.2056299001 -9.406788e-01  3.551247e-01 #> [1402,]  0.3220729232 -8.877101e-01  3.746010e-01 #> [1403,]  0.4881277084 -8.525175e-01  3.124007e-01 #> [1404,]  0.6297776103 -7.678072e-01  2.653696e-01 #> [1405,]  0.7184491158 -6.270336e-01  3.578280e-01 #> [1406,]  0.8251622319 -4.374153e-01  4.302053e-01 #> [1407,]  0.7706521153 -2.260179e-01  5.432587e-01 #> [1408,]  0.6499053240 -1.784215e-01  6.961440e-01 #> [1409,]  0.6625218987 -1.477364e-01  7.289736e-01 #> [1410,]  0.6133944988 -1.326958e-02  7.661950e-01 #> [1411,]  0.6132601500  1.404097e-01  7.817602e-01 #> [1412,]  0.6478379369  2.549247e-01  7.297192e-01 #> [1413,]  0.5235188007  3.226114e-01  7.594869e-01 #> [1414,]  0.5076739788  3.420018e-01  7.939252e-01 #> [1415,]  0.6293883920  3.718695e-01  7.063940e-01 #> [1416,]  0.6714155674  4.241360e-01  6.218098e-01 #> [1417,]  0.7791224718  3.224216e-01  5.486726e-01 #> [1418,]  0.9185431004  2.025596e-01  4.189574e-01 #> [1419,]  0.9430913329  1.327335e-01  3.650110e-01 #> [1420,]  0.8481341004  2.254011e-02  5.029674e-01 #> [1421,]  0.8386718035 -1.765667e-02  5.700834e-01 #> [1422,]  0.8082279563 -3.135995e-02  5.794321e-01 #> [1423,]  0.7773821950 -6.228130e-02  6.331887e-01 #> [1424,]  0.7798692584 -8.586064e-02  6.253386e-01 #> [1425,]  0.7953338027 -1.213120e-01  6.090357e-01 #> [1426,]  0.8003144264 -1.319804e-01  5.850485e-01 #> [1427,]  0.7516375780 -1.149940e-01  6.436242e-01 #> [1428,]  0.7845422626 -1.004259e-01  6.326852e-01 #> [1429,]  0.7091187835 -7.581613e-02  6.736718e-01 #> [1430,]  0.6611239314 -3.768930e-02  7.514008e-01 #> [1431,]  0.6040149331  1.631040e-02  7.768027e-01 #> [1432,]  0.5558739901  1.721665e-02  8.335618e-01 #> [1433,]  0.4985042512  5.864270e-02  8.419173e-01 #> [1434,]  0.3986245692  1.051142e-01  8.997510e-01 #> [1435,]  0.4528596103  1.106508e-01  9.089242e-01 #> [1436,]  0.2998520434  2.522661e-01  8.745889e-01 #> [1437,]  0.0979050845  3.183663e-01  9.315523e-01 #> [1438,]  0.1713096201  2.049496e-01  9.738930e-01 #> [1439,]  0.0958030075  1.356047e-01  9.559951e-01 #> [1440,] -0.0164834764  5.888374e-02  9.881294e-01 #> [1441,]  0.0677443445 -5.714128e-02  1.002911e+00 #> [1442,]  0.0700362250 -9.389510e-02  9.853436e-01 #> [1443,]  0.0326753408 -7.508010e-02  9.910967e-01 #> [1444,]  0.0093696322 -2.615327e-02  9.941202e-01 #> [1445,] -0.0212966558  1.650643e-02  9.978557e-01 #> [1446,] -0.0388709828  4.806213e-02  9.933560e-01 #> [1447,] -0.0409690440  8.142187e-02  9.970133e-01 #> [1448,]  0.0003716157  7.615568e-02  1.006483e+00 #> [1449,] -0.0928199291  6.151370e-02  9.645741e-01 #> [1450,] -0.2194558084  7.508070e-02  9.662993e-01 #> [1451,] -0.2621780038  8.958374e-02  9.471153e-01 #> [1452,] -0.3286837637  8.010551e-02  9.322393e-01 #> [1453,] -0.3023290038  1.718074e-01  9.336781e-01 #> [1454,] -0.3637701273  3.188270e-01  8.650292e-01 #> [1455,] -0.2823313773  3.119209e-01  9.195927e-01 #> [1456,] -0.2107518911  2.858217e-01  9.244204e-01 #> [1457,] -0.3375511765  3.264108e-01  8.618281e-01 #> [1458,] -0.3943857849  4.095054e-01  8.026845e-01 #> [1459,] -0.4122348428  4.862161e-01  7.696047e-01 #> [1460,] -0.4511148930  4.654944e-01  7.503284e-01 #> [1461,] -0.5981041789  1.968503e-01  7.167832e-01 #> [1462,] -0.6721675396  2.546359e-01  6.910437e-01 #> [1463,] -0.3993736207  8.902177e-01  4.021788e-01 #> [1464,]  0.0384979770  1.122653e+00  4.403912e-02 #> [1465,]  0.2989752293  9.845366e-01  4.776406e-02 #> [1466,]  0.4691433609  8.902615e-01  1.852795e-01 #> [1467,]  0.6184442639  7.857781e-01  2.155194e-01 #> [1468,]  0.6731417179  7.119932e-01  2.463729e-01 #> [1469,]  0.7596930861  6.461341e-01  2.123369e-01 #> [1470,]  0.7955057025  5.954834e-01  1.938960e-01 #> [1471,]  0.8268064857  5.341681e-01  2.609479e-01 #> [1472,]  0.8212537766  4.838179e-01  3.079136e-01 #> [1473,]  0.7888032794  4.521698e-01  4.232567e-01 #> [1474,]  0.8075637221  3.865618e-01  4.882385e-01 #> [1475,]  0.6717167497  3.336223e-01  6.122177e-01 #> [1476,]  0.6019918323  2.914387e-01  7.430551e-01 #> [1477,]  0.6245887876  1.961713e-01  7.544455e-01 #> [1478,]  0.5838772058  9.667636e-02  7.984005e-01 #> [1479,]  0.6514478922 -7.819165e-03  7.743298e-01 #> [1480,]  0.6341608167 -1.328494e-01  7.496840e-01 #> [1481,]  0.6325702667 -1.853191e-01  7.576364e-01 #> [1482,]  0.6618670821 -2.214620e-01  7.151269e-01 #> [1483,]  0.6486722827 -2.615957e-01  7.121191e-01 #> [1484,]  0.6949487925 -3.097559e-01  6.641189e-01 #> [1485,]  0.7626479268 -3.334009e-01  5.751820e-01 #> [1486,]  0.8180658817 -3.298274e-01  4.919788e-01 #> [1487,]  0.8208169937 -3.342114e-01  4.697607e-01 #> [1488,]  0.8489277363 -3.576703e-01  4.092999e-01 #> [1489,]  0.8596263528 -3.394461e-01  3.855933e-01 #> [1490,]  0.9196605682 -2.574393e-01  3.456735e-01 #> [1491,]  0.9115526676 -1.771461e-01  3.577479e-01 #> [1492,]  0.9417010546 -1.217806e-01  3.112693e-01 #> [1493,]  1.0093711615 -8.097909e-02  1.564356e-01 #> [1494,]  0.9692240357 -2.189117e-02  2.292486e-01 #> [1495,]  0.9763551354  8.067166e-03  2.588256e-01 #> [1496,]  0.9673785567  4.177888e-02  2.599248e-01 #> [1497,]  0.9573433995  6.708861e-02  3.105730e-01 #> [1498,]  0.9456424117  7.303625e-02  3.350078e-01 #> [1499,]  0.9324548841  8.250292e-02  3.789566e-01 #> [1500,]  0.9356411695  6.942938e-02  3.755167e-01 #> [1501,]  0.9307193756  2.916688e-02  4.066007e-01 #> [1502,]  0.9345082045 -4.520180e-02  3.979638e-01 #> [1503,]  0.9762290716 -1.681102e-01  1.003765e-01 #> [1504,]  1.0039882660 -6.814325e-02 -1.347845e-01 #> [1505,]  0.9829381108  8.400901e-02 -5.510301e-03 #> [1506,]  0.9973356724 -5.547012e-02 -7.125977e-05 #> [1507,]  0.9725395441 -1.601130e-01  6.249845e-02 #> [1508,]  0.9687314034 -1.559982e-01  1.961309e-01 #> [1509,]  0.9611774087 -1.698789e-01  2.043412e-01 #> [1510,]  0.9251672029 -1.721137e-01  3.219613e-01 #> [1511,]  0.9175751805 -1.415716e-01  3.878401e-01 #> [1512,]  0.8496698141 -7.408869e-02  4.941653e-01 #> [1513,]  0.8194474578 -3.723428e-02  5.820118e-01 #> [1514,]  0.7614914179  4.102506e-03  6.290103e-01 #> [1515,]  0.7008046508  4.834302e-02  7.063450e-01 #> [1516,]  0.6412382126  8.950692e-02  7.486489e-01 #> [1517,]  0.6144399047  8.216481e-02  7.899475e-01 #> [1518,]  0.5287744999  6.142913e-02  8.223823e-01 #> [1519,]  0.4171506166  6.064957e-02  8.866698e-01 #> [1520,]  0.4234907627  2.280554e-02  9.056131e-01 #> [1521,]  0.4549900293 -2.709248e-02  8.984707e-01 #> [1522,]  0.3875861168 -1.587025e-01  8.854966e-01 #> [1523,]  0.3583561778 -1.468380e-01  9.128359e-01 #> [1524,]  0.2848610580  1.314387e-01  9.142796e-01 #> [1525,]  0.0833362117  3.068502e-01  9.265411e-01 #> [1526,]  0.1003860533  3.098038e-01  9.482180e-01 #> [1527,]  0.1533362716  3.150501e-01  9.371912e-01 #> [1528,]  0.1755211055  3.051920e-01  9.387329e-01 #> [1529,]  0.2234004289  2.571915e-01  9.435456e-01 #> [1530,]  0.2781654000  2.204412e-01  9.421886e-01 #> [1531,]  0.3599001169  2.010061e-01  9.169251e-01 #> [1532,]  0.4227720797  1.755399e-01  8.951410e-01 #> [1533,]  0.4692386389  1.471664e-01  8.873746e-01 #> [1534,]  0.3528153002  1.802310e-01  8.883243e-01 #> [1535,]  0.2463140190  2.309317e-01  9.386216e-01 #> [1536,]  0.2733108103  3.334816e-01  9.000220e-01 #> [1537,]  0.1707761586  4.786629e-01  8.444222e-01 #> [1538,]  0.2130629867  4.466388e-01  8.822915e-01 #> [1539,]  0.3530512750  3.325719e-01  8.834574e-01 #> [1540,]  0.4429247379  2.167254e-01  8.821875e-01 #> [1541,]  0.4512806237  9.833875e-02  8.840545e-01 #> [1542,]  0.3404005766  4.474415e-03  9.234093e-01 #> [1543,]  0.3821637034 -1.076670e-01  9.264638e-01 #> [1544,]  0.3379308879 -2.076370e-01  9.003055e-01 #> [1545,]  0.2961485684 -3.253357e-01  8.970889e-01 #> [1546,]  0.3076513410 -4.320633e-01  8.427690e-01 #> [1547,]  0.3298314214 -4.761045e-01  8.184760e-01 #> [1548,]  0.3782368004 -4.563510e-01  8.071881e-01 #> [1549,]  0.3564425409 -3.445739e-01  8.616729e-01 #> [1550,]  0.3882238567 -1.998686e-01  8.974434e-01 #> [1551,]  0.3733610213 -1.350582e-01  9.114676e-01 #> [1552,]  0.4187692702 -3.471036e-02  9.174331e-01 #> [1553,]  0.3216577470  2.964577e-01  8.405790e-01 #> [1554,]  0.1629869342  6.847143e-01  7.119324e-01 #> [1555,]  0.3055890799  8.761035e-01  4.706062e-01 #> [1556,]  0.4844675660  8.865523e-01  2.287947e-01 #> [1557,]  0.5335894823  8.440703e-01  1.662867e-01 #> [1558,]  0.6043553948  7.779224e-01  2.476243e-01 #> [1559,]  0.6564055085  6.487884e-01  3.896955e-01 #> [1560,]  0.6718002558  5.195876e-01  5.302489e-01 #> [1561,]  0.7457305193  3.679388e-01  5.915954e-01 #> [1562,]  0.7465429306  1.657705e-01  6.489859e-01 #> [1563,]  0.6919941902  4.492476e-02  7.144132e-01 #> [1564,]  0.6692095995 -9.401237e-02  7.474688e-01 #> [1565,]  0.5597680211 -1.646190e-01  7.755789e-01 #> [1566,]  0.2513198853 -1.370856e-01  9.011145e-01 #> [1567,]  0.2965675592 -4.844519e-01  7.940710e-01 #> [1568,]  0.6480257511 -8.108492e-01  2.238167e-01 #> [1569,]  0.8251045346 -6.254665e-01 -6.082375e-02 #> [1570,]  0.9330670238 -3.555882e-01 -1.150975e-02 #> [1571,]  0.9813725948 -2.483043e-01 -1.081876e-02 #> [1572,]  0.9966703653 -1.311733e-01  3.763764e-02 #> [1573,]  1.0072131157 -7.250158e-03  7.430727e-02 #> [1574,]  1.0044729710  4.068720e-02  9.765586e-02 #> [1575,]  0.9973009229  5.114465e-02  1.027617e-01 #> [1576,]  1.0128308535  7.579198e-02  9.654213e-02 #> [1577,]  1.0565776825  6.363114e-03  5.666120e-02 #> [1578,]  0.9590583444 -8.026717e-02  1.815517e-01 #> [1579,]  0.8541721702  7.973523e-02  4.271131e-01 #> [1580,]  0.8928873539  2.221852e-01  4.227424e-01 #> [1581,]  0.9361308813  2.174472e-01  2.930832e-01 #> [1582,]  0.9474653602  2.141426e-01  2.383847e-01 #> [1583,]  0.9468456507  1.931039e-01  2.449770e-01 #> [1584,]  0.9685828686  1.723562e-01  2.092112e-01 #> [1585,]  0.9691383243  1.703027e-01  1.858041e-01 #> [1586,]  0.9765134454  1.671571e-01  1.782443e-01 #> [1587,]  0.9799737930  1.614301e-01  1.657355e-01 #> [1588,]  0.9773821831  1.650435e-01  1.702722e-01 #> [1589,]  0.9788084030  1.691493e-01  1.599765e-01 #> [1590,]  0.9789706469  1.638166e-01  1.641481e-01 #> [1591,]  0.9747424126  1.611351e-01  1.758879e-01 #> [1592,]  0.9727489352  1.583245e-01  1.912665e-01 #> [1593,]  0.9710490704  1.555534e-01  1.959322e-01 #> [1594,]  0.9724994898  1.582859e-01  1.965393e-01 #> [1595,]  0.9743042588  1.551673e-01  1.743973e-01 #> [1596,]  0.9912313819  1.364750e-01  1.004713e-01 #> [1597,]  0.9962819815  1.246477e-01  6.255394e-02 #> [1598,]  0.9892098904  1.020737e-01  1.056263e-01 #> [1599,]  0.9914690852  7.343043e-02  1.180004e-01 #> [1600,]  0.9988488555  5.180583e-02  1.179607e-01 #> [1601,]  0.9945576191  1.242495e-02  1.171596e-01 #> [1602,]  0.9730277061  1.157076e-02  2.188722e-01 #> [1603,]  0.9786459804  5.135800e-02  2.443559e-01 #> [1604,]  0.9112657905  9.833855e-02  3.523706e-01 #> [1605,]  0.8908575177  1.065352e-01  4.568220e-01 #> [1606,]  0.8676165342  1.068837e-01  4.738298e-01 #> [1607,]  0.8575650454  9.662303e-02  5.196536e-01 #> [1608,]  0.8258077502  7.948159e-02  5.423602e-01 #> [1609,]  0.7794814706  1.036510e-01  6.124721e-01 #> [1610,]  0.7933858633  1.599923e-01  5.995201e-01 #> [1611,]  0.7093579173  1.803309e-01  6.566156e-01 #> [1612,]  0.6902619600  1.998593e-01  7.012736e-01 #> [1613,]  0.6580342054  2.988071e-01  6.792244e-01 #> [1614,]  0.6545665860  3.343842e-01  6.838939e-01 #> [1615,]  0.6864544153  3.866549e-01  6.256241e-01 #> [1616,]  0.7169468999  3.817773e-01  5.891106e-01 #> [1617,]  0.8658816814  2.464531e-01  4.752368e-01 #> [1618,]  0.9354634285  1.981674e-01  3.625651e-01 #> [1619,]  0.8673531413  1.778008e-01  4.518969e-01 #> [1620,]  0.8730636239  1.427164e-01  4.985009e-01 #> [1621,]  0.8451447487  1.370050e-01  5.096118e-01 #> [1622,]  0.8264189363  8.755120e-02  5.644924e-01 #> [1623,]  0.8152987957  5.261372e-02  5.745708e-01 #> [1624,]  0.7878280282  4.153128e-02  6.134033e-01 #> [1625,]  0.8276078105 -2.754406e-02  5.765070e-01 #> [1626,]  0.7964767814 -6.269809e-02  5.936617e-01 #> [1627,]  0.8000571728 -3.632876e-02  6.153430e-01 #> [1628,]  0.7428950667 -1.894744e-02  6.554053e-01 #> [1629,]  0.7002127767 -1.482964e-03  7.146592e-01 #> [1630,]  0.6557134986  4.862074e-02  7.377529e-01 #> [1631,]  0.6014135480  1.030553e-01  7.831284e-01 #> [1632,]  0.5958080888  1.710757e-01  7.841477e-01 #> [1633,]  0.6019263268  2.739108e-01  7.530128e-01 #> [1634,]  0.5946968198  3.982194e-01  7.023060e-01 #> [1635,]  0.6223804951  4.356286e-01  6.738821e-01 #> [1636,]  0.6388769150  3.812050e-01  7.008314e-01 #> [1637,]  0.7843960524  2.418998e-01  6.202368e-01 #> [1638,]  1.0075106621  8.441313e-02  3.187360e-01 #> [1639,]  0.9443906546  6.765014e-02  2.812564e-01 #> [1640,]  0.8784690499  1.183089e-01  4.290952e-01 #> [1641,]  0.8705697060  1.315000e-01  4.691490e-01 #> [1642,]  0.7838456631  1.310514e-01  5.664954e-01 #> [1643,]  0.7972066402  1.047320e-01  6.014719e-01 #> [1644,]  0.8075781465  9.389923e-02  5.735193e-01 #> [1645,]  0.8030089736  7.613113e-02  5.916958e-01 #> [1646,]  0.8467934132  1.165476e-01  5.357096e-01 #> [1647,]  0.7967268825  1.686200e-01  5.660509e-01 #> [1648,]  0.8397071362  1.378610e-01  5.587242e-01 #> [1649,]  0.8022161722  1.971291e-01  5.447424e-01 #> [1650,]  0.7327840328  2.152884e-01  6.453081e-01 #> [1651,]  0.6929792762  1.528346e-01  6.905217e-01 #> [1652,]  0.6422237754  8.753766e-02  7.510782e-01 #> [1653,]  0.6571974158 -6.747039e-03  7.548812e-01 #> [1654,]  0.5849145055 -7.164869e-02  7.853698e-01 #> [1655,]  0.5279288292 -1.705672e-01  8.215072e-01 #> [1656,]  0.4922337532 -2.871959e-01  8.099455e-01 #> [1657,]  0.5139847994 -3.884315e-01  7.634973e-01 #> [1658,]  0.5218166709 -4.706475e-01  7.067038e-01 #> [1659,]  0.5163902044 -5.051906e-01  6.843434e-01 #> [1660,]  0.5061361790 -5.104573e-01  6.839243e-01 #> [1661,]  0.5301042199 -5.446166e-01  6.482207e-01 #> [1662,]  0.5580387115 -5.786369e-01  5.982735e-01 #> [1663,]  0.6346994042 -5.863171e-01  5.191385e-01 #> [1664,]  0.7027330399 -5.959845e-01  4.158252e-01 #> [1665,]  0.7222704887 -5.847204e-01  3.892091e-01 #> [1666,]  0.7525163293 -5.203259e-01  4.103937e-01 #> [1667,]  0.7710318565 -4.462017e-01  4.652461e-01 #> [1668,]  0.7613006830 -3.671237e-01  5.273199e-01 #> [1669,]  0.7556173205 -2.746240e-01  5.968947e-01 #> [1670,]  0.7494799495 -2.133680e-01  6.268204e-01 #> [1671,]  0.6871110201 -1.503393e-01  6.969053e-01 #> [1672,]  0.6197826266 -7.868954e-02  7.595361e-01 #> [1673,]  0.5807760954 -2.835222e-02  7.999442e-01 #> [1674,]  0.6115111709 -1.064224e-01  7.939260e-01 #> [1675,]  0.6140519381 -1.199211e-01  7.690005e-01 #> [1676,]  0.5318236351 -2.279357e-02  8.157663e-01 #> [1677,]  0.5226337910  9.355771e-04  8.580545e-01 #> [1678,]  0.4844192266  3.579140e-02  8.539863e-01 #> [1679,]  0.3959857523  7.210317e-02  9.010564e-01 #> [1680,]  0.3979972005  1.134219e-01  9.066786e-01 #> [1681,]  0.3245208561  2.000498e-01  9.069227e-01 #> [1682,]  0.3499605060  2.227577e-01  9.174535e-01 #> [1683,]  0.2970662713  2.345692e-01  8.996665e-01 #> [1684,]  0.2160885632  2.583446e-01  9.411169e-01 #> [1685,]  0.2336880267  4.117568e-01  8.670260e-01 #> [1686,]  0.1375628710  5.769694e-01  7.954592e-01 #> [1687,]  0.2108680755  5.745322e-01  8.133056e-01 #> [1688,]  0.2314063907  6.680359e-01  6.903412e-01 #> [1689,]  0.1163359210  7.191405e-01  6.761149e-01 #> [1690,]  0.1948826611  5.892268e-01  7.988990e-01 #> [1691,]  0.1473684460  4.920465e-01  8.294393e-01 #> [1692,]  0.0294273235  4.112746e-01  8.962115e-01 #> [1693,]  0.0387008823  2.888122e-01  9.505364e-01 #> [1694,] -0.0512809865  2.089495e-01  9.550754e-01 #> [1695,] -0.0503664538  1.171885e-01  9.977431e-01 #> [1696,]  0.0476601012 -9.696363e-02  9.945036e-01 #> [1697,]  0.0588040575 -3.278457e-01  9.496694e-01 #> [1698,] -0.0322237313 -4.396812e-01  8.866401e-01 #> [1699,] -0.1422988325 -4.330375e-01  8.782850e-01 #> [1700,] -0.1012873575 -3.899256e-01  9.203580e-01 #> [1701,] -0.1006349400 -3.244514e-01  9.300088e-01 #> [1702,] -0.0953301489 -3.441913e-01  9.299175e-01 #> [1703,] -0.0778663307 -4.931510e-01  8.660091e-01 #> [1704,] -0.0684632361 -5.919772e-01  8.144268e-01 #> [1705,]  0.0336070023 -7.043827e-01  7.275537e-01 #> [1706,]  0.1147953346 -7.561514e-01  6.682506e-01 #> [1707,]  0.1200138703 -6.204491e-01  7.602901e-01 #> [1708,]  0.2067819685 -5.668512e-01  8.081509e-01 #> [1709,]  0.3202339709 -6.545557e-01  7.310594e-01 #> [1710,]  0.0720338672 -5.037889e-01  7.639349e-01 #> [1711,] -0.1632357538 -1.509863e-01  9.406226e-01 #> [1712,]  0.0294603705  2.151951e-01  1.001399e+00 #> [1713,]  0.2112049162  6.751711e-01  7.084072e-01 #> [1714,]  0.2437044978  9.683010e-01  3.276701e-01 #> [1715,]  0.4364434779  8.972155e-01  2.610130e-01 #> [1716,]  0.6317136884  7.501264e-01  2.854879e-01 #> [1717,]  0.6665428281  6.796817e-01  3.329644e-01 #> [1718,]  0.6897411346  5.972800e-01  4.325002e-01 #> [1719,]  0.6376261115  4.945088e-01  5.718358e-01 #> [1720,]  0.6432175040  4.007570e-01  6.672313e-01 #> [1721,]  0.6011927724  3.520508e-01  7.041038e-01 #> [1722,]  0.5133636594  3.001640e-01  7.955344e-01 #> [1723,]  0.4191841781  2.338887e-01  8.524750e-01 #> [1724,]  0.3499062657  1.549700e-01  9.155356e-01 #> [1725,]  0.2838582098  4.577166e-02  9.387746e-01 #> [1726,]  0.2087462097 -1.077427e-01  9.548171e-01 #> [1727,]  0.2157933712 -2.327517e-01  9.445818e-01 #> [1728,]  0.0766759738 -2.995866e-01  9.170525e-01 #> [1729,]  0.0368012711 -4.198118e-01  9.152403e-01 #> [1730,]  0.0312308334 -3.304741e-01  9.178279e-01 #> [1731,] -0.2498277873 -7.425050e-02  9.162027e-01 #> [1732,] -0.3881130815  3.259299e-02  9.247760e-01 #> [1733,] -0.3634365797  6.585144e-02  9.183316e-01 #> [1734,] -0.4524350762  6.259977e-02  8.765429e-01 #> [1735,] -0.4845035374  5.554621e-02  8.773988e-01 #> [1736,] -0.4628465772  8.567812e-02  8.849211e-01 #> [1737,] -0.4684391916  9.269624e-02  8.802100e-01 #> [1738,] -0.4551650286  7.092035e-02  8.958554e-01 #> [1739,] -0.4214037359  3.435539e-02  9.119918e-01 #> [1740,] -0.4121842384 -8.626708e-03  9.153112e-01 #> [1741,] -0.4095576108 -4.587392e-02  9.145732e-01 #> [1742,] -0.3870402873 -1.111733e-01  9.263340e-01 #> [1743,] -0.2386002541 -1.964538e-01  9.789755e-01 #> [1744,] -0.0782856047 -4.015144e-01  9.163117e-01 #> [1745,] -0.0493876413 -7.037416e-01  7.244183e-01 #> [1746,]  0.0511083864 -8.629137e-01  5.497906e-01 #> [1747,]  0.1375557482 -9.172864e-01  4.258821e-01 #> [1748,]  0.1359560937 -8.630000e-01  4.870906e-01 #> [1749,]  0.0948777795 -7.148395e-01  6.710507e-01 #> [1750,]  0.1057434082 -6.061047e-01  7.912900e-01 #> [1751,]  0.0852388963 -4.914460e-01  8.521044e-01 #> [1752,]  0.0145722507 -4.350545e-01  8.864461e-01 #> [1753,] -0.0330934785 -4.221827e-01  9.081603e-01 #> [1754,] -0.2482330352 -1.836574e-01  8.885198e-01 #> [1755,] -0.5824778080  6.924802e-02  7.676439e-01 #> [1756,] -0.7063289285  2.863334e-02  6.953019e-01 #> [1757,] -0.7394526005 -4.674770e-02  6.483132e-01 #> [1758,] -0.7813083529 -5.843877e-02  6.122704e-01 #> [1759,] -0.8033596873 -5.597396e-02  5.726712e-01 #> [1760,] -0.8589165211 -4.856101e-02  4.932011e-01 #> [1761,] -0.9043599367 -5.606703e-02  4.102562e-01 #> [1762,] -0.9129602909 -5.156517e-02  3.895614e-01 #> [1763,] -0.9119837284 -4.686598e-02  3.893786e-01 #> [1764,] -0.8906214833 -3.855988e-02  4.462605e-01 #> [1765,] -0.8633521795 -7.133007e-02  4.919640e-01 #> [1766,] -0.8815658092 -7.867295e-02  4.626371e-01 #> [1767,] -0.8241615891  1.278012e-01  5.615113e-01 #> [1768,] -0.8617954254  1.458802e-01  2.748037e-01 #> [1769,] -0.9375169873 -4.633782e-01 -1.686054e-01 #> [1770,] -0.5125119686 -1.035326e+00  6.019306e-02 #> [1771,]  0.1633043885 -1.089366e+00  1.353507e-01 #> [1772,]  0.6684682965 -8.086350e-01 -1.082653e-01 #> [1773,]  0.9201529622 -4.118892e-01 -1.117189e-01 #> [1774,]  0.9934011102 -7.264666e-02 -1.074209e-01 #> [1775,]  0.9787725210  1.600430e-01 -8.888597e-02 #> [1776,]  0.9552873969  2.900606e-01  7.369678e-02 #> [1777,]  0.9180119038  3.509056e-01  1.768265e-01 #> [1778,]  0.8700034618  3.637369e-01  3.118711e-01 #> [1779,]  0.8772156835  3.495057e-01  3.591246e-01 #> [1780,]  0.8735243678  3.273647e-01  3.659555e-01 #> [1781,]  0.8873756528  2.930788e-01  3.762017e-01 #> [1782,]  0.8683209419  2.723638e-01  4.062850e-01 #> [1783,]  0.8674581051  2.746749e-01  4.265120e-01 #> [1784,]  0.8418941498  2.887868e-01  4.478651e-01 #> [1785,]  0.8544454575  2.868513e-01  4.597948e-01 #> [1786,]  0.8382886052  2.845657e-01  4.613349e-01 #> [1787,]  0.8063753843  2.799540e-01  5.257761e-01 #> [1788,]  0.7979059219  2.764071e-01  5.389124e-01 #> [1789,]  0.7790787816  2.662183e-01  5.784585e-01 #> [1790,]  0.7205179334  2.344065e-01  6.333403e-01 #> [1791,]  0.6312568784  2.151540e-01  7.281210e-01 #> [1792,]  0.6154112220  1.866883e-01  7.670888e-01 #> [1793,]  0.4849075973  1.816128e-01  8.187376e-01 #> [1794,]  0.4427225292  1.464456e-01  8.845490e-01 #> [1795,]  0.4283927679  4.729462e-02  8.892942e-01 #> [1796,]  0.3604642451 -6.668571e-02  9.141902e-01 #> [1797,]  0.4283075631 -8.907679e-02  9.056911e-01 #> [1798,]  0.3353793025  5.992981e-02  9.029545e-01 #> [1799,]  0.2146744430  1.753548e-01  9.586337e-01 #> [1800,]  0.2549577653  2.782660e-01  9.235117e-01 #> [1801,]  0.1208168194  4.103014e-01  8.718769e-01 #> [1802,]  0.1135229319  4.272544e-01  9.078897e-01 #> [1803,]  0.1883209646  4.543585e-01  8.639284e-01 #> [1804,]  0.1249295548  4.911070e-01  8.493162e-01 #> [1805,]  0.1571209431  5.468958e-01  8.232380e-01 #> [1806,]  0.0874810442  6.402797e-01  7.457964e-01 #> [1807,]  0.0977660418  6.595264e-01  7.503360e-01 #> [1808,]  0.1546465605  7.339481e-01  6.550902e-01 #> [1809,]  0.1552806348  7.866356e-01  6.045208e-01 #> [1810,]  0.2415826023  7.975699e-01  5.687559e-01 #> [1811,]  0.2784530520  8.015838e-01  5.350603e-01 #> [1812,]  0.3950966001  6.744758e-01  6.339002e-01 #> [1813,]  0.4666241407  5.474766e-01  6.990818e-01 #> [1814,]  0.4548931122  4.192643e-01  7.835649e-01 #> [1815,]  0.4525797069  2.576936e-01  8.581284e-01 #> [1816,]  0.3053678572  1.192129e-01  9.119796e-01 #> [1817,]  0.2577727139  3.404655e-02  9.679285e-01 #> [1818,]  0.2385208160  4.132032e-02  9.528030e-01 #> [1819,]  0.1585861444  7.692540e-02  9.755281e-01 #> [1820,]  0.2180539966  1.721923e-02  9.798919e-01 #> [1821,]  0.1856780648 -7.587092e-02  9.634601e-01 #> [1822,]  0.2875869572 -1.132817e-01  9.669294e-01 #> [1823,]  0.4026563466 -2.225768e-01  8.933877e-01 #> [1824,]  0.3133785725 -3.363913e-01  8.684360e-01 #> [1825,]  0.3923294842 -3.460297e-01  8.569155e-01 #> [1826,]  0.5945580602 -3.435897e-01  7.653361e-01 #> [1827,]  0.5900834203 -2.482841e-01  7.521319e-01 #> [1828,]  0.4758977294 -9.641837e-02  8.572921e-01 #> [1829,]  0.5178726315 -1.337681e-02  8.752184e-01 #> [1830,]  0.3955879509  7.537535e-02  8.771840e-01 #> [1831,]  0.2819692492  1.320114e-01  9.437122e-01 #> [1832,]  0.3195095062  2.491718e-01  9.156059e-01 #> [1833,]  0.1966947466  4.181634e-01  8.569372e-01 #> [1834,]  0.1521816254  4.388730e-01  8.914313e-01 #> [1835,]  0.2356070131  2.055726e-01  9.518670e-01 #> [1836,]  0.1930666715 -2.044053e-01  9.424716e-01 #> [1837,]  0.2290817201 -4.621466e-01  8.665988e-01 #> [1838,]  0.3096480370 -5.998499e-01  7.385573e-01 #> [1839,]  0.3583052456 -6.532764e-01  6.873075e-01 #> [1840,]  0.4163245261 -5.219861e-01  7.309722e-01 #> [1841,]  0.4166966975 -4.013591e-01  8.083512e-01 #> [1842,]  0.4968702197 -2.831178e-01  8.290661e-01 #> [1843,]  0.4257594645 -4.591256e-02  8.716617e-01 #> [1844,]  0.3803524077  1.663570e-01  9.168758e-01 #> [1845,]  0.3804828823  3.989469e-01  8.178712e-01 #> [1846,]  0.3115805089  5.625178e-01  7.623296e-01 #> [1847,]  0.4209976792  5.591295e-01  7.357606e-01 #> [1848,]  0.5125346780  6.011110e-01  6.314899e-01 #> [1849,]  0.4720642567  6.594794e-01  5.866660e-01 #> [1850,]  0.5003012419  6.512842e-01  5.833975e-01 #> [1851,]  0.4950090051  6.700895e-01  5.430924e-01 #> [1852,]  0.4531470537  6.970800e-01  5.632249e-01 #> [1853,]  0.4309135973  7.162521e-01  5.501691e-01 #> [1854,]  0.3305867314  7.390085e-01  5.655465e-01 #> [1855,]  0.2544165254  7.374805e-01  6.103158e-01 #> [1856,]  0.2389107943  7.183871e-01  6.445258e-01 #> [1857,]  0.2149573714  6.667481e-01  6.994090e-01 #> [1858,]  0.1743490696  5.893643e-01  7.740787e-01 #> [1859,]  0.1317007393  4.908400e-01  8.471367e-01 #> [1860,]  0.1968486607  3.426375e-01  9.290308e-01 #> [1861,]  0.2173391730  1.942252e-01  9.334403e-01 #> [1862,] -0.2434941679  1.970375e-01  8.449474e-01 #> [1863,] -0.4116940498  4.091460e-02  9.298431e-01 #> [1864,] -0.1669341624 -4.622072e-01  8.906329e-01 #> [1865,] -0.0106454007 -8.497889e-01  6.126095e-01 #> [1866,]  0.1352438331 -9.112560e-01  4.627632e-01 #> [1867,]  0.2968404889 -8.846098e-01  4.153650e-01 #> [1868,]  0.4230797589 -8.393566e-01  3.809204e-01 #> [1869,]  0.4779787064 -7.422751e-01  4.662431e-01 #> [1870,]  0.5729147792 -6.237499e-01  5.529320e-01 #> [1871,]  0.5603719354 -4.373975e-01  6.669483e-01 #> [1872,]  0.5320116878 -2.827826e-01  7.983372e-01 #> [1873,]  0.5337446332 -1.374404e-01  8.193038e-01 #> [1874,]  0.4874188006 -4.781062e-04  8.611410e-01 #> [1875,]  0.4762823284  2.915917e-02  8.752727e-01 #> [1876,]  0.4446749389  3.708496e-02  8.863293e-01 #> [1877,]  0.4296127260  4.967689e-02  8.904986e-01 #> [1878,]  0.3673042655  8.691669e-02  9.118523e-01 #> [1879,]  0.3288219571  1.569890e-01  9.240360e-01 #> [1880,]  0.2296372801  2.026608e-01  9.275221e-01 #> [1881,]  0.1912066638  1.878946e-01  9.594306e-01 #> [1882,]  0.1265624613  1.948289e-01  9.513258e-01 #> [1883,]  0.1112775579  1.435379e-01  9.791155e-01 #> [1884,]  0.1905293465  1.046970e-01  9.745296e-01 #> [1885,]  0.1608234644  1.138273e-01  9.725334e-01 #> [1886,]  0.1937044859  3.184880e-02  9.889414e-01 #> [1887,]  0.0916448906  1.797304e-02  9.600582e-01 #> [1888,] -0.0704620183  1.175523e-01  9.833922e-01 #> [1889,]  0.0124990866  4.047106e-01  9.014442e-01 #> [1890,]  0.0376714803  7.939659e-01  6.147994e-01 #> [1891,]  0.0862186253  9.070144e-01  4.599945e-01 #> [1892,]  0.1730742157  9.132135e-01  3.676811e-01 #> [1893,]  0.2214170694  9.339309e-01  3.200383e-01 #> [1894,]  0.3370459676  9.030349e-01  3.243724e-01 #> [1895,]  0.3876134157  8.512871e-01  3.604056e-01 #> [1896,]  0.5246868134  7.250963e-01  4.655824e-01 #> [1897,]  0.6621475816  6.172377e-01  4.933219e-01 #> [1898,]  0.5446264744  4.944644e-01  6.331781e-01 #> [1899,]  0.4895847738  3.214917e-01  8.121438e-01 #> [1900,]  0.4892190993  1.845627e-01  8.412996e-01 #> [1901,]  0.4055399299  6.604747e-02  8.964338e-01 #> [1902,]  0.3824684918 -5.585840e-02  9.168437e-01 #> [1903,]  0.3261514306 -1.281004e-01  9.245455e-01 #> [1904,]  0.3602539003 -1.737988e-01  9.183196e-01 #> [1905,]  0.3054881990 -2.341877e-01  8.975925e-01 #> [1906,]  0.2781465650 -2.216711e-01  9.357621e-01 #> [1907,]  0.2430188358 -1.222224e-01  9.381406e-01 #> [1908,]  0.1708754152 -6.062957e-02  9.766965e-01 #> [1909,]  0.2011864483  9.617826e-02  9.606188e-01 #> [1910,]  0.1257419735  3.304072e-01  9.236864e-01 #> [1911,]  0.1970291883  4.491238e-01  8.870191e-01 #> [1912,]  0.2086348981  6.318498e-01  7.206615e-01 #> [1913,]  0.1786248684  7.210234e-01  6.811183e-01 #> [1914,]  0.2691049874  6.833300e-01  6.879067e-01 #> [1915,]  0.2515572906  6.910503e-01  6.691006e-01 #> [1916,]  0.2882920802  6.266476e-01  7.280725e-01 #> [1917,]  0.2928249836  5.294308e-01  7.871897e-01 #> [1918,]  0.2923668623  4.433929e-01  8.464763e-01 #> [1919,]  0.3144996464  3.230272e-01  8.865317e-01 #> [1920,]  0.3931985199  2.048283e-01  8.979697e-01 #> [1921,]  0.4417781830  1.817275e-01  8.885178e-01 #> [1922,]  0.5075502396  1.634806e-01  8.590026e-01 #> [1923,]  0.5315821171  1.228272e-01  8.363512e-01 #> [1924,]  0.5369386673  1.476807e-01  8.329738e-01 #> [1925,]  0.5259041190  2.521372e-01  8.046545e-01 #> [1926,]  0.5085160136  2.909783e-01  8.129623e-01 #> [1927,]  0.4770073593  2.703816e-01  8.190526e-01 #> [1928,]  0.4514469206  2.589243e-01  8.551871e-01 #> [1929,]  0.4952492714  1.073851e-01  8.584723e-01 #> [1930,]  0.3931077123 -1.024147e-01  8.892320e-01 #> [1931,]  0.4240078628 -2.526776e-01  8.775477e-01 #> [1932,]  0.4234180748 -3.779559e-01  8.079897e-01 #> [1933,]  0.3836344481 -4.040678e-01  8.238619e-01 #> [1934,]  0.3560169339 -3.315567e-01  8.534050e-01 #> [1935,]  0.3339253664 -2.303199e-01  9.021601e-01 #> [1936,]  0.5172030926 -1.295845e-01  8.754386e-01 #> [1937,]  0.5321938992  1.916545e-02  8.291189e-01 #> [1938,]  0.4351553321  1.577924e-01  8.775548e-01 #> [1939,]  0.4434639215  2.662676e-01  8.516316e-01 #> [1940,]  0.3408448696  4.059484e-01  8.237649e-01 #> [1941,]  0.2911975384  5.337914e-01  7.933774e-01 #> [1942,]  0.3347226977  6.392242e-01  7.004368e-01 #> [1943,]  0.4055116475  6.439735e-01  6.622604e-01 #> [1944,]  0.4493405819  6.178114e-01  6.511111e-01 #> [1945,]  0.5459646583  5.475941e-01  6.599010e-01 #> [1946,]  0.5341650844  4.054121e-01  7.289633e-01 #> [1947,]  0.4893433452  2.427555e-01  8.316583e-01 #> [1948,]  0.4917616546  9.869791e-02  8.576607e-01 #> [1949,]  0.4562639892 -3.645856e-02  8.765327e-01 #> [1950,]  0.4583006501 -1.648547e-01  8.697462e-01 #> [1951,]  0.4353919923 -2.649447e-01  8.505845e-01 #> [1952,]  0.3922925293 -3.600361e-01  8.346241e-01 #> [1953,]  0.3875889778 -4.582452e-01  7.993400e-01 #> [1954,]  0.4199388325 -5.471662e-01  7.258151e-01 #> [1955,]  0.4715270698 -5.357393e-01  7.052656e-01 #> [1956,]  0.5762492418 -4.208182e-01  7.107994e-01 #> [1957,]  0.5802022219 -3.182290e-01  7.431728e-01 #> [1958,]  0.6049967408 -2.454898e-01  7.582884e-01 #> [1959,]  0.5826413631 -1.329315e-01  7.892345e-01 #> [1960,]  0.5457022786 -4.832789e-02  8.281831e-01 #> [1961,]  0.5093615055  2.691982e-02  8.454500e-01 #> [1962,]  0.5163406134  1.178605e-01  8.486472e-01 #> [1963,]  0.4961943626  2.151091e-01  8.298769e-01 #> [1964,]  0.4912186861  2.649320e-01  8.300153e-01 #> [1965,]  0.4933792353  2.796129e-01  8.166658e-01 #> [1966,]  0.4918987751  2.880283e-01  8.208261e-01 #> [1967,]  0.4882955253  2.877136e-01  8.192495e-01 #> [1968,]  0.5035386682  2.652030e-01  8.257014e-01 #> [1969,]  0.4831788242  2.084183e-01  8.371623e-01 #> [1970,]  0.4725820720  1.615428e-01  8.647459e-01 #> [1971,]  0.4652290940  1.549411e-01  8.574802e-01 #> [1972,]  0.4386165738  1.364043e-01  8.798236e-01 #> [1973,]  0.5817478299  1.099397e-01  8.353440e-01 #> [1974,]  0.5245472789  1.251492e-01  8.184482e-01 #> [1975,]  0.4816473126  8.826638e-02  8.721204e-01 #> [1976,]  0.5004464388  3.416029e-02  8.582448e-01 #> [1977,]  0.4772809744 -3.617763e-02  8.714039e-01 #> [1978,]  0.5107055306 -1.204334e-01  8.516405e-01 #> [1979,]  0.4262243807 -1.562212e-01  8.690681e-01 #> [1980,]  0.4798884690 -1.755326e-01  8.688319e-01 #> [1981,]  0.4701053202 -1.476074e-01  8.527339e-01 #> [1982,]  0.4472029507 -1.113548e-01  8.870285e-01 #> [1983,]  0.4569169879 -6.622602e-02  8.765251e-01 #> [1984,]  0.4457923174 -2.876024e-02  8.920926e-01 #> [1985,]  0.4458675683  2.989979e-02  8.850117e-01 #> [1986,]  0.3659072518  1.089279e-01  9.093684e-01 #> [1987,]  0.3460144401  1.552067e-01  9.178622e-01 #> [1988,]  0.3310246170  1.953479e-01  9.146963e-01 #> [1989,]  0.3275550306  2.244430e-01  9.107560e-01 #> [1990,]  0.2874705493  2.533539e-01  9.092851e-01 #> [1991,]  0.2879216969  2.250759e-01  9.318355e-01 #> [1992,]  0.3191027045  1.109866e-01  9.337219e-01 #> [1993,]  0.3338634074  8.290741e-03  9.390392e-01 #> [1994,]  0.3335304558 -1.118797e-01  9.386556e-01 #> [1995,]  0.4977723062 -4.542390e-01  7.950553e-01 #> [1996,]  0.6188865900 -2.419818e-01  6.759311e-01 #> [1997,]  0.5560808182  3.952982e-01  7.591069e-01 #> [1998,]  0.6720048785  2.598222e-01  7.377962e-01 #> [1999,]  0.6629823446 -2.205130e-01  6.934473e-01 #> [2000,]  0.5763276219 -4.186478e-01  7.002991e-01 #> [2001,]  0.6830671430 -4.291662e-01  6.044534e-01 #> [2002,]  0.6796407104 -4.089433e-01  5.949641e-01 #> [2003,]  0.7005479336 -4.195348e-01  5.847621e-01 #> [2004,]  0.7092761993 -4.376566e-01  5.436413e-01 #> [2005,]  0.7111094594 -4.654641e-01  5.283295e-01 #> [2006,]  0.7193920016 -4.767556e-01  4.983349e-01 #> [2007,]  0.7126471996 -4.890658e-01  4.897667e-01 #> [2008,]  0.7786430120 -5.104153e-01  3.938075e-01 #> [2009,]  0.7399634123 -5.143499e-01  4.002173e-01 #> [2010,]  0.7744024992 -5.277743e-01  3.521846e-01 #> [2011,]  0.8357045650 -5.138705e-01  2.377021e-01 #> [2012,]  0.8049307466 -4.959112e-01  2.960050e-01 #> [2013,]  0.8315445781 -4.899224e-01  2.907789e-01 #> [2014,]  0.8214513063 -4.555572e-01  3.217691e-01 #> [2015,]  0.8292895555 -4.313076e-01  3.658732e-01 #> [2016,]  0.8233519793 -4.086859e-01  3.817356e-01 #> [2017,]  0.8272335529 -3.858175e-01  4.149542e-01 #> [2018,]  0.8276679516 -3.661137e-01  4.178322e-01 #> [2019,]  0.8144434094 -3.328157e-01  4.736741e-01 #> [2020,]  0.8219196200 -2.827775e-01  4.942035e-01 #> [2021,]  0.7895496488 -2.625483e-01  5.402787e-01 #> [2022,]  0.8096978664 -2.906635e-01  5.223750e-01 #> [2023,]  0.7705681324 -2.903698e-01  5.447529e-01 #> [2024,]  0.7967656851 -3.365353e-01  5.019158e-01 #> [2025,]  0.8277490139 -4.224565e-01  3.784690e-01 #> [2026,]  0.8400555253 -4.375699e-01  3.210454e-01 #> [2027,]  0.8887493014 -4.135073e-01  2.301832e-01 #> [2028,]  0.8820369244 -3.972371e-01  2.426020e-01 #> [2029,]  0.9029440880 -3.789677e-01  2.412367e-01 #> [2030,]  0.8776752353 -3.432666e-01  2.999935e-01 #> [2031,]  0.8879218102 -3.390010e-01  3.295652e-01 #> [2032,]  0.8837426305 -3.305448e-01  3.169705e-01 #> [2033,]  0.8702591658 -3.044578e-01  3.862240e-01 #> [2034,]  0.8847452998 -2.763426e-01  3.869267e-01 #> [2035,]  0.8463369012 -2.425708e-01  4.579432e-01 #> [2036,]  0.8554205298 -2.286795e-01  4.822513e-01 #> [2037,]  0.8151420951 -1.904532e-01  5.267643e-01 #> [2038,]  0.8096128106 -1.879527e-01  5.669844e-01 #> [2039,]  0.7839023471 -1.771604e-01  5.796705e-01 #> [2040,]  0.7707841992 -1.732396e-01  6.164989e-01 #> [2041,]  0.7676762342 -1.773364e-01  6.079608e-01 #> [2042,]  0.7431315184 -1.525862e-01  6.320215e-01 #> [2043,]  0.8677199483 -1.522560e-01  5.185819e-01 #> [2044,]  0.8681155443 -1.272317e-01  4.760253e-01 #> [2045,]  0.7977609634 -1.140471e-01  5.772678e-01 #> [2046,]  0.8527410030 -1.261342e-01  5.394023e-01 #> [2047,]  0.7990309596 -1.080769e-01  5.647442e-01 #> [2048,]  0.8331791162 -1.133120e-01  5.601421e-01 #> [2049,]  0.8753284812 -1.086444e-01  4.876684e-01 #> [2050,]  0.8036745787 -9.994661e-02  5.671667e-01 #> [2051,]  0.8460611105 -1.165654e-01  5.459355e-01 #> [2052,]  0.8196644187 -1.053043e-01  5.464823e-01 #> [2053,]  0.8332262039 -1.118041e-01  5.567572e-01 #> [2054,]  0.8292919993 -1.083409e-01  5.404611e-01 #> [2055,]  0.8159818649 -1.169898e-01  5.710321e-01 #> [2056,]  0.8304330111 -1.337314e-01  5.512874e-01 #> [2057,]  0.7794479728 -1.411553e-01  6.024548e-01 #> [2058,]  0.7740344405 -1.725190e-01  6.142259e-01 #> [2059,]  0.7387698293 -1.805536e-01  6.396199e-01 #> [2060,]  0.7357346416 -1.845458e-01  6.565791e-01 #> [2061,]  0.6966960430 -1.925069e-01  6.752076e-01 #> [2062,]  0.7283659577 -2.256297e-01  6.555279e-01 #> [2063,]  0.7247982621 -2.560230e-01  6.240543e-01 #> [2064,]  0.7234358788 -2.842273e-01  6.274746e-01 #> [2065,]  0.7634657025 -3.486756e-01  5.510107e-01 #> [2066,]  0.7348838449 -3.993246e-01  5.406113e-01 #> [2067,]  0.7641068101 -3.950104e-01  5.235500e-01 #> [2068,]  0.7336208820 -3.694898e-01  5.514249e-01 #> [2069,]  0.7669526339 -3.576601e-01  5.499291e-01 #> [2070,]  0.7608402967 -3.312313e-01  5.413558e-01 #> [2071,]  0.7571529746 -3.042666e-01  5.777057e-01 #> [2072,]  0.8077735901 -2.744842e-01  5.339578e-01 #> [2073,]  0.7674532533 -2.319343e-01  5.757626e-01 #> [2074,]  0.8223883510 -2.136663e-01  5.547081e-01 #> [2075,]  0.8020212054 -1.958113e-01  5.527492e-01 #> [2076,]  0.7888920903 -1.916887e-01  5.922558e-01 #> [2077,]  0.7813422084 -1.693910e-01  5.902303e-01 #> [2078,]  0.7695460320 -1.577758e-01  6.180577e-01 #> [2079,]  0.8105773926 -1.520358e-01  5.801766e-01 #> [2080,]  0.7576720119 -1.297621e-01  6.208431e-01 #> [2081,]  0.7992920876 -1.437605e-01  6.047343e-01 #> [2082,]  0.7727614045 -1.187759e-01  6.063915e-01 #> [2083,]  0.7553703189 -1.183825e-01  6.507874e-01 #> [2084,]  0.7562830448 -1.281980e-01  6.382151e-01 #> [2085,]  0.7345806956 -1.284483e-01  6.663414e-01 #> [2086,]  0.7370271683 -1.439471e-01  6.581125e-01 #> [2087,]  0.7156715393 -1.412872e-01  6.785008e-01 #> [2088,]  0.7426398396 -1.337690e-01  6.638485e-01 #> [2089,]  0.7008766532 -1.358578e-01  6.851106e-01 #> [2090,]  0.7273382545 -1.667718e-01  6.771395e-01 #> [2091,]  0.7029341459 -1.784523e-01  6.737860e-01 #> [2092,]  0.7066192031 -1.898515e-01  6.901031e-01 #> [2093,]  0.6963216066 -1.906452e-01  6.811528e-01 #> [2094,]  0.6684523821 -2.093407e-01  7.109219e-01 #> [2095,]  0.6702687144 -2.402247e-01  6.966354e-01 #> [2096,]  0.6531218290 -2.432965e-01  7.086927e-01 #> [2097,]  0.7221590877 -2.629452e-01  6.555817e-01 #> [2098,]  0.6661839485 -2.565161e-01  6.764861e-01 #> [2099,]  0.6964514256 -2.874676e-01  6.635097e-01 #> [2100,]  0.7405396700 -4.395640e-01  5.149768e-01 #> [2101,]  0.7087157965 -5.254477e-01  4.626523e-01 #> [2102,]  0.7910848260 -5.252529e-01  3.366833e-01 #> [2103,]  0.8164895177 -5.223857e-01  2.480256e-01 #> [2104,]  0.8491284847 -4.817047e-01  2.480603e-01 #> [2105,]  0.8659087420 -4.183933e-01  2.703060e-01 #> [2106,]  0.8396629095 -3.693677e-01  3.833074e-01 #> [2107,]  0.8580779433 -3.438461e-01  4.017921e-01 #> [2108,]  0.8193930984 -2.953847e-01  4.666014e-01 #> [2109,]  0.8305386901 -2.635637e-01  5.047814e-01 #> [2110,]  0.8202434778 -2.285342e-01  5.136883e-01 #> [2111,]  0.8096053004 -1.872190e-01  5.656183e-01 #> [2112,]  0.8339827061 -1.788757e-01  5.603859e-01 #> [2113,]  0.8258831501 -1.838858e-01  5.429441e-01 #> [2114,]  0.7822288871 -1.756014e-01  5.692415e-01 #> [2115,]  0.8065997958 -1.721161e-01  5.758703e-01 #> [2116,]  0.8006512523 -1.498354e-01  5.645554e-01 #> [2117,]  0.7704608440 -1.360620e-01  6.133612e-01 #> [2118,]  0.8151106834 -1.365369e-01  5.788459e-01 #> [2119,]  0.7635993958 -1.138578e-01  6.125687e-01 #> [2120,]  0.7917092443 -1.263336e-01  6.153381e-01 #> [2121,]  0.7769799829 -1.135363e-01  6.024968e-01 #> [2122,]  0.7659875154 -9.985791e-02  6.393775e-01 #> [2123,]  0.7863249183 -8.337060e-02  6.134279e-01 #> [2124,]  0.7488120794 -5.927847e-02  6.499747e-01 #> [2125,]  0.7932877541 -6.900527e-02  6.226223e-01 #> [2126,]  0.7454540133 -5.348977e-02  6.411049e-01 #> [2127,]  0.7821862102 -4.817600e-02  6.411092e-01 #> [2128,]  0.7861474156 -3.530178e-02  6.097451e-01 #> [2129,]  0.7493587136 -3.024768e-02  6.575598e-01 #> [2130,]  0.7959657907 -3.540811e-02  6.239616e-01 #> [2131,]  0.7172392011 -3.032894e-02  6.656011e-01 #> [2132,]  0.7721867561 -6.365181e-02  6.445941e-01 #> [2133,]  0.8713335395 -6.877638e-02  5.284537e-01 #> [2134,]  0.7697113156 -4.201413e-02  5.982481e-01 #> [2135,]  0.7928937078 -5.318757e-02  6.245503e-01 #> [2136,]  0.8427225351 -4.861710e-02  5.558147e-01 #> [2137,]  0.7629975080 -2.866244e-02  6.241729e-01 #> [2138,]  0.8143586516 -2.806092e-02  6.091319e-01 #> [2139,]  0.7775137424 -1.230006e-02  6.091620e-01 #> [2140,]  0.7839590311 -2.850481e-02  6.287822e-01 #> [2141,]  0.8376246095 -3.627509e-02  5.610479e-01 #> [2142,]  0.7601320148 -3.132366e-02  6.262382e-01 #> [2143,]  0.8044150472 -5.089354e-02  6.192427e-01 #> [2144,]  0.7662380338 -3.937576e-02  6.208084e-01 #> [2145,]  0.7596653104 -5.757283e-02  6.561300e-01 #> [2146,]  0.7893505692 -7.352947e-02  6.138821e-01 #> [2147,]  0.7385959625 -6.590340e-02  6.579342e-01 #> [2148,]  0.7874955535 -6.446549e-02  6.334402e-01 #> [2149,]  0.7374817729 -3.615030e-02  6.507050e-01 #> [2150,]  0.7715090513 -4.424291e-02  6.538945e-01 #> [2151,]  0.7880999446 -3.446522e-02  6.114101e-01 #> [2152,]  0.7315856218 -1.221486e-02  6.665816e-01 #> [2153,]  0.8304911852 -1.901204e-02  5.961013e-01 #> [2154,]  0.7804365754  1.544236e-02  5.995527e-01 #> [2155,]  0.7652233243  2.698943e-02  6.550933e-01 #> [2156,]  0.7929448485  4.074590e-02  6.157189e-01 #> [2157,]  0.7357686162  4.415097e-02  6.597239e-01 #> [2158,]  0.8019152284  8.989387e-04  6.255473e-01 #> [2159,]  0.7578809857 -1.427772e-03  6.322757e-01 #> [2160,]  0.7642709017 -1.146757e-02  6.588497e-01 #> [2161,]  0.7820177078 -6.810059e-03  6.224286e-01 #> [2162,]  0.7369452119 -3.509279e-03  6.677494e-01 #> [2163,]  0.7898682952 -1.434351e-02  6.352559e-01 #> [2164,]  0.7388542295  6.552669e-03  6.488503e-01 #> [2165,]  0.7956799269 -1.384438e-02  6.296175e-01 #> [2166,]  0.8096243143 -1.852158e-02  5.861049e-01 #> [2167,]  0.7398914099 -4.432564e-03  6.576671e-01 #> [2168,]  0.8259720802 -8.763053e-03  6.028721e-01 #> [2169,]  0.7646706700  5.076234e-03  6.166113e-01 #> [2170,]  0.7668609619 -6.558820e-03  6.516065e-01 #> [2171,]  0.8255328536 -9.283656e-04  5.814916e-01 #> [2172,]  0.7497837543  2.519457e-02  6.393005e-01 #> [2173,]  0.7998402119  2.673910e-02  6.290148e-01 #> [2174,]  0.7707700729  5.262493e-02  6.169674e-01 #> [2175,]  0.7769795060  4.550469e-02  6.381130e-01 #> [2176,]  0.8164471388  4.123288e-02  5.898582e-01 #> [2177,]  0.7410153151  5.278929e-02  6.499211e-01 #> [2178,]  0.7889077067  3.280723e-02  6.392679e-01 #> [2179,]  0.7490507960  4.628282e-02  6.411924e-01 #> [2180,]  0.7648999095  3.641104e-02  6.575737e-01 #> [2181,]  0.7916458249  3.999516e-02  6.129785e-01 #> [2182,]  0.7245869637  5.812164e-02  6.693933e-01 #> [2183,]  0.8059821725  4.143654e-02  6.229717e-01 #> [2184,]  0.7631001472  6.599144e-02  6.205888e-01 #> [2185,]  0.7593683600  7.066872e-02  6.609414e-01 #> [2186,]  0.7851747870  6.918155e-02  6.208981e-01 #> [2187,]  0.7309597135  7.372593e-02  6.639992e-01 #> [2188,]  0.8065404296  5.907554e-02  6.202967e-01 #> [2189,]  0.7504205108  7.998038e-02  6.299869e-01 #> [2190,]  0.7575371265  7.140696e-02  6.632403e-01 #> [2191,]  0.7948698997  7.316706e-02  6.104738e-01 #> [2192,]  0.7268623710  9.514792e-02  6.632454e-01 #> [2193,]  0.8015895486  8.960461e-02  6.240830e-01 #> [2194,]  0.7590897083  1.032818e-01  6.204773e-01 #> [2195,]  0.7573898435  8.965994e-02  6.592550e-01 #> [2196,]  0.7875314355  9.422971e-02  6.151710e-01 #> [2197,]  0.7312827110  1.035340e-01  6.592531e-01 #> [2198,]  0.8072456717  8.015939e-02  6.182311e-01 #> [2199,]  0.7559111118  9.427106e-02  6.254787e-01 #> [2200,]  0.7536351085  8.042558e-02  6.664940e-01 #> [2201,]  0.7781599164  7.716695e-02  6.270012e-01 #> [2202,]  0.7056098580  9.189180e-02  6.794198e-01 #> [2203,]  0.8146952987  6.822605e-02  6.181443e-01 #> [2204,]  0.7932320833  8.335142e-02  5.886345e-01 #> [2205,]  0.7258372903  8.868462e-02  6.746945e-01 #> [2206,]  0.8054509163  7.694169e-02  6.196551e-01 #> [2207,]  0.7367805839  9.108039e-02  6.418596e-01 #> [2208,]  0.7696670294  6.784620e-02  6.586226e-01 #> [2209,]  0.7887258530  7.474755e-02  6.131104e-01 #> [2210,]  0.7071732283  7.442767e-02  6.868929e-01 #> [2211,]  0.7819374800  4.161764e-02  6.522318e-01 #> [2212,]  0.7238709331  6.307276e-02  6.596082e-01 #> [2213,]  0.7268833518  5.540062e-02  6.959735e-01 #> [2214,]  0.7813562155  6.927639e-02  6.340186e-01 #> [2215,]  0.6846090555  8.928452e-02  6.950841e-01 #> [2216,]  0.7741990685  4.137851e-02  6.652835e-01 #> [2217,]  0.7808724642  3.561265e-02  6.172057e-01 #> [2218,]  0.6932410598  4.541596e-02  7.014392e-01 #> [2219,]  0.7976998091  4.614008e-02  6.424536e-01 #> [2220,]  0.7396289110  7.294756e-02  6.429067e-01 #> [2221,]  0.7176560163  6.161948e-02  6.968757e-01 #> [2222,]  0.8080911040  6.086385e-02  6.161152e-01 #> [2223,]  0.7153451443  8.924577e-02  6.638572e-01 #> [2224,]  0.7594131827  7.346988e-02  6.712406e-01 #> [2225,]  0.7705478072  9.004769e-02  6.266077e-01 #> [2226,]  0.7229734063  1.034922e-01  6.783026e-01 #> [2227,]  0.7932294607  1.016040e-01  6.311722e-01 #> [2228,]  0.7132028341  1.342110e-01  6.581182e-01 #> [2229,]  0.7628245354  1.252688e-01  6.527581e-01 #> [2230,]  0.8440976739  1.340706e-01  5.531511e-01 #> [2231,]  0.7374461889  1.596682e-01  6.279033e-01 #> [2232,]  0.7846488357  1.418241e-01  6.349346e-01 #> [2233,]  0.7704259753  1.622229e-01  6.055745e-01 #> [2234,]  0.7342965007  1.568550e-01  6.577979e-01 #> [2235,]  0.8123286963  1.276511e-01  6.024668e-01 #> [2236,]  0.7248798013  1.450788e-01  6.432814e-01 #> [2237,]  0.7601753473  1.316719e-01  6.592101e-01 #> [2238,]  0.7881219387  1.359698e-01  6.044676e-01 #> [2239,]  0.7087498903  1.424381e-01  6.704696e-01 #> [2240,]  0.8119003177  1.210882e-01  6.131449e-01 #> [2241,]  0.7777025104  1.476915e-01  5.935236e-01 #> [2242,]  0.7388138175  1.509943e-01  6.589442e-01 #> [2243,]  0.8095820546  1.498965e-01  5.967346e-01 #> [2244,]  0.7301899195  1.767683e-01  6.305066e-01 #> [2245,]  0.7958923578  1.530487e-01  6.144478e-01 #> [2246,]  0.8409603834  1.523249e-01  5.388103e-01 #> [2247,]  0.7319239974  1.659192e-01  6.314072e-01 #> [2248,]  0.8161405325  1.439272e-01  6.007967e-01 #> [2249,]  0.8099702001  1.603848e-01  5.557895e-01 #> [2250,]  0.7461126447  1.665322e-01  6.356924e-01 #> [2251,]  0.8258231878  1.550567e-01  5.825303e-01 #> [2252,]  0.7502117753  1.792988e-01  6.072054e-01 #> [2253,]  0.7695530653  1.640544e-01  6.363938e-01 #> [2254,]  0.8077749014  1.536311e-01  5.801645e-01 #> [2255,]  0.7337263227  1.537531e-01  6.467088e-01 #> [2256,]  0.7920455337  1.400115e-01  6.238301e-01 #> [2257,]  0.7435308099  1.538393e-01  6.271470e-01 #> [2258,]  0.7642149925  1.279465e-01  6.482522e-01 #> [2259,]  0.7990810275  1.218213e-01  5.984295e-01 #> [2260,]  0.7165296674  1.389547e-01  6.621711e-01 #> [2261,]  0.8075560331  1.283765e-01  6.163479e-01 #> [2262,]  0.7746466994  1.646477e-01  5.927691e-01 #> [2263,]  0.7368820310  1.770642e-01  6.533333e-01 #> [2264,]  0.8176352382  1.745197e-01  5.836336e-01 #> [2265,]  0.7300288677  1.988001e-01  6.241133e-01 #> [2266,]  0.7690759897  1.746131e-01  6.392061e-01 #> [2267,]  0.7935293317  1.843277e-01  5.839215e-01 #> [2268,]  0.7303938270  1.918981e-01  6.442721e-01 #> [2269,]  0.8036568165  1.626328e-01  6.072201e-01 #> [2270,]  0.7418068051  1.767095e-01  6.213325e-01 #> [2271,]  0.7550987601  1.543130e-01  6.549150e-01 #> [2272,]  0.7863587141  1.379403e-01  6.100135e-01 #> [2273,]  0.7094592452  1.382662e-01  6.720012e-01 #> [2274,]  0.7959277630  1.139314e-01  6.335033e-01 #> [2275,]  0.7422644496  1.358519e-01  6.309734e-01 #> [2276,]  0.7171483636  1.302444e-01  6.895823e-01 #> [2277,]  0.7949379683  1.277727e-01  6.199228e-01 #> [2278,]  0.7028167844  1.562002e-01  6.665128e-01 #> [2279,]  0.7579374909  1.255158e-01  6.701100e-01 #> [2280,]  0.7518386245  1.259248e-01  6.365664e-01 #> [2281,]  0.6852719784  1.234674e-01  7.094285e-01 #> [2282,]  0.7565156221  9.791613e-02  6.702676e-01 #> [2283,]  0.6995328665  1.055200e-01  6.847648e-01 #> [2284,]  0.7242129445  8.942474e-02  7.029761e-01 #> [2285,]  0.7173045278  9.441388e-02  6.801903e-01 #> [2286,]  0.6954973936  9.746108e-02  7.141978e-01 #> [2287,]  0.7344570160  1.025305e-01  6.825702e-01 #> [2288,]  0.6544382572  1.186315e-01  7.217873e-01 #> [2289,]  0.7404097915  9.256612e-02  6.968555e-01 #> [2290,]  0.7396353483  1.085853e-01  6.564693e-01 #> [2291,]  0.6429750323  1.215990e-01  7.377468e-01 #> [2292,]  0.7601975799  1.012935e-01  6.807323e-01 #> [2293,]  0.7185615301  1.327552e-01  6.611431e-01 #> [2294,]  0.6545301080  1.453311e-01  7.339649e-01 #> [2295,]  0.7796738744  1.318087e-01  6.557764e-01 #> [2296,]  0.7053158879  1.507540e-01  6.637776e-01 #> [2297,]  0.6921649575  1.389870e-01  7.145723e-01 #> [2298,]  0.7938638330  1.282262e-01  6.309849e-01 #> [2299,]  0.6837354898  1.484963e-01  6.805614e-01 #> [2300,]  0.7122996449  1.320204e-01  7.110361e-01 #> [2301,]  0.7357464433  1.345641e-01  6.646956e-01 #> [2302,]  0.6639613509  1.395278e-01  7.227626e-01 #> [2303,]  0.7351742387  1.250408e-01  6.923177e-01 #> [2304,]  0.6703541875  1.435624e-01  7.008553e-01 #> [2305,]  0.7014240623  1.326383e-01  7.162274e-01 #> [2306,]  0.7685986757  1.471574e-01  6.437942e-01 #> [2307,]  0.6415330172  1.745943e-01  7.140999e-01 #> [2308,]  0.7143189907  1.337848e-01  7.153792e-01 #> [2309,]  0.7305493951  1.413931e-01  6.655400e-01 #> [2310,]  0.6224889159  1.555113e-01  7.473973e-01 #> [2311,]  0.7248073816  1.181279e-01  7.140065e-01 #> [2312,]  0.6763173342  1.250599e-01  7.009323e-01 #> [2313,]  0.6251656413  1.190652e-01  7.664838e-01 #> [2314,]  0.7479751706  1.063785e-01  6.916549e-01 #> [2315,]  0.6571654677  1.384565e-01  7.091411e-01 #> [2316,]  0.6569718719  1.295530e-01  7.543079e-01 #> [2317,]  0.7321311235  1.270141e-01  6.872970e-01 #> [2318,]  0.6179295182  1.492920e-01  7.410853e-01 #> [2319,]  0.6966251135  1.279875e-01  7.341848e-01 #> [2320,]  0.7240921259  1.446911e-01  6.751323e-01 #> [2321,]  0.6195685267  1.564538e-01  7.504295e-01 #> [2322,]  0.7203652263  1.300605e-01  7.148817e-01 #> [2323,]  0.6789584756  1.556890e-01  6.955920e-01 #> [2324,]  0.6498765945  1.429639e-01  7.456397e-01 #> [2325,]  0.7571288347  1.266061e-01  6.748732e-01 #> [2326,]  0.6464026570  1.645056e-01  7.120870e-01 #> [2327,]  0.6671128273  1.454037e-01  7.479478e-01 #> [2328,]  0.7316281199  1.447873e-01  6.805978e-01 #> [2329,]  0.6105191708  1.667472e-01  7.444648e-01 #> [2330,]  0.6981637478  1.311823e-01  7.350512e-01 #> [2331,]  0.7182086110  1.379744e-01  6.809830e-01 #> [2332,]  0.5979886651  1.392669e-01  7.661614e-01 #> [2333,]  0.7060525417  9.275453e-02  7.363163e-01 #> [2334,]  0.6776580811  1.047778e-01  7.088207e-01 #> [2335,]  0.6147138476  9.919050e-02  7.763060e-01 #> [2336,]  0.7194958329  8.018983e-02  7.201465e-01 #> [2337,]  0.6262222528  1.084246e-01  7.401155e-01 #> [2338,]  0.6409277916  8.761883e-02  7.763247e-01 #> [2339,]  0.7072269320  8.677184e-02  7.136939e-01 #> [2340,]  0.5946291685  1.092010e-01  7.678156e-01 #> [2341,]  0.6930378675  7.780526e-02  7.476964e-01 #> [2342,]  0.7079873085  9.152215e-02  6.957689e-01 #> [2343,]  0.6006749272  1.029013e-01  7.772665e-01 #> [2344,]  0.6885591149  7.851491e-02  7.496053e-01 #> [2345,]  0.6206864715  1.016438e-01  7.484384e-01 #> [2346,]  0.6080233455  1.039870e-01  7.894119e-01 #> [2347,]  0.7260249257  1.049113e-01  7.129323e-01 #> [2348,]  0.6047355533  1.430563e-01  7.486745e-01 #> [2349,]  0.6150285006  1.210799e-01  7.874851e-01 #> [2350,]  0.7358676791  1.094659e-01  7.013341e-01 #> [2351,]  0.6105856299  1.444172e-01  7.435319e-01 #> [2352,]  0.6304127574  1.190545e-01  7.803580e-01 #> [2353,]  0.7153814435  1.045640e-01  7.115710e-01 #> [2354,]  0.5917443037  1.188635e-01  7.642249e-01 #> [2355,]  0.6662787795  9.133314e-02  7.608899e-01 #> [2356,]  0.7553058267  9.468062e-02  6.747004e-01 #> [2357,]  0.6028418541  1.254717e-01  7.517260e-01 #> [2358,]  0.6497157812  1.161007e-01  7.739282e-01 #> [2359,]  0.7029646039  1.176137e-01  7.095548e-01 #> [2360,]  0.5778766274  1.201530e-01  7.775605e-01 #> [2361,]  0.6848338246  8.997422e-02  7.547193e-01 #> [2362,]  0.7185319066  1.015347e-01  6.911275e-01 #> [2363,]  0.5769770741  1.196880e-01  7.799363e-01 #> [2364,]  0.6723547578  1.021132e-01  7.659160e-01 #> [2365,]  0.6702242494  1.170814e-01  7.215945e-01 #> [2366,]  0.5776034594  1.128295e-01  7.925360e-01 #> [2367,]  0.6973016858  8.622021e-02  7.477218e-01 #> [2368,]  0.6340889931  1.094751e-01  7.387650e-01 #> [2369,]  0.5686213374  1.073330e-01  8.086558e-01 #> [2370,]  0.7024271488  9.225705e-02  7.402693e-01 #> [2371,]  0.6234778762  1.204654e-01  7.455184e-01 #> [2372,]  0.5934426785  1.070092e-01  8.052875e-01 #> [2373,]  0.6341908574  9.011978e-02  7.757279e-01 #> [2374,]  0.5397120714  1.015061e-01  8.167773e-01 #> [2375,]  0.5949148536  9.181283e-02  8.042904e-01 #> [2376,]  0.6700266600  9.383692e-02  7.432417e-01 #> [2377,]  0.6985116601  1.058681e-01  7.258142e-01 #> [2378,]  0.6102172732  1.311585e-01  7.554371e-01 #> [2379,]  0.5444542170  1.305289e-01  8.213536e-01 #> [2380,]  0.6464148760  1.128881e-01  7.812290e-01 #> [2381,]  0.5696562529  1.213924e-01  7.854749e-01 #> [2382,]  0.5546957254  9.788140e-02  8.231299e-01 #> [2383,]  0.7169036269  7.879601e-02  7.366799e-01 #> [2384,]  0.6363882422  1.145906e-01  7.379869e-01 #> [2385,]  0.5400136709  1.198391e-01  8.201406e-01 #> [2386,]  0.6722376347  9.505024e-02  7.700235e-01 #> [2387,]  0.6140355468  1.150210e-01  7.576691e-01 #> [2388,]  0.5356846452  1.031688e-01  8.262849e-01 #> [2389,]  0.6962243319  6.932239e-02  7.573627e-01 #> [2390,]  0.6394401193  1.032201e-01  7.405904e-01 #> [2391,]  0.5265291333  1.125899e-01  8.268205e-01 #> [2392,]  0.6584795117  8.328006e-02  7.810777e-01 #> [2393,]  0.6154234409  1.052774e-01  7.622258e-01 #> [2394,]  0.5290810466  1.059125e-01  8.282357e-01 #> [2395,]  0.6754384041  7.889713e-02  7.690496e-01 #> [2396,]  0.6579047441  1.065979e-01  7.371424e-01 #> [2397,]  0.5295749307  1.202187e-01  8.159937e-01 #> [2398,]  0.6573024392  8.616767e-02  7.785424e-01 #> [2399,]  0.6969079971  9.565996e-02  7.161823e-01 #> [2400,]  0.5902310014  1.128501e-01  7.844970e-01 #> [2401,]  0.6290495396  9.942393e-02  7.930000e-01 #> [2402,]  0.5581771135  1.061848e-01  8.074508e-01 #> [2403,]  0.5247957706  9.518834e-02  8.418206e-01 #> [2404,]  0.5800685287  6.778017e-02  8.124709e-01 #> [2405,]  0.5768911242  5.481200e-02  8.052115e-01 #> [2406,]  0.6487394571  5.153919e-02  7.766314e-01 #> [2407,]  0.6564013362  7.707718e-02  7.502594e-01 #> [2408,]  0.5662709475  1.033427e-01  8.020122e-01 #> [2409,]  0.5957596898  9.687725e-02  8.134429e-01 #> [2410,]  0.5387971997  1.006652e-01  8.218328e-01 #> [2411,]  0.5087027550  8.835361e-02  8.501758e-01 #> [2412,]  0.6022878885  7.486773e-02  8.013171e-01 #> [2413,]  0.6682108641  8.517735e-02  7.594978e-01 #> [2414,]  0.6279747486  1.191183e-01  7.586114e-01 #> [2415,]  0.5271264911  1.265022e-01  8.191470e-01 #> [2416,]  0.6375676394  8.993974e-02  7.957935e-01 #> [2417,]  0.6252166033  1.112348e-01  7.605200e-01 #> [2418,]  0.5298462510  1.079946e-01  8.271218e-01 #> [2419,]  0.6362821460  7.700604e-02  7.955269e-01 #> [2420,]  0.5662838221  1.101703e-01  7.895859e-01 #> [2421,]  0.5353356600  9.392609e-02  8.365384e-01 #> [2422,]  0.6756309271  6.893973e-02  7.703441e-01 #> [2423,]  0.5732904077  1.151154e-01  7.808288e-01 #> [2424,]  0.5209252834  9.762707e-02  8.418717e-01 #> [2425,]  0.6727533340  4.881724e-02  7.742714e-01 #> [2426,]  0.5956316590  6.736892e-02  7.748652e-01 #> [2427,]  0.5395195484  5.670698e-02  8.402824e-01 #> [2428,]  0.5941465497  3.655711e-02  8.118537e-01 #> [2429,]  0.5093790889  4.931054e-02  8.399347e-01 #> [2430,]  0.5577027202  4.797971e-02  8.331944e-01 #> [2431,]  0.6546909213  5.376957e-02  7.652996e-01 #> [2432,]  0.6930063367  7.154159e-02  7.375821e-01 #> [2433,]  0.5942216516  1.079807e-01  7.694820e-01 #> [2434,]  0.5339482427  1.088810e-01  8.334264e-01 #> [2435,]  0.6415336728  7.997026e-02  7.872052e-01 #> [2436,]  0.5632662177  7.901694e-02  7.963753e-01 #> [2437,]  0.5588523149  6.858665e-02  8.376852e-01 #> [2438,]  0.5707904696  5.936613e-02  8.162341e-01 #> [2439,]  0.4810686111  5.654294e-02  8.588089e-01 #> [2440,]  0.5563196540  5.761261e-02  8.348665e-01 #> [2441,]  0.6411693692  7.645430e-02  7.785078e-01 #> [2442,]  0.6372156143  1.128153e-01  7.671888e-01 #> [2443,]  0.5095199347  1.452856e-01  8.175078e-01 #> [2444,]  0.5483392477  1.136937e-01  8.392495e-01 #> [2445,]  0.6635554433  1.022744e-01  7.672350e-01 #> [2446,]  0.5208407640  1.320944e-01  8.076320e-01 #> [2447,]  0.5405407548  1.004538e-01  8.477008e-01 #> [2448,]  0.6305782795  1.001011e-01  7.859369e-01 #> [2449,]  0.4868407547  1.540772e-01  8.255375e-01 #> [2450,]  0.5371534824  1.531259e-01  8.426237e-01 #> [2451,]  0.6572338343  1.505472e-01  7.684631e-01 #> [2452,]  0.5108578205  1.669284e-01  8.083920e-01 #> [2453,]  0.4813502431  1.376930e-01  8.640349e-01 #> [2454,]  0.6368715167  1.164249e-01  7.973573e-01 #> [2455,]  0.5578919053  1.488520e-01  7.931972e-01 #> [2456,]  0.4428562224  1.420941e-01  8.692727e-01 #> [2457,]  0.5865104795  9.630440e-02  8.336296e-01 #> [2458,]  0.6010397077  1.234598e-01  7.873976e-01 #> [2459,]  0.4428659379  1.481057e-01  8.565897e-01 #> [2460,]  0.5290649533  9.401836e-02  8.643820e-01 #> [2461,]  0.5836879611  9.746203e-02  8.115745e-01 #> [2462,]  0.4183436930  1.236568e-01  8.688417e-01 #> [2463,]  0.4683428109  7.356483e-02  8.908939e-01 #> [2464,]  0.6024361849  6.091750e-02  8.224744e-01 #> [2465,]  0.4818366766  1.120233e-01  8.409536e-01 #> [2466,]  0.3921301961  9.863944e-02  9.023834e-01 #> [2467,]  0.5263826251  4.343852e-02  8.697156e-01 #> [2468,]  0.5823625922  4.652197e-02  8.228140e-01 #> [2469,]  0.4336486459  7.504759e-02  8.657535e-01 #> [2470,]  0.4456818998  5.997355e-02  8.996475e-01 #> [2471,]  0.5846929550  6.487229e-02  8.363768e-01 #> [2472,]  0.4375301600  1.172508e-01  8.561842e-01 #> [2473,]  0.3942284584  7.584631e-02  9.159143e-01 #> [2474,]  0.5785728097  2.272120e-02  8.496890e-01 #> [2475,]  0.4951049984  4.647880e-02  8.404041e-01 #> [2476,]  0.3846169710  4.508848e-02  9.081024e-01 #> [2477,]  0.5491513610  2.370270e-02  8.660040e-01 #> [2478,]  0.5676848888  6.213696e-02  8.182644e-01 #> [2479,]  0.4141891003  9.572124e-02  8.786471e-01 #> [2480,]  0.4941485822  5.671060e-02  8.788441e-01 #> [2481,]  0.6320614815  4.276582e-02  8.055636e-01 #> [2482,]  0.5112742782  6.947217e-02  8.267834e-01 #> [2483,]  0.4279697537  6.045314e-02  8.923057e-01 #> [2484,]  0.5766260624  4.232673e-02  8.473188e-01 #> [2485,]  0.5243465304  6.653488e-02  8.263347e-01 #> [2486,]  0.4354152977  6.421264e-02  8.887286e-01 #> [2487,]  0.5668375492  5.308983e-02  8.496813e-01 #> [2488,]  0.4974836409  8.959676e-02  8.380519e-01 #> [2489,]  0.4334758222  8.887380e-02  8.871459e-01 #> [2490,]  0.5983249545  6.608114e-02  8.321570e-01 #> [2491,]  0.5800669193  1.077081e-01  7.997261e-01 #> [2492,]  0.4251826406  1.413779e-01  8.681307e-01 #> [2493,]  0.5361484885  1.098843e-01  8.613810e-01 #> [2494,]  0.6052174568  1.180696e-01  7.979962e-01 #> [2495,]  0.4329331219  1.479824e-01  8.552333e-01 #> [2496,]  0.4940623045  1.245146e-01  8.811611e-01 #> [2497,]  0.5526463389  1.314393e-01  8.258981e-01 #> [2498,]  0.4090624154  1.490102e-01  8.729303e-01 #> [2499,]  0.5070856214  1.168119e-01  8.769340e-01 #> [2500,]  0.5545898676  1.326030e-01  8.225386e-01 #> [2501,]  0.4051264524  1.531775e-01  8.740263e-01 #> [2502,]  0.4803582728  1.109819e-01  8.818138e-01 #> [2503,]  0.6057169437  9.960049e-02  8.163832e-01 #> [2504,]  0.4839490056  1.260511e-01  8.379824e-01 #> [2505,]  0.4026814997  1.111777e-01  8.967497e-01 #> [2506,]  0.5594440699  7.932075e-02  8.524769e-01 #> [2507,]  0.5902833343  9.740354e-02  8.062876e-01 #> [2508,]  0.4294261634  1.115922e-01  8.673600e-01 #> [2509,]  0.4605081975  7.529623e-02  8.892910e-01 #> [2510,]  0.5986758471  5.305557e-02  8.303409e-01 #> [2511,]  0.5088919997  6.947033e-02  8.358108e-01 #> [2512,]  0.3769342899  5.547246e-02  9.054059e-01 #> [2513,]  0.4935159981  6.447964e-03  8.929429e-01 #> [2514,]  0.4935922623  6.573005e-03  8.592183e-01 #> [2515,]  0.3427400291  1.642611e-02  9.163317e-01 #> [2516,]  0.4483179748 -1.760978e-02  9.138115e-01 #> [2517,]  0.4893712699 -8.114090e-03  8.707695e-01 #> [2518,]  0.3122168779  3.347701e-02  9.210132e-01 #> [2519,]  0.3286361694  2.648248e-02  9.471141e-01 #> [2520,]  0.4211806953  1.777633e-02  9.092720e-01 #> [2521,]  0.4428223968  2.194803e-02  9.040009e-01 #> [2522,]  0.4135631025  3.576179e-02  9.038758e-01 #> [2523,]  0.2649947107  6.077738e-02  9.363304e-01 #> [2524,]  0.2708757520  4.974498e-02  9.636934e-01 #> [2525,]  0.3718918860  4.253417e-02  9.307461e-01 #> [2526,]  0.3869392872  4.560211e-02  9.208680e-01 #> [2527,]  0.3922307491  2.962563e-02  9.268456e-01 #> [2528,]  0.2611893713  4.921800e-02  9.417747e-01 #> [2529,]  0.0798855126  1.000444e-01  9.767517e-01 #> [2530,]  0.0515349172  1.242672e-01  9.882963e-01 #> [2531,]  0.0791696757  1.402277e-01  9.817833e-01 #> [2532,]  0.0721895322  1.833161e-01  9.775507e-01 #> [2533,]  0.0772042572  2.101264e-01  9.733469e-01 #> [2534,]  0.0980426222  2.049285e-01  9.714910e-01 #> [2535,]  0.1106815115  2.010832e-01  9.718038e-01 #> [2536,]  0.1258588880  1.915880e-01  9.721252e-01 #> [2537,]  0.1368245184  1.611759e-01  9.752926e-01 #> [2538,]  0.1470754743  1.255097e-01  9.800107e-01 #> [2539,]  0.1575010717  1.002766e-01  9.791852e-01 #> [2540,]  0.1574638635  8.419954e-02  9.806752e-01 #> [2541,]  0.2094803005  6.372245e-02  9.861436e-01 #> [2542,]  0.1879428327  4.727736e-02  9.682359e-01 #> [2543,]  0.0583878271  4.609624e-02  9.814729e-01 #> [2544,]  0.1159682721  3.872073e-02  9.985188e-01 #> [2545,]  0.2269246131  3.128542e-02  9.766719e-01 #> [2546,]  0.2657450140  3.780259e-02  9.737374e-01 #> [2547,]  0.2018884420  5.658541e-02  9.618124e-01 #> [2548,]  0.0788508803  5.811793e-02  9.807661e-01 #> [2549,]  0.1468675435  4.049684e-02  9.952863e-01 #> [2550,]  0.2297898680  4.304235e-02  9.728677e-01 #> [2551,]  0.2592206299  4.752646e-02  9.731638e-01 #> [2552,]  0.2129140198  6.542177e-02  9.619591e-01 #> [2553,]  0.0777680650  8.816022e-02  9.754429e-01 #> [2554,]  0.1172520667  7.927060e-02  9.958547e-01 #> [2555,]  0.2020324320  7.667640e-02  9.779637e-01 #> [2556,]  0.2000294477  8.704429e-02  9.734792e-01 #> [2557,]  0.2039801925  9.970046e-02  9.716342e-01 #> [2558,]  0.2040534168  1.131310e-01  9.680364e-01 #> [2559,]  0.2309848517  1.097140e-01  9.755889e-01 #> [2560,]  0.1817659289  1.090460e-01  9.647167e-01 #> [2561,]  0.0421561487  1.085770e-01  9.747263e-01 #> [2562,]  0.0689858198  8.086157e-02  9.989874e-01 #> [2563,]  0.1406909674  7.233565e-02  9.874528e-01 #> [2564,]  0.1264870465  7.651318e-02  9.842393e-01 #> [2565,]  0.1293002814  5.436322e-02  9.889781e-01 #> [2566,]  0.1332665235  2.399752e-02  9.866930e-01 #> [2567,]  0.1315118968  9.718200e-03  9.876197e-01 #> [2568,]  0.1680708677  1.814466e-02  9.946430e-01 #> [2569,]  0.0943924785  2.984205e-03  9.788467e-01 #> [2570,] -0.0634517074 -1.308658e-02  9.812555e-01 #> [2571,] -0.0529348440 -8.665655e-03  1.003654e+00 #> [2572,] -0.0056400886 -3.660122e-02  9.969094e-01 #> [2573,] -0.0002655234 -6.860027e-02  9.943378e-01 #> [2574,]  0.0318090729 -6.743681e-02  9.973257e-01 #> [2575,]  0.0644175261 -4.795913e-02  9.965933e-01 #> [2576,]  0.0883543938 -2.596340e-02  9.953035e-01 #> [2577,]  0.1035536304 -9.625619e-03  9.932293e-01 #> [2578,]  0.1097964793 -1.886473e-02  9.920555e-01 #> [2579,]  0.1144023538 -3.369025e-02  9.899945e-01 #> [2580,]  0.1283591986 -2.915180e-03  9.879054e-01 #> [2581,]  0.1528952271  4.889724e-02  9.855745e-01 #> [2582,]  0.1899759173  7.572678e-02  9.797604e-01 #> [2583,]  0.2201572359  9.851176e-02  9.671135e-01 #> [2584,]  0.2493311465  1.380249e-01  9.602313e-01 #> [2585,]  0.2994085550  1.859835e-01  9.479887e-01 #> [2586,]  0.2073923200  2.262952e-01  9.308770e-01 #> [2587,]  0.1127031073  2.181533e-01  9.619518e-01 #> [2588,]  0.2225303501  2.044737e-01  9.596538e-01 #> [2589,]  0.3204212189  2.229773e-01  9.311682e-01 #> [2590,]  0.3248529136  1.911737e-01  9.323518e-01 #> [2591,]  0.1802046597  1.143826e-01  9.497302e-01 #> [2592,]  0.0776566565  5.937646e-02  9.902796e-01 #> [2593,]  0.1331220269  3.391422e-02  9.925194e-01 #> [2594,]  0.1595065445  4.142522e-02  9.801677e-01 #> [2595,]  0.1738595665  7.177762e-02  9.803162e-01 #> [2596,]  0.2076270878  1.044818e-01  9.697546e-01 #> [2597,]  0.2742458880  1.283615e-01  9.629508e-01 #> [2598,]  0.2991218567  1.520436e-01  9.441205e-01 #> [2599,]  0.1666133106  1.713532e-01  9.475917e-01 #> [2600,]  0.1543461531  1.605643e-01  9.775375e-01 #> [2601,]  0.2741643488  1.439061e-01  9.546617e-01 #> [2602,]  0.3245056272  1.333238e-01  9.400403e-01 #> [2603,]  0.3657893538  1.368556e-01  9.310735e-01 #> [2604,]  0.2612897754  1.743336e-01  9.259973e-01 #> [2605,]  0.1933303922  1.908546e-01  9.581645e-01 #> [2606,]  0.3122338951  2.002417e-01  9.356670e-01 #> [2607,]  0.3964200318  2.151882e-01  9.052479e-01 #> [2608,]  0.3794184625  2.299182e-01  8.931549e-01 #> [2609,]  0.2615014613  2.504375e-01  9.124541e-01 #> [2610,]  0.2951204181  2.301189e-01  9.301797e-01 #> [2611,]  0.4310862124  2.143168e-01  8.879727e-01 #> [2612,]  0.4878698289  2.219720e-01  8.616967e-01 #> [2613,]  0.4060416818  2.565163e-01  8.571715e-01 #> [2614,]  0.3306004405  2.704014e-01  8.981697e-01 #> [2615,]  0.4519050121  2.508844e-01  8.801264e-01 #> [2616,]  0.4004722536  2.693472e-01  8.513626e-01 #> [2617,]  0.3502318859  2.563534e-01  8.984078e-01 #> [2618,]  0.5121648908  2.191583e-01  8.623620e-01 #> [2619,]  0.4412761331  2.215756e-01  8.444378e-01 #> [2620,]  0.3594342470  2.063959e-01  9.052817e-01 #> [2621,]  0.4976409078  1.741054e-01  8.762953e-01 #> [2622,]  0.4293924570  1.761253e-01  8.602365e-01 #> [2623,]  0.3534283340  1.734504e-01  9.122049e-01 #> [2624,]  0.5143615007  1.580570e-01  8.725638e-01 #> [2625,]  0.4968460202  1.712901e-01  8.385589e-01 #> [2626,]  0.3697224259  1.702948e-01  8.936942e-01 #> [2627,]  0.4897540510  1.353134e-01  8.800880e-01 #> [2628,]  0.5800045729  1.366958e-01  8.160377e-01 #> [2629,]  0.4544301927  1.621705e-01  8.522431e-01 #> [2630,]  0.4702346921  1.496004e-01  8.819361e-01 #> [2631,]  0.4646435082  1.434014e-01  8.648779e-01 #> [2632,]  0.3812794387  1.415547e-01  9.012350e-01 #> [2633,]  0.4586285949  1.312587e-01  8.829162e-01 #> [2634,]  0.5429005027  1.386617e-01  8.410857e-01 #> [2635,]  0.5620360374  1.631620e-01  8.193279e-01 #> [2636,]  0.4428783953  1.871665e-01  8.505564e-01 #> [2637,]  0.4633653760  1.556765e-01  8.851900e-01 #> [2638,]  0.5111284256  1.448826e-01  8.485731e-01 #> [2639,]  0.4063020647  1.547991e-01  8.768617e-01 #> [2640,]  0.5163765550  1.263417e-01  8.671095e-01 #> [2641,]  0.5998613238  1.273527e-01  8.064899e-01 #> [2642,]  0.4695077538  1.535183e-01  8.497761e-01 #> [2643,]  0.3778062463  2.242740e-01  8.908852e-01 #> [2644,]  0.3842467964  2.660502e-01  8.847464e-01 #> [2645,]  0.4257292151  2.126471e-01  8.794901e-01 #> [2646,]  0.4130799174  1.825449e-01  8.862180e-01 #> [2647,]  0.4225605428  1.884409e-01  8.857393e-01 #> [2648,]  0.4706461430  2.034143e-01  8.643230e-01 #> [2649,]  0.5321083069  2.179206e-01  8.357347e-01 #> [2650,]  0.4661302567  2.574418e-01  8.256394e-01 #> [2651,]  0.4074144959  2.715507e-01  8.683702e-01 #> [2652,]  0.4627207518  2.233784e-01  8.680714e-01 #> [2653,]  0.3499525487  1.911242e-01  8.931019e-01 #> [2654,]  0.3131213486  1.595470e-01  9.356654e-01 #> [2655,]  0.3537247181  1.342304e-01  9.218846e-01 #> [2656,]  0.3313801587  1.231408e-01  9.276417e-01 #> [2657,]  0.3433269560  1.158328e-01  9.308259e-01 #> [2658,]  0.3717033863  1.121362e-01  9.219164e-01 #> [2659,]  0.3891440332  1.063360e-01  9.113275e-01 #> [2660,]  0.4300109446  1.042028e-01  9.042439e-01 #> [2661,]  0.4550014436  1.117884e-01  8.873277e-01 #> [2662,]  0.3580085933  1.234126e-01  9.048339e-01 #> [2663,]  0.3799410760  9.845163e-02  9.275910e-01 #> [2664,]  0.3816921711  7.828272e-02  9.118189e-01 #> [2665,]  0.2881517708  7.688748e-02  9.419311e-01 #> [2666,]  0.3417345583  7.151163e-02  9.417568e-01 #> [2667,]  0.3734645247  6.748972e-02  9.224609e-01 #> [2668,]  0.3806186616  5.776894e-02  9.200937e-01 #> [2669,]  0.4129755497  5.454700e-02  9.115330e-01 #> [2670,]  0.4616534412  4.761031e-02  8.979827e-01 #> [2671,]  0.3912292719  5.241775e-02  8.992757e-01 #> [2672,]  0.3478195965  3.646009e-02  9.334348e-01 #> [2673,]  0.3868791759  2.005225e-02  9.226426e-01 #> [2674,]  0.2830794454  3.645129e-02  9.384718e-01 #> [2675,]  0.2812643647  3.591963e-02  9.609498e-01 #> [2676,]  0.3312102258  3.490449e-02  9.411574e-01 #> [2677,]  0.3499027193  2.857529e-02  9.344974e-01 #> [2678,]  0.4093851447  2.607412e-02  9.168329e-01 #> [2679,]  0.4524233639  4.184567e-02  8.897915e-01 #> [2680,]  0.5129168034  5.753954e-02  8.674968e-01 #> [2681,]  0.5365945697  7.658300e-02  8.459337e-01 #> [2682,]  0.4402188659  9.196485e-02  8.734677e-01 #> [2683,]  0.4416684210  7.186059e-02  8.986496e-01 #> [2684,]  0.4522156417  4.407648e-02  8.889204e-01 #> [2685,]  0.4442662299  3.671227e-02  8.966020e-01 #> [2686,]  0.4665518105  5.434549e-02  8.815199e-01 #> [2687,]  0.4507586360  7.654934e-02  8.806494e-01 #> [2688,]  0.4733874500  9.006236e-02  8.740073e-01 #> [2689,]  0.5219694972  1.011319e-01  8.526781e-01 #> [2690,]  0.5717233419  1.152361e-01  8.276652e-01 #> [2691,]  0.4692926407  1.431192e-01  8.464819e-01 #> [2692,]  0.4189164639  1.215813e-01  8.916566e-01 #> [2693,]  0.5730936527  8.409914e-02  8.455503e-01 #> [2694,]  0.5321799517  1.006114e-01  8.258086e-01 #> [2695,]  0.4583669305  9.110496e-02  8.788870e-01 #> [2696,]  0.4980559349  8.085628e-02  8.699299e-01 #> [2697,]  0.4001727998  1.084422e-01  8.909070e-01 #> [2698,]  0.4226582348  1.118361e-01  9.037828e-01 #> [2699,]  0.5041064620  1.203244e-01  8.568871e-01 #> [2700,]  0.5359408259  1.349428e-01  8.336227e-01 #> [2701,]  0.5989977717  1.478306e-01  8.068793e-01 #> [2702,]  0.5146191120  1.815401e-01  8.192538e-01 #> [2703,]  0.4580924213  1.692356e-01  8.684940e-01 #> [2704,]  0.4960277677  1.206470e-01  8.658044e-01 #> [2705,]  0.4593382180  9.463046e-02  8.794733e-01 #> [2706,]  0.4625174999  7.991287e-02  8.845987e-01 #> [2707,]  0.4466979206  7.944340e-02  8.803173e-01 #> [2708,]  0.4647107422  7.873593e-02  8.803903e-01 #> [2709,]  0.5091056824  8.325896e-02  8.558022e-01 #> [2710,]  0.5473601818  8.661126e-02  8.360201e-01 #> [2711,]  0.5990998149  9.473276e-02  8.144843e-01 #> [2712,]  0.4989574552  1.237142e-01  8.354312e-01 #> [2713,]  0.4001031518  1.217304e-01  8.937231e-01 #> [2714,]  0.5156747699  8.750039e-02  8.739647e-01 #> [2715,]  0.5302063823  7.751884e-02  8.425944e-01 #> [2716,]  0.3835567832  8.442489e-02  8.909417e-01 #> [2717,]  0.4499616027  9.654562e-02  8.987488e-01 #> [2718,]  0.5780453086  1.290582e-01  8.327214e-01 #> [2719,]  0.4411024153  1.610196e-01  8.522277e-01 #> [2720,]  0.3980732262  1.381476e-01  9.029657e-01 #> [2721,]  0.5622439384  1.061520e-01  8.519514e-01 #> [2722,]  0.5134119987  1.264313e-01  8.325180e-01 #> [2723,]  0.3818041682  1.362160e-01  8.947995e-01 #> [2724,]  0.5193130970  1.144621e-01  8.730946e-01 #> [2725,]  0.5704903603  1.359135e-01  8.130440e-01 #> [2726,]  0.4444577098  1.629190e-01  8.628162e-01 #> [2727,]  0.4623111486  1.530430e-01  8.815293e-01 #> [2728,]  0.4518544078  1.456089e-01  8.754418e-01 #> [2729,]  0.4503397644  1.332427e-01  8.874350e-01 #> [2730,]  0.4510962665  1.329485e-01  8.760057e-01 #> [2731,]  0.4409329593  1.383962e-01  8.812502e-01 #> [2732,]  0.4800881147  1.415469e-01  8.655508e-01 #> [2733,]  0.5397020578  1.452018e-01  8.392180e-01 #> [2734,]  0.5792766809  1.556179e-01  8.112938e-01 #> [2735,]  0.4790841639  1.732635e-01  8.393459e-01 #> [2736,]  0.4678913951  1.549860e-01  8.728039e-01 #> [2737,]  0.4932121336  1.331720e-01  8.620045e-01 #> [2738,]  0.4789073169  1.204755e-01  8.732402e-01 #> [2739,]  0.4799992740  1.144417e-01  8.670438e-01 #> [2740,]  0.4440150559  1.267231e-01  8.747501e-01 #> [2741,]  0.4709376097  1.369356e-01  8.710722e-01 #> [2742,]  0.5226803422  1.446105e-01  8.432032e-01 #> [2743,]  0.6017175913  1.489813e-01  8.079292e-01 #> [2744,]  0.5432163477  1.673006e-01  8.052497e-01 #> [2745,]  0.4552163482  1.643446e-01  8.617923e-01 #> [2746,]  0.5494968295  1.377724e-01  8.480937e-01 #> [2747,]  0.4782050252  1.628916e-01  8.371837e-01 #> [2748,]  0.4108359516  2.009849e-01  8.797261e-01 #> [2749,]  0.5722198486  2.193649e-01  8.254027e-01 #> [2750,]  0.5427871943  2.662562e-01  7.842000e-01 #> [2751,]  0.4464904070  2.792680e-01  8.429295e-01 #> [2752,]  0.4849400222  2.393976e-01  8.501300e-01 #> [2753,]  0.4068402350  2.171214e-01  8.679752e-01 #> [2754,]  0.4403064847  1.987640e-01  8.789743e-01 #> [2755,]  0.5482122302  2.063070e-01  8.196031e-01 #> [2756,]  0.5889371037  2.331737e-01  7.924032e-01 #> [2757,]  0.5321198106  2.812403e-01  7.886712e-01 #> [2758,]  0.3992157280  3.089046e-01  8.400679e-01 #> [2759,]  0.4930290282  2.702228e-01  8.494820e-01 #> [2760,]  0.5393200517  2.701174e-01  8.018446e-01 #> [2761,]  0.3940695822  2.812582e-01  8.468943e-01 #> [2762,]  0.4531761706  2.323847e-01  8.702714e-01 #> [2763,]  0.5974425077  2.133462e-01  8.051618e-01 #> [2764,]  0.4904491603  2.495899e-01  8.092813e-01 #> [2765,]  0.4206411541  2.410549e-01  8.736720e-01 #> [2766,]  0.4605843127  2.110051e-01  8.663628e-01 #> [2767,]  0.3644338846  2.018842e-01  8.891400e-01 #> [2768,]  0.4038611054  1.724732e-01  9.052687e-01 #> [2769,]  0.4903397560  1.627937e-01  8.591682e-01 #> [2770,]  0.5125505924  1.724885e-01  8.395236e-01 #> [2771,]  0.5842649937  1.842271e-01  8.138371e-01 #> [2772,]  0.5107905865  2.194379e-01  8.128946e-01 #> [2773,]  0.4350800216  2.196365e-01  8.672395e-01 #> [2774,]  0.4900592566  1.794169e-01  8.645707e-01 #> [2775,]  0.3868608177  1.585314e-01  8.866925e-01 #> [2776,]  0.3797326982  1.341811e-01  9.172159e-01 #> [2777,]  0.4750395119  1.317452e-01  8.738730e-01 #> [2778,]  0.4901049435  1.497477e-01  8.526217e-01 #> [2779,]  0.5588430166  1.616358e-01  8.333934e-01 #> [2780,]  0.5391075611  1.915077e-01  8.151689e-01 #> [2781,]  0.4306156337  2.001456e-01  8.643602e-01 #> [2782,]  0.4750670493  1.701659e-01  8.765962e-01 #> [2783,]  0.4069128335  1.666194e-01  8.777348e-01 #> [2784,]  0.3630068600  1.485718e-01  9.163556e-01 #> [2785,]  0.4602051079  1.266753e-01  8.838177e-01 #> [2786,]  0.5178108811  1.256021e-01  8.542577e-01 #> [2787,]  0.5392960906  1.401105e-01  8.366644e-01 #> [2788,]  0.4318253994  1.659802e-01  8.654262e-01 #> [2789,]  0.4472462237  1.425464e-01  8.920318e-01 #> [2790,]  0.4316405952  1.265964e-01  8.814203e-01 #> [2791,]  0.3364342749  1.147321e-01  9.232499e-01 #> [2792,]  0.4151504338  8.705344e-02  9.121439e-01 #> [2793,]  0.4614267349  9.399147e-02  8.772934e-01 #> [2794,]  0.5170984268  1.047094e-01  8.642165e-01 #> [2795,]  0.5108123422  1.319869e-01  8.447834e-01 #> [2796,]  0.4002502263  1.661109e-01  8.834604e-01 #> [2797,]  0.4306580722  1.665087e-01  8.951545e-01 #> [2798,]  0.4274841249  1.615190e-01  8.846927e-01 #> [2799,]  0.4152923226  1.502877e-01  9.005298e-01 #> [2800,]  0.4210502505  1.542875e-01  8.893307e-01 #> [2801,]  0.4109982550  1.646568e-01  8.895807e-01 #> [2802,]  0.4475656152  1.700270e-01  8.782398e-01 #> [2803,]  0.5144954920  1.755329e-01  8.549812e-01 #> [2804,]  0.5060868859  1.897653e-01  8.385169e-01 #> [2805,]  0.3956595659  1.935736e-01  8.790406e-01 #> [2806,]  0.4351987541  1.482532e-01  8.990387e-01 #> [2807,]  0.3863267303  1.179743e-01  8.978509e-01 #> [2808,]  0.3156243563  1.052815e-01  9.358910e-01 #> [2809,]  0.4032893777  1.000015e-01  9.160708e-01 #> [2810,]  0.4393063188  1.163575e-01  8.857616e-01 #> [2811,]  0.4771838188  1.263863e-01  8.739011e-01 #> [2812,]  0.5448334813  1.358954e-01  8.470202e-01 #> [2813,]  0.4523442090  1.702147e-01  8.526555e-01 #> [2814,]  0.3966230750  1.786868e-01  8.982064e-01 #> [2815,]  0.4318321049  1.598634e-01  8.900399e-01 #> [2816,]  0.3292217851  1.505398e-01  9.120238e-01 #> [2817,]  0.3587803245  1.340199e-01  9.288249e-01 #> [2818,]  0.4311196506  1.429625e-01  8.912715e-01 #> [2819,]  0.4532501400  1.619719e-01  8.754634e-01 #> [2820,]  0.5340504050  1.776979e-01  8.490339e-01 #> [2821,]  0.4634228647  2.138721e-01  8.434303e-01 #> [2822,]  0.3862527013  2.044695e-01  8.930557e-01 #> [2823,]  0.4367884099  1.569708e-01  8.915419e-01 #> [2824,]  0.3372457623  1.329475e-01  9.097904e-01 #> [2825,]  0.3444912434  9.887458e-02  9.374524e-01 #> [2826,]  0.4443530738  8.846432e-02  8.944197e-01 #> [2827,]  0.4778404534  9.540457e-02  8.739814e-01 #> [2828,]  0.5395383835  1.060897e-01  8.561386e-01 #> [2829,]  0.4425260127  1.538362e-01  8.586915e-01 #> [2830,]  0.3699849248  1.519097e-01  9.087733e-01 #> [2831,]  0.5109901428  1.049890e-01  8.797951e-01 #> [2832,]  0.4462017119  1.105423e-01  8.656226e-01 #> [2833,]  0.3996056616  1.014949e-01  9.119309e-01 #> [2834,]  0.4281215668  8.192554e-02  8.981043e-01 #> [2835,]  0.3205506802  7.934245e-02  9.265507e-01 #> [2836,]  0.3691033423  6.937210e-02  9.327235e-01 #> [2837,]  0.4266579151  8.282974e-02  9.006779e-01 #> [2838,]  0.4053596258  1.047504e-01  9.028019e-01 #> [2839,]  0.4353086948  1.179133e-01  8.985659e-01 #> [2840,]  0.4974261820  1.139608e-01  8.760515e-01 #> [2841,]  0.4307236671  8.810896e-02  8.794949e-01 #> [2842,]  0.3921558857  5.659914e-02  9.127721e-01 #> [2843,]  0.4331178963  3.661029e-02  9.029249e-01 #> [2844,]  0.3991048336  2.385305e-02  9.132696e-01 #> [2845,]  0.3973166049  2.749136e-02  9.173560e-01 #> [2846,]  0.3566944897  5.685125e-02  9.188319e-01 #> [2847,]  0.3288368285  7.554336e-02  9.375089e-01 #> [2848,]  0.3539435267  8.630075e-02  9.314618e-01 #> [2849,]  0.3857647479  1.048147e-01  9.171693e-01 #> [2850,]  0.4160265326  1.341204e-01  8.987090e-01 #> [2851,]  0.4814667404  1.518250e-01  8.762721e-01 #> [2852,]  0.4731571972  1.445409e-01  8.626143e-01 #> [2853,]  0.3970701993  1.278211e-01  8.954135e-01 #> [2854,]  0.4349463880  1.180309e-01  8.974000e-01 #> [2855,]  0.4232583642  1.146184e-01  8.955934e-01 #> [2856,]  0.4121021628  8.565664e-02  9.119819e-01 #> [2857,]  0.3929127455  7.156183e-02  9.060754e-01 #> [2858,]  0.3564705551  7.120653e-02  9.233008e-01 #> [2859,]  0.3900929093  6.741522e-02  9.194648e-01 #> [2860,]  0.4122813046  7.981384e-02  9.014998e-01 #> [2861,]  0.4667653441  8.260569e-02  8.889866e-01 #> [2862,]  0.5124259591  9.375565e-02  8.621117e-01 #> [2863,]  0.4207787216  1.320986e-01  8.800211e-01 #> [2864,]  0.4071080983  1.195360e-01  9.064608e-01 #> [2865,]  0.4128343165  8.741171e-02  9.030688e-01 #> [2866,]  0.4041612744  7.064591e-02  9.163312e-01 #> [2867,]  0.4027986228  5.929646e-02  9.087345e-01 #> [2868,]  0.3488783240  7.020564e-02  9.220462e-01 #> [2869,]  0.3702860177  8.659671e-02  9.248163e-01 #> [2870,]  0.4055977464  1.016506e-01  9.053628e-01 #> [2871,]  0.4812350571  1.045010e-01  8.844528e-01 #> [2872,]  0.4997496605  1.182668e-01  8.592190e-01 #> [2873,]  0.4059878886  1.291611e-01  8.885235e-01 #> [2874,]  0.4201104045  1.046193e-01  9.049876e-01 #> [2875,]  0.4140869975  7.913568e-02  9.029582e-01 #> [2876,]  0.4087532461  4.668818e-02  9.142495e-01 #> [2877,]  0.4088313580  3.041434e-02  9.054972e-01 #> [2878,]  0.3882816732  3.033498e-02  9.142634e-01 #> [2879,]  0.4184551835  2.980763e-02  9.061384e-01 #> [2880,]  0.4899119735  2.580908e-02  8.825643e-01 #> [2881,]  0.5224474669  2.299085e-02  8.580325e-01 #> [2882,]  0.4223955572  1.983438e-02  8.866581e-01 #> [2883,]  0.4242099226 -8.965141e-03  9.075479e-01 #> [2884,]  0.4247837067 -3.215149e-02  8.984702e-01 #> [2885,]  0.4086632431 -4.637187e-02  9.138954e-01 #> [2886,]  0.4055567980 -3.138259e-02  9.075431e-01 #> [2887,]  0.3526733816  4.912940e-04  9.236441e-01 #> [2888,]  0.3751546443  1.480209e-02  9.243823e-01 #> [2889,]  0.4313977659  2.461744e-02  9.035447e-01 #> [2890,]  0.5042581558  3.154001e-02  8.803622e-01 #> [2891,]  0.4377961159  5.133259e-02  8.798041e-01 #> [2892,]  0.3290328979  5.499502e-02  9.241474e-01 #> [2893,]  0.4443068206  4.404918e-02  9.133741e-01 #> [2894,]  0.5173408985  7.158677e-02  8.625876e-01 #> [2895,]  0.3899920285  1.073214e-01  8.911551e-01 #> [2896,]  0.3866017461  1.069262e-01  9.193745e-01 #> [2897,]  0.3992602229  9.954085e-02  9.070089e-01 #> [2898,]  0.3777770102  9.070818e-02  9.229537e-01 #> [2899,]  0.3842274845  9.396977e-02  9.166033e-01 #> [2900,]  0.3232151568  1.091920e-01  9.278060e-01 #> [2901,]  0.3064996302  9.862693e-02  9.441289e-01 #> [2902,]  0.3245138228  7.275742e-02  9.412556e-01 #> [2903,]  0.3488816917  6.664219e-02  9.336449e-01 #> [2904,]  0.3962625265  7.942177e-02  9.190072e-01 #> [2905,]  0.4792451262  8.817071e-02  8.907672e-01 #> [2906,]  0.4414789975  1.045868e-01  8.775406e-01 #> [2907,]  0.3889797926  1.018323e-01  9.076602e-01 #> [2908,]  0.4359346926  8.114582e-02  9.007671e-01 #> [2909,]  0.4130103886  5.913948e-02  9.055752e-01 #> [2910,]  0.4102319777  3.699680e-02  9.134471e-01 #> [2911,]  0.3736456931  4.274530e-02  9.144900e-01 #> [2912,]  0.3347564340  3.829204e-02  9.364246e-01 #> [2913,]  0.3504269719  2.398204e-02  9.348897e-01 #> [2914,]  0.3730391264  3.315389e-02  9.267840e-01 #> [2915,]  0.3892204762  5.090985e-02  9.174396e-01 #> [2916,]  0.4263499975  6.121607e-02  9.086506e-01 #> [2917,]  0.4491647780  7.594766e-02  8.933513e-01 #> [2918,]  0.3765086532  7.261409e-02  9.070668e-01 #> [2919,]  0.3891884089  3.299269e-02  9.202045e-01 #> [2920,]  0.4093833566  9.423370e-03  9.103054e-01 #> [2921,]  0.3970529437  1.407661e-03  9.208697e-01 #> [2922,]  0.3767781556  1.576711e-02  9.185497e-01 #> [2923,]  0.2983994782  3.441161e-02  9.407069e-01 #> [2924,]  0.2914591134  2.645244e-02  9.552109e-01 #> [2925,]  0.3105927408  2.702984e-02  9.480135e-01 #> [2926,]  0.3334876001  3.196998e-02  9.426119e-01 #> [2927,]  0.3566547930  3.656370e-02  9.317680e-01 #> [2928,]  0.3877870739  4.274492e-02  9.234121e-01 #> [2929,]  0.4266969264  4.508878e-02  9.117045e-01 #> [2930,]  0.3485256732  7.571448e-02  9.178245e-01 #> [2931,]  0.2164264172  1.347320e-01  9.499099e-01 #> [2932,]  0.2092313915  1.658328e-01  9.663663e-01 #> [2933,]  0.2332164645  1.923168e-01  9.555796e-01 #> [2934,]  0.1147413254  2.506809e-01  9.369658e-01 #> [2935,]  0.0313657634  2.530750e-01  9.610790e-01 #> [2936,]  0.0828932449  1.906963e-01  9.829441e-01 #> [2937,]  0.0762538910  1.314033e-01  9.804950e-01 #> [2938,]  0.0366338864  8.890530e-02  9.894996e-01 #> [2939,]  0.0355279446  6.283560e-02  9.949312e-01 #> [2940,]  0.0489898324  4.270380e-02  9.960745e-01 #> [2941,]  0.0678242594  2.758316e-02  9.967129e-01 #> [2942,]  0.0942510292  1.299320e-02  9.952797e-01 #> [2943,]  0.1199684069 -5.440197e-04  9.927247e-01 #> [2944,]  0.1434442848 -3.717209e-03  9.889275e-01 #> [2945,]  0.1684219688  5.249337e-03  9.850769e-01 #> [2946,]  0.1861263216  1.671655e-02  9.820471e-01 #> [2947,]  0.1958443969  3.132876e-02  9.787915e-01 #> [2948,]  0.1983425468  5.003229e-02  9.770033e-01 #> [2949,]  0.1942489743  6.800874e-02  9.764879e-01 #> [2950,]  0.1882427931  8.094846e-02  9.763051e-01 #> [2951,]  0.1781144887  8.103046e-02  9.780202e-01 #> [2952,]  0.1652203947  7.786638e-02  9.803241e-01 #> [2953,]  0.1521801203  7.514635e-02  9.820502e-01 #> [2954,]  0.1342674196  7.089989e-02  9.847053e-01 #> [2955,]  0.1136373580  7.447322e-02  9.871030e-01 #> [2956,]  0.0967098102  8.342355e-02  9.881253e-01 #> [2957,]  0.0819048584  9.104180e-02  9.892915e-01 #> [2958,]  0.0717233419  9.402708e-02  9.894862e-01 #> [2959,]  0.0755998418  9.198023e-02  9.907120e-01 #> [2960,]  0.0793080404  9.318805e-02  9.888829e-01 #> [2961,]  0.0794464201  9.511198e-02  9.919032e-01 #> [2962,]  0.0954025239  9.780876e-02  9.966022e-01 #> [2963,]  0.0069017196  1.226443e-01  9.730911e-01 #> [2964,] -0.0917754471  1.194805e-01  9.818137e-01 #> [2965,] -0.0051814979  7.078481e-02  1.005736e+00 #> [2966,]  0.0657612011  4.774550e-02  9.963162e-01 #> [2967,]  0.0677027628  4.578843e-02  9.951088e-01 #> [2968,]  0.0924871787  4.646616e-02  9.950173e-01 #> [2969,]  0.1139505655  5.799015e-02  9.915044e-01 #> [2970,]  0.1280371994  6.892703e-02  9.889757e-01 #> [2971,]  0.1429660767  7.287442e-02  9.869977e-01 #> [2972,]  0.1521405429  7.800651e-02  9.820011e-01 #> [2973,]  0.1703646630  8.306938e-02  9.827358e-01 #> [2974,]  0.2086424232  8.162279e-02  9.837794e-01 #> [2975,]  0.1176016629  7.949302e-02  9.707550e-01 #> [2976,]  0.0058644870  7.432023e-02  9.889561e-01 #> [2977,]  0.0769493654  6.620651e-02  1.001109e+00 #> [2978,]  0.1373120099  6.951595e-02  9.870634e-01 #> [2979,]  0.1411363482  7.365513e-02  9.864645e-01 #> [2980,]  0.1647571474  7.520510e-02  9.833425e-01 #> [2981,]  0.1798346192  7.888891e-02  9.796537e-01 #> [2982,]  0.1878598481  7.579417e-02  9.785818e-01 #> [2983,]  0.1938271523  6.791535e-02  9.772109e-01 #> [2984,]  0.1952602118  6.733090e-02  9.764921e-01 #> [2985,]  0.1960483193  6.774225e-02  9.764637e-01 #> [2986,]  0.1972915679  5.774489e-02  9.766096e-01 #> [2987,]  0.1974175870  4.842914e-02  9.768307e-01 #> [2988,]  0.1948698014  4.206974e-02  9.779335e-01 #> [2989,]  0.1862518042  3.776806e-02  9.792966e-01 #> [2990,]  0.1716995537  3.930897e-02  9.808065e-01 #> [2991,]  0.1589828283  4.025262e-02  9.829322e-01 #> [2992,]  0.1482696682  4.157247e-02  9.852916e-01 #> [2993,]  0.1367737651  4.356679e-02  9.868361e-01 #> [2994,]  0.1269739717  3.991906e-02  9.881961e-01 #> [2995,]  0.1194980517  2.973721e-02  9.895129e-01 #> [2996,]  0.1121823788  2.181475e-02  9.905366e-01 #> [2997,]  0.1045729145  1.871373e-02  9.916946e-01 #> [2998,]  0.0976051837  1.551734e-02  9.925808e-01 #> [2999,]  0.0914386287  1.144827e-02  9.933646e-01 #> [3000,]  0.0861916319 -2.644577e-03  9.939197e-01 #> [3001,]  0.0799141452 -2.359642e-02  9.937595e-01 #> [3002,]  0.0743147880 -3.230717e-02  9.938368e-01 #> [3003,]  0.0725594014 -3.159877e-02  9.944606e-01 #> [3004,]  0.0744278505 -3.446157e-02  9.945298e-01 #> [3005,]  0.0781006441 -4.115787e-02  9.939501e-01 #> [3006,]  0.0813433006 -4.421511e-02  9.937330e-01 #> [3007,]  0.0829058588 -4.199389e-02  9.937751e-01 #> [3008,]  0.0819588378 -3.668725e-02  9.939179e-01 #> [3009,]  0.0786648914 -3.350210e-02  9.943216e-01 #> [3010,]  0.0753749683 -3.487397e-02  9.944003e-01 #> [3011,]  0.0739493519 -3.449225e-02  9.943084e-01 #> [3012,]  0.0769143775 -3.295265e-02  9.944922e-01 #> [3013,]  0.0823841691 -3.541245e-02  9.942948e-01 #> [3014,]  0.0864073038 -3.750237e-02  9.936249e-01 #> [3015,]  0.0873228982 -3.149030e-02  9.936967e-01 #> [3016,]  0.0844466835 -2.794708e-02  9.939789e-01 #> [3017,]  0.0792352110 -2.780867e-02  9.940946e-01 #> [3018,]  0.0751029849 -1.957908e-02  9.944183e-01 #> [3019,]  0.0740244463 -5.017729e-03  9.950140e-01 #> [3020,]  0.0737666339  3.938568e-03  9.954116e-01 #> [3021,]  0.0748485699  1.898844e-03  9.952154e-01 #> [3022,]  0.0784894824 -1.754238e-03  9.951429e-01 #> [3023,]  0.0826563314  1.018069e-03  9.946767e-01 #> [3024,]  0.0835583955  1.061791e-02  9.943678e-01 #> [3025,]  0.0843696669  1.160447e-02  9.948547e-01 #> [3026,]  0.0890824273 -2.126510e-04  9.947189e-01 #> [3027,]  0.0939693525 -4.302046e-03  9.932888e-01 #> [3028,]  0.0949591845  6.027795e-03  9.927302e-01 #> [3029,]  0.0939259976  1.733869e-02  9.936685e-01 #> [3030,]  0.0935149863  2.151443e-02  9.935250e-01 #> [3031,]  0.0927807093  2.144903e-02  9.933646e-01 #> [3032,]  0.0923829004  1.304125e-02  9.936123e-01 #> [3033,]  0.0920825452 -5.490834e-05  9.935775e-01 #> [3034,]  0.0914151222 -1.389538e-03  9.940101e-01 #> [3035,]  0.0910525173 -9.457783e-04  9.939677e-01 #> [3036,]  0.0903751403 -7.282828e-03  9.936185e-01 #> [3037,]  0.0914327800 -4.549673e-03  9.936805e-01 #> [3038,]  0.0949469134  6.989553e-03  9.933224e-01 #> [3039,]  0.0980254188  1.350501e-02  9.933225e-01 #> [3040,]  0.0990832523  8.241619e-03  9.932361e-01 #> [3041,]  0.0960871577  1.947118e-04  9.928533e-01 #> [3042,]  0.0958346054  1.221864e-02  9.929236e-01 #> [3043,]  0.1010975838  2.996669e-02  9.925086e-01 #> [3044,]  0.0998580754  2.724493e-02  9.926569e-01 #> [3045,]  0.0965143740  1.695065e-02  9.932939e-01 #> [3046,]  0.1033534408  1.685874e-02  9.921235e-01 #> [3047,]  0.1111017987  3.327134e-02  9.915193e-01 #> [3048,]  0.1163057610  4.708073e-02  9.906139e-01 #> [3049,]  0.1197840050  5.152442e-02  9.894009e-01 #> [3050,]  0.1207182184  5.785692e-02  9.892081e-01 #> [3051,]  0.1202334091  6.939308e-02  9.881580e-01 #> [3052,]  0.1214087531  7.504439e-02  9.883902e-01 #> [3053,]  0.1222955287  7.638750e-02  9.873939e-01 #> [3054,]  0.1057887971  7.725400e-02  9.865363e-01 #> [3055,]  0.1497974992  7.192697e-02  9.943365e-01 #> [3056,]  0.1752598584  6.059088e-02  9.825736e-01 #> [3057,]  0.0357319675  4.976988e-02  9.777597e-01 #> [3058,]  0.0019527037  4.463875e-02  1.001568e+00 #> [3059,]  0.0955930054  5.503175e-02  9.964659e-01 #> [3060,]  0.1149736941  7.027876e-02  9.882462e-01 #> [3061,]  0.1257988065  6.766301e-02  9.898470e-01 #> [3062,]  0.1457663476  5.511562e-02  9.865141e-01 #> [3063,]  0.1520626843  5.552229e-02  9.852064e-01 #> [3064,]  0.1569821388  7.296154e-02  9.835820e-01 #> [3065,]  0.1618351191  8.226418e-02  9.822291e-01 #> [3066,]  0.1649701148  6.428470e-02  9.826842e-01 #> [3067,]  0.1668568403  3.895771e-02  9.831887e-01 #> [3068,]  0.1773850918  3.207999e-02  9.808966e-01 #> [3069,]  0.2064336687  3.466605e-02  9.756532e-01 #> [3070,]  0.2489910871  3.212973e-02  9.678349e-01 #> [3071,]  0.2964752913  2.520020e-02  9.566160e-01 #> [3072,]  0.3261364996  2.480521e-02  9.413889e-01 #> [3073,]  0.3674108386  8.978260e-03  9.339763e-01 #> [3074,]  0.4265425801  3.135173e-03  9.173532e-01 #> [3075,]  0.3185344934  4.152946e-02  9.263886e-01 #> [3076,]  0.2243723124  2.667037e-02  9.716370e-01 #> [3077,]  0.3313155472 -5.936129e-03  9.511120e-01 #> [3078,]  0.3960435390 -8.357216e-03  9.145607e-01 #> [3079,]  0.4421539605 -3.970490e-02  9.021403e-01 #> [3080,]  0.5226600766 -3.311867e-02  8.696007e-01 #> [3081,]  0.4265738726  4.795793e-02  8.840486e-01 #> [3082,]  0.3480703831  4.173369e-02  9.333749e-01 #> [3083,]  0.4630330801 -2.390770e-02  8.910831e-01 #> [3084,]  0.5623515844 -3.883467e-02  8.348281e-01 #> [3085,]  0.6235492229 -2.908421e-02  8.030369e-01 #> [3086,]  0.5374060869  1.953344e-02  8.260564e-01 #> [3087,]  0.4732443392  2.268936e-02  8.766640e-01 #> [3088,]  0.5875331163 -1.311237e-02  8.169406e-01 #> [3089,]  0.6804091334 -2.272880e-02  7.543660e-01 #> [3090,]  0.6536489129 -1.004953e-02  7.564834e-01 #> [3091,]  0.5688225627  1.970021e-03  8.114407e-01 #> [3092,]  0.6186719537 -3.265189e-02  8.064100e-01 #> [3093,]  0.5733271241 -6.509776e-02  8.053420e-01 #> [3094,]  0.5265049934 -8.364387e-02  8.422621e-01 #> [3095,]  0.6092648506 -9.380814e-02  7.928907e-01 #> [3096,]  0.6397617459 -9.948216e-02  7.632995e-01 #> [3097,]  0.6914252639 -1.026865e-01  7.360455e-01 #> [3098,]  0.6298977137 -9.351670e-02  7.522355e-01 #> [3099,]  0.5987139344 -9.385820e-02  7.979319e-01 #> [3100,]  0.6529053450 -7.873974e-02  7.687361e-01 #> [3101,]  0.5762228370 -6.873859e-02  7.992376e-01 #> [3102,]  0.6088505387 -8.663829e-02  7.904862e-01 #> [3103,]  0.6848828197 -7.818240e-02  7.329102e-01 #> [3104,]  0.7049172521 -6.378981e-02  7.198541e-01 #> [3105,]  0.6351726055 -4.623365e-02  7.510293e-01 #> [3106,]  0.6172045469 -3.516627e-02  7.911091e-01 #> [3107,]  0.6488937736 -4.713578e-02  7.709435e-01 #> [3108,]  0.5585480928 -5.286191e-02  8.124287e-01 #> [3109,]  0.6017884612 -5.838165e-02  8.003891e-01 #> [3110,]  0.6744127870 -5.172000e-02  7.418869e-01 #> [3111,]  0.7089988589 -4.408670e-02  7.213504e-01 #> [3112,]  0.6512628198 -4.155164e-02  7.413203e-01 #> [3113,]  0.6082920432 -3.111210e-02  7.927824e-01 #> [3114,]  0.6474536657 -2.081002e-02  7.767344e-01 #> [3115,]  0.5532613993 -2.080606e-02  8.148599e-01 #> [3116,]  0.5838083029 -3.187309e-02  8.157377e-01 #> [3117,]  0.6663984060 -3.484379e-02  7.479327e-01 #> [3118,]  0.7099006176 -3.907471e-02  7.168975e-01 #> [3119,]  0.7161844969 -2.591051e-02  7.023361e-01 #> [3120,]  0.6233212352  4.136728e-04  7.644958e-01 #> [3121,]  0.6555459499  8.559511e-03  7.751029e-01 #> [3122,]  0.6101359725  2.464821e-02  7.811067e-01 #> [3123,]  0.5575848222  1.153673e-02  8.238752e-01 #> [3124,]  0.6449202299 -7.239318e-03  7.707858e-01 #> [3125,]  0.7017868757 -4.063596e-03  7.267962e-01 #> [3126,]  0.6880339384  1.418863e-02  7.256984e-01 #> [3127,]  0.6044054627  5.124023e-02  7.798650e-01 #> [3128,]  0.6271296740  5.747587e-02  7.921690e-01 #> [3129,]  0.6051689386  4.905418e-02  7.965454e-01 #> [3130,]  0.5831566453  4.305072e-02  8.175407e-01 #> [3131,]  0.6004645824  5.662211e-02  7.969700e-01 #> [3132,]  0.5768907666  7.591813e-02  8.036728e-01 #> [3133,]  0.6024327278  8.331802e-02  7.930603e-01 #> [3134,]  0.6683689356  1.072758e-01  7.570456e-01 #> [3135,]  0.6262784004  1.477115e-01  7.552868e-01 #> [3136,]  0.5547791719  1.666493e-01  8.068317e-01 #> [3137,]  0.5870004892  1.746107e-01  8.042534e-01 #> [3138,]  0.5386816859  1.694602e-01  8.205876e-01 #> [3139,]  0.5402852297  1.259878e-01  8.386895e-01 #> [3140,]  0.5493471622  1.062463e-01  8.217977e-01 #> [3141,]  0.5312412381  1.117394e-01  8.311064e-01 #> [3142,]  0.6034277678  1.362390e-01  8.045983e-01 #> [3143,]  0.5808867812  1.885301e-01  7.860582e-01 #> [3144,]  0.5002409816  1.935031e-01  8.323876e-01 #> [3145,]  0.5418929458  1.533291e-01  8.366013e-01 #> [3146,]  0.5183827877  1.360949e-01  8.415716e-01 #> [3147,]  0.5165621042  1.112550e-01  8.553939e-01 #> [3148,]  0.5212268829  9.205893e-02  8.433384e-01 #> [3149,]  0.4937022328  8.003958e-02  8.575999e-01 #> [3150,]  0.5209834576  7.925504e-02  8.490472e-01 #> [3151,]  0.5885456204  1.036352e-01  8.182774e-01 #> [3152,]  0.5588076115  1.192982e-01  8.117677e-01 #> [3153,]  0.4857509732  1.275089e-01  8.535070e-01 #> [3154,]  0.5174047351  1.590238e-01  8.502428e-01 #> [3155,]  0.4894801974  1.581044e-01  8.565462e-01 #> [3156,]  0.4913274050  1.196391e-01  8.681296e-01 #> [3157,]  0.4776593447  1.216363e-01  8.602723e-01 #> [3158,]  0.4593869448  1.371022e-01  8.733791e-01 #> [3159,]  0.4984765351  1.497913e-01  8.547595e-01 #> [3160,]  0.5383452177  1.684867e-01  8.281586e-01 #> [3161,]  0.6031638980  1.870593e-01  7.967538e-01 #> [3162,]  0.5432966352  2.205514e-01  7.960621e-01 #> [3163,]  0.4885772467  2.223621e-01  8.398440e-01 #> [3164,]  0.5200383067  1.902022e-01  8.411158e-01 #> [3165,]  0.4744784832  1.563009e-01  8.639420e-01 #> [3166,]  0.4776351452  1.182939e-01  8.754747e-01 #> [3167,]  0.4512068927  1.103703e-01  8.736473e-01 #> [3168,]  0.4409497678  1.163139e-01  8.866285e-01 #> [3169,]  0.4770325124  1.183146e-01  8.688977e-01 #> [3170,]  0.5372416973  1.104214e-01  8.468056e-01 #> [3171,]  0.5735602975  1.191467e-01  8.201945e-01 #> [3172,]  0.4824886918  1.374180e-01  8.472890e-01 #> [3173,]  0.4855843782  1.239376e-01  8.697741e-01 #> [3174,]  0.4877443016  1.141714e-01  8.646721e-01 #> [3175,]  0.4643699527  9.890061e-02  8.835182e-01 #> [3176,]  0.4726265967  9.112389e-02  8.744630e-01 #> [3177,]  0.4308461547  1.054583e-01  8.832768e-01 #> [3178,]  0.4537224174  1.179628e-01  8.850121e-01 #> [3179,]  0.5342271924  1.347431e-01  8.518362e-01 #> [3180,]  0.4919522703  1.653359e-01  8.407634e-01 #> [3181,]  0.4386987686  1.887938e-01  8.736349e-01 #> [3182,]  0.4736251533  1.673816e-01  8.702487e-01 #> [3183,]  0.4226882756  1.370607e-01  8.870164e-01 #> [3184,]  0.4266163409  1.586958e-01  8.945161e-01 #> [3185,]  0.4092922807  1.991964e-01  8.825565e-01 #> [3186,]  0.3817346394  1.900053e-01  8.986313e-01 #> [3187,]  0.4283863008  1.579046e-01  8.916804e-01 #> [3188,]  0.5097305775  1.517271e-01  8.625626e-01 #> [3189,]  0.4731620848  1.766019e-01  8.525497e-01 #> [3190,]  0.4124965966  1.686728e-01  8.876421e-01 #> [3191,]  0.4418601990  1.401959e-01  8.893514e-01 #> [3192,]  0.4363387227  1.373532e-01  8.919675e-01 #> [3193,]  0.4344825447  1.402351e-01  8.921054e-01 #> [3194,]  0.3793777525  1.381292e-01  9.009407e-01 #> [3195,]  0.3642329276  9.971611e-02  9.230179e-01 #> [3196,]  0.3989998698  7.029747e-02  9.120951e-01 #> [3197,]  0.4420236647  7.529724e-02  8.951506e-01 #> [3198,]  0.5169366598  9.001236e-02  8.686738e-01 #> [3199,]  0.4584793448  1.123508e-01  8.667161e-01 #> [3200,]  0.3953752816  1.179165e-01  9.038019e-01 #> [3201,]  0.4261465073  1.171280e-01  8.992071e-01 #> [3202,]  0.4037705958  1.180679e-01  9.059038e-01 #> [3203,]  0.4097578228  1.249695e-01  9.078362e-01 #> [3204,]  0.3695549071  1.495788e-01  9.051462e-01 #> [3205,]  0.3512985110  1.628773e-01  9.183111e-01 #> [3206,]  0.3906326592  1.692908e-01  9.038224e-01 #> [3207,]  0.4692679346  1.822799e-01  8.787838e-01 #> [3208,]  0.4757837653  2.096934e-01  8.538075e-01 #> [3209,]  0.3899147809  2.187659e-01  8.801827e-01 #> [3210,]  0.4066664279  2.019171e-01  8.942946e-01 #> [3211,]  0.3967709839  1.921686e-01  8.946657e-01 #> [3212,]  0.3970844150  1.741309e-01  9.065861e-01 #> [3213,]  0.3746064305  1.690584e-01  9.023476e-01 #> [3214,]  0.3295773864  1.654729e-01  9.219670e-01 #> [3215,]  0.3702843487  1.554435e-01  9.172930e-01 #> [3216,]  0.4051411152  1.544255e-01  8.995116e-01 #> [3217,]  0.4763122201  1.529745e-01  8.814085e-01 #> [3218,]  0.4899573922  1.611053e-01  8.550459e-01 #> [3219,]  0.3994229138  1.469736e-01  8.942720e-01 #> [3220,]  0.4105490446  1.234623e-01  9.131973e-01 #> [3221,]  0.3848380446  1.375183e-01  9.008051e-01 #> [3222,]  0.3513745666  1.411197e-01  9.208260e-01 #> [3223,]  0.3840127289  1.305054e-01  9.125733e-01 #> [3224,]  0.4407499731  1.235080e-01  8.957937e-01 #> [3225,]  0.5061765909  1.303701e-01  8.662784e-01 #> [3226,]  0.4232777953  1.515287e-01  8.749282e-01 #> [3227,]  0.3994317353  1.288229e-01  9.064985e-01 #> [3228,]  0.4252524674  9.922780e-02  8.989516e-01 #> [3229,]  0.4058604538  9.760234e-02  9.120423e-01 #> [3230,]  0.4008390009  1.119480e-01  9.075936e-01 #> [3231,]  0.3430812061  1.348358e-01  9.159425e-01 #> [3232,]  0.3481214046  1.437960e-01  9.263677e-01 #> [3233,]  0.3807339072  1.550577e-01  9.092427e-01 #> [3234,]  0.4300572574  1.607123e-01  8.953751e-01 #> [3235,]  0.4868516326  1.680979e-01  8.696729e-01 #> [3236,]  0.4069109261  1.908983e-01  8.761479e-01 #> [3237,]  0.3853198886  1.677873e-01  9.057756e-01 #> [3238,]  0.4102565050  1.323486e-01  9.008914e-01 #> [3239,]  0.3906856775  1.259185e-01  9.140541e-01 #> [3240,]  0.4020413160  1.247506e-01  9.083859e-01 #> [3241,]  0.3434902430  1.368824e-01  9.157166e-01 #> [3242,]  0.3160084486  1.435947e-01  9.356182e-01 #> [3243,]  0.3218551576  1.559277e-01  9.305821e-01 #> [3244,]  0.3184241652  1.793765e-01  9.276126e-01 #> [3245,]  0.3412997723  1.955497e-01  9.183100e-01 #> [3246,]  0.3907341957  2.074656e-01  8.983658e-01 #> [3247,]  0.4891144335  2.278788e-01  8.606533e-01 #> [3248,]  0.4958040714  2.697771e-01  8.236123e-01 #> [3249,]  0.4039885700  2.707634e-01  8.661137e-01 #> [3250,]  0.4287015498  2.135074e-01  8.909055e-01 #> [3251,]  0.4012867212  1.814333e-01  8.864059e-01 #> [3252,]  0.3467578888  1.550093e-01  9.183305e-01 #> [3253,]  0.3704535663  1.270294e-01  9.229447e-01 #> [3254,]  0.3947634101  1.327822e-01  9.086725e-01 #> [3255,]  0.4450354278  1.468823e-01  8.944896e-01 #> [3256,]  0.4866268337  1.283960e-01  8.722060e-01 #> [3257,]  0.4114250839  8.457124e-02  8.880868e-01 #> [3258,]  0.4251798093  6.238754e-02  9.051802e-01 #> [3259,]  0.4616122246  5.181646e-02  8.872667e-01 #> [3260,]  0.4487226605  3.691772e-02  8.976603e-01 #> [3261,]  0.4528476298  4.627978e-02  8.902383e-01 #> [3262,]  0.3796225190  7.739744e-02  9.059875e-01 #> [3263,]  0.3588935733  1.059117e-01  9.259865e-01 #> [3264,]  0.3836656809  1.334561e-01  9.135145e-01 #> [3265,]  0.4164248705  1.611085e-01  8.982007e-01 #> [3266,]  0.4844730198  1.900790e-01  8.687556e-01 #> [3267,]  0.4456329644  2.598305e-01  8.441302e-01 #> [3268,]  0.4000376463  2.993797e-01  8.624597e-01 #> [3269,]  0.4473132491  2.543764e-01  8.623976e-01 #> [3270,]  0.4308028221  2.093259e-01  8.773397e-01 #> [3271,]  0.4346253872  1.822522e-01  8.886677e-01 #> [3272,]  0.3782959580  1.729371e-01  8.936876e-01 #> [3273,]  0.3096536696  1.741650e-01  9.262246e-01 #> [3274,]  0.2961860001  1.849292e-01  9.337692e-01 #> [3275,]  0.3056944311  2.002543e-01  9.307817e-01 #> [3276,]  0.3398402631  2.100349e-01  9.178556e-01 #> [3277,]  0.3967320621  2.062909e-01  9.024681e-01 #> [3278,]  0.4587206841  2.152968e-01  8.718036e-01 #> [3279,]  0.3957377672  2.615964e-01  8.648391e-01 #> [3280,]  0.3921825588  2.455370e-01  8.870175e-01 #> [3281,]  0.4358145595  1.961317e-01  8.807963e-01 #> [3282,]  0.4184639156  1.914267e-01  8.934781e-01 #> [3283,]  0.4088073373  1.968343e-01  8.908853e-01 #> [3284,]  0.3421041071  2.110710e-01  9.010488e-01 #> [3285,]  0.3274190128  2.042935e-01  9.210011e-01 #> [3286,]  0.3578916192  1.648916e-01  9.181507e-01 #> [3287,]  0.3828049302  1.351094e-01  9.103457e-01 #> [3288,]  0.4465913773  1.246484e-01  8.953754e-01 #> [3289,]  0.5031970739  1.270154e-01  8.661485e-01 #> [3290,]  0.4143708646  1.406416e-01  8.805492e-01 #> [3291,]  0.3979826570  1.481907e-01  9.057598e-01 #> [3292,]  0.4152840078  1.626663e-01  8.941988e-01 #> [3293,]  0.3981965482  1.660200e-01  9.071595e-01 #> [3294,]  0.3954777718  1.730963e-01  9.003139e-01 #> [3295,]  0.3234689832  1.882548e-01  9.138183e-01 #> [3296,]  0.2932827473  1.755340e-01  9.374136e-01 #> [3297,]  0.2995877266  1.560893e-01  9.396382e-01 #> [3298,]  0.3257045448  1.563223e-01  9.349403e-01 #> [3299,]  0.3658413291  1.798532e-01  9.157115e-01 #> [3300,]  0.3856642842  2.187216e-01  8.948654e-01 #> [3301,]  0.4576033652  2.481379e-01  8.666636e-01 #> [3302,]  0.4989685416  2.686701e-01  8.272886e-01 #> [3303,]  0.4342066944  2.644660e-01  8.583078e-01 #> [3304,]  0.4346353412  2.357224e-01  8.799919e-01 #> [3305,]  0.3844968081  2.156146e-01  8.830677e-01 #> [3306,]  0.3362928629  1.489516e-01  9.226082e-01 #> [3307,]  0.3549168408  7.695197e-02  9.277288e-01 #> [3308,]  0.3804985881  6.787865e-02  9.219580e-01 #> [3309,]  0.4432003498  4.902905e-02  9.063752e-01 #> [3310,]  0.3873118162  8.559611e-03  9.051259e-01 #> [3311,]  0.3540368974  1.739856e-02  9.305480e-01 #> [3312,]  0.3912372589  2.156221e-02  9.208692e-01 #> [3313,]  0.3615057170 -2.779048e-02  9.296744e-01 #> [3314,]  0.3514640629 -3.706663e-02  9.352953e-01 #> [3315,]  0.2886269689  3.777638e-03  9.418250e-01 #> [3316,]  0.2433217913  5.216687e-02  9.619802e-01 #> [3317,]  0.2383350730  9.902772e-02  9.629410e-01 #> [3318,]  0.2427137196  1.347857e-01  9.602294e-01 #> [3319,]  0.2672092021  1.699040e-01  9.497799e-01 #> [3320,]  0.2924158275  2.061131e-01  9.344949e-01 #> [3321,]  0.3635492325  2.376203e-01  9.149255e-01 #> [3322,]  0.3883724511  2.732316e-01  8.799903e-01 #> [3323,]  0.3222225904  3.017383e-01  8.838687e-01 #> [3324,]  0.3552507460  3.122061e-01  8.871261e-01 #> [3325,]  0.3411936760  2.804774e-01  8.917370e-01 #> [3326,]  0.3129098117  1.993288e-01  9.307309e-01 #> [3327,]  0.2818756402  1.404994e-01  9.380163e-01 #> [3328,]  0.1972375214  1.010668e-01  9.607986e-01 #> [3329,]  0.1625208855  8.288026e-02  9.781156e-01 #> [3330,]  0.1411291063  1.095723e-01  9.784870e-01 #> [3331,]  0.1419758052  1.405961e-01  9.782185e-01 #> [3332,]  0.1683577001  1.656445e-01  9.730346e-01 #> [3333,]  0.2144114077  1.549982e-01  9.697959e-01 #> [3334,]  0.2571235895  8.727454e-02  9.641224e-01 #> [3335,]  0.3131036758  2.670268e-02  9.561009e-01 #> [3336,]  0.3891212344  3.078970e-02  9.294081e-01 #> [3337,]  0.3326573670  1.009651e-01  9.201310e-01 #> [3338,]  0.3164228201  1.200097e-01  9.407191e-01 #> [3339,]  0.3467272520  8.323208e-02  9.310774e-01 #> [3340,]  0.3075130880  5.343333e-02  9.472679e-01 #> [3341,]  0.3041703105  3.153021e-02  9.514269e-01 #> [3342,]  0.2359257340  2.755180e-02  9.557343e-01 #> [3343,]  0.1824178547  2.945632e-02  9.778762e-01 #> [3344,]  0.1710434109  5.309898e-02  9.807125e-01 #> [3345,]  0.1687317938  7.207759e-02  9.822327e-01 #> [3346,]  0.1814367473  4.770656e-02  9.814378e-01 #> [3347,]  0.2057805210  2.296809e-02  9.785581e-01 #> [3348,]  0.2313887179  2.916305e-02  9.713015e-01 #> [3349,]  0.2821213603  3.763672e-02  9.647231e-01 #> [3350,]  0.3593358099  4.163041e-02  9.432257e-01 #> [3351,]  0.2996434271  3.481048e-02  9.364758e-01 #> [3352,]  0.2769611776 -8.936888e-03  9.571424e-01 #> [3353,]  0.3020339012 -4.293908e-02  9.461393e-01 #> [3354,]  0.2419074625 -2.637634e-02  9.632144e-01 #> [3355,]  0.2202031463  1.287026e-02  9.721678e-01 #> [3356,]  0.1523981690  5.618409e-02  9.715313e-01 #> [3357,]  0.0993087143  9.188537e-02  9.862515e-01 #> [3358,]  0.0847938806  1.185845e-01  9.856797e-01 #> [3359,]  0.0756693929  1.277276e-01  9.862701e-01 #> [3360,]  0.0901982188  1.283162e-01  9.877477e-01 #> [3361,]  0.1297006011  1.422852e-01  9.830498e-01 #> [3362,]  0.1650082469  1.945707e-01  9.677843e-01 #> [3363,]  0.1857212931  2.471482e-01  9.531682e-01 #> [3364,]  0.2721234560  2.577620e-01  9.414403e-01 #> [3365,]  0.3186245561  3.245212e-01  8.898158e-01 #> [3366,]  0.2765350640  4.171462e-01  8.592576e-01 #> [3367,]  0.3259831965  4.228470e-01  8.513522e-01 #> [3368,]  0.3396044374  3.970223e-01  8.533178e-01 #> [3369,]  0.3396380842  3.377606e-01  8.849236e-01 #> [3370,]  0.3007711172  2.839378e-01  8.998302e-01 #> [3371,]  0.2238876075  2.472026e-01  9.334852e-01 #> [3372,]  0.2108072042  1.745554e-01  9.589413e-01 #> [3373,]  0.2131975442  1.123941e-01  9.685414e-01 #> [3374,]  0.2329532057  6.969512e-02  9.710237e-01 #> [3375,]  0.2610857189  5.004747e-03  9.662347e-01 #> [3376,]  0.2873451710 -5.653409e-02  9.571232e-01 #> [3377,]  0.3151195645 -7.186958e-02  9.467449e-01 #> [3378,]  0.3943788111 -5.921313e-02  9.274584e-01 #> [3379,]  0.4030487537 -7.449444e-03  9.075764e-01 #> [3380,]  0.3515853882  5.786462e-02  9.246587e-01 #> [3381,]  0.3881931603  6.882409e-02  9.200541e-01 #> [3382,]  0.3803565204  4.392205e-02  9.228523e-01 #> [3383,]  0.3816560209  2.794064e-03  9.302425e-01 #> [3384,]  0.3257885277 -1.455282e-03  9.292709e-01 #> [3385,]  0.2482652217  1.778696e-02  9.588154e-01 #> [3386,]  0.2429410517  3.537950e-02  9.682869e-01 #> [3387,]  0.2368146181  5.977828e-02  9.647604e-01 #> [3388,]  0.2518826127  9.377041e-02  9.659081e-01 #> [3389,]  0.3076025248  1.202735e-01  9.535208e-01 #> [3390,]  0.2532216311  7.309224e-02  9.478991e-01 #> [3391,]  0.2386161536  1.896417e-02  9.666731e-01 #> [3392,]  0.2878120840  5.032871e-02  9.514653e-01 #> [3393,]  0.2811405659  9.018066e-02  9.541151e-01 #> [3394,]  0.2969368100  1.328559e-01  9.477383e-01 #> [3395,]  0.2332189977  1.958232e-01  9.400531e-01 #> [3396,]  0.2010155022  2.341214e-01  9.515502e-01 #> [3397,]  0.2251123190  2.529204e-01  9.437538e-01 #> [3398,]  0.2501988411  2.445993e-01  9.392119e-01 #> [3399,]  0.2766150236  2.206285e-01  9.359136e-01 #> [3400,]  0.3268521428  1.976940e-01  9.308054e-01 #> [3401,]  0.4109337032  1.650182e-01  9.085962e-01 #> [3402,]  0.3657430410  1.425598e-01  9.046533e-01 #> [3403,]  0.3422843814  9.085608e-02  9.310185e-01 #> [3404,]  0.3753992319  1.684825e-02  9.253399e-01 #> [3405,]  0.3541126847 -3.052053e-02  9.346330e-01 #> [3406,]  0.3495360315 -6.377476e-02  9.339737e-01 #> [3407,]  0.2654283643 -7.862587e-02  9.430838e-01 #> [3408,]  0.2005768567 -6.621091e-02  9.687625e-01 #> [3409,]  0.1800709218 -2.607454e-02  9.770103e-01 #> [3410,]  0.1764307320 -1.991371e-02  9.819697e-01 #> [3411,]  0.2019741982 -4.252695e-02  9.788429e-01 #> [3412,]  0.2288860679 -2.468327e-02  9.728500e-01 #> [3413,]  0.3022998571  1.423061e-02  9.631907e-01 #> [3414,]  0.3795471489  5.641153e-02  9.308110e-01 #> [3415,]  0.3317521811  1.063572e-01  9.237897e-01 #> [3416,]  0.3498270810  1.019807e-01  9.315062e-01 #> [3417,]  0.3810646832  8.747750e-02  9.197784e-01 #> [3418,]  0.3669089973  9.393368e-02  9.310012e-01 #> [3419,]  0.3377962708  9.553317e-02  9.287892e-01 #> [3420,]  0.2465147227  1.126903e-01  9.463305e-01 #> [3421,]  0.2081449777  1.339960e-01  9.639996e-01 #> [3422,]  0.2049932480  1.506603e-01  9.656075e-01 #> [3423,]  0.2327756733  1.565015e-01  9.619740e-01 #> [3424,]  0.3065626919  1.486191e-01  9.496657e-01 #> [3425,]  0.3898265064  1.443765e-01  9.213081e-01 #> [3426,]  0.3430410624  1.571971e-01  9.118915e-01 #> [3427,]  0.3361975551  1.350797e-01  9.291611e-01 #> [3428,]  0.3779091537  1.039727e-01  9.194320e-01 #> [3429,]  0.3640353680  1.103640e-01  9.282368e-01 #> [3430,]  0.3502253592  1.222579e-01  9.259005e-01 #> [3431,]  0.2630653679  1.459398e-01  9.356270e-01 #> [3432,]  0.2082931250  1.733248e-01  9.570280e-01 #> [3433,]  0.1914640069  1.998798e-01  9.573220e-01 #> [3434,]  0.1981908977  2.121084e-01  9.580042e-01 #> [3435,]  0.2252848595  2.088970e-01  9.513471e-01 #> [3436,]  0.2931831479  2.184885e-01  9.398792e-01 #> [3437,]  0.3920854926  2.547193e-01  8.979977e-01 #> [3438,]  0.3584146500  3.154453e-01  8.677062e-01 #> [3439,]  0.3630163372  3.122860e-01  8.795403e-01 #> [3440,]  0.3938810825  2.591579e-01  8.814626e-01 #> [3441,]  0.3694087863  2.127072e-01  9.071867e-01 #> [3442,]  0.3730411232  1.659932e-01  9.134275e-01 #> [3443,]  0.3096464276  1.248662e-01  9.286131e-01 #> [3444,]  0.2830632925  7.067358e-02  9.548299e-01 #> [3445,]  0.2904725671  1.338007e-02  9.542258e-01 #> [3446,]  0.3109660447 -1.553162e-02  9.528758e-01 #> [3447,]  0.3815829456 -3.898951e-02  9.325035e-01 #> [3448,]  0.3622670174 -7.187549e-02  9.174638e-01 #> [3449,]  0.3533937335 -1.158496e-01  9.232962e-01 #> [3450,]  0.3904222846 -1.363942e-01  9.089317e-01 #> [3451,]  0.3695018589 -1.194443e-01  9.217265e-01 #> [3452,]  0.3639120162 -1.071684e-01  9.248533e-01 #> [3453,]  0.2995063365 -6.619544e-02  9.344702e-01 #> [3454,]  0.2572862208 -1.564750e-02  9.606681e-01 #> [3455,]  0.2726466954  3.985635e-02  9.597487e-01 #> [3456,]  0.3089186549  7.999928e-02  9.510675e-01 #> [3457,]  0.4040776491  9.343943e-02  9.254240e-01 #> [3458,]  0.4293856323  1.855857e-01  8.803111e-01 #> [3459,]  0.3749670982  2.618044e-01  8.821253e-01 #> [3460,]  0.4222361743  2.266399e-01  8.827032e-01 #> [3461,]  0.4252648950  2.011025e-01  8.840851e-01 #> [3462,]  0.4219601154  1.613994e-01  9.000562e-01 #> [3463,]  0.3840634823  1.054744e-01  9.052230e-01 #> [3464,]  0.3172816932  7.184008e-02  9.356931e-01 #> [3465,]  0.3046321571  2.806010e-02  9.471514e-01 #> [3466,]  0.2946362197 -1.883440e-02  9.511778e-01 #> [3467,]  0.3499526978 -6.271730e-02  9.450264e-01 #> [3468,]  0.3486736417 -9.500540e-02  9.247840e-01 #> [3469,]  0.3034105301 -1.297705e-01  9.332129e-01 #> [3470,]  0.3557996452 -1.709036e-01  9.188443e-01 #> [3471,]  0.3441461027 -1.613272e-01  9.177663e-01 #> [3472,]  0.3381051719 -1.481045e-01  9.322116e-01 #> [3473,]  0.2918656170 -1.307665e-01  9.332508e-01 #> [3474,]  0.2133048475 -9.045899e-02  9.613751e-01 #> [3475,]  0.1968438327 -5.210884e-02  9.748247e-01 #> [3476,]  0.1859658957  1.173159e-03  9.777616e-01 #> [3477,]  0.1984495521  6.975734e-02  9.773747e-01 #> [3478,]  0.2324987352  1.189919e-01  9.656202e-01 #> [3479,]  0.2885513306  1.512999e-01  9.519014e-01 #> [3480,]  0.4070191085  1.855714e-01  9.139155e-01 #> [3481,]  0.4201958179  2.788304e-01  8.577908e-01 #> [3482,]  0.3863885105  3.393507e-01  8.546767e-01 #> [3483,]  0.4360028505  3.056414e-01  8.530359e-01 #> [3484,]  0.4375875890  2.707236e-01  8.636329e-01 #> [3485,]  0.4451743662  2.390902e-01  8.705829e-01 #> [3486,]  0.3895082772  2.145889e-01  8.821266e-01 #> [3487,]  0.3602660596  1.501838e-01  9.168571e-01 #> [3488,]  0.3961936235  6.032743e-02  9.144497e-01 #> [3489,]  0.4256064296 -7.401888e-03  9.046276e-01 #> [3490,]  0.5152649283 -7.238974e-02  8.698495e-01 #> [3491,]  0.5031231642 -1.035155e-01  8.492938e-01 #> [3492,]  0.4175042808 -1.249995e-01  8.942197e-01 #> [3493,]  0.4194141030 -1.536075e-01  8.986156e-01 #> [3494,]  0.3629746139 -1.396983e-01  9.044133e-01 #> [3495,]  0.3094220459 -1.088957e-01  9.364016e-01 #> [3496,]  0.3018453717 -7.321333e-02  9.466005e-01 #> [3497,]  0.3204264641 -3.889953e-02  9.461025e-01 #> [3498,]  0.3609397709 -1.511367e-02  9.341153e-01 #> [3499,]  0.4477362335 -5.511936e-03  9.085136e-01 #> [3500,]  0.4787758291 -1.221092e-03  8.777173e-01 #> [3501,]  0.4236600399 -1.243943e-02  8.929667e-01 #> [3502,]  0.4565030038 -4.485143e-02  8.919528e-01 #> [3503,]  0.4567982256 -5.381969e-02  8.899397e-01 #> [3504,]  0.4483786523 -5.502563e-02  8.980700e-01 #> [3505,]  0.4090434015 -3.580727e-02  8.978193e-01 #> [3506,]  0.3724485636  1.144774e-02  9.201095e-01 #> [3507,]  0.4087681472  6.843372e-02  9.091944e-01 #> [3508,]  0.4689996541  9.995157e-02  8.848386e-01 #> [3509,]  0.5655909777  1.082153e-01  8.365332e-01 #> [3510,]  0.5158268809  1.349114e-01  8.356271e-01 #> [3511,]  0.4646413922  1.148361e-01  8.850789e-01 #> [3512,]  0.4723364413  8.352009e-02  8.778515e-01 #> [3513,]  0.4124910235  7.542684e-02  8.939238e-01 #> [3514,]  0.4132512212  3.084783e-02  9.074724e-01 #> [3515,]  0.4641185403 -1.704560e-02  8.882715e-01 #> [3516,]  0.5392896533 -5.326991e-02  8.547990e-01 #> [3517,]  0.4962683916 -6.869747e-02  8.521377e-01 #> [3518,]  0.4612687528 -6.045088e-02  8.812312e-01 #> [3519,]  0.4758768082 -3.211015e-02  8.795398e-01 #> [3520,]  0.4472589493  4.742835e-03  8.959132e-01 #> [3521,]  0.4436720014  3.708498e-02  8.952692e-01 #> [3522,]  0.4047075510  9.598236e-02  8.963498e-01 #> [3523,]  0.4036804140  1.765728e-01  8.935333e-01 #> [3524,]  0.4733386040  2.264732e-01  8.638808e-01 #> [3525,]  0.5192555785  2.770167e-01  8.183187e-01 #> [3526,]  0.4506363571  3.331154e-01  8.162355e-01 #> [3527,]  0.4564256966  3.146619e-01  8.370849e-01 #> [3528,]  0.4651579559  2.751574e-01  8.430432e-01 #> [3529,]  0.4524826407  2.461104e-01  8.656854e-01 #> [3530,]  0.4345607162  1.957938e-01  8.751878e-01 #> [3531,]  0.3960471749  1.196104e-01  9.011991e-01 #> [3532,]  0.4136897326  3.600062e-02  9.068462e-01 #> [3533,]  0.4757604897 -2.629868e-02  8.867912e-01 #> [3534,]  0.5294626951 -5.621586e-02  8.536187e-01 #> [3535,]  0.4535826147 -8.238053e-02  8.737407e-01 #> [3536,]  0.4376808405 -1.156862e-01  8.978884e-01 #> [3537,]  0.4385703802 -1.397945e-01  8.822680e-01 #> [3538,]  0.4148547351 -1.418619e-01  8.888052e-01 #> [3539,]  0.4494892657 -1.115504e-01  8.856336e-01 #> [3540,]  0.5389627218 -9.938252e-02  8.518052e-01 #> [3541,]  0.5635434985 -7.583281e-02  8.236167e-01 #> [3542,]  0.4819301963 -2.893422e-02  8.694589e-01 #> [3543,]  0.4985271990  5.077898e-03  8.783206e-01 #> [3544,]  0.4830407202  3.078453e-02  8.654736e-01 #> [3545,]  0.4466592073  9.266038e-03  8.877551e-01 #> [3546,]  0.5150322914 -2.448556e-02  8.702416e-01 #> [3547,]  0.5261704922 -1.582086e-03  8.483695e-01 #> [3548,]  0.4718275964  3.627643e-03  8.715336e-01 #> [3549,]  0.4939683378 -6.162316e-02  8.710020e-01 #> [3550,]  0.4755829275 -8.160153e-02  8.761141e-01 #> [3551,]  0.4695514739 -5.939982e-02  8.856784e-01 #> [3552,]  0.4518509507 -3.826432e-02  8.820922e-01 #> [3553,]  0.4268114567 -4.203598e-03  8.960065e-01 #> [3554,]  0.5034655333  3.765616e-02  8.758978e-01 #> [3555,]  0.5468927622  9.931879e-02  8.388921e-01 #> [3556,]  0.4786619246  1.447018e-01  8.544402e-01 #> [3557,]  0.4911231995  1.108430e-01  8.686651e-01 #> [3558,]  0.4952670038  6.992400e-02  8.696054e-01 #> [3559,]  0.4852762520  1.524724e-02  8.795882e-01 #> [3560,]  0.4689173102 -5.678797e-02  8.743353e-01 #> [3561,]  0.4365139008 -7.642446e-02  8.873741e-01 #> [3562,]  0.4645839632 -5.322944e-02  8.836870e-01 #> [3563,]  0.5539468527 -4.606075e-02  8.470159e-01 #> [3564,]  0.5844362378 -4.324407e-02  8.134704e-01 #> [3565,]  0.5102869272  3.198819e-03  8.544105e-01 #> [3566,]  0.5143833160  4.404203e-02  8.672614e-01 #> [3567,]  0.4897608459  7.872313e-02  8.564949e-01 #> [3568,]  0.4590160847  1.484134e-01  8.679091e-01 #> [3569,]  0.5206104517  2.113334e-01  8.404029e-01 #> [3570,]  0.5838547349  2.768058e-01  7.798202e-01 #> [3571,]  0.5244472027  3.091151e-01  7.893904e-01 #> [3572,]  0.5027006269  2.143792e-01  8.458021e-01 #> [3573,]  0.4958086908  1.226839e-01  8.564860e-01 #> [3574,]  0.4514954388  7.240492e-02  8.787611e-01 #> [3575,]  0.4613255262  1.240983e-02  8.833673e-01 #> [3576,]  0.5249638557 -9.868423e-03  8.604903e-01 #> [3577,]  0.5678020120  2.720827e-03  8.299168e-01 #> [3578,]  0.4960405827  9.328580e-03  8.534526e-01 #> [3579,]  0.5254989862 -3.265166e-02  8.636557e-01 #> [3580,]  0.4645709991 -4.855881e-02  8.665700e-01 #> [3581,]  0.3542303443 -5.748942e-02  9.234257e-01 #> [3582,]  0.4071438909 -7.462220e-02  9.128183e-01 #> [3583,]  0.4502375722 -8.462216e-02  8.870673e-01 #> [3584,]  0.5366016626 -1.145760e-01  8.516437e-01 #> [3585,]  0.5187768936 -9.118444e-02  8.426664e-01 #> [3586,]  0.4514568150 -7.455895e-02  8.902302e-01 #> [3587,]  0.4648863375 -5.970455e-02  8.871758e-01 #> [3588,]  0.4446239173  1.707418e-02  8.837441e-01 #> [3589,]  0.4673350453  4.774601e-02  8.850513e-01 #> [3590,]  0.5583484769  3.063486e-02  8.483847e-01 #> [3591,]  0.5397880673  6.064326e-02  8.331762e-01 #> [3592,]  0.4864091277  7.009595e-02  8.646597e-01 #> [3593,]  0.5063826442  4.834431e-02  8.659949e-01 #> [3594,]  0.4923332930  9.257124e-02  8.696157e-01 #> [3595,]  0.4969626069  1.634305e-01  8.582928e-01 #> [3596,]  0.4594230056  1.838588e-01  8.596169e-01 #> [3597,]  0.4586119950  1.506453e-01  8.758686e-01 #> [3598,]  0.4941575527  1.179749e-01  8.620915e-01 #> [3599,]  0.5640202165  8.277667e-02  8.335767e-01 #> [3600,]  0.6200751662  5.803998e-02  7.980590e-01 #> [3601,]  0.5550073981  3.084828e-02  8.277128e-01 #> [3602,]  0.5459234118 -4.496796e-02  8.460130e-01 #> [3603,]  0.5370657444 -1.024975e-01  8.330843e-01 #> [3604,]  0.5082498789 -1.238031e-01  8.418480e-01 #> [3605,]  0.5612481236 -1.430398e-01  8.232602e-01 #> [3606,]  0.5940836072 -1.079297e-01  8.022540e-01 #> [3607,]  0.5361971259 -5.129958e-02  8.310570e-01 #> [3608,]  0.5404448509 -7.237575e-02  8.424334e-01 #> [3609,]  0.5436334610 -9.599900e-02  8.388851e-01 #> [3610,]  0.5464069843 -7.786620e-02  8.430265e-01 #> [3611,]  0.5403832793 -2.275261e-03  8.336643e-01 #> [3612,]  0.5196203589  1.035636e-01  8.443420e-01 #> [3613,]  0.5852848887  1.238755e-01  8.190298e-01 #> [3614,]  0.5514351130  1.384706e-01  8.104793e-01 #> [3615,]  0.5188248158  1.961751e-01  8.300552e-01 #> [3616,]  0.5480976701  2.502072e-01  8.084316e-01 #> [3617,]  0.5272677541  2.800758e-01  8.114731e-01 #> [3618,]  0.5244668126  2.870186e-01  8.075662e-01 #> [3619,]  0.4768507183  2.981733e-01  8.162400e-01 #> [3620,]  0.4659388065  2.707408e-01  8.434431e-01 #> [3621,]  0.4961878359  1.902913e-01  8.459604e-01 #> [3622,]  0.5780018568  1.181878e-01  8.224571e-01 #> [3623,]  0.6084765792  1.011413e-01  7.948176e-01 #> [3624,]  0.5395448208  6.915789e-02  8.386107e-01 #> [3625,]  0.5456632972  2.282965e-02  8.483920e-01 #> [3626,]  0.5125218630  2.172805e-02  8.455803e-01 #> [3627,]  0.4765231609  5.507916e-02  8.689172e-01 #> [3628,]  0.5429689288  1.151008e-01  8.436750e-01 #> [3629,]  0.5763627887  2.043111e-01  7.971378e-01 #> [3630,]  0.5164784789  2.777954e-01  8.017359e-01 #> [3631,]  0.5196749568  3.055414e-01  8.075926e-01 #> [3632,]  0.5104905367  2.907801e-01  8.158482e-01 #> [3633,]  0.5065342188  2.383259e-01  8.370511e-01 #> [3634,]  0.4929299951  2.166752e-01  8.388796e-01 #> [3635,]  0.4587033987  1.687368e-01  8.636010e-01 #> [3636,]  0.5147681832  7.844652e-02  8.642202e-01 #> [3637,]  0.5519999266  3.396250e-02  8.393870e-01 #> [3638,]  0.4943727851  9.638138e-03  8.566864e-01 #> [3639,]  0.5035772324 -4.874003e-03  8.684612e-01 #> [3640,]  0.4913197160 -1.801858e-02  8.706723e-01 #> [3641,]  0.4745034575 -5.212303e-02  8.826134e-01 #> [3642,]  0.4706282318 -2.263315e-02  8.754560e-01 #> [3643,]  0.4339539707  2.989198e-02  8.911512e-01 #> [3644,]  0.4960471988  3.358253e-02  8.800089e-01 #> [3645,]  0.5216557384  7.679056e-02  8.504965e-01 #> [3646,]  0.4648605287  1.216422e-01  8.700401e-01 #> [3647,]  0.4932397604  6.539263e-02  8.729828e-01 #> [3648,]  0.4926441014  2.321256e-02  8.721930e-01 #> [3649,]  0.4829587936  5.381379e-02  8.799756e-01 #> [3650,]  0.4625580609  5.930501e-02  8.786178e-01 #> [3651,]  0.4356469214  2.936206e-03  8.931058e-01 #> [3652,]  0.4647403657 -5.813083e-02  8.854530e-01 #> [3653,]  0.5407602787 -1.039039e-01  8.474833e-01 #> [3654,]  0.5193659663 -1.036922e-01  8.406489e-01 #> [3655,]  0.4653379917 -9.800465e-02  8.789595e-01 #> [3656,]  0.4769839942 -1.213556e-01  8.735731e-01 #> [3657,]  0.4373858273 -1.113657e-01  8.793166e-01 #> [3658,]  0.4493394494 -1.113103e-01  8.851388e-01 #> [3659,]  0.5357893705 -1.462182e-01  8.476586e-01 #> [3660,]  0.5285183787 -1.562084e-01  8.297035e-01 #> [3661,]  0.4797896147 -1.483556e-01  8.561034e-01 #> [3662,]  0.4952350259 -1.572015e-01  8.580097e-01 #> [3663,]  0.4700864255 -1.293053e-01  8.729571e-01 #> [3664,]  0.4812662899 -4.731921e-02  8.803769e-01 #> [3665,]  0.4662226439  1.009043e-02  8.768235e-01 #> [3666,]  0.4595423937 -9.855972e-03  8.858030e-01 #> [3667,]  0.5485437512 -3.467003e-02  8.540443e-01 #> [3668,]  0.5407431722 -6.232967e-03  8.355520e-01 #> [3669,]  0.4848621190  5.188151e-03  8.667269e-01 #> [3670,]  0.5050383806 -2.567908e-02  8.698494e-01 #> [3671,]  0.4650723636 -1.171557e-01  8.737097e-01 #> [3672,]  0.4313862920 -2.726285e-01  8.590258e-01 #> [3673,]  0.4073002934 -3.219624e-01  8.454430e-01 #> [3674,]  0.4071719646 -2.519944e-01  8.691359e-01 #> [3675,]  0.4719848037 -2.225415e-01  8.606976e-01 #> [3676,]  0.5725587606 -2.222327e-01  8.074433e-01 #> [3677,]  0.5342732072 -1.685852e-01  8.179050e-01 #> [3678,]  0.4914963543 -1.387488e-01  8.655593e-01 #> [3679,]  0.4996470511 -1.225756e-01  8.566082e-01 #> [3680,]  0.4449640214 -8.205421e-02  8.764388e-01 #> [3681,]  0.4777085781 -8.225798e-02  8.829849e-01 #> [3682,]  0.5062645674 -7.779962e-02  8.595239e-01 #> [3683,]  0.4563088715 -4.307780e-02  8.774062e-01 #> [3684,]  0.4774635434 -6.177885e-02  8.800013e-01 #> [3685,]  0.4754131138 -6.537865e-02  8.788484e-01 #> [3686,]  0.4725302458 -3.925988e-02  8.862079e-01 #> [3687,]  0.4660136104 -3.156714e-02  8.779831e-01 #> [3688,]  0.4383794665 -2.199021e-02  8.900950e-01 #> [3689,]  0.5051380992 -1.481025e-02  8.736027e-01 #> [3690,]  0.5892987847  2.078518e-02  8.225210e-01 #> [3691,]  0.5410311222  6.603208e-02  8.338459e-01 #> [3692,]  0.5241804719  3.701593e-02  8.626286e-01 #> [3693,]  0.5254972577  1.760122e-02  8.471961e-01 #> [3694,]  0.4739157856  4.167414e-02  8.671991e-01 #> [3695,]  0.5239745975  1.091015e-02  8.639143e-01 #> [3696,]  0.5428082943 -4.343966e-03  8.399318e-01 #> [3697,]  0.4908259809  5.744091e-03  8.611208e-01 #> [3698,]  0.5113179088 -4.522340e-02  8.634100e-01 #> [3699,]  0.4875088930 -8.043535e-02  8.693135e-01 #> [3700,]  0.4744736254 -9.993097e-02  8.777326e-01 #> [3701,]  0.4626040161 -1.236239e-01  8.691859e-01 #> [3702,]  0.4303236306 -9.720996e-02  8.871837e-01 #> [3703,]  0.5123121142 -5.078086e-02  8.694118e-01 #> [3704,]  0.6070684195 -9.934270e-03  8.111938e-01 #> [3705,]  0.5610500574  5.613758e-02  8.237000e-01 #> [3706,]  0.5487508774  8.674517e-02  8.462321e-01 #> [3707,]  0.5339636207  1.062430e-01  8.319362e-01 #> [3708,]  0.4721960127  1.496049e-01  8.565288e-01 #> [3709,]  0.5123081207  1.561890e-01  8.535911e-01 #> [3710,]  0.6024976373  1.409765e-01  8.053520e-01 #> [3711,]  0.5657433271  1.042439e-01  8.135605e-01 #> [3712,]  0.5339725018  4.938013e-03  8.522887e-01 #> [3713,]  0.5451937318 -8.540209e-02  8.340035e-01 #> [3714,]  0.4997604787 -1.490329e-01  8.388537e-01 #> [3715,]  0.5446498990 -1.976316e-01  8.255949e-01 #> [3716,]  0.5424019694 -2.105362e-01  8.061302e-01 #> [3717,]  0.5065698028 -1.830324e-01  8.342367e-01 #> [3718,]  0.5429104567 -1.234619e-01  8.392311e-01 #> [3719,]  0.5319859385 -1.046962e-01  8.461140e-01 #> [3720,]  0.5245503187 -1.033158e-01  8.473263e-01 #> [3721,]  0.4872998595 -3.853858e-02  8.563818e-01 #> [3722,]  0.5246576667  2.792688e-02  8.608664e-01 #> [3723,]  0.5816929936  8.996875e-02  8.179336e-01 #> [3724,]  0.5128702521  1.696745e-01  8.265178e-01 #> [3725,]  0.5180095434  1.924060e-01  8.404961e-01 #> [3726,]  0.5258708000  2.163456e-01  8.314397e-01 #> [3727,]  0.5064563155  2.503598e-01  8.305369e-01 #> [3728,]  0.4806080163  2.654217e-01  8.250706e-01 #> [3729,]  0.4516679943  2.426273e-01  8.509113e-01 #> [3730,]  0.4760888517  1.663420e-01  8.600736e-01 #> [3731,]  0.5237993598  6.565615e-02  8.493257e-01 #> [3732,]  0.5861222744 -1.031167e-02  8.209823e-01 #> [3733,]  0.5467865467 -3.700170e-02  8.228739e-01 #> [3734,]  0.5313621163 -7.420976e-02  8.404482e-01 #> [3735,]  0.5424641371 -1.075227e-01  8.371774e-01 #> [3736,]  0.5358874202 -1.042481e-01  8.432751e-01 #> [3737,]  0.5378962755 -7.077537e-02  8.339949e-01 #> [3738,]  0.4783482552 -1.474348e-02  8.586538e-01 #> [3739,]  0.5372731090  5.787076e-02  8.497881e-01 #> [3740,]  0.6128830314  1.443011e-01  7.883685e-01 #> [3741,]  0.5620855093  1.853498e-01  8.050157e-01 #> [3742,]  0.5528148413  1.737400e-01  8.205321e-01 #> [3743,]  0.5181850195  1.654582e-01  8.220426e-01 #> [3744,]  0.4764719307  1.380824e-01  8.581845e-01 #> [3745,]  0.5728548169  9.195533e-02  8.273832e-01 #> [3746,]  0.6329992414  7.855868e-02  7.764702e-01 #> [3747,]  0.5811039209  9.269430e-02  8.072994e-01 #> [3748,]  0.5903010368  8.165810e-02  8.095030e-01 #> [3749,]  0.5865184665  8.097209e-02  7.989347e-01 #> [3750,]  0.5530954003  1.424814e-01  8.128423e-01 #> [3751,]  0.4903722107  2.283280e-01  8.251850e-01 #> [3752,]  0.4730857611  2.439006e-01  8.444294e-01 #> [3753,]  0.4513556659  2.530446e-01  8.413758e-01 #> [3754,]  0.4026518762  2.623824e-01  8.619682e-01 #> [3755,]  0.4937545955  1.978847e-01  8.556202e-01 #> [3756,]  0.6169281006  1.242240e-01  7.895539e-01 #> [3757,]  0.6809566617  5.960077e-02  7.306092e-01 #> [3758,]  0.7520347238 -1.723202e-02  6.751096e-01 #> [3759,]  0.7907797694 -3.521006e-02  6.329425e-01 #> [3760,]  0.6994966865  6.305058e-02  6.904073e-01 #> [3761,]  0.6841861606  9.959829e-02  7.325906e-01 #> [3762,]  0.6970155835  7.438029e-02  7.279577e-01 #> [3763,]  0.6670141220  9.904721e-02  7.499642e-01 #> [3764,]  0.6456422806  1.267836e-01  7.465526e-01 #> [3765,]  0.5849345326  1.492487e-01  7.782547e-01 #> [3766,]  0.5502005816  1.595401e-01  8.089748e-01 #> [3767,]  0.6076449156  1.376586e-01  7.878016e-01 #> [3768,]  0.6592120528  8.951909e-02  7.578394e-01 #> [3769,]  0.6265668273  7.290556e-02  7.800828e-01 #> [3770,]  0.6343427896  8.032075e-02  7.724586e-01 #> [3771,]  0.6150187850  1.090284e-01  7.650740e-01 #> [3772,]  0.6155324578  1.686124e-01  7.637838e-01 #> [3773,]  0.7004617453  2.122806e-01  7.021229e-01 #> [3774,]  0.7277401686  2.480661e-01  6.534292e-01 #> [3775,]  0.6497381926  2.574243e-01  7.115351e-01 #> [3776,]  0.6513102651  2.250210e-01  7.358357e-01 #> [3777,]  0.6404919028  2.051143e-01  7.273102e-01 #> [3778,]  0.6066128016  1.887230e-01  7.578504e-01 #> [3779,]  0.6858694553  1.842517e-01  7.211167e-01 #> [3780,]  0.7167285085  2.045336e-01  6.738605e-01 #> [3781,]  0.6437877417  2.148336e-01  7.161087e-01 #> [3782,]  0.6664732695  1.834523e-01  7.356746e-01 #> [3783,]  0.6568118930  1.529634e-01  7.435853e-01 #> [3784,]  0.6448376179  1.316083e-01  7.567075e-01 #> [3785,]  0.6477276087  1.056064e-01  7.441883e-01 #> [3786,]  0.6436889768  7.992826e-02  7.538940e-01 #> [3787,]  0.7081461549  8.272846e-02  7.165745e-01 #> [3788,]  0.6737513542  1.123912e-01  7.148947e-01 #> [3789,]  0.6601900458  1.230795e-01  7.412490e-01 #> [3790,]  0.6801162362  1.340701e-01  7.335057e-01 #> [3791,]  0.6572640538  1.367747e-01  7.471426e-01 #> [3792,]  0.6695062518  1.334148e-01  7.311939e-01 #> [3793,]  0.6463631392  1.339507e-01  7.364151e-01 #> [3794,]  0.6887261868  8.972619e-02  7.297621e-01 #> [3795,]  0.6955276132  6.422864e-02  7.103778e-01 #> [3796,]  0.6183164120  6.918430e-02  7.581633e-01 #> [3797,]  0.7070108652  2.508630e-02  7.282370e-01 #> [3798,]  0.7588415146  4.785293e-03  6.645256e-01 #> [3799,]  0.6396830082  2.487059e-02  7.343328e-01 #> [3800,]  0.6875628829 -1.025451e-02  7.389554e-01 #> [3801,]  0.7472057939 -5.681233e-02  6.734067e-01 #> [3802,]  0.6771574020 -6.381942e-02  7.130603e-01 #> [3803,]  0.7059144378 -6.922496e-02  7.229935e-01 #> [3804,]  0.7067257166 -7.132932e-02  7.203658e-01 #> [3805,]  0.6949679255 -5.181978e-02  7.230049e-01 #> [3806,]  0.6909267902 -4.381997e-02  7.084757e-01 #> [3807,]  0.7036953568 -6.700082e-02  7.027016e-01 #> [3808,]  0.7772649527 -2.506465e-02  6.485559e-01 #> [3809,]  0.7378486395  7.125328e-02  6.544868e-01 #> [3810,]  0.7249458432  6.796486e-02  6.871124e-01 #> [3811,]  0.7498961091  3.889003e-02  6.804397e-01 #> [3812,]  0.6925656199  4.104466e-02  7.181408e-01 #> [3813,]  0.6674531102  8.255227e-03  7.360939e-01 #> [3814,]  0.6391438842 -7.203214e-03  7.546157e-01 #> [3815,]  0.6028681993 -2.286034e-02  7.817540e-01 #> [3816,]  0.6445270777 -6.489364e-02  7.625598e-01 #> [3817,]  0.6954172254 -6.767889e-02  7.296388e-01 #> [3818,]  0.6572705507 -3.692459e-02  7.558104e-01 #> [3819,]  0.6500414610 -2.279313e-02  7.587448e-01 #> [3820,]  0.6050951481  6.891075e-03  7.733759e-01 #> [3821,]  0.6261867881  1.119861e-02  7.796979e-01 #> [3822,]  0.7027919292 -1.097809e-02  7.296594e-01 #> [3823,]  0.6821695566 -3.409259e-02  7.395529e-01 #> [3824,]  0.6761769056 -8.740162e-02  7.332320e-01 #> [3825,]  0.6618604064 -9.039884e-02  7.288503e-01 #> [3826,]  0.6511174440 -6.673240e-02  7.465248e-01 #> [3827,]  0.6964337230 -8.766491e-02  7.146224e-01 #> [3828,]  0.7836160660 -9.133659e-02  6.380432e-01 #> [3829,]  0.7714723945 -5.836895e-02  6.437937e-01 #> [3830,]  0.7464327216 -5.241114e-02  6.784535e-01 #> [3831,]  0.7471696734 -4.393641e-02  6.575726e-01 #> [3832,]  0.7054796815 -3.343800e-02  6.878169e-01 #> [3833,]  0.7560613751 -5.736405e-02  6.582828e-01 #> [3834,]  0.8300862908 -5.320515e-02  5.850753e-01 #> [3835,]  0.8080779910 -4.235101e-02  6.124954e-01 #> [3836,]  0.7709136605 -6.664542e-02  6.529784e-01 #> [3837,]  0.7711291313 -7.907420e-02  6.362799e-01 #> [3838,]  0.7650157213 -3.461337e-02  6.289246e-01 #> [3839,]  0.7536396980  2.725571e-02  6.437753e-01 #> [3840,]  0.7396872640  3.906565e-02  6.585619e-01 #> [3841,]  0.7787056565  2.857592e-02  6.290589e-01 #> [3842,]  0.8446246982  5.143834e-02  5.689051e-01 #> [3843,]  0.8233702183  4.178115e-02  5.912894e-01 #> [3844,]  0.7999305129  1.844481e-03  6.176964e-01 #> [3845,]  0.8123154044 -2.198647e-02  5.857478e-01 #> [3846,]  0.8082450032 -3.234868e-03  5.758755e-01 #> [3847,]  0.7856255174  1.490176e-02  6.005374e-01 #> [3848,]  0.7856925130  5.583372e-03  6.048610e-01 #> [3849,]  0.8473977447  8.609302e-02  5.534983e-01 #> [3850,]  0.8514190316  1.141923e-01  5.546925e-01 #> [3851,]  0.8004533648  2.396223e-02  6.134362e-01 #> [3852,]  0.8028042316 -6.724330e-02  5.933568e-01 #> [3853,]  0.8003479242 -1.484368e-01  5.625153e-01 #> [3854,]  0.7843068838 -1.871662e-01  5.750375e-01 #> [3855,]  0.7807041407 -1.769688e-01  5.860534e-01 #> [3856,]  0.7729582787 -1.484695e-01  6.047137e-01 #> [3857,]  0.7490826249 -1.057006e-01  6.352550e-01 #> [3858,]  0.7617858648 -8.042323e-02  6.349295e-01 #> [3859,]  0.8275104761 -8.697531e-02  5.871311e-01 #> [3860,]  0.8189349771 -8.125529e-02  5.988152e-01 #> [3861,]  0.7895432115 -4.702693e-02  6.342129e-01 #> [3862,]  0.7874428630  3.083252e-02  6.068814e-01 #> [3863,]  0.8107901812  9.791720e-02  5.827084e-01 #> [3864,]  0.8013250828  1.060091e-01  6.031892e-01 #> [3865,]  0.5527216792  1.873253e-02  7.411202e-01 #> [3866,]  0.4396829307 -3.564904e-02  8.704696e-01 #> [3867,]  0.5539338589  3.825933e-03  8.407318e-01 #> [3868,]  0.5625284910 -2.266008e-03  8.125106e-01 #> [3869,]  0.5443078279 -6.901105e-03  8.252505e-01 #> [3870,]  0.5283036232  6.535141e-03  8.359742e-01 #> [3871,]  0.5133248568  1.883513e-02  8.472795e-01 #> [3872,]  0.5023583174  5.030610e-02  8.529503e-01 #> [3873,]  0.4864219427  4.269549e-02  8.623199e-01 #> [3874,]  0.5917000771  1.918193e-02  8.206769e-01 #> [3875,]  0.7043944597 -1.526165e-03  7.577966e-01 #> [3876,]  0.6075953245 -3.944344e-02  7.846648e-01 #> [3877,]  0.5081145167 -4.039880e-02  8.401120e-01 #> [3878,]  0.5651348233  1.705347e-03  8.231245e-01 #> [3879,]  0.6170479655  4.033029e-02  7.850955e-01 #> [3880,]  0.6459123492  4.112965e-02  7.615541e-01 #> [3881,]  0.6571967006  6.474233e-02  7.423642e-01 #> [3882,]  0.6671253443  1.292043e-01  7.364491e-01 #> [3883,]  0.6585333347  1.443622e-01  7.320934e-01 #> [3884,]  0.6303648949  1.287224e-01  7.545696e-01 #> [3885,]  0.6559420824  1.105680e-01  7.511778e-01 #> [3886,]  0.6441752911  9.708732e-02  7.463277e-01 #> [3887,]  0.6607827544  1.266197e-01  7.511072e-01 #> [3888,]  0.6802672744  1.085806e-01  7.416008e-01 #> [3889,]  0.6839421988  5.690392e-02  7.283403e-01 #> [3890,]  0.6801151633  5.842981e-02  7.195107e-01 #> [3891,]  0.6682179570  9.448645e-02  7.289964e-01 #> [3892,]  0.6727384329  1.111803e-01  7.276940e-01 #> [3893,]  0.6601316929  1.094838e-01  7.362579e-01 #> [3894,]  0.6364295483  1.350601e-01  7.533600e-01 #> [3895,]  0.6222043633  1.349384e-01  7.644160e-01 #> [3896,]  0.6231188178  7.722006e-02  7.688226e-01 #> [3897,]  0.6271609068  2.148863e-02  7.680941e-01 #> [3898,]  0.6252267957  8.270926e-03  7.731187e-01 #> [3899,]  0.6162506342  3.933029e-02  7.838740e-01 #> [3900,]  0.6055228114  9.600721e-02  7.889776e-01 #> [3901,]  0.6011512876  1.096775e-01  7.877047e-01 #> [3902,]  0.5853330493  7.240272e-02  7.956440e-01 #> [3903,]  0.5448541045  4.856332e-02  8.230262e-01 #> [3904,]  0.5075193644  2.348928e-02  8.496720e-01 #> [3905,]  0.4955891967  2.185574e-03  8.590893e-01 #> [3906,]  0.4874303341  1.316226e-02  8.677379e-01 #> [3907,]  0.4630962312 -3.614515e-03  8.861635e-01 #> [3908,]  0.4296363890 -4.782682e-02  9.022693e-01 #> [3909,]  0.4128394425 -6.864907e-02  8.996490e-01 #> [3910,]  0.4028612375 -6.196297e-02  8.909960e-01 #> [3911,]  0.3496277928 -3.634317e-02  9.212013e-01 #> [3912,]  0.2876983285 -4.473197e-02  9.577429e-01 #> [3913,]  0.2511682808 -7.622768e-02  9.500430e-01 #> [3914,]  0.2206110656 -3.142685e-04  9.497845e-01 #> [3915,]  0.2114602923  9.094806e-02  9.767568e-01 #> [3916,]  0.2095969319  5.542547e-02  9.919248e-01 #> [3917,]  0.2010208815 -1.148630e-02  9.835072e-01 #> [3918,]  0.1879785359 -8.870239e-03  9.729972e-01 #> [3919,]  0.1808505803  2.444960e-02  9.570066e-01 #> [3920,]  0.2089846581  5.209631e-02  9.495211e-01 #> [3921,]  0.3445108831  1.131900e-02  9.748354e-01 #> [3922,]  0.5697901845 -9.789703e-02  8.697260e-01 #> [3923,]  0.4271507263 -6.668232e-02  8.134642e-01 #> [3924,] -0.1043943614  3.894975e-04  9.276739e-01 #> [3925,] -0.3563961685  8.424452e-03  9.322337e-01 #> [3926,] -0.2955377400 -6.134361e-02  9.583867e-01 #> [3927,] -0.3190251291 -4.643075e-02  9.760325e-01 #> [3928,] -0.2792982459  1.060099e-01  9.822031e-01 #> [3929,] -0.2238475978  3.989572e-02  9.872293e-01 #> [3930,] -0.2957282662  6.250157e-03  9.330092e-01 #> [3931,] -0.1550209224  8.190534e-02  9.904365e-01 #> [3932,] -0.1075108647 -4.120740e-02  1.010270e+00 #> [3933,] -0.2191492617 -1.688304e-01  9.547734e-01 #> [3934,] -0.2273111939 -9.240329e-02  9.521980e-01 #> [3935,] -0.1681964397  2.108067e-02  9.940585e-01 #> [3936,]  0.1434133053  2.384260e-02  1.016719e+00 #> [3937,]  0.5761631727 -8.510931e-03  8.684506e-01 #> [3938,]  0.4829889536 -4.527100e-02  8.273665e-01 #> [3939,] -0.0184102096 -5.850905e-02  9.450803e-01 #> [3940,] -0.3697429001 -3.604766e-02  8.899828e-01 #> [3941,] -0.3954593539 -5.783719e-02  9.152347e-01 #> [3942,] -0.2714045942 -8.058149e-02  1.002085e+00 #> [3943,] -0.2779028714 -7.291242e-02  9.994468e-01 #> [3944,] -0.2463926822 -9.751321e-02  9.879074e-01 #> [3945,] -0.3495415449 -8.082072e-02  8.793280e-01 #> [3946,] -0.4329023659  8.378784e-03  8.889663e-01 #> [3947,] -0.1880324483  4.552106e-02  1.027122e+00 #> [3948,]  0.2210718542 -5.368508e-02  1.006636e+00 #> [3949,]  0.5707994699 -1.078465e-01  8.312279e-01 #> [3950,]  0.4389477968 -2.857452e-02  8.453180e-01 #> [3951,] -0.0957979187  6.746049e-03  9.375174e-01 #> [3952,] -0.3154493570  1.079241e-01  9.322864e-01 #> [3953,] -0.1697076857  1.382656e-01  1.004657e+00 #> [3954,] -0.2121840566 -9.630374e-02  9.763634e-01 #> [3955,] -0.2543765008 -1.767913e-01  9.659300e-01 #> [3956,] -0.3375409544 -7.372750e-02  9.074799e-01 #> [3957,] -0.3976818621 -4.952305e-02  8.949729e-01 #> [3958,] -0.2161263824 -5.523106e-02  1.031382e+00 #> [3959,] -0.1374511868 -4.035208e-02  1.035962e+00 #> [3960,] -0.1126093268 -7.606214e-03  9.742749e-01 #> [3961,] -0.1816958338  9.631101e-02  9.387842e-01 #> [3962,] -0.1858274341  6.780453e-02  9.864348e-01 #> [3963,]  0.1304989010 -9.404761e-02  1.032249e+00 #> [3964,]  0.4011849165 -4.938408e-02  9.333625e-01 #> [3965,]  0.2484291047  2.653129e-02  8.813706e-01 #> [3966,] -0.1386293024  2.960414e-02  9.691913e-01 #> [3967,] -0.3076010644  1.496415e-01  9.850227e-01 #> [3968,] -0.3115798235  3.728309e-02  9.167582e-01 #> [3969,] -0.2826682925 -1.285072e-01  9.610335e-01 #> [3970,] -0.2713744938 -7.943362e-02  9.986923e-01 #> [3971,] -0.2320441157 -2.283308e-02  9.632092e-01 #> [3972,] -0.0010795831  7.025487e-03  1.020519e+00 #> [3973,]  0.4133137465 -7.519651e-02  9.423556e-01 #> [3974,]  0.5424262285 -6.685305e-02  8.192070e-01 #> [3975,]  0.0777295530 -2.844189e-02  8.941072e-01 #> [3976,] -0.3309699595 -5.580115e-02  9.326475e-01 #> [3977,] -0.2888715565 -1.412048e-01  9.759752e-01 #> [3978,] -0.1787832528 -2.361111e-01  9.921827e-01 #> [3979,] -0.2178646773 -1.237031e-01  9.613016e-01 #> [3980,] -0.1909315884  1.238386e-02  9.658883e-01 #> [3981,] -0.1206165776 -7.464658e-02  9.572947e-01 #> [3982,] -0.1900211275 -1.339332e-01  9.825788e-01 #> [3983,] -0.2966581583 -8.867078e-02  9.798380e-01 #> [3984,] -0.3137508631 -6.227738e-02  9.245896e-01 #> [3985,] -0.3223715127 -6.684119e-02  9.165570e-01 #> [3986,] -0.3618986905 -1.005149e-01  9.271510e-01 #> [3987,] -0.3788910210 -8.148820e-02  9.293360e-01 #> [3988,] -0.3494696617 -2.195654e-02  9.545490e-01 #> [3989,] -0.3318895102 -1.205514e-02  9.580402e-01 #> [3990,] -0.3284925520 -5.197143e-02  9.346626e-01 #> [3991,] -0.3579013348 -4.377598e-02  9.144693e-01 #> [3992,] -0.3515426815 -1.611473e-02  9.474121e-01 #> [3993,] -0.3207414448 -2.737780e-02  9.661810e-01 #> [3994,] -0.2980570793 -6.438774e-02  9.617453e-01 #> [3995,] -0.2795689404 -5.421775e-02  9.566844e-01 #> [3996,] -0.2545808852 -1.500720e-02  9.723785e-01 #> [3997,] -0.2413197905 -6.823128e-03  9.778389e-01 #> [3998,] -0.2279353589 -2.216621e-02  9.814040e-01 #> [3999,] -0.1923455596 -1.730544e-02  9.807714e-01 #> [4000,] -0.1995147169  1.026968e-03  9.792488e-01 #> [4001,] -0.1901307553  4.892973e-03  9.821747e-01 #> [4002,] -0.1848491132 -7.664813e-03  9.746163e-01 #> [4003,] -0.1647367179 -1.855644e-03  9.810507e-01 #> [4004,] -0.1759402007  1.287366e-02  9.820779e-01 #> [4005,] -0.1942372918 -2.092511e-02  9.804606e-01 #> [4006,] -0.1705887020 -2.658831e-02  9.820118e-01 #> [4007,] -0.1779609174 -3.886227e-03  9.790690e-01 #> [4008,] -0.1146122813 -7.093294e-04  1.004736e+00 #> [4009,] -0.0341728441  6.183449e-04  1.011186e+00 #> [4010,] -0.0377660580 -1.254149e-02  1.001518e+00 #> [4011,] -0.0002438898 -3.728009e-02  1.001753e+00 #> [4012,]  0.0474799573 -5.129180e-02  9.975586e-01 #> [4013,]  0.0670849979 -4.943518e-02  9.972255e-01 #> [4014,]  0.0388512015 -8.624923e-03  9.973926e-01 #> [4015,]  0.0086661354  4.180480e-02  9.977007e-01 #> [4016,]  0.0258351844  4.457448e-02  9.969002e-01 #> [4017,]  0.0672331378  3.247361e-02  9.976733e-01 #> [4018,]  0.1053539589  2.119687e-02  9.959896e-01 #> [4019,]  0.1341774464  1.011818e-02  9.904220e-01 #> [4020,]  0.1592326760  2.127087e-02  9.851949e-01 #> [4021,]  0.1846587360  2.971730e-02  9.822068e-01 #> [4022,]  0.2057658583  4.056286e-02  9.809355e-01 #> [4023,]  0.2134918422  3.729461e-02  9.785144e-01 #> [4024,]  0.2110294104  4.016159e-04  9.760978e-01 #> [4025,]  0.2110207677  4.906079e-03  9.731311e-01 #> [4026,]  0.2184436917  4.411172e-02  9.718903e-01 #> [4027,]  0.2195048034  5.459283e-02  9.730213e-01 #> [4028,]  0.2184518576  5.838054e-02  9.670602e-01 #> [4029,]  0.2217641920  6.018173e-02  9.685872e-01 #> [4030,]  0.2020879388  5.962853e-02  9.794998e-01 #> [4031,]  0.1664828360  5.369931e-02  9.715254e-01 #> [4032,]  0.1599741429  4.129150e-02  9.630358e-01 #> [4033,]  0.1668423712  6.435931e-02  9.913310e-01 #> [4034,]  0.1515132189  5.661128e-02  1.007253e+00 #> [4035,]  0.1366654187  1.658263e-02  9.794614e-01 #> [4036,]  0.1204754934  2.475741e-02  9.812556e-01 #> [4037,]  0.0650304630  1.429341e-02  9.918054e-01 #> [4038,]  0.0205911361  2.349849e-04  9.784833e-01 #> [4039,]  0.0033751600  4.924279e-02  1.000048e+00 #> [4040,] -0.0199840628  5.758205e-02  1.012292e+00 #> [4041,] -0.0136998994  2.236960e-02  9.931861e-01 #> [4042,]  0.0052069589  3.183345e-03  9.890549e-01 #> [4043,] -0.0145069193  1.453068e-02  1.005601e+00 #> [4044,] -0.1102080196  2.357760e-02  1.000126e+00 #> [4045,] -0.2292187512  3.230456e-03  9.584916e-01 #> [4046,] -0.2351031154  3.240682e-02  9.818143e-01 #> [4047,]  0.0063730679  3.020699e-02  9.779132e-01 #> [4048,]  0.3451438844 -2.474274e-03  9.567183e-01 #> [4049,]  0.5388699770 -2.739484e-03  9.294290e-01 #> [4050,]  0.4666042626  2.633927e-02  8.327771e-01 #> [4051,]  0.0303958692 -4.007909e-03  8.764071e-01 #> [4052,] -0.2989399433 -1.170405e-01  9.661598e-01 #> [4053,] -0.3017821014 -1.130860e-01  9.980070e-01 #> [4054,] -0.2636606395 -5.452339e-02  9.715778e-01 #> [4055,] -0.2832581401 -5.945642e-03  9.174257e-01 #> [4056,] -0.3304810226  3.604426e-02  9.747131e-01 #> [4057,] -0.2527755499 -1.040016e-02  1.010646e+00 #> [4058,] -0.0595763139 -1.148131e-02  9.680142e-01 #> [4059,]  0.2431701720 -1.600560e-02  1.014832e+00 #> [4060,]  0.5167788267 -6.961562e-02  8.957568e-01 #> [4061,]  0.3466953337 -2.052059e-02  8.218541e-01 #> [4062,] -0.1523030400  1.264590e-02  9.505293e-01 #> [4063,] -0.3695105016 -1.432215e-02  9.432781e-01 #> [4064,] -0.2720686197 -4.317577e-02  9.957186e-01 #> [4065,] -0.2033067197 -2.229613e-02  1.013106e+00 #> [4066,] -0.1350331306 -9.681353e-03  9.590070e-01 #> [4067,]  0.1129668802 -1.654285e-02  9.971207e-01 #> [4068,]  0.4155560732 -3.322280e-03  9.780596e-01 #> [4069,]  0.4923133552 -2.803470e-02  8.608370e-01 #> [4070,]  0.1426162124 -9.215374e-03  8.771841e-01 #> [4071,] -0.2510007918  9.693559e-02  9.615785e-01 #> [4072,] -0.3481947184  1.313931e-01  9.706146e-01 #> [4073,] -0.3486297429  6.191184e-02  9.457805e-01 #> [4074,] -0.2410960197  9.454382e-03  9.657230e-01 #> [4075,]  0.1058525071 -7.788651e-03  1.010937e+00 #> [4076,]  0.4714825153  3.828135e-02  9.291954e-01 #> [4077,]  0.3858991265  3.898653e-02  8.643597e-01 #> [4078,] -0.0772122890 -2.564942e-02  9.520367e-01 #> [4079,] -0.3475539088 -7.040157e-02  9.779270e-01 #> [4080,] -0.3101424575 -7.022555e-03  9.363919e-01 #> [4081,] -0.2632076442 -2.233473e-02  9.716696e-01 #> [4082,] -0.2503994405 -6.932274e-02  9.628858e-01 #> [4083,] -0.2659699023  4.638338e-02  9.577811e-01 #> [4084,] -0.1576330662  3.783170e-02  1.041586e+00 #> [4085,]  0.1802591532 -1.031526e-01  1.014775e+00 #> [4086,]  0.4473997056 -7.338216e-02  8.542173e-01 #> [4087,]  0.2365495116  4.240271e-02  8.799845e-01 #> [4088,] -0.2083605975  2.362718e-02  9.824200e-01 #> [4089,] -0.3762056530  6.898268e-02  9.380418e-01 #> [4090,] -0.3388338685 -4.464217e-03  9.636332e-01 #> [4091,] -0.2374129742 -4.956880e-02  9.749824e-01 #> [4092,] -0.2203963548  4.813263e-02  9.755113e-01 #> [4093,] -0.1456520110 -1.397365e-02  1.005759e+00 #> [4094,]  0.1668568403 -2.623594e-02  1.028572e+00 #> [4095,]  0.4478949904 -2.848211e-02  9.290147e-01 #> [4096,]  0.2718278170 -2.974392e-02  8.294793e-01 #> [4097,] -0.1900404841 -1.070521e-02  9.494526e-01 #> [4098,] -0.3130649030 -1.001611e-02  1.007039e+00 #> [4099,] -0.2944407761 -1.426288e-02  9.477925e-01 #> [4100,] -0.2743059695 -8.948930e-02  9.669855e-01 #> [4101,] -0.2679739594 -3.131636e-02  9.671580e-01 #> [4102,] -0.3349096775  6.650736e-02  9.645953e-01 #> [4103,] -0.2243891507  2.605636e-02  9.833542e-01 #> [4104,] -0.2070659846  7.895118e-02  9.586913e-01 #> [4105,] -0.1315311790  7.884976e-02  9.946696e-01 #> [4106,]  0.2351378053 -3.714907e-02  9.853179e-01 #> [4107,]  0.4959186614  2.015484e-02  8.893354e-01 #> [4108,]  0.3452987075  2.061617e-02  9.183901e-01 #> [4109,] -0.1390405446 -4.549119e-02  9.339352e-01 #> [4110,] -0.4517114460  2.729037e-02  8.586501e-01 #> [4111,] -0.3155862093 -2.607129e-02  9.725409e-01 #> [4112,] -0.2170773000 -5.886142e-02  1.006354e+00 #> [4113,] -0.2170573473  2.333746e-02  9.794592e-01 #> [4114,]  0.1016046181 -4.837412e-02  1.009238e+00 #> [4115,]  0.4864706099 -3.483859e-02  9.049143e-01 #> [4116,]  0.4949749708  1.137223e-02  8.444061e-01 #> [4117,]  0.0689948499 -4.383604e-02  9.363356e-01 #> [4118,] -0.2486814111 -1.348442e-02  9.697849e-01 #> [4119,] -0.1403602511  3.380147e-02  9.729940e-01 #> [4120,] -0.1086350903 -4.123933e-02  9.917327e-01 #> [4121,] -0.1684098095 -7.112981e-02  9.978330e-01 #> [4122,] -0.1275860220 -3.919555e-02  1.003730e+00 #> [4123,] -0.0595269389 -7.128022e-02  1.000775e+00 #> [4124,] -0.0917310864 -7.221581e-03  9.456825e-01 #> [4125,] -0.1850362569  5.354980e-02  9.640318e-01 #> [4126,] -0.0818592981 -6.039529e-03  1.059846e+00 #> [4127,]  0.0702911392 -1.798239e-02  1.021484e+00 #> [4128,]  0.2087618858 -6.000025e-02  9.725145e-01 #> [4129,]  0.4755754173 -4.329557e-02  8.941047e-01 #> [4130,]  0.5054571033  1.933509e-02  8.218701e-01 #> [4131,]  0.0152818533 -2.945498e-02  9.159417e-01 #> [4132,] -0.3202500045  1.514711e-01  9.434145e-01 #> [4133,] -0.2973671854  1.064447e-01  9.629399e-01 #> [4134,] -0.3266288936 -8.932918e-02  9.470041e-01 #> [4135,] -0.4000968039 -3.116642e-02  9.161605e-01 #> [4136,] -0.3095782995 -1.039537e-01  9.685386e-01 #> [4137,] -0.1259995848 -6.565508e-02  9.886972e-01 #> [4138,]  0.1239435077  6.446631e-02  1.005632e+00 #> [4139,]  0.3972585201 -4.910211e-02  9.660907e-01 #> [4140,]  0.5486660600 -1.067541e-01  8.298451e-01 #> [4141,]  0.1944739819  1.876578e-02  8.342977e-01 #> [4142,] -0.1719010919  4.897550e-03  1.016356e+00 #> [4143,] -0.0796869397 -9.288955e-02  1.014011e+00 #> [4144,] -0.0548373684 -1.522114e-01  9.560385e-01 #> [4145,] -0.1279265732 -2.035421e-01  9.787164e-01 #> [4146,] -0.2006954253 -1.761401e-01  9.727395e-01 #> [4147,] -0.2320918292 -1.408585e-01  9.504997e-01 #> [4148,] -0.2964669764 -1.172410e-01  9.124146e-01 #> [4149,] -0.3256071210 -4.971646e-02  9.757063e-01 #> [4150,] -0.3124694228 -4.817482e-02  1.003249e+00 #> [4151,] -0.2779886425 -7.955851e-02  9.429943e-01 #> [4152,] -0.2273405343 -2.227201e-02  9.615995e-01 #> [4153,] -0.1938722432 -8.632338e-03  1.003844e+00 #> [4154,] -0.1335507631 -1.835162e-02  9.918168e-01 #> [4155,] -0.0783393309  1.422379e-02  9.881015e-01 #> [4156,] -0.0210595392  1.535258e-02  1.015179e+00 #> [4157,]  0.1623752564  3.182997e-03  9.994804e-01 #> [4158,]  0.4045973420 -8.592824e-03  9.454598e-01 #> [4159,]  0.5643641353  2.742463e-02  8.630825e-01 #> [4160,]  0.3591741920  5.441632e-02  7.958490e-01 #> [4161,] -0.0834501386  1.400031e-02  9.481815e-01 #> [4162,] -0.1816585064 -4.691574e-02  1.054597e+00 #> [4163,] -0.2449959666 -5.708802e-02  9.333652e-01 #> [4164,] -0.3995661139 -1.788471e-02  9.224977e-01 #> [4165,] -0.3294929266 -2.123101e-02  9.824162e-01 #> [4166,] -0.2278500348  1.380278e-02  9.712002e-01 #> [4167,] -0.2890676856  4.808551e-02  9.560015e-01 #> [4168,] -0.2908381522 -1.168137e-02  9.776935e-01 #> [4169,] -0.2378972918 -1.431542e-02  9.675250e-01 #> [4170,] -0.1727427244  2.335291e-02  9.699175e-01 #> [4171,]  0.0761306211 -2.871343e-02  1.028923e+00 #> [4172,]  0.3877675831 -3.766054e-02  9.680721e-01 #> [4173,]  0.4615789354 -1.188614e-02  8.589812e-01 #> [4174,]  0.1643912643  1.136375e-02  8.835206e-01 #> [4175,] -0.2351676822  2.078282e-02  9.811090e-01 #> [4176,] -0.3474206328 -1.496593e-03  9.792688e-01 #> [4177,] -0.3129148483  5.459947e-02  9.292368e-01 #> [4178,] -0.2517192066  9.291697e-02  9.811701e-01 #> [4179,] -0.2656145692  9.042131e-03  9.695267e-01 #> [4180,] -0.3072530627 -2.170328e-02  9.380957e-01 #> [4181,] -0.1759240329  6.078161e-02  1.001847e+00 #> [4182,] -0.0667563379  5.420250e-02  1.001803e+00 #> [4183,]  0.0986036435  4.571750e-03  9.975641e-01 #> [4184,]  0.4290352762  3.036560e-02  9.529305e-01 #> [4185,]  0.4491884410  5.170587e-03  8.647283e-01 #> [4186,] -0.0632775277  7.008877e-02  8.945618e-01 #> [4187,] -0.3176500499  2.208101e-01  9.482611e-01 #> [4188,] -0.2677947879  1.247908e-01  9.307845e-01 #> [4189,] -0.2948875129  5.951084e-03  9.664487e-01 #> [4190,] -0.2106781602 -2.611984e-02  1.034760e+00 #> [4191,] -0.1914987713 -4.162164e-02  9.758623e-01 #> [4192,] -0.1360514611 -2.028495e-02  9.672744e-01 #> [4193,] -0.1912961155  1.815344e-03  9.610206e-01 #> [4194,] -0.3425213397  2.284546e-02  9.394281e-01 #> [4195,] -0.2481383383  6.886895e-02  1.006261e+00 #> [4196,] -0.0916531906  1.949629e-02  1.000926e+00 #> [4197,]  0.1032053828 -7.697136e-02  9.626137e-01 #> [4198,]  0.3690148294 -7.485174e-02  9.860502e-01 #> [4199,]  0.4746892154  3.852267e-03  8.977786e-01 #> [4200,]  0.1755730510  4.914317e-02  8.793774e-01 #> [4201,] -0.1516857594  1.812613e-01  9.553550e-01 #> [4202,] -0.2352418005  1.609976e-01  9.304777e-01 #> [4203,] -0.1570369154 -6.138741e-02  1.010543e+00 #> [4204,] -0.1704581827 -8.079022e-02  1.037618e+00 #> [4205,] -0.2375917733  2.464921e-02  9.637251e-01 #> [4206,] -0.1605555713  4.609902e-02  9.583911e-01 #> [4207,] -0.1164061874 -2.217170e-03  9.794967e-01 #> [4208,] -0.1231539622 -1.560269e-02  1.001610e+00 #> [4209,] -0.1948931366  8.763003e-03  9.907650e-01 #> [4210,] -0.1667889506 -1.739664e-02  1.008259e+00 #> [4211,] -0.0454988107 -8.543804e-02  1.011894e+00 #> [4212,]  0.1584118605 -5.559710e-02  9.735772e-01 #> [4213,]  0.4479868114  1.414200e-02  8.794362e-01 #> [4214,]  0.3374803066 -2.052779e-02  9.001577e-01 #> [4215,] -0.1415087283 -6.651662e-02  9.937838e-01 #> [4216,] -0.3968135715  2.605253e-03  9.134487e-01 #> [4217,] -0.4417976439  8.728152e-02  8.766695e-01 #> [4218,] -0.3991823196  5.977586e-02  9.587850e-01 #> [4219,] -0.2604603469 -1.256687e-02  9.707434e-01 #> [4220,] -0.2222282887 -8.535722e-03  9.450054e-01 #> [4221,] -0.2132409066  2.224692e-02  1.000839e+00 #> [4222,] -0.2684343159  4.487821e-02  9.921923e-01 #> [4223,] -0.3017205596  2.415426e-02  9.546775e-01 #> [4224,] -0.1719331294  1.512721e-03  9.631200e-01 #> [4225,]  0.0613746978  2.633655e-02  9.990207e-01 #> [4226,]  0.3833416402 -1.367211e-02  9.743400e-01 #> [4227,]  0.5017961264 -1.030514e-01  8.720027e-01 #> [4228,]  0.1680191010 -1.319136e-01  8.910559e-01 #> [4229,] -0.2993393540 -2.498999e-02  9.155328e-01 #> [4230,] -0.4129236639  6.524397e-03  9.333632e-01 #> [4231,] -0.2360979766  6.732838e-03  9.940194e-01 #> [4232,]  0.0297963489  1.832664e-02  1.014435e+00 #> [4233,]  0.4326488376 -5.557861e-02  9.239841e-01 #> [4234,]  0.5999934077 -2.860413e-02  8.515627e-01 #> [4235,]  0.1610520631  4.582969e-03  9.054139e-01 #> [4236,] -0.2944853306  1.707501e-02  9.157861e-01 #> [4237,] -0.2209081948 -2.618254e-02  9.743114e-01 #> [4238,] -0.1207092181 -1.366153e-01  9.915064e-01 #> [4239,] -0.1718958914 -1.480267e-01  9.726761e-01 #> [4240,] -0.1703528166 -2.463061e-01  9.581545e-01 #> [4241,] -0.2362510562 -2.695626e-01  9.123771e-01 #> [4242,] -0.3123694956 -1.466941e-01  9.135676e-01 #> [4243,] -0.3673460186 -1.204625e-01  8.981369e-01 #> [4244,] -0.3732069433 -1.002033e-01  9.071780e-01 #> [4245,] -0.3470382392 -1.030549e-01  9.253848e-01 #> [4246,] -0.4126920402 -1.253465e-01  8.877854e-01 #> [4247,] -0.4460085034 -1.293907e-01  8.632332e-01 #> [4248,] -0.4914253652 -1.178858e-01  8.402855e-01 #> [4249,] -0.5373222232 -4.996742e-02  8.377398e-01 #> [4250,] -0.5370749831 -1.462881e-02  8.419589e-01 #> [4251,] -0.5875510573 -8.214914e-02  8.027346e-01 #> [4252,] -0.6110225320 -1.141961e-01  7.970819e-01 #> [4253,] -0.6020465493 -7.854745e-02  8.088049e-01 #> [4254,] -0.5822510719 -6.472592e-02  8.243967e-01 #> [4255,] -0.5701769590 -2.146327e-02  8.270701e-01 #> [4256,] -0.5830602050  3.984984e-02  8.241625e-01 #> [4257,] -0.5692299604  5.065466e-02  8.268605e-01 #> [4258,] -0.5690620542  5.339891e-02  8.222016e-01 #> [4259,] -0.5652438998  7.534241e-02  8.227010e-01 #> [4260,] -0.5784314871  9.486837e-02  8.192069e-01 #> [4261,] -0.5609841347  7.407606e-02  8.341762e-01 #> [4262,] -0.5646482110  5.940789e-02  8.288267e-01 #> [4263,] -0.5383445024  7.044789e-02  8.463706e-01 #> [4264,] -0.5497925878  9.112658e-02  8.317680e-01 #> [4265,] -0.5614029169  9.742519e-02  8.255053e-01 #> [4266,] -0.5752441287  1.077758e-01  8.118974e-01 #> [4267,] -0.5708659291  9.975538e-02  8.226128e-01 #> [4268,] -0.5743650794  8.737043e-02  8.185071e-01 #> [4269,] -0.5441022515  8.185757e-02  8.451874e-01 #> [4270,] -0.5447187424  8.198892e-02  8.317516e-01 #> [4271,] -0.5566955805  7.185470e-02  8.319349e-01 #> [4272,] -0.5348112583  6.132014e-02  8.400861e-01 #> [4273,] -0.5479102731  7.249764e-02  8.351538e-01 #> [4274,] -0.5359418392  9.683526e-02  8.408040e-01 #> [4275,] -0.5336740613  1.167578e-01  8.426288e-01 #> [4276,] -0.4822649360  1.136657e-01  8.719929e-01 #> [4277,] -0.5408796668  1.239052e-01  8.254576e-01 #> [4278,] -0.5666380525  1.216359e-01  8.284982e-01 #> [4279,] -0.5307711363  1.326544e-01  8.408667e-01 #> [4280,] -0.5766748190  1.569623e-01  8.004471e-01 #> [4281,] -0.5694007874  1.631827e-01  8.193348e-01 #> [4282,] -0.5061650276  1.667830e-01  8.469384e-01 #> [4283,] -0.5284765363  1.568409e-01  8.242133e-01 #> [4284,] -0.5242555737  1.459032e-01  8.381325e-01 #> [4285,] -0.5372376442  1.395874e-01  8.249289e-01 #> [4286,] -0.5168324113  1.343543e-01  8.527421e-01 #> [4287,] -0.4894417226  1.394174e-01  8.637613e-01 #> [4288,] -0.5332786441  1.363185e-01  8.348219e-01 #> [4289,] -0.5395407081  1.341558e-01  8.364329e-01 #> [4290,] -0.5430220366  1.325164e-01  8.329926e-01 #> [4291,] -0.5492327809  1.274662e-01  8.300928e-01 #> [4292,] -0.5545075536  1.263356e-01  8.263903e-01 #> [4293,] -0.5518155098  1.140181e-01  8.319011e-01 #> [4294,] -0.5492572188  8.752748e-02  8.355523e-01 #> [4295,] -0.5302529931  6.755347e-02  8.548574e-01 #> [4296,] -0.5068804026  7.720508e-02  8.615952e-01 #> [4297,] -0.5578019619  7.841433e-02  8.177201e-01 #> [4298,] -0.5456307530  6.527708e-02  8.356796e-01 #> [4299,] -0.5460872650  8.854346e-02  8.228647e-01 #> [4300,] -0.5859491229  1.023405e-01  8.083155e-01 #> [4301,] -0.5500153303  9.555373e-02  8.385581e-01 #> [4302,] -0.5594422221  8.910806e-02  8.244237e-01 #> [4303,] -0.5796073675  5.172993e-02  8.160699e-01 #> [4304,] -0.5818452835 -3.936816e-03  8.180486e-01 #> [4305,] -0.5732560754 -3.923518e-02  8.259791e-01 #> [4306,] -0.5613336563 -3.185831e-02  8.324463e-01 #> [4307,] -0.5590186715  4.112435e-03  8.361116e-01 #> [4308,] -0.5462693572  2.805037e-02  8.446810e-01 #> [4309,] -0.5376119018  3.437446e-02  8.456787e-01 #> [4310,] -0.5486030579  3.930301e-02  8.392839e-01 #> [4311,] -0.5541866422  4.704713e-02  8.370426e-01 #> [4312,] -0.5496257544  5.033158e-02  8.382447e-01 #> [4313,] -0.5441153646  4.369504e-02  8.419486e-01 #> [4314,] -0.5446918011  4.671399e-02  8.417041e-01 #> [4315,] -0.5488787889  3.559329e-02  8.408046e-01 #> [4316,] -0.5453368425 -9.429338e-03  8.438894e-01 #> [4317,] -0.5454321504 -1.912827e-02  8.424912e-01 #> [4318,] -0.5500472188  1.518228e-02  8.397458e-01 #> [4319,] -0.5489371419  5.040330e-02  8.392204e-01 #> [4320,] -0.5477029681  8.549716e-02  8.368092e-01 #> [4321,] -0.5445413589  1.006759e-01  8.378420e-01 #> [4322,] -0.5336039066  1.158486e-01  8.429561e-01 #> [4323,] -0.5219538212  1.525902e-01  8.439943e-01 #> [4324,] -0.5137229562  1.769067e-01  8.430781e-01 #> [4325,] -0.5085156560  1.812792e-01  8.448262e-01 #> [4326,] -0.5006875396  1.821978e-01  8.499280e-01 #> [4327,] -0.4889774323  1.976855e-01  8.521298e-01 #> [4328,] -0.4815943539  2.205433e-01  8.503324e-01 #> [4329,] -0.4763975441  2.353601e-01  8.489278e-01 #> [4330,] -0.4708628058  2.485124e-01  8.479614e-01 #> [4331,] -0.4660883546  2.514307e-01  8.494857e-01 #> [4332,] -0.4639048874  2.476967e-01  8.514238e-01 #> [4333,] -0.4625198841  2.477634e-01  8.521616e-01 #> [4334,] -0.4596691132  2.537226e-01  8.519611e-01 #> [4335,] -0.4600595236  2.411768e-01  8.548173e-01 #> [4336,] -0.4600202441  2.122857e-01  8.637452e-01 #> [4337,] -0.4528708756  1.881312e-01  8.740547e-01 #> [4338,] -0.4456759989  1.560768e-01  8.832963e-01 #> [4339,] -0.4394357800  1.279809e-01  8.909013e-01 #> [4340,] -0.4348351359  1.087222e-01  8.953210e-01 #> [4341,] -0.4376694262  8.648837e-02  8.957905e-01 #> [4342,] -0.4394406676  6.111434e-02  8.968429e-01 #> [4343,] -0.4372303486  4.692648e-02  8.991885e-01 #> [4344,] -0.4365946352  5.038260e-02  8.998625e-01 #> [4345,] -0.4325143993  6.212840e-02  9.008496e-01 #> [4346,] -0.4304205477  7.019739e-02  9.007843e-01 #> [4347,] -0.4353211224  8.117831e-02  8.970219e-01 #> [4348,] -0.4430959821  1.000994e-01  8.910720e-01 #> [4349,] -0.4494889081  1.026865e-01  8.888516e-01 #> [4350,] -0.4484613240  7.710211e-02  8.926220e-01 #> [4351,] -0.4395660460  5.664172e-02  8.984630e-01 #> [4352,] -0.4286407530  6.458175e-02  9.037044e-01 #> [4353,] -0.4166915417  7.273382e-02  9.085853e-01 #> [4354,] -0.4066316187  8.056656e-02  9.118189e-01 #> [4355,] -0.4006193876  9.762952e-02  9.128702e-01 #> [4356,] -0.3970100582  1.098448e-01  9.126831e-01 #> [4357,] -0.3973395228  1.083934e-01  9.120986e-01 #> [4358,] -0.3950804770  1.097046e-01  9.128036e-01 #> [4359,] -0.3908738196  1.175702e-01  9.142104e-01 #> [4360,] -0.3915623426  1.085559e-01  9.149334e-01 #> [4361,] -0.3915220201  1.064554e-01  9.143198e-01 #> [4362,] -0.3894348741  1.353952e-01  9.114302e-01 #> [4363,] -0.3844631612  1.588357e-01  9.101797e-01 #> [4364,] -0.3759914339  1.667211e-01  9.128914e-01 #> [4365,] -0.3653188050  1.683378e-01  9.174197e-01 #> [4366,] -0.3524265885  1.595226e-01  9.230615e-01 #> [4367,] -0.3385130167  1.679984e-01  9.268037e-01 #> [4368,] -0.3252011836  1.865442e-01  9.276917e-01 #> [4369,] -0.3174831867  1.915808e-01  9.287776e-01 #> [4370,] -0.3143629134  2.013117e-01  9.273424e-01 #> [4371,] -0.3162091672  2.139076e-01  9.229972e-01 #> [4372,] -0.3192146122  2.173569e-01  9.218172e-01 #> [4373,] -0.3173913062  2.099678e-01  9.243645e-01 #> [4374,] -0.3094628155  2.001962e-01  9.288825e-01 #> [4375,] -0.2982927263  1.945824e-01  9.344386e-01 #> [4376,] -0.2898927331  1.858318e-01  9.396359e-01 #> [4377,] -0.2846285105  1.708470e-01  9.430466e-01 #> [4378,] -0.2881425917  1.529398e-01  9.428747e-01 #> [4379,] -0.3016721904  1.499128e-01  9.392182e-01 #> [4380,] -0.3168529868  1.576892e-01  9.334915e-01 #> [4381,] -0.3280341327  1.553136e-01  9.290370e-01 #> [4382,] -0.3349603117  1.527607e-01  9.273582e-01 #> [4383,] -0.3397639990  1.569374e-01  9.267097e-01 #> [4384,] -0.3427221775  1.493092e-01  9.270723e-01 #> [4385,] -0.3420602381  1.367761e-01  9.290558e-01 #> [4386,] -0.3401143551  1.325440e-01  9.305276e-01 #> [4387,] -0.3433802426  1.293399e-01  9.291673e-01 #> [4388,] -0.3486827612  1.278783e-01  9.271798e-01 #> [4389,] -0.3510289192  1.329480e-01  9.263253e-01 #> [4390,] -0.3526470363  1.407268e-01  9.249703e-01 #> [4391,] -0.3537313938  1.439364e-01  9.237144e-01 #> [4392,] -0.3515382111  1.428340e-01  9.249291e-01 #> [4393,] -0.3486913741  1.420572e-01  9.266480e-01 #> [4394,] -0.3451901972  1.457400e-01  9.272508e-01 #> [4395,] -0.3424988091  1.481110e-01  9.276391e-01 #> [4396,] -0.3424443007  1.429289e-01  9.289318e-01 #> [4397,] -0.3386039138  1.357546e-01  9.318927e-01 #> [4398,] -0.3346537054  1.253617e-01  9.341675e-01 #> [4399,] -0.3351373374  1.141291e-01  9.348620e-01 #> [4400,] -0.3379508257  1.015966e-01  9.351740e-01 #> [4401,] -0.3424851000  9.187198e-02  9.342412e-01 #> [4402,] -0.3449999094  1.029088e-01  9.322376e-01 #> [4403,] -0.3436332643  1.217069e-01  9.311972e-01 #> [4404,] -0.3405713439  1.254645e-01  9.316883e-01 #> [4405,] -0.3432515562  1.185624e-01  9.305110e-01 #> [4406,] -0.3518860638  1.123284e-01  9.275829e-01 #> [4407,] -0.3583298326  1.106390e-01  9.254965e-01 #> [4408,] -0.3620668650  1.149390e-01  9.248662e-01 #> [4409,] -0.3613572419  1.109571e-01  9.268500e-01 #> [4410,] -0.3595853746  1.006144e-01  9.284515e-01 #> [4411,] -0.3599097729  1.061728e-01  9.269412e-01 #> [4412,] -0.3596847951  1.203859e-01  9.247124e-01 #> [4413,] -0.3575228453  1.340787e-01  9.241681e-01 #> [4414,] -0.3527349532  1.497892e-01  9.247295e-01 #> [4415,] -0.3478612900  1.489880e-01  9.266230e-01 #> [4416,] -0.3469822705  1.283476e-01  9.291075e-01 #> [4417,] -0.3511110544  1.118718e-01  9.291352e-01 #> [4418,] -0.3580014706  9.931893e-02  9.273531e-01 #> [4419,] -0.3653258979  8.134952e-02  9.261923e-01 #> [4420,] -0.3723684847  7.392446e-02  9.251227e-01 #> [4421,] -0.3720645905  7.894222e-02  9.250061e-01 #> [4422,] -0.3635584414  8.028343e-02  9.291056e-01 #> [4423,] -0.3547032773  8.286795e-02  9.329699e-01 #> [4424,] -0.3499987423  1.090445e-01  9.306587e-01 #> [4425,] -0.3500410616  1.424652e-01  9.251793e-01 #> [4426,] -0.3533248007  1.584777e-01  9.211287e-01 #> [4427,] -0.3602642119  1.626816e-01  9.181892e-01 #> [4428,] -0.3661499918  1.558494e-01  9.173290e-01 #> [4429,] -0.3690589368  1.417901e-01  9.186062e-01 #> [4430,] -0.3700760305  1.378593e-01  9.188145e-01 #> [4431,] -0.3668598831  1.420821e-01  9.194251e-01 #> [4432,] -0.3621833026  1.417350e-01  9.215236e-01 #> [4433,] -0.3594353199  1.394098e-01  9.232885e-01 #> [4434,] -0.3596494198  1.364327e-01  9.235063e-01 #> [4435,] -0.3624182642  1.326092e-01  9.222746e-01 #> [4436,] -0.3656049371  1.347392e-01  9.206187e-01 #> [4437,] -0.3644181490  1.462424e-01  9.201976e-01 #> [4438,] -0.3599988222  1.501814e-01  9.217384e-01 #> [4439,] -0.3590867817  1.397202e-01  9.232140e-01 #> [4440,] -0.3624534011  1.327580e-01  9.225419e-01 #> [4441,] -0.3646423519  1.291210e-01  9.221750e-01 #> [4442,] -0.3612619340  1.227704e-01  9.248486e-01 #> [4443,] -0.3580265045  1.239129e-01  9.265600e-01 #> [4444,] -0.3560706079  1.323073e-01  9.253676e-01 #> [4445,] -0.3541607261  1.331863e-01  9.249786e-01 #> [4446,] -0.3573973775  1.327951e-01  9.240905e-01 #> [4447,] -0.3652165830  1.436483e-01  9.195104e-01 #> [4448,] -0.3734050989  1.561492e-01  9.137369e-01 #> [4449,] -0.3789576292  1.615452e-01  9.113047e-01 #> [4450,] -0.3793105781  1.526734e-01  9.130893e-01 #> [4451,] -0.3708256781  1.543322e-01  9.174089e-01 #> [4452,] -0.3535874486  1.752905e-01  9.211996e-01 #> [4453,] -0.3416863680  1.819832e-01  9.238162e-01 #> [4454,] -0.3297985494  1.645460e-01  9.319925e-01 #> [4455,] -0.3132976592  1.429198e-01  9.404895e-01 #> [4456,] -0.3096307516  1.294596e-01  9.420943e-01 #> [4457,] -0.3124798834  1.158809e-01  9.425324e-01 #> [4458,] -0.3153333366  1.024875e-01  9.433549e-01 #> [4459,] -0.3193829954  9.043392e-02  9.431381e-01 #> [4460,] -0.3231599927  7.869492e-02  9.426168e-01 #> [4461,] -0.3288926482  6.969877e-02  9.410388e-01 #> [4462,] -0.3323717713  7.239351e-02  9.404503e-01 #> [4463,] -0.3240709007  8.794501e-02  9.422600e-01 #> [4464,] -0.3188490272  1.115828e-01  9.411734e-01 #> [4465,] -0.3228248358  1.404816e-01  9.367818e-01 #> [4466,] -0.3304122984  1.593902e-01  9.297491e-01 #> [4467,] -0.3435779214  1.624172e-01  9.242135e-01 #> [4468,] -0.3441878259  1.570800e-01  9.265652e-01 #> [4469,] -0.3339920640  1.521353e-01  9.305466e-01 #> [4470,] -0.3326593339  1.509576e-01  9.310576e-01 #> [4471,] -0.3321690559  1.463680e-01  9.318330e-01 #> [4472,] -0.3245007992  1.408732e-01  9.356474e-01 #> [4473,] -0.3128189743  1.504516e-01  9.399129e-01 #> [4474,] -0.2989268303  1.705488e-01  9.411288e-01 #> [4475,] -0.2894216776  1.825745e-01  9.404525e-01 #> [4476,] -0.2879229784  1.857103e-01  9.396988e-01 #> [4477,] -0.2890859246  1.841390e-01  9.389508e-01 #> [4478,] -0.2918361127  1.773297e-01  9.383903e-01 #> [4479,] -0.2950586975  1.694627e-01  9.397717e-01 #> [4480,] -0.2882204056  1.794499e-01  9.417087e-01 #> [4481,] -0.2748713493  1.922630e-01  9.436128e-01 #> [4482,] -0.2645318806  1.833625e-01  9.479078e-01 #> [4483,] -0.2578116059  1.682480e-01  9.517120e-01 #> [4484,] -0.2548303902  1.571404e-01  9.536691e-01 #> [4485,] -0.2529371381  1.544211e-01  9.546734e-01 #> [4486,] -0.2530767322  1.579603e-01  9.546537e-01 #> [4487,] -0.2539810240  1.516140e-01  9.555746e-01 #> [4488,] -0.2518480718  1.354855e-01  9.582166e-01 #> [4489,] -0.2480731905  1.225253e-01  9.607105e-01 #> [4490,] -0.2456493676  1.217925e-01  9.613277e-01 #> [4491,] -0.2471966147  1.246855e-01  9.602028e-01 #> [4492,] -0.2495301217  1.186619e-01  9.599388e-01 #> [4493,] -0.2459205985  1.184024e-01  9.618583e-01 #> [4494,] -0.2381348759  1.261681e-01  9.635865e-01 #> [4495,] -0.2312169373  1.319324e-01  9.645533e-01 #> [4496,] -0.2269429117  1.296901e-01  9.662991e-01 #> [4497,] -0.2208944857  1.102574e-01  9.691281e-01 #> [4498,] -0.2115745246  9.741642e-02  9.725032e-01 #> [4499,] -0.2031331509  1.051796e-01  9.739477e-01 #> [4500,] -0.1942198426  1.136414e-01  9.745283e-01 #> [4501,] -0.1858309507  1.197785e-01  9.757525e-01 #> [4502,] -0.1808549017  1.233390e-01  9.768441e-01 #> [4503,] -0.1785191149  1.107964e-01  9.781550e-01 #> [4504,] -0.1773865819  9.073957e-02  9.793463e-01 #> [4505,] -0.1775164753  7.864145e-02  9.801496e-01 #> [4506,] -0.1776904166  7.580423e-02  9.803938e-01 #> [4507,] -0.1765053123  8.150866e-02  9.806403e-01 #> [4508,] -0.1752747446  8.589162e-02  9.804419e-01 #> [4509,] -0.1764022559  8.249995e-02  9.802065e-01 #> [4510,] -0.1791940182  7.593692e-02  9.800967e-01 #> [4511,] -0.1839538068  6.870649e-02  9.788244e-01 #> [4512,] -0.1925973743  6.797034e-02  9.773460e-01 #> [4513,] -0.1990010440  7.271113e-02  9.762660e-01 #> [4514,] -0.2010039389  7.121285e-02  9.762016e-01 #> [4515,] -0.2037215382  6.703642e-02  9.764407e-01 #> [4516,] -0.2074514329  6.884430e-02  9.749248e-01 #> [4517,] -0.2130344212  7.887677e-02  9.724245e-01 #> [4518,] -0.2215226889  8.881772e-02  9.701855e-01 #> [4519,] -0.2259748131  8.807979e-02  9.692392e-01 #> [4520,] -0.2252075672  7.869264e-02  9.705248e-01 #> [4521,] -0.2224627286  7.607056e-02  9.724099e-01 #> [4522,] -0.2173066586  8.536164e-02  9.731330e-01 #> [4523,] -0.2140913308  8.698400e-02  9.733234e-01 #> [4524,] -0.2135186195  8.124239e-02  9.733915e-01 #> [4525,] -0.2114686519  8.104605e-02  9.735811e-01 #> [4526,] -0.2092964351  8.297021e-02  9.744025e-01 #> [4527,] -0.2084580660  7.742029e-02  9.749826e-01 #> [4528,] -0.2055842727  6.673171e-02  9.757450e-01 #> [4529,] -0.2014135569  7.291989e-02  9.767580e-01 #> [4530,] -0.1949944049  8.779521e-02  9.774215e-01 #> [4531,] -0.1822789162  8.875667e-02  9.796818e-01 #> [4532,] -0.1661830544  8.992534e-02  9.831066e-01 #> [4533,] -0.1558573842  9.911256e-02  9.837206e-01 #> [4534,] -0.1525337547  1.063222e-01  9.826084e-01 #> [4535,] -0.1498661637  1.104847e-01  9.820635e-01 #> [4536,] -0.1455442905  1.025388e-01  9.823757e-01 #> [4537,] -0.1324219704  9.965833e-02  9.853875e-01 #> [4538,] -0.1085266024  1.009485e-01  9.888796e-01 #> [4539,] -0.0542992949  9.133241e-02  9.950908e-01 #> [4540,]  0.0019275082  9.048534e-02  1.000371e+00 #> [4541,] -0.0112155816  8.929805e-02  9.952582e-01 #> [4542,] -0.0640227795  9.343279e-02  9.891827e-01 #> [4543,] -0.1020678952  9.910569e-02  9.880838e-01 #> [4544,] -0.1232768670  7.638951e-02  9.881726e-01 #> [4545,] -0.1337135583  4.308893e-02  9.879615e-01 #> [4546,] -0.1380930394  1.791269e-02  9.891225e-01 #> [4547,] -0.1326772571 -4.656508e-03  9.922913e-01 #> [4548,] -0.1190757304 -2.098205e-02  9.940876e-01 #> [4549,] -0.1138672903 -2.699770e-02  9.933944e-01 #> [4550,] -0.1163688153 -3.157344e-02  9.925746e-01 #> [4551,] -0.1163634956 -3.965225e-02  9.922268e-01 #> [4552,] -0.1186239421 -4.608844e-02  9.910745e-01 #> [4553,] -0.1268562078 -4.609097e-02  9.892883e-01 #> [4554,] -0.1391088367 -3.791942e-02  9.875849e-01 #> [4555,] -0.1525057554 -3.048334e-02  9.859994e-01 #> [4556,] -0.1616651267 -2.715025e-02  9.849195e-01 #> [4557,] -0.1672617197 -2.586975e-02  9.844096e-01 #> [4558,] -0.1716978997 -2.346985e-02  9.841312e-01 #> [4559,] -0.1709824204 -1.797090e-02  9.846917e-01 #> [4560,] -0.1674340516 -1.497775e-02  9.854266e-01 #> [4561,] -0.1696613729 -8.625585e-03  9.850272e-01 #> [4562,] -0.1725986302  1.200678e-04  9.844076e-01 #> [4563,] -0.1726067513  7.682383e-03  9.846266e-01 #> [4564,] -0.1713632792  1.511004e-02  9.853498e-01 #> [4565,] -0.1662137359  9.375591e-03  9.866504e-01 #> [4566,] -0.1573575586 -7.505225e-03  9.881385e-01 #> [4567,] -0.1513613611 -1.994168e-02  9.883779e-01 #> [4568,] -0.1523824334 -2.846748e-02  9.872401e-01 #> [4569,] -0.1553085446 -3.711971e-02  9.854130e-01 #> [4570,] -0.1560276747 -3.564484e-02  9.860429e-01 #> [4571,] -0.1553327441 -2.020423e-02  9.870147e-01 #> [4572,] -0.1543130577 -1.196485e-02  9.874460e-01 #> [4573,] -0.1331872791 -2.329231e-02  9.954216e-01 #> [4574,] -0.1525377631 -1.695412e-02  9.828775e-01 #> [4575,] -0.2467028946  1.331511e-02  9.571935e-01 #> [4576,] -0.2825446129  2.703903e-02  9.589761e-01 #> [4577,] -0.2498441041  2.565030e-02  9.703995e-01 #> [4578,] -0.2228994817  1.624291e-02  9.765566e-01 #> [4579,] -0.2076720297 -1.989392e-03  9.791203e-01 #> [4580,] -0.1996941864 -2.035088e-02  9.797022e-01 #> [4581,] -0.1927424818 -2.996009e-02  9.808383e-01 #> [4582,] -0.1833868921 -3.431897e-02  9.832685e-01 #> [4583,] -0.1728355736 -4.162118e-02  9.847928e-01 #> [4584,] -0.1644233316 -4.571535e-02  9.858457e-01 #> [4585,] -0.1509834975 -4.352477e-02  9.886789e-01 #> [4586,] -0.1317611188 -4.271228e-02  9.910489e-01 #> [4587,] -0.1172211394 -4.443898e-02  9.924839e-01 #> [4588,] -0.1060964763 -3.995223e-02  9.940238e-01 #> [4589,] -0.0984980315 -3.011485e-02  9.950650e-01 #> [4590,] -0.0953285620 -2.761204e-02  9.947717e-01 #> [4591,] -0.0940480232 -3.234565e-02  9.942791e-01 #> [4592,] -0.0908956230 -3.248153e-02  9.948511e-01 #> [4593,] -0.0880867243 -2.349107e-02  9.952953e-01 #> [4594,] -0.0911838934 -1.433384e-02  9.943100e-01 #> [4595,] -0.0982515290 -5.423090e-03  9.927800e-01 #> [4596,] -0.1018877253  8.436955e-03  9.932616e-01 #> [4597,] -0.1027330086  1.732519e-02  9.938994e-01 #> [4598,] -0.1041596532  2.157992e-02  9.941132e-01 #> [4599,] -0.1068684235  2.753013e-02  9.925154e-01 #> [4600,] -0.1122503802  3.587582e-02  9.908251e-01 #> [4601,] -0.0777650699  4.955526e-02  1.004742e+00 #> [4602,] -0.1083816960  5.594447e-02  9.818370e-01 #> [4603,] -0.2133409679  5.530905e-02  9.643274e-01 #> [4604,] -0.1519640833  6.942220e-02  9.980353e-01 #> [4605,] -0.1546226144  8.482883e-02  9.707752e-01 #> [4606,] -0.2180205733  8.482421e-02  9.684245e-01 #> [4607,] -0.1207271293  9.192085e-02  1.000967e+00 #> [4608,] -0.0582195334  1.077284e-01  9.966527e-01 #> [4609,] -0.0448534638  1.239654e-01  9.918496e-01 #> [4610,] -0.0253185704  1.589704e-01  9.895912e-01 #> [4611,]  0.0137776360  1.897458e-01  9.921476e-01 #> [4612,] -0.0356727391  1.982215e-01  9.648482e-01 #> [4613,] -0.1100913882  2.027923e-01  9.649854e-01 #> [4614,] -0.0160977487  2.077063e-01  9.895675e-01 #> [4615,] -0.0119639011  2.146907e-01  9.704286e-01 #> [4616,] -0.0821633562  2.218768e-01  9.657798e-01 #> [4617,] -0.0578989908  2.397978e-01  9.721151e-01 #> [4618,] -0.0330898874  2.409195e-01  9.718534e-01 #> [4619,] -0.0094524836  2.128607e-01  9.824923e-01 #> [4620,]  0.0357235633  2.042241e-01  9.897003e-01 #> [4621,] -0.0263291709  2.247199e-01  9.594711e-01 #> [4622,] -0.1097758114  2.337391e-01  9.576861e-01 #> [4623,] -0.0210925303  2.188357e-01  9.866201e-01 #> [4624,]  0.1010151654  2.066726e-01  9.920255e-01 #> [4625,]  0.0543443672  2.135918e-01  9.628193e-01 #> [4626,] -0.0611565113  2.252971e-01  9.613581e-01 #> [4627,]  0.0066428110  2.265751e-01  9.863883e-01 #> [4628,] -0.0153040914  2.330044e-01  9.568970e-01 #> [4629,] -0.0458234809  2.205714e-01  9.737149e-01 #> [4630,]  0.1032619700  2.053516e-01  9.893733e-01 #> [4631,]  0.0754822344  2.190329e-01  9.645783e-01 #> [4632,] -0.0262675304  2.257754e-01  9.691257e-01 #> [4633,] -0.0063549192  2.241616e-01  9.799767e-01 #> [4634,]  0.0654055998  2.333228e-01  9.837270e-01 #> [4635,]  0.0518441536  2.647080e-01  9.540983e-01 #> [4636,] -0.0231435634  2.879796e-01  9.459245e-01 #> [4637,]  0.1003737599  2.739719e-01  9.765322e-01 #> [4638,]  0.1901980489  2.634562e-01  9.526178e-01 #> [4639,]  0.0515708439  2.564264e-01  9.416391e-01 #> [4640,]  0.0935055315  2.481571e-01  9.801658e-01 #> [4641,]  0.1534802914  2.538255e-01  9.551962e-01 #> [4642,]  0.0180871822  2.460063e-01  9.492522e-01 #> [4643,]  0.1128067225  2.312263e-01  9.868097e-01 #> [4644,]  0.2144323438  2.448592e-01  9.544318e-01 #> [4645,]  0.0625825077  2.541001e-01  9.398779e-01 #> [4646,]  0.1123047322  2.545014e-01  9.752558e-01 #> [4647,]  0.2721992433  2.791761e-01  9.457618e-01 #> [4648,]  0.1403342038  2.985891e-01  9.171860e-01 #> [4649,]  0.1084552929  2.931490e-01  9.563385e-01 #> [4650,]  0.2660176754  3.005042e-01  9.421299e-01 #> [4651,]  0.1629599482  3.177912e-01  9.093640e-01 #> [4652,]  0.1244388819  3.059860e-01  9.488161e-01 #> [4653,]  0.2666480541  3.003809e-01  9.376997e-01 #> [4654,]  0.1604840159  3.142465e-01  9.117537e-01 #> [4655,]  0.1647885293  3.106477e-01  9.472685e-01 #> [4656,]  0.3046222925  3.243586e-01  9.185547e-01 #> [4657,]  0.1711189449  3.444828e-01  8.973915e-01 #> [4658,]  0.1719745398  3.135943e-01  9.459082e-01 #> [4659,]  0.2906811833  2.935870e-01  9.264212e-01 #> [4660,]  0.1585093141  3.002446e-01  9.147711e-01 #> [4661,]  0.1891961545  2.821496e-01  9.550354e-01 #> [4662,]  0.3178443909  2.793342e-01  9.258235e-01 #> [4663,]  0.1750524342  2.872352e-01  9.146186e-01 #> [4664,]  0.1703201830  2.676117e-01  9.595987e-01 #> [4665,]  0.2587583661  2.776338e-01  9.350020e-01 #> [4666,]  0.1351844668  3.034895e-01  9.215097e-01 #> [4667,]  0.1676125824  2.836323e-01  9.552684e-01 #> [4668,]  0.3180427551  2.720432e-01  9.342444e-01 #> [4669,]  0.2102628052  2.780531e-01  9.138310e-01 #> [4670,]  0.1343864948  2.486030e-01  9.580140e-01 #> [4671,]  0.2655417919  2.180784e-01  9.613054e-01 #> [4672,]  0.1955410242  2.151681e-01  9.369231e-01 #> [4673,]  0.0991237238  1.985671e-01  9.678921e-01 #> [4674,]  0.2391939759  1.810039e-01  9.761691e-01 #> [4675,]  0.2829027474  1.955009e-01  9.426067e-01 #> [4676,]  0.1341522783  2.161540e-01  9.448783e-01 #> [4677,]  0.1730122864  2.093181e-01  9.761633e-01 #> [4678,]  0.2606986463  2.128567e-01  9.529051e-01 #> [4679,]  0.1233217716  2.269734e-01  9.435769e-01 #> [4680,]  0.0894066766  2.204427e-01  9.717560e-01 #> [4681,]  0.2115529776  2.155145e-01  9.716624e-01 #> [4682,]  0.2357563078  2.332162e-01  9.465017e-01 #> [4683,]  0.1193780825  2.519421e-01  9.416697e-01 #> [4684,]  0.1267611235  2.160882e-01  9.706812e-01 #> [4685,]  0.2876794040  1.803923e-01  9.653605e-01 #> [4686,]  0.3118749559  1.916810e-01  9.338734e-01 #> [4687,]  0.1606866121  2.025613e-01  9.427789e-01 #> [4688,]  0.2022564560  1.898455e-01  9.771066e-01 #> [4689,]  0.2823178470  1.923761e-01  9.478778e-01 #> [4690,]  0.1383880973  1.908703e-01  9.472262e-01 #> [4691,]  0.2015722245  1.645159e-01  9.803441e-01 #> [4692,]  0.3490704596  1.754714e-01  9.442930e-01 #> [4693,]  0.2194996178  2.029415e-01  9.288505e-01 #> [4694,]  0.2106916606  1.911256e-01  9.674006e-01 #> [4695,]  0.3334587514  1.773696e-01  9.448654e-01 #> [4696,]  0.1966653019  1.587508e-01  9.394852e-01 #> [4697,]  0.2244466394  1.251869e-01  9.809363e-01 #> [4698,]  0.3365276158  1.329355e-01  9.436015e-01 #> [4699,]  0.2087641805  1.467214e-01  9.452723e-01 #> [4700,]  0.2821010649  1.343668e-01  9.719401e-01 #> [4701,]  0.3056213260  1.422187e-01  9.331269e-01 #> [4702,]  0.1910007596  1.478517e-01  9.564565e-01 #> [4703,]  0.3474946022  1.478511e-01  9.577938e-01 #> [4704,]  0.3594463766  1.762441e-01  9.098940e-01 #> [4705,]  0.2174918801  1.883579e-01  9.410428e-01 #> [4706,]  0.3558837175  1.817302e-01  9.465578e-01 #> [4707,]  0.4003529251  2.019564e-01  8.964353e-01 #> [4708,]  0.2520031035  2.142281e-01  9.247047e-01 #> [4709,]  0.3194328249  2.156472e-01  9.440892e-01 #> [4710,]  0.3028985560  2.372259e-01  9.105045e-01 #> [4711,]  0.2420801520  2.380272e-01  9.411158e-01 #> [4712,]  0.3127473295  2.351358e-01  9.319307e-01 #> [4713,]  0.2174290568  2.447253e-01  9.224622e-01 #> [4714,]  0.2802028954  2.359180e-01  9.495425e-01 #> [4715,]  0.3757486343  2.440968e-01  9.053894e-01 #> [4716,]  0.2546748221  2.476784e-01  9.155776e-01 #> [4717,]  0.3174613714  2.368225e-01  9.383187e-01 #> [4718,]  0.3014383316  2.468305e-01  9.086498e-01 #> [4719,]  0.2514278889  2.344839e-01  9.411024e-01 #> [4720,]  0.3388034403  2.195200e-01  9.284185e-01 #> [4721,]  0.2465822548  2.193283e-01  9.232964e-01 #> [4722,]  0.3117459118  2.107662e-01  9.478051e-01 #> [4723,]  0.3593366146  2.363860e-01  9.020396e-01 #> [4724,]  0.2608298063  2.469492e-01  9.218086e-01 #> [4725,]  0.3581087887  2.377384e-01  9.261482e-01 #> [4726,]  0.3094395995  2.608693e-01  8.975327e-01 #> [4727,]  0.2952967882  2.570335e-01  9.309358e-01 #> [4728,]  0.3518860638  2.471142e-01  9.073362e-01 #> [4729,]  0.2628746629  2.521120e-01  9.171724e-01 #> [4730,]  0.3355465829  2.635861e-01  9.262876e-01 #> [4731,]  0.2931819856  2.892430e-01  8.945644e-01 #> [4732,]  0.2533071041  2.825003e-01  9.274082e-01 #> [4733,]  0.3672135174  2.802936e-01  9.113350e-01 #> [4734,]  0.2595258355  2.963471e-01  8.951583e-01 #> [4735,]  0.2177222967  2.805882e-01  9.369223e-01 #> [4736,]  0.3588567376  2.735944e-01  9.194670e-01 #> [4737,]  0.2816504836  2.932319e-01  8.935121e-01 #> [4738,]  0.2165285498  2.808215e-01  9.321619e-01 #> [4739,]  0.3488242924  2.637166e-01  9.252359e-01 #> [4740,]  0.2778576314  2.738578e-01  9.011903e-01 #> [4741,]  0.2417147309  2.601568e-01  9.410252e-01 #> [4742,]  0.3296385705  2.499736e-01  9.230065e-01 #> [4743,]  0.2243774533  2.513545e-01  9.205562e-01 #> [4744,]  0.2831056714  2.279665e-01  9.521154e-01 #> [4745,]  0.3106490970  2.270609e-01  9.162738e-01 #> [4746,]  0.2169007659  2.274964e-01  9.405610e-01 #> [4747,]  0.3143075407  2.194339e-01  9.460872e-01 #> [4748,]  0.2421278507  2.356818e-01  9.186093e-01 #> [4749,]  0.2205681503  2.324260e-01  9.545583e-01 #> [4750,]  0.3223237097  2.374749e-01  9.320779e-01 #> [4751,]  0.1961403191  2.541848e-01  9.225327e-01 #> [4752,]  0.2414094657  2.301056e-01  9.586204e-01 #> [4753,]  0.3489482105  2.378998e-01  9.210062e-01 #> [4754,]  0.2019155324  2.624449e-01  9.185127e-01 #> [4755,]  0.2495409250  2.341443e-01  9.575266e-01 #> [4756,]  0.3446347415  2.197214e-01  9.234430e-01 #> [4757,]  0.2081288695  2.185272e-01  9.302037e-01 #> [4758,]  0.2677669823  2.096508e-01  9.601990e-01 #> [4759,]  0.2973262072  2.244495e-01  9.222388e-01 #> [4760,]  0.2016243488  2.215860e-01  9.423937e-01 #> [4761,]  0.3496815562  2.071052e-01  9.455369e-01 #> [4762,]  0.3217032552  2.220425e-01  9.037740e-01 #> [4763,]  0.2189001441  2.192871e-01  9.448050e-01 #> [4764,]  0.3581502438  2.164835e-01  9.357184e-01 #> [4765,]  0.2951898873  2.339575e-01  9.050742e-01 #> [4766,]  0.2892360687  2.202830e-01  9.424942e-01 #> [4767,]  0.3801357448  1.998482e-01  9.148770e-01 #> [4768,]  0.2612481415  1.917837e-01  9.239994e-01 #> [4769,]  0.3487128913  1.915514e-01  9.434123e-01 #> [4770,]  0.3753021657  2.192281e-01  8.957740e-01 #> [4771,]  0.2642239928  2.345228e-01  9.248652e-01 #> [4772,]  0.3729481399  2.345743e-01  9.223325e-01 #> [4773,]  0.3225312829  2.524626e-01  8.928393e-01 #> [4774,]  0.3021261990  2.522461e-01  9.295031e-01 #> [4775,]  0.3648619056  2.466588e-01  9.050660e-01 #> [4776,]  0.2684967220  2.318727e-01  9.191317e-01 #> [4777,]  0.3258555830  2.128907e-01  9.391138e-01 #> [4778,]  0.2875937521  2.206830e-01  9.150792e-01 #> [4779,]  0.2820197642  1.949183e-01  9.455641e-01 #> [4780,]  0.3989859521  1.830445e-01  9.189059e-01 #> [4781,]  0.2813556492  2.069407e-01  9.119104e-01 #> [4782,]  0.2815919816  1.850409e-01  9.475229e-01 #> [4783,]  0.4644940794  1.657972e-01  9.065705e-01 #> [4784,]  0.4095329642  2.006910e-01  8.749433e-01 #> [4785,]  0.3123060763  2.048093e-01  9.221297e-01 #> [4786,]  0.4224701822  1.769900e-01  9.127949e-01 #> [4787,]  0.3620092571  1.868210e-01  8.924410e-01 #> [4788,]  0.3716369569  1.791752e-01  9.238029e-01 #> [4789,]  0.4699288011  1.835799e-01  8.800005e-01 #> [4790,]  0.3501279056  2.045980e-01  8.922442e-01 #> [4791,]  0.4073583484  1.916670e-01  9.163339e-01 #> [4792,]  0.4077515900  1.876746e-01  8.836542e-01 #> [4793,]  0.3441447020  1.708301e-01  9.185281e-01 #> [4794,]  0.4693620205  1.635327e-01  8.952407e-01 #> [4795,]  0.4007107019  1.845764e-01  8.777991e-01 #> [4796,]  0.3901355267  1.756897e-01  9.158831e-01 #> [4797,]  0.4257147312  1.869500e-01  8.891406e-01 #> [4798,]  0.3232826293  1.804831e-01  9.115239e-01 #> [4799,]  0.4465363622  1.218004e-01  9.144375e-01 #> [4800,]  0.4893013835  1.127476e-01  8.668723e-01 #> [4801,]  0.3543781042  1.221516e-01  9.076636e-01 #> [4802,]  0.4557670653  1.172410e-01  9.102357e-01 #> [4803,]  0.4505777657  1.292119e-01  8.723613e-01 #> [4804,]  0.3691395521  1.225260e-01  9.156552e-01 #> [4805,]  0.4875251353  1.046496e-01  8.940431e-01 #> [4806,]  0.4102776945  1.007613e-01  8.815032e-01 #> [4807,]  0.4271179736  1.186784e-01  9.096698e-01 #> [4808,]  0.5358958840  1.529005e-01  8.524286e-01 #> [4809,]  0.4086666703  1.677424e-01  8.732802e-01 #> [4810,]  0.4599667192  1.715977e-01  8.944754e-01 #> [4811,]  0.4646299779  1.784571e-01  8.593696e-01 #> [4812,]  0.4164136350  1.687362e-01  8.935637e-01 #> [4813,]  0.4870107174  1.604047e-01  8.734656e-01 #> [4814,]  0.4157866538  1.573582e-01  8.798579e-01 #> [4815,]  0.4925816655  1.501423e-01  8.829098e-01 #> [4816,]  0.4814857543  1.541773e-01  8.514585e-01 #> [4817,]  0.4255160093  1.488391e-01  8.935776e-01 #> [4818,]  0.5105904341  1.464933e-01  8.664351e-01 #> [4819,]  0.4228914380  1.456504e-01  8.738294e-01 #> [4820,]  0.4592625797  1.356688e-01  8.984737e-01 #> [4821,]  0.4607140422  1.474801e-01  8.677839e-01 #> [4822,]  0.3726603687  1.571182e-01  9.010862e-01 #> [4823,]  0.5154694319  1.666539e-01  8.740315e-01 #> [4824,]  0.5011388659  1.895635e-01  8.353515e-01 #> [4825,]  0.4137436152  1.791223e-01  8.894128e-01 #> [4826,]  0.4845345020  1.590412e-01  8.778578e-01 #> [4827,]  0.4142919779  1.576095e-01  8.774998e-01 #> [4828,]  0.4618076682  1.453336e-01  8.954921e-01 #> [4829,]  0.4837684035  1.551785e-01  8.576600e-01 #> [4830,]  0.4068171978  1.611899e-01  8.888999e-01 #> [4831,]  0.5378181338  1.623750e-01  8.626397e-01 #> [4832,]  0.4778930545  1.960898e-01  8.355069e-01 #> [4833,]  0.4154775739  2.062014e-01  8.899871e-01 #> [4834,]  0.4996753931  2.126914e-01  8.576005e-01 #> [4835,]  0.4106549621  2.263355e-01  8.631760e-01 #> [4836,]  0.4653246403  2.181853e-01  8.815997e-01 #> [4837,]  0.4736445248  2.312189e-01  8.433847e-01 #> [4838,]  0.4087873101  2.367508e-01  8.793201e-01 #> [4839,]  0.4739784002  2.469286e-01  8.612544e-01 #> [4840,]  0.3928080797  2.621400e-01  8.630361e-01 #> [4841,]  0.4442663491  2.252452e-01  8.882934e-01 #> [4842,]  0.4610885084  2.170635e-01  8.541325e-01 #> [4843,]  0.3985331655  2.101264e-01  8.890449e-01 #> [4844,]  0.4931621850  2.013261e-01  8.705768e-01 #> [4845,]  0.4070671201  2.223729e-01  8.637041e-01 #> [4846,]  0.4405440986  1.890378e-01  8.925998e-01 #> [4847,]  0.5529152155  1.963586e-01  8.317575e-01 #> [4848,]  0.4337360561  2.318819e-01  8.486296e-01 #> [4849,]  0.5099425912  1.950556e-01  8.621550e-01 #> [4850,]  0.5643636584  2.035343e-01  8.069933e-01 #> [4851,]  0.4628404081  2.186242e-01  8.462600e-01 #> [4852,]  0.5595293641  2.039470e-01  8.343108e-01 #> [4853,]  0.5170749426  2.404727e-01  8.080429e-01 #> [4854,]  0.4884521365  1.992153e-01  8.516951e-01 #> [4855,]  0.6149299741  1.404703e-01  8.104525e-01 #> [4856,]  0.5043664575  1.639279e-01  8.226946e-01 #> [4857,]  0.5022201538  1.230455e-01  8.637593e-01 #> [4858,]  0.6320592165  8.962327e-02  8.013747e-01 #> [4859,]  0.5156270862  1.124826e-01  8.229703e-01 #> [4860,]  0.5392099619  6.269907e-02  8.538111e-01 #> [4861,]  0.6473714113  3.898728e-02  7.854066e-01 #> [4862,]  0.5350081921  6.768686e-02  8.204998e-01 #> [4863,]  0.5760399699  4.643901e-02  8.404745e-01 #> [4864,]  0.5669462681  5.138478e-02  8.120577e-01 #> [4865,]  0.5179129839  7.353003e-02  8.521681e-01 #> [4866,]  0.5904570818  9.385980e-02  8.193597e-01 #> [4867,]  0.5267140269  1.188812e-01  8.264649e-01 #> [4868,]  0.5978282690  1.016836e-01  8.230101e-01 #> [4869,]  0.5896925330  1.081730e-01  7.912971e-01 #> [4870,]  0.5466529131  1.311977e-01  8.280434e-01 #> [4871,]  0.6527523398  1.495038e-01  7.764415e-01 #> [4872,]  0.5609637499  1.717454e-01  7.869737e-01 #> [4873,]  0.5929918289  1.482863e-01  8.122689e-01 #> [4874,]  0.6334487200  1.335097e-01  7.706072e-01 #> [4875,]  0.5688187480  1.462845e-01  8.000972e-01 #> [4876,]  0.6579313278  1.549008e-01  7.677515e-01 #> [4877,]  0.6066004038  1.504114e-01  7.683278e-01 #> [4878,]  0.6211689115  1.392663e-01  7.863813e-01 #> [4879,]  0.6402984858  1.620118e-01  7.563980e-01 #> [4880,]  0.5932862163  1.652899e-01  7.864404e-01 #> [4881,]  0.6382970214  1.342798e-01  7.729985e-01 #> [4882,]  0.6122781634  1.366220e-01  7.789298e-01 #> [4883,]  0.6178195477  1.447953e-01  7.851623e-01 #> [4884,]  0.5920537114  1.360088e-01  7.911963e-01 #> [4885,]  0.6207083464  1.265459e-01  7.887745e-01 #> [4886,]  0.5986268520  1.225449e-01  7.860740e-01 #> [4887,]  0.6090990901  1.106209e-01  7.975624e-01 #> [4888,]  0.6081518531  1.028505e-01  7.852887e-01 #> [4889,]  0.5732754469  1.052385e-01  8.076797e-01 #> [4890,]  0.6699063182  1.158789e-01  7.624388e-01 #> [4891,]  0.5978701115  1.106166e-01  7.729908e-01 #> [4892,]  0.6084765792  1.077370e-01  8.024065e-01 #> [4893,]  0.6428099275  1.260217e-01  7.615396e-01 #> [4894,]  0.5677674413  1.289923e-01  8.020567e-01 #> [4895,]  0.6487184763  1.316556e-01  7.798128e-01 #> [4896,]  0.5959666371  1.247508e-01  7.754007e-01 #> [4897,]  0.5949791670  1.148071e-01  8.101850e-01 #> [4898,]  0.6222777963  1.186913e-01  7.773556e-01 #> [4899,]  0.5621466637  1.177837e-01  8.099050e-01 #> [4900,]  0.6438835263  1.243337e-01  7.816545e-01 #> [4901,]  0.5982213616  8.726496e-02  7.857178e-01 #> [4902,]  0.5735681653  1.663877e-01  7.992038e-01 #> [4903,]  0.5897128582  4.530841e-01  6.915108e-01 #> [4904,]  0.5394451022  5.437959e-01  6.648709e-01 #> [4905,]  0.5522190332  4.552035e-01  6.977577e-01 #> [4906,]  0.5963742137  4.055086e-01  7.010102e-01 #> [4907,]  0.6370097399  3.527271e-01  6.957768e-01 #> [4908,]  0.6403791308  3.192714e-01  7.065454e-01 #> [4909,]  0.6175734997  2.779199e-01  7.383232e-01 #> [4910,]  0.5782943964  2.286647e-01  7.813848e-01 #> [4911,]  0.5173476934  1.763637e-01  8.280923e-01 #> [4912,]  0.5160768032  8.290406e-02  8.554321e-01 #> [4913,]  0.5088763237  9.226993e-02  8.582147e-01 #> [4914,]  0.3784085214  1.418967e-01  8.952911e-01 #> [4915,]  0.3159070015  8.288535e-02  9.427635e-01 #> [4916,]  0.3380497992  1.223762e-01  9.359470e-01 #> [4917,]  0.2720466554  2.439452e-01  9.232992e-01 #> [4918,]  0.1819812357  2.688778e-01  9.404584e-01 #> [4919,]  0.1349239051  2.906705e-01  9.435903e-01 #> [4920,]  0.0818860754  3.463432e-01  9.305080e-01 #> [4921,]  0.0231987145  3.807707e-01  9.212259e-01 #> [4922,] -0.0350854732  4.157349e-01  9.033921e-01 #> [4923,] -0.0866647065  4.122630e-01  9.012709e-01 #> [4924,] -0.0992019027  4.269457e-01  8.971976e-01 #> [4925,] -0.1504534930  5.670688e-01  8.017732e-01 #> [4926,] -0.2159466594  6.074234e-01  7.610226e-01 #> [4927,] -0.1778350919  5.422235e-01  8.171988e-01 #> [4928,] -0.1596080959  6.228259e-01  7.607422e-01 #> [4929,] -0.1908790171  6.940571e-01  6.948253e-01 #> [4930,] -0.1833046377  6.809614e-01  7.053599e-01 #> [4931,] -0.1589889526  6.894585e-01  7.044339e-01 #> [4932,] -0.1576202810  7.112104e-01  6.854975e-01 #> [4933,] -0.1325327754  6.455908e-01  7.480225e-01 #> [4934,] -0.0322118998  6.087158e-01  7.896976e-01 #> [4935,] -0.0429911576  7.496457e-01  6.526836e-01 #> [4936,] -0.0640618503  7.298344e-01  6.761289e-01 #> [4937,]  0.0395299569  6.986465e-01  7.099298e-01 #> [4938,]  0.0474134609  8.125288e-01  5.892550e-01 #> [4939,]  0.1108598933  7.360914e-01  6.661908e-01 #> [4940,]  0.2150115520  7.298857e-01  6.554576e-01 #> [4941,]  0.1995743960  7.867323e-01  5.884373e-01 #> [4942,]  0.2897855043  6.844903e-01  6.758494e-01 #> [4943,]  0.3478003144  7.198555e-01  6.111286e-01 #> [4944,]  0.3276734054  7.355435e-01  5.953137e-01 #> [4945,]  0.4363609850  6.309680e-01  6.612378e-01 #> [4946,]  0.4600656331  6.534467e-01  6.071815e-01 #> [4947,]  0.4662548304  6.353207e-01  6.311663e-01 #> [4948,]  0.5156469941  5.387756e-01  6.880100e-01 #> [4949,]  0.4401902258  4.594449e-01  7.537954e-01 #> [4950,]  0.4400635958  3.853013e-01  8.178506e-01 #> [4951,]  0.4727585018  3.456743e-01  8.178700e-01 #> [4952,]  0.4405404031  2.931632e-01  8.461184e-01 #> [4953,]  0.4359489381  2.143742e-01  8.727463e-01 #> [4954,]  0.4268418550  2.089592e-01  8.729184e-01 #> [4955,]  0.4664058685  2.452385e-01  8.673801e-01 #> [4956,]  0.4569342136  2.239216e-01  8.634455e-01 #> [4957,]  0.3346026838  2.017122e-01  9.027218e-01 #> [4958,]  0.3745052814  1.870515e-01  9.242685e-01 #> [4959,]  0.4185499549  1.596188e-01  8.984955e-01 #> [4960,]  0.3094732761  1.466783e-01  9.219922e-01 #> [4961,]  0.3344878256  1.507086e-01  9.354682e-01 #> [4962,]  0.4359249771  1.875134e-01  8.868909e-01 #> [4963,]  0.4875194728  2.603853e-01  8.517305e-01 #> [4964,]  0.4421381354  3.549318e-01  8.221173e-01 #> [4965,]  0.3360607624  3.714317e-01  8.561247e-01 #> [4966,]  0.4203513861  3.775279e-01  8.449228e-01 #> [4967,]  0.4427494109  5.676612e-01  6.924732e-01 #> [4968,]  0.3843083084  6.428469e-01  6.754482e-01 #> [4969,]  0.4977487624  6.047388e-01  6.417863e-01 #> [4970,]  0.5073873997  7.039464e-01  5.097954e-01 #> [4971,]  0.5334503651  6.847996e-01  5.229871e-01 #> [4972,]  0.6251850128  6.459379e-01  4.703306e-01 #> [4973,]  0.5953219533  6.729391e-01  4.495624e-01 #> [4974,]  0.6639124155  6.057527e-01  4.797753e-01 #> [4975,]  0.6782675982  5.987906e-01  4.410394e-01 #> [4976,]  0.6723920107  5.667129e-01  4.930938e-01 #> [4977,]  0.7475109100  5.052031e-01  4.739248e-01 #> [4978,]  0.7127159238  5.082413e-01  4.828009e-01 #> [4979,]  0.7657324076  4.368780e-01  5.142000e-01 #> [4980,]  0.7756286263  3.893331e-01  5.053378e-01 #> [4981,]  0.7591990232  3.451866e-01  5.626378e-01 #> [4982,]  0.8258277178  2.472363e-01  5.463205e-01 #> [4983,]  0.7677673697  2.021463e-01  5.915655e-01 #> [4984,]  0.8037459254  1.804100e-01  6.054984e-01 #> [4985,]  0.7999306321  1.483994e-01  5.860531e-01 #> [4986,]  0.7450619936  1.162632e-01  6.502693e-01 #> [4987,]  0.8429218531  8.730143e-02  5.827565e-01 #> [4988,]  0.7946451902  6.186574e-02  5.875541e-01 #> [4989,]  0.7807740569  5.352750e-02  6.352898e-01 #> [4990,]  0.8496984839  3.868785e-02  5.644343e-01 #> [4991,]  0.7758675218  2.948470e-02  6.113178e-01 #> [4992,]  0.8222598433  3.779483e-02  6.048343e-01 #> [4993,]  0.8254662752  3.175000e-02  5.676728e-01 #> [4994,]  0.7865195870  3.822974e-02  6.171084e-01 #> [4995,]  0.8558802009  2.224285e-02  5.610053e-01 #> [4996,]  0.7912608385  3.765484e-03  5.888470e-01 #> [4997,]  0.8255556226  5.902518e-02  5.857828e-01 #> [4998,]  0.8754768968  1.610473e-01  4.964408e-01 #> [4999,]  0.7987180352  2.024658e-01  5.558078e-01 #> [5000,]  0.8569999933  1.823034e-01  5.280408e-01 #> [5001,]  0.8346054554  2.166378e-01  5.069518e-01 #> [5002,]  0.8128366470  2.008865e-01  5.616249e-01 #> [5003,]  0.8475172520  1.782279e-01  5.266237e-01 #> [5004,]  0.8112810254  1.693234e-01  5.573593e-01 #> [5005,]  0.8627010584  9.196006e-02  5.367968e-01 #> [5006,]  0.8311342597  6.126307e-02  5.430707e-01 #> [5007,]  0.8417187929  6.714684e-02  5.619944e-01 #> [5008,]  0.8617150187  5.033010e-02  5.217854e-01 #> [5009,]  0.8210712671  4.095167e-02  5.676709e-01 #> [5010,]  0.8622268438  4.069932e-02  5.423329e-01 #> [5011,]  0.8154022694  3.412180e-02  5.628914e-01 #> [5012,]  0.8543419242  4.443304e-02  5.527751e-01 #> [5013,]  0.8610710502  4.874136e-02  5.155009e-01 #> [5014,]  0.8154094815  3.423273e-02  5.756763e-01 #> [5015,]  0.8732674122  1.461395e-02  5.276659e-01 #> [5016,]  0.8251624703  1.315387e-02  5.481495e-01 #> [5017,]  0.8500545025  1.834091e-02  5.584939e-01 #> [5018,]  0.8521956801  4.395905e-02  5.281801e-01 #> [5019,]  0.8214789629  5.554756e-02  5.718629e-01 #> [5020,]  0.8635446429  6.612997e-02  5.305851e-01 #> [5021,]  0.8128938079  1.113574e-01  5.618821e-01 #> [5022,]  0.8433761001  1.077109e-01  5.588364e-01 #> [5023,]  0.8271260262  1.445772e-01  5.398834e-01 #> [5024,]  0.8253598809  1.516770e-01  5.619432e-01 #> [5025,]  0.8580031991  1.598763e-01  5.119476e-01 #> [5026,]  0.8145685792  1.877659e-01  5.438325e-01 #> [5027,]  0.8692207932  1.562117e-01  5.113420e-01 #> [5028,]  0.8381891251  1.765790e-01  5.088441e-01 #> [5029,]  0.8503825665  1.503081e-01  5.291442e-01 #> [5030,]  0.8753362298  1.443862e-01  4.832545e-01 #> [5031,]  0.8315744996  1.548374e-01  5.310711e-01 #> [5032,]  0.8846399784  5.644240e-02  5.025363e-01 #> [5033,]  0.8516380191 -4.954716e-03  5.151887e-01 #> [5034,]  0.8636378646 -1.433690e-02  5.324122e-01 #> [5035,]  0.8587394357 -4.123296e-02  5.135452e-01 #> [5036,]  0.8383360505 -5.652248e-02  5.494552e-01 #> [5037,]  0.8677906394 -6.928340e-02  5.159468e-01 #> [5038,]  0.8265370131 -8.568063e-02  5.450047e-01 #> [5039,]  0.8671937585 -8.854152e-02  5.233633e-01 #> [5040,]  0.8446599245 -9.380495e-02  5.170588e-01 #> [5041,]  0.8542095423 -9.699102e-02  5.305034e-01 #> [5042,]  0.8744618297 -1.080074e-01  4.872991e-01 #> [5043,]  0.8307546377 -9.608097e-02  5.364864e-01 #> [5044,]  0.8883119226 -7.481022e-02  4.979678e-01 #> [5045,]  0.8501743078 -6.692643e-02  5.048080e-01 #> [5046,]  0.8586119413 -4.505657e-02  5.302152e-01 #> [5047,]  0.8937269449 -3.579036e-02  4.717810e-01 #> [5048,]  0.8489152193 -3.350225e-03  5.170598e-01 #> [5049,]  0.8946400881  2.483424e-02  4.920776e-01 #> [5050,]  0.8554779291  2.995850e-02  5.025659e-01 #> [5051,]  0.8490405083  5.217993e-02  5.418609e-01 #> [5052,]  0.8535380363  1.015883e-01  5.197814e-01 #> [5053,]  0.8167833686  1.238264e-01  5.612441e-01 #> [5054,]  0.8793842196  9.573603e-02  5.088574e-01 #> [5055,]  0.8340679407  1.282326e-01  5.211927e-01 #> [5056,]  0.8383161426  9.951207e-02  5.580559e-01 #> [5057,]  0.8552429080  9.209895e-02  5.212047e-01 #> [5058,]  0.8155881166  1.322173e-01  5.621408e-01 #> [5059,]  0.8706974387  1.220292e-01  5.165713e-01 #> [5060,]  0.8249766827  1.702857e-01  5.249448e-01 #> [5061,]  0.8431939483  1.549171e-01  5.451491e-01 #> [5062,]  0.8500279188  1.651603e-01  5.099388e-01 #> [5063,]  0.7958285213  1.858508e-01  5.707926e-01 #> [5064,]  0.8537009954  1.566418e-01  5.358623e-01 #> [5065,]  0.8040198088  1.906501e-01  5.471450e-01 #> [5066,]  0.8258163929  1.407499e-01  5.686491e-01 #> [5067,]  0.8663098216  6.154091e-02  5.145649e-01 #> [5068,]  0.8137894273  7.103718e-02  5.654136e-01 #> [5069,]  0.8707889318  7.808737e-02  5.305063e-01 #> [5070,]  0.8369721174  6.257061e-02  5.308320e-01 #> [5071,]  0.8439764977  6.735186e-02  5.528699e-01 #> [5072,]  0.8734890223  6.159921e-02  5.033846e-01 #> [5073,]  0.8298203945  5.538625e-02  5.485125e-01 #> [5074,]  0.8824889064  4.379519e-02  5.112284e-01 #> [5075,]  0.8372142911  1.259986e-02  5.280713e-01 #> [5076,]  0.8458604813  1.289572e-02  5.579279e-01 #> [5077,]  0.8644870520  2.510243e-03  5.161012e-01 #> [5078,]  0.8032162189  4.873109e-03  5.780696e-01 #> [5079,]  0.8626394868  3.941084e-02  5.475675e-01 #> [5080,]  0.8191298246  5.215652e-02  5.505323e-01 #> [5081,]  0.7934868932  9.278920e-02  6.070273e-01 #> [5082,]  0.8459406495  1.358355e-01  5.510815e-01 #> [5083,]  0.7688689828  1.489192e-01  5.971273e-01 #> [5084,]  0.7931042910  1.637246e-01  6.168541e-01 #> [5085,]  0.7903085351  1.642068e-01  5.877145e-01 #> [5086,]  0.7256973386  1.805387e-01  6.546582e-01 #> [5087,]  0.7836644650  1.881274e-01  6.280264e-01 #> [5088,]  0.7192240357  1.815347e-01  6.474825e-01 #> [5089,]  0.7012163997  1.919872e-01  6.994243e-01 #> [5090,]  0.7411022186  2.778724e-01  6.253788e-01 #> [5091,]  0.6901892424  3.433127e-01  6.319100e-01 #> [5092,]  0.7637732029  3.251643e-01  5.907964e-01 #> [5093,]  0.7611546516  3.873514e-01  5.247881e-01 #> [5094,]  0.7457324862  3.848242e-01  5.522608e-01 #> [5095,]  0.8217377067  3.566432e-01  4.866693e-01 #> [5096,]  0.8020148873  3.871679e-01  4.826107e-01 #> [5097,]  0.6881040931  3.119074e-01  6.436037e-01 #> [5098,]  0.5100578666  1.805108e-01  8.240090e-01 #> [5099,]  0.3709704876  1.308171e-02  9.093989e-01 #> [5100,]  0.2656812668 -1.334788e-01  9.335359e-01 #> [5101,]  0.1806732267 -1.925311e-01  9.496952e-01 #> [5102,]  0.1031867862 -2.023780e-01  9.607672e-01 #> [5103,]  0.0001050908 -1.783597e-01  9.721933e-01 #> [5104,] -0.1208708361 -1.376599e-01  9.720103e-01 #> [5105,] -0.2239266634 -9.916465e-02  9.613172e-01 #> [5106,] -0.2856661975 -6.111699e-02  9.507525e-01 #> [5107,] -0.3176429868 -3.236821e-02  9.444684e-01 #> [5108,] -0.3162184954 -3.143156e-02  9.473957e-01 #> [5109,] -0.2974817157 -8.863925e-02  9.507517e-01 #> [5110,] -0.2763968706 -1.763194e-01  9.468406e-01 #> [5111,] -0.2513770759 -2.445811e-01  9.386097e-01 #> [5112,] -0.2300476283 -3.367588e-01  9.154302e-01 #> [5113,] -0.2079666257 -4.502505e-01  8.733366e-01 #> [5114,] -0.1781627089 -5.685261e-01  8.104855e-01 #> [5115,] -0.1415545791 -6.718892e-01  7.413069e-01 #> [5116,] -0.0844445825 -7.099839e-01  7.134836e-01 #> [5117,] -0.0391565040 -6.893256e-01  7.319039e-01 #> [5118,]  0.0099564604 -5.951670e-01  8.017203e-01 #> [5119,]  0.1537458599 -4.863241e-01  8.689007e-01 #> [5120,]  0.2049468458 -4.789906e-01  8.513502e-01 #> [5121,]  0.2284135818 -4.260040e-01  8.721729e-01 #> [5122,]  0.3161892295 -3.850207e-01  8.749512e-01 #> [5123,]  0.2598825991 -3.923785e-01  8.635235e-01 #> [5124,]  0.3059526682 -3.064874e-01  9.079962e-01 #> [5125,]  0.3676999807 -2.535685e-01  8.969887e-01 #> [5126,]  0.2539166808 -2.264073e-01  9.175331e-01 #> [5127,]  0.2780531943 -1.635821e-01  9.501451e-01 #> [5128,]  0.3805544376 -9.922552e-02  9.223920e-01 #> [5129,]  0.3888424635 -2.406067e-02  9.143019e-01 #> [5130,]  0.4182670116  4.039520e-02  9.140809e-01 #> [5131,]  0.4236149788  8.580536e-02  9.034990e-01 #> [5132,]  0.3161084056  1.157784e-01  9.253939e-01 #> [5133,]  0.3198700249  1.176688e-01  9.418908e-01 #> [5134,]  0.4062859118  1.140966e-01  9.086066e-01 #> [5135,]  0.4286582172  1.308867e-01  8.974654e-01 #> [5136,]  0.4320677519  1.062074e-01  9.039104e-01 #> [5137,]  0.3206547499  7.440959e-02  9.231444e-01 #> [5138,]  0.2976906598  1.049672e-01  9.524676e-01 #> [5139,]  0.3321305215  1.197221e-01  9.368753e-01 #> [5140,]  0.2262581885  1.258644e-01  9.472772e-01 #> [5141,]  0.2475016713  1.487677e-01  9.614713e-01 #> [5142,]  0.3170538545  1.645641e-01  9.337083e-01 #> [5143,]  0.3098383844  2.042198e-01  9.231262e-01 #> [5144,]  0.3427294791  2.357816e-01  9.229817e-01 #> [5145,]  0.2982282043  2.045453e-01  9.234364e-01 #> [5146,]  0.1704148799  1.601414e-01  9.543512e-01 #> [5147,]  0.2125055641  1.610024e-01  9.693457e-01 #> [5148,]  0.3125598729  1.888909e-01  9.343371e-01 #> [5149,]  0.3399870694  2.271559e-01  9.108426e-01 #> [5150,]  0.4041517377  2.629300e-01  8.936272e-01 #> [5151,]  0.3760767281  2.745521e-01  8.818843e-01 #> [5152,]  0.2196107060  2.561950e-01  9.180068e-01 #> [5153,]  0.2521491647  2.496305e-01  9.470152e-01 #> [5154,]  0.3238297999  2.623388e-01  9.153844e-01 #> [5155,]  0.2248916179  2.514161e-01  9.216749e-01 #> [5156,]  0.2595444322  2.281615e-01  9.473315e-01 #> [5157,]  0.3107095063  2.307246e-01  9.235899e-01 #> [5158,]  0.2479225993  2.188540e-01  9.282918e-01 #> [5159,]  0.3083228767  2.553594e-01  9.182522e-01 #> [5160,]  0.4246219695  3.638664e-01  8.494387e-01 #> [5161,]  0.4636268914  5.198830e-01  7.253045e-01 #> [5162,]  0.4167043567  6.348152e-01  6.509300e-01 #> [5163,]  0.4638567567  6.210271e-01  6.460013e-01 #> [5164,]  0.5040439367  6.758690e-01  5.499624e-01 #> [5165,]  0.5247869492  6.683196e-01  5.405377e-01 #> [5166,]  0.6080811024  5.954461e-01  5.487304e-01 #> [5167,]  0.6057553291  5.854228e-01  5.390487e-01 #> [5168,]  0.6690180302  5.375813e-01  5.410271e-01 #> [5169,]  0.6732612252  5.303816e-01  5.228907e-01 #> [5170,]  0.6824232340  4.854415e-01  5.568160e-01 #> [5171,]  0.7722663879  4.498286e-01  4.882967e-01 #> [5172,]  0.7561597824  4.608135e-01  4.681418e-01 #> [5173,]  0.8135192394  4.051949e-01  4.571835e-01 #> [5174,]  0.8261383176  4.212359e-01  3.955855e-01 #> [5175,]  0.8206084967  3.858721e-01  4.360739e-01 #> [5176,]  0.8754211664  2.662925e-01  4.456494e-01 #> [5177,]  0.8331190944  2.320866e-01  4.939757e-01 #> [5178,]  0.8685130477  1.444700e-01  5.016797e-01 #> [5179,]  0.8692116141  4.043004e-02  4.936108e-01 #> [5180,]  0.8613603115  4.336139e-02  5.197976e-01 #> [5181,]  0.8752666116  3.889654e-02  4.998395e-01 #> [5182,]  0.8499588966  2.089833e-02  5.264661e-01 #> [5183,]  0.8863127232  5.137064e-02  4.928211e-01 #> [5184,]  0.8605548143  4.840884e-02  5.000696e-01 #> [5185,]  0.8959924579 -2.682306e-02  4.776686e-01 #> [5186,]  0.8841665983 -8.229397e-02  4.596659e-01 #> [5187,]  0.8691009879 -7.235835e-02  4.934281e-01 #> [5188,]  0.9244284630 -7.109682e-02  4.210871e-01 #> [5189,]  0.8809526563 -9.190911e-02  4.470094e-01 #> [5190,]  0.9170615673 -7.397378e-02  4.310221e-01 #> [5191,]  0.9146469235 -7.531235e-02  4.041481e-01 #> [5192,]  0.9109016657 -7.281869e-02  4.240947e-01 #> [5193,]  0.9291054010 -5.622748e-02  3.901725e-01 #> [5194,]  0.9006893039 -6.493641e-02  4.261891e-01 #> [5195,]  0.9375563264 -6.659482e-02  3.861650e-01 #> [5196,]  0.9111293554 -6.508713e-02  3.963230e-01 #> [5197,]  0.9302677512 -5.756239e-02  3.938893e-01 #> [5198,]  0.9339390397 -4.075354e-02  3.612888e-01 #> [5199,]  0.9349239469 -6.728600e-03  3.736711e-01 #> [5200,]  0.9466321468  3.917213e-02  3.481301e-01 #> [5201,]  0.9235898852  6.063239e-02  3.820469e-01 #> [5202,]  0.9482679963  6.189783e-02  3.526287e-01 #> [5203,]  0.9223476052  9.430889e-02  3.688053e-01 #> [5204,]  0.9432774186  9.934057e-02  3.545716e-01 #> [5205,]  0.9383067489  1.150852e-01  3.323035e-01 #> [5206,]  0.9420567155  1.244822e-01  3.387323e-01 #> [5207,]  0.9480094910  1.372112e-01  3.089097e-01 #> [5208,]  0.9366078973  1.523987e-01  3.265256e-01 #> [5209,]  0.9563995004  1.435185e-01  2.907591e-01 #> [5210,]  0.9449311495  1.498880e-01  2.962108e-01 #> [5211,]  0.9658133984  1.334824e-01  2.674878e-01 #> [5212,]  0.9528028965  1.298744e-01  2.721657e-01 #> [5213,]  0.9689568877  1.111391e-01  2.651258e-01 #> [5214,]  0.9624858499  1.063527e-01  2.579095e-01 #> [5215,]  0.9620313644  9.932462e-02  2.780126e-01 #> [5216,]  0.9679161310  1.007868e-01  2.560936e-01 #> [5217,]  0.9600253105  1.044807e-01  2.749355e-01 #> [5218,]  0.9757437706  8.316818e-02  2.468732e-01 #> [5219,]  0.9607629180  8.150890e-02  2.667723e-01 #> [5220,]  0.9737462997  7.397100e-02  2.567680e-01 #> [5221,]  0.9667084217  4.876047e-02  2.530434e-01 #> [5222,]  0.9798548222 -3.848503e-02  2.318603e-01 #> [5223,]  0.9702536464 -8.290182e-02  2.292676e-01 #> [5224,]  0.9773094058 -6.570228e-02  2.354023e-01 #> [5225,]  0.9764713049 -6.901612e-02  2.226175e-01 #> [5226,]  0.9673596025 -7.980479e-02  2.491637e-01 #> [5227,]  0.9770534039 -8.726212e-02  2.248329e-01 #> [5228,]  0.9636624455 -1.052765e-01  2.435892e-01 #> [5229,]  0.9747828841 -1.050293e-01  2.265622e-01 #> [5230,]  0.9682804346 -8.346340e-02  2.350986e-01 #> [5231,]  0.9788770080 -6.534975e-02  2.278315e-01 #> [5232,]  0.9730906487 -3.859778e-02  2.326822e-01 #> [5233,]  0.9775246978 -2.088373e-02  2.341343e-01 #> [5234,]  0.9780002236  2.024003e-02  2.178470e-01 #> [5235,]  0.9879475832  3.259202e-02  2.004609e-01 #> [5236,]  0.9749280214  3.252624e-02  2.116761e-01 #> [5237,]  0.9764109254  2.925262e-02  2.385071e-01 #> [5238,]  0.9794141650  7.820614e-03  2.242280e-01 #> [5239,]  0.9514937401  2.541142e-02  2.820714e-01 #> [5240,]  0.9859457016  4.503653e-03  2.282085e-01 #> [5241,]  0.9680994749  8.953850e-03  2.271614e-01 #> [5242,]  0.9661794305  1.365766e-02  2.705928e-01 #> [5243,]  0.9747302532 -1.109689e-02  2.432313e-01 #> [5244,]  0.9516194463 -7.075800e-03  2.938637e-01 #> [5245,]  0.9713510871 -2.687626e-02  2.785731e-01 #> [5246,]  0.9394273162 -4.432288e-03  3.143991e-01 #> [5247,]  0.9514268041  1.341774e-02  3.288378e-01 #> [5248,]  0.9643824697  5.778567e-03  2.785441e-01 #> [5249,]  0.9308449030  3.122424e-02  3.382562e-01 #> [5250,]  0.9665427208  2.046014e-02  3.018936e-01 #> [5251,]  0.9502238035  1.792253e-02  2.933261e-01 #> [5252,]  0.9412475228  1.893121e-02  3.368785e-01 #> [5253,]  0.9694027305  1.563054e-03  2.901843e-01 #> [5254,]  0.9221381545  1.991215e-02  3.553852e-01 #> [5255,]  0.9324966669  2.862480e-02  3.793000e-01 #> [5256,]  0.9508203268  2.496341e-02  3.254052e-01 #> [5257,]  0.9156684875  3.310113e-02  3.753211e-01 #> [5258,]  0.9400393963  1.721977e-02  3.642633e-01 #> [5259,]  0.9345079064 -2.044727e-03  3.499031e-01 #> [5260,]  0.9036257267  1.625855e-02  4.126111e-01 #> [5261,]  0.9297512770  2.114489e-02  3.979505e-01 #> [5262,]  0.9124293923  1.413951e-02  4.065163e-01 #> [5263,]  0.8671049476  5.620797e-02  4.846765e-01 #> [5264,]  0.8495269418  9.711874e-02  5.145597e-01 #> [5265,]  0.8609029055  7.003257e-02  5.015278e-01 #> [5266,]  0.9051088095  1.318975e-02  4.523960e-01 #> [5267,]  0.8752283454 -3.719069e-02  4.667316e-01 #> [5268,]  0.8407350183 -2.640186e-02  5.346388e-01 #> [5269,]  0.8629032373  3.373287e-03  5.318337e-01 #> [5270,]  0.8039544821 -1.678372e-02  5.728225e-01 #> [5271,]  0.7717767954 -2.708054e-04  6.313915e-01 #> [5272,]  0.7926805019  3.378583e-02  6.230204e-01 #> [5273,]  0.7325415015  3.245387e-02  6.669729e-01 #> [5274,]  0.6730411649  1.146150e-02  7.345607e-01 #> [5275,]  0.6494154930 -1.131268e-02  7.579235e-01 #> [5276,]  0.6162842512 -8.207787e-03  7.787253e-01 #> [5277,]  0.5792296529  1.950480e-03  8.106635e-01 #> [5278,]  0.5310636759 -9.042390e-03  8.449641e-01 #> [5279,]  0.4820599854 -3.120347e-02  8.672771e-01 #> [5280,]  0.4826048911 -3.200835e-02  8.780536e-01 #> [5281,]  0.3922291994  2.653843e-02  9.085795e-01 #> [5282,]  0.2398242354  6.699745e-02  9.546075e-01 #> [5283,]  0.2748706341  6.894731e-03  9.556211e-01 #> [5284,]  0.3571993709 -5.571794e-02  9.339027e-01 #> [5285,]  0.3794994056 -6.091140e-02  9.235696e-01 #> [5286,]  0.4081838131 -4.848890e-02  9.090695e-01 #> [5287,]  0.4002238810 -4.641026e-02  9.110032e-01 #> [5288,]  0.3638453186 -3.927159e-02  9.228113e-01 #> [5289,]  0.4704942405 -4.573359e-02  8.621154e-01 #> [5290,]  0.6412711740 -5.656489e-02  8.093728e-01 #> [5291,]  0.6055224538 -5.627371e-02  8.152148e-01 #> [5292,]  0.2585039139 -2.280110e-02  8.542145e-01 #> [5293,] -0.1809291393  2.142317e-02  9.311365e-01 #> [5294,] -0.2890343666  2.610440e-02  9.867747e-01 #> [5295,] -0.1838612556 -2.200271e-03  1.021058e+00 #> [5296,]  0.0274861846 -1.953625e-02  1.018892e+00 #> [5297,]  0.4306196272 -2.264038e-02  9.276445e-01 #> [5298,]  0.4819756746 -5.552092e-03  8.618779e-01 #> [5299,]  0.0444118865 -2.631790e-02  9.225485e-01 #> [5300,] -0.3325846195 -8.798367e-02  9.384620e-01 #> [5301,] -0.3035575449 -7.735987e-02  9.810075e-01 #> [5302,] -0.1542572528 -5.243695e-02  1.011751e+00 #> [5303,] -0.3311169147 -9.496700e-03  9.268372e-01 #> [5304,] -0.3970824480  3.841280e-02  9.223046e-01 #> [5305,] -0.1227387935 -1.483173e-02  1.017275e+00 #> [5306,]  0.2223589569 -2.011154e-02  1.028487e+00 #> [5307,]  0.4860285223  2.195063e-02  8.590634e-01 #> [5308,]  0.3495453000 -2.451771e-02  8.534405e-01 #> [5309,] -0.1413386464 -5.020466e-02  9.667752e-01 #> [5310,] -0.3815884292 -2.684614e-02  9.464396e-01 #> [5311,] -0.2303332090 -6.747885e-03  9.889806e-01 #> [5312,] -0.1758200973 -1.422129e-02  9.941392e-01 #> [5313,]  0.0206144694 -3.664665e-02  9.944826e-01 #> [5314,]  0.4358976185  3.015532e-02  9.498307e-01 #> [5315,]  0.5042295456  4.011140e-02  8.386401e-01 #> [5316,]  0.1345153153 -3.458155e-02  9.484794e-01 #> [5317,] -0.2842766047 -8.392161e-02  9.623445e-01 #> [5318,] -0.4004686177 -1.208109e-01  8.821586e-01 #> [5319,] -0.3384081125 -1.350874e-01  9.450988e-01 #> [5320,] -0.3405828774 -7.534130e-02  9.578031e-01 #> [5321,] -0.2277217209 -9.467765e-03  9.754975e-01 #> [5322,]  0.0106129833 -3.964641e-02  1.029934e+00 #> [5323,]  0.3579734564 -9.467976e-02  9.577520e-01 #> [5324,]  0.5801384449 -3.683875e-02  8.386242e-01 #> [5325,]  0.1979859769 -5.508544e-02  8.705725e-01 #> [5326,] -0.2823432982 -1.461951e-01  9.201136e-01 #> [5327,] -0.3097347021 -7.937442e-02  9.819778e-01 #> [5328,] -0.2677424252 -4.476781e-02  9.816918e-01 #> [5329,] -0.2978155017 -1.348572e-01  9.504622e-01 #> [5330,] -0.2630023360 -1.168070e-01  9.807391e-01 #> [5331,] -0.2804124057 -4.040704e-02  9.647271e-01 #> [5332,] -0.1390591264 -1.371117e-02  9.790557e-01 #> [5333,]  0.2629463971  3.141325e-02  1.000277e+00 #> [5334,]  0.5365761518 -5.057717e-04  8.952632e-01 #> [5335,]  0.2400709242 -5.942641e-02  8.621517e-01 #> [5336,] -0.1992115080 -1.141666e-01  9.476073e-01 #> [5337,] -0.3386653960 -1.133687e-01  9.378620e-01 #> [5338,] -0.2971174419 -1.962339e-02  9.695079e-01 #> [5339,] -0.0415295586 -6.565339e-02  1.052467e+00 #> [5340,]  0.3133709431 -9.718826e-02  9.697227e-01 #> [5341,]  0.5405439734 -2.120363e-03  8.250031e-01 #> [5342,]  0.2698689401  9.571650e-03  8.785654e-01 #> [5343,] -0.2053472251 -4.815231e-02  9.795124e-01 #> [5344,] -0.3206135631 -5.814876e-02  9.727269e-01 #> [5345,] -0.2913221717 -7.688263e-02  9.456081e-01 #> [5346,] -0.2416020185 -1.049925e-01  9.741256e-01 #> [5347,] -0.1165968031 -9.746381e-02  9.989673e-01 #> [5348,]  0.1521465629 -1.990017e-02  9.928452e-01 #> [5349,]  0.5088185668 -1.055393e-03  9.311983e-01 #> [5350,]  0.4730829895 -5.620654e-02  8.585486e-01 #> [5351,]  0.0204597749 -7.867158e-02  9.059810e-01 #> [5352,] -0.2974643707 -2.092477e-02  9.500551e-01 #> [5353,] -0.3504637778  3.691358e-02  9.520908e-01 #> [5354,] -0.3408650756 -6.750077e-02  9.625057e-01 #> [5355,] -0.2638252079 -1.753489e-01  9.641218e-01 #> [5356,] -0.1695188880 -7.783253e-02  9.864632e-01 #> [5357,]  0.0774755701  1.993939e-02  1.032591e+00 #> [5358,]  0.4592615962 -4.127763e-02  9.093555e-01 #> [5359,]  0.4649185836 -1.672607e-02  8.315656e-01 #> [5360,] -0.0167013444 -5.224238e-02  9.237446e-01 #> [5361,] -0.3001058400 -1.167717e-01  9.537299e-01 #> [5362,] -0.2614943981 -1.099526e-01  9.828666e-01 #> [5363,] -0.1772223860 -6.205834e-02  1.014897e+00 #> [5364,]  0.1693057418 -1.174883e-01  9.889725e-01 #> [5365,]  0.5405151844 -1.233882e-01  8.643148e-01 #> [5366,]  0.3647342622  5.210351e-03  8.411061e-01 #> [5367,] -0.1104361489 -1.451629e-02  9.628384e-01 #> [5368,] -0.2926968634 -8.967128e-02  1.009783e+00 #> [5369,] -0.3336249292 -8.630958e-02  9.390737e-01 #> [5370,] -0.4408122897 -6.744772e-03  8.711969e-01 #> [5371,] -0.3561942875 -4.137253e-02  9.443563e-01 #> [5372,] -0.1521694213 -7.651381e-02  1.028675e+00 #> [5373,] -0.1180294380  6.350102e-02  9.784951e-01 #> [5374,] -0.0915994346  1.829493e-01  9.684017e-01 #> [5375,] -0.0309799351  8.418348e-02  1.008599e+00 #> [5376,] -0.1892178655  6.202800e-02  9.375138e-01 #> [5377,] -0.2429801077  4.647589e-02  9.470798e-01 #> [5378,]  0.1230147332 -4.391434e-02  1.038090e+00 #> [5379,]  0.2418335378 -5.077289e-02  1.013932e+00 #> [5380,] -0.0253202766 -1.559120e-01  9.585540e-01 #> [5381,] -0.1987018287 -2.382141e-01  8.978800e-01 #> [5382,] -0.3342266679 -1.311363e-01  8.849506e-01 #> [5383,] -0.3688789010 -1.040627e-01  9.393812e-01 #> [5384,] -0.3322804570 -1.569713e-01  9.586236e-01 #> [5385,] -0.3372231126 -1.438973e-01  9.424312e-01 #> [5386,] -0.3287953734 -1.239120e-01  9.365185e-01 #> [5387,] -0.3209627271 -1.155135e-01  9.514928e-01 #> [5388,] -0.3038335741 -1.139695e-01  9.636557e-01 #> [5389,] -0.2799043357 -1.056627e-01  9.658629e-01 #> [5390,] -0.2673927844 -7.988857e-02  9.678225e-01 #> [5391,] -0.2473336458 -7.477533e-02  9.725943e-01 #> [5392,] -0.2350721955 -8.919457e-02  9.709851e-01 #> [5393,] -0.2341965586 -9.250697e-02  9.688753e-01 #> [5394,] -0.2119564861 -7.996480e-02  9.842039e-01 #> [5395,] -0.1726258248 -7.894927e-02  9.981829e-01 #> [5396,] -0.1432183236 -8.831687e-02  9.908547e-01 #> [5397,] -0.1215093732 -7.145707e-02  9.839883e-01 #> [5398,] -0.0993957967 -4.720886e-02  9.930247e-01 #> [5399,] -0.0769825578 -5.270037e-02  1.002874e+00 #> [5400,] -0.0524358228 -6.390508e-02  1.005592e+00 #> [5401,] -0.0291382503 -6.029090e-02  1.001988e+00 #> [5402,] -0.0154046826 -5.334994e-02  9.945201e-01 #> [5403,] -0.0116469162 -5.252775e-02  9.948161e-01 #> [5404,] -0.0133861238 -5.812082e-02  1.003266e+00 #> [5405,] -0.0127872704 -6.528006e-02  1.003832e+00 #> [5406,] -0.0058057210 -5.692506e-02  9.946560e-01 #> [5407,]  0.0043208404 -3.770754e-02  9.922056e-01 #> [5408,]  0.0161239132 -2.591809e-02  9.994112e-01 #> [5409,]  0.0324389711 -2.116294e-02  1.006330e+00 #> [5410,]  0.0487536117 -2.124967e-02  1.004632e+00 #> [5411,]  0.0522647947 -3.377852e-02  9.924292e-01 #> [5412,]  0.1107556745 -9.750050e-03  1.001273e+00 #> [5413,]  0.0624481402 -2.157051e-02  9.852925e-01 #> [5414,] -0.1320490837 -2.190796e-01  9.354285e-01 #> [5415,] -0.1822869778 -2.868344e-01  9.398836e-01 #> [5416,] -0.2410474569 -1.395182e-01  9.604140e-01 #> [5417,] -0.3324064612 -5.684860e-02  9.507398e-01 #> [5418,] -0.3583625257 -5.248017e-02  9.260308e-01 #> [5419,] -0.3560575247 -5.564816e-02  9.290248e-01 #> [5420,] -0.3051741421 -2.906629e-02  9.644645e-01 #> [5421,] -0.2262368798 -7.080166e-03  9.891336e-01 #> [5422,] -0.1459718347  4.745465e-04  9.951031e-01 #> [5423,] -0.0730214864  7.209595e-03  1.001642e+00 #> [5424,] -0.0107192891  6.983242e-03  1.004605e+00 #> [5425,]  0.0252653155  7.390615e-03  1.003225e+00 #> [5426,]  0.0455737486 -1.446743e-03  9.993821e-01 #> [5427,]  0.0677730292  1.192024e-02  9.944025e-01 #> [5428,]  0.1658290923  4.541238e-02  9.977046e-01 #> [5429,]  0.2009599209  2.034453e-02  9.794694e-01 #> [5430,]  0.1805993170  3.164045e-02  9.789761e-01 #> [5431,]  0.2251482457  5.997019e-02  9.722263e-01 #> [5432,]  0.1844665408  4.867867e-02  9.671991e-01 #> [5433,]  0.1859688908  3.964442e-02  9.809597e-01 #> [5434,]  0.1670818925  2.311704e-02  9.779683e-01 #> [5435,]  0.1680249274  2.364236e-02  1.001356e+00 #> [5436,]  0.1358734369  3.916804e-04  9.819626e-01 #> [5437,]  0.0537920035 -1.368219e-02  9.727672e-01 #> [5438,]  0.0859868675 -1.285210e-02  9.929464e-01 #> [5439,]  0.0378716998 -1.448089e-02  9.982944e-01 #> [5440,] -0.0412252843  1.387712e-02  9.902603e-01 #> [5441,] -0.0707243681  2.675854e-02  9.890711e-01 #> [5442,] -0.0739545226  7.501529e-03  9.981609e-01 #> [5443,] -0.0582236685  3.413819e-02  1.003273e+00 #> [5444,] -0.0466705114  2.609129e-02  1.002314e+00 #> [5445,] -0.0568015352  2.150843e-02  9.871681e-01 #> [5446,] -0.0505836532  5.054403e-02  1.018080e+00 #> [5447,]  0.0444999635  1.194796e-02  1.013545e+00 #> [5448,]  0.1817837358 -2.776420e-03  9.682642e-01 #> [5449,]  0.3586656749 -1.051034e-02  9.551199e-01 #> [5450,]  0.5442892909 -4.748045e-02  8.446770e-01 #> [5451,]  0.3970584869 -4.568013e-02  8.502853e-01 #> [5452,] -0.0891367644 -1.701073e-02  9.581096e-01 #> [5453,] -0.3496123850  3.491991e-02  9.564351e-01 #> [5454,] -0.2980612218  2.116531e-02  9.764130e-01 #> [5455,] -0.2951337695 -6.321581e-02  9.439085e-01 #> [5456,] -0.3209140301 -5.292070e-02  9.314784e-01 #> [5457,] -0.3214803040 -1.640891e-02  9.684486e-01 #> [5458,] -0.3031609356 -3.383310e-02  9.827456e-01 #> [5459,] -0.1860370487 -3.194355e-02  9.955110e-01 #> [5460,]  0.1068959683 -2.898804e-02  1.004036e+00 #> [5461,]  0.4704546332 -6.440156e-02  8.862435e-01 #> [5462,]  0.4096854925 -3.296191e-02  8.537605e-01 #> [5463,] -0.0666339919 -4.695359e-02  9.732444e-01 #> [5464,] -0.3827129006 -5.217530e-02  9.362823e-01 #> [5465,] -0.3701107204  5.286406e-02  9.132374e-01 #> [5466,] -0.2236243486  5.631340e-02  1.004668e+00 #> [5467,] -0.1663925052 -5.916556e-03  9.963318e-01 #> [5468,] -0.0232301299  1.474827e-02  9.964831e-01 #> [5469,]  0.3485799134  9.234995e-03  9.946690e-01 #> [5470,]  0.4945605695 -5.152666e-02  8.632820e-01 #> [5471,]  0.1591689587 -2.198495e-02  8.863590e-01 #> [5472,] -0.2412305176  4.255160e-02  9.709278e-01 #> [5473,] -0.3882767856  1.435068e-02  9.475214e-01 #> [5474,] -0.4326952100  2.110653e-02  9.058567e-01 #> [5475,] -0.2955718637  3.685684e-02  9.619575e-01 #> [5476,] -0.0602591373  5.451989e-04  1.030543e+00 #> [5477,]  0.0867717639 -8.252024e-03  9.862241e-01 #> [5478,]  0.4025712013 -7.235034e-03  9.439597e-01 #> [5479,]  0.4859837294 -2.264278e-02  8.847677e-01 #> [5480,]  0.0537581109 -5.980752e-02  8.930700e-01 #> [5481,] -0.1621192098 -1.023318e-01  1.001788e+00 #> [5482,] -0.1675170660 -1.320071e-01  9.814166e-01 #> [5483,] -0.2839557528 -9.860448e-02  9.397444e-01 #> [5484,] -0.2841027975 -7.714139e-02  9.773296e-01 #> [5485,] -0.3038465381 -3.177559e-02  9.656907e-01 #> [5486,] -0.2343943119 -2.982106e-03  9.829848e-01 #> [5487,] -0.1226113588 -1.282870e-02  9.908027e-01 #> [5488,] -0.1964993030  1.993302e-02  9.823347e-01 #> [5489,] -0.1920555681  2.720826e-02  9.896553e-01 #> [5490,]  0.0669563040  1.440935e-02  1.003234e+00 #> [5491,]  0.3953138888  2.258927e-02  9.655164e-01 #> [5492,]  0.4386096299 -5.034880e-03  8.880387e-01 #> [5493,]  0.0499191396 -5.693635e-02  8.914643e-01 #> [5494,] -0.3403301537 -4.406435e-02  9.367108e-01 #> [5495,] -0.3816000521 -5.891887e-02  9.721020e-01 #> [5496,] -0.2579686344 -6.372858e-02  9.859825e-01 #> [5497,] -0.2827036977 -6.313292e-03  9.448683e-01 #> [5498,] -0.2402485311 -5.862828e-03  9.693092e-01 #> [5499,]  0.0533454977  4.395515e-03  1.032292e+00 #> [5500,]  0.4166152775 -1.312566e-02  9.355416e-01 #> [5501,]  0.6343998909 -2.431554e-02  7.922471e-01 #> [5502,]  0.3336203396 -3.521024e-02  8.554814e-01 #> [5503,] -0.1768170297 -1.124150e-01  9.557176e-01 #> [5504,] -0.4037815034 -8.260763e-02  9.085200e-01 #> [5505,] -0.3575488031 -4.989040e-02  9.470592e-01 #> [5506,] -0.1540962458 -2.890350e-02  1.027317e+00 #> [5507,]  0.0875166953  1.893360e-02  1.006084e+00 #> [5508,]  0.4378092587 -6.535947e-03  9.320798e-01 #> [5509,]  0.5174673200  6.126212e-05  8.355410e-01 #> [5510,]  0.0767610222 -4.156980e-03  9.063895e-01 #> [5511,] -0.2335824668 -7.094467e-02  1.010095e+00 #> [5512,] -0.3120971918 -8.537818e-02  9.414141e-01 #> [5513,] -0.3170722127 -2.225194e-02  9.298359e-01 #> [5514,] -0.1991744339  1.037562e-02  9.990494e-01 #> [5515,] -0.2183496356 -1.864157e-02  9.953139e-01 #> [5516,] -0.1536290050 -2.637712e-02  9.905912e-01 #> [5517,]  0.1786645800 -8.626738e-03  1.035728e+00 #> [5518,]  0.4627221227 -5.133796e-02  8.811736e-01 #> [5519,]  0.3331248164 -9.212608e-02  9.357032e-01 #>  #> $A$sampling #> [1] \"regular\" #>  #> $A$sampling_rate #> [1] 1 #>  #> $A$sampling_rate_unit #> [1] \"Hz\" #>  #> $A$depid #> [1] \"md13_134a\" #>  #> $A$creation_date #> [1] \"2023-07-05 14:58:20.230638\" #>  #> $A$history #> [1] \"sens_struct\" #>  #> $A$full_name #> [1] \"Acceleration\" #>  #> $A$description #> [1] \"triaxial acceleration\" #>  #> $A$unit #> [1] \"m/s2\" #>  #> $A$unit_name #> [1] \"meters per seconds squared\" #>  #> $A$unit_label #> [1] \"m/s^2\" #>  #> $A$start_offset #> [1] 0 #>  #> $A$start_offset_units #> [1] \"second\" #>  #> $A$column_name #> [1] \"x,y,z\" #>  #> $A$frame #> [1] \"animal\" #>  #> $A$axes #> [1] \"FRU\" #>  #>  #> $M #> $M$data #>                  [,1]          [,2]         [,3] #>    [1,] -18.980178833 -19.186439514 -26.39507294 #>    [2,] -24.497909546 -19.569362640 -19.59182930 #>    [3,] -29.699720383 -19.676378250  -8.32532978 #>    [4,] -29.905435562 -17.905479431 -10.99927711 #>    [5,] -22.435281754 -13.648493767 -26.25255013 #>    [6,] -16.978519440  -8.123796463 -33.11289597 #>    [7,] -19.895647049  -7.187590122 -30.70389175 #>    [8,] -23.279432297  -8.592235565 -28.13612938 #>    [9,] -23.385520935  -8.380352974 -27.88320923 #>   [10,] -24.662908554  -9.226408958 -26.24790382 #>   [11,] -26.769842148 -11.498377800 -23.51568222 #>   [12,] -29.545234680 -14.162784576 -16.19152260 #>   [13,] -31.675952911 -16.232353210  -9.20614052 #>   [14,] -27.694723129 -17.138935089 -16.43679237 #>   [15,] -19.934516907 -17.186796188 -27.00517464 #>   [16,] -16.694671631 -14.306334496 -30.42680359 #>   [17,] -17.457929611 -11.565312386 -31.14449310 #>   [18,] -16.437837601 -10.911866188 -32.20844650 #>   [19,] -19.070203781  -9.200855255 -30.89186668 #>   [20,] -24.373710632  -8.303398132 -27.11083221 #>   [21,] -25.483146667  -7.197354317 -26.19741440 #>   [22,] -26.760084152  -5.986507416 -25.30917168 #>   [23,] -30.858381271  -5.453839302 -19.40785217 #>   [24,] -34.816631317  -4.155841827 -11.05144596 #>   [25,] -34.047046661  -2.728410244 -13.03357792 #>   [26,] -27.287887573  -2.832321882 -24.84609985 #>   [27,] -22.303693771  -3.648725271 -30.30823708 #>   [28,] -22.049476624  -3.691834450 -29.89303589 #>   [29,] -21.102323532  -3.852070808 -30.92364502 #>   [30,] -22.143062592  -3.746211290 -29.97996521 #>   [31,] -27.429031372  -4.609778881 -24.54488945 #>   [32,] -31.127063751  -6.776575089 -19.18367195 #>   [33,] -33.932365417  -7.938790321 -10.62947750 #>   [34,] -34.745193481  -8.533712387  -7.39811277 #>   [35,] -29.429988861  -9.240017891 -19.23651886 #>   [36,] -24.932224274  -7.813160419 -27.37872124 #>   [37,] -21.527244568  -6.286049366 -29.70355225 #>   [38,] -18.627876282  -6.335749626 -32.18384933 #>   [39,] -22.123418808  -5.773568153 -29.50881958 #>   [40,] -26.104530334  -5.277702332 -26.25233459 #>   [41,] -28.945858002  -5.275353432 -22.60179901 #>   [42,] -33.438629150  -5.305410862 -13.73290443 #>   [43,] -35.726337433  -4.335099220  -8.27469063 #>   [44,] -31.923503876  -2.241570950 -16.84468079 #>   [45,] -26.455089569  -0.005560186 -26.82063866 #>   [46,] -23.140375137   0.895976663 -29.38568115 #>   [47,] -19.382228851   1.193725824 -32.23957443 #>   [48,] -22.143777847   1.172120690 -30.00091743 #>   [49,] -28.630365372   0.053122677 -23.90800476 #>   [50,] -31.134868622   1.695008039 -20.13239861 #>   [51,] -34.007572174   4.414733410 -12.45259571 #>   [52,] -35.284233093   5.303063869  -9.52314091 #>   [53,] -29.362178802   8.096346855 -20.14039993 #>   [54,] -23.610811234  11.828513145 -27.11647224 #>   [55,] -22.299013138  12.548585892 -27.24939537 #>   [56,] -19.354564667  11.584811211 -30.04786110 #>   [57,] -19.660568237  10.823338509 -30.18863869 #>   [58,] -24.807075500  11.324908257 -25.55769157 #>   [59,] -28.422971725  12.963380814 -20.29164696 #>   [60,] -30.750778198  14.642439842 -13.84725189 #>   [61,] -31.182636261  16.118574142 -11.95205593 #>   [62,] -25.852272034  16.747989655 -20.42613602 #>   [63,] -18.359127045  15.053614616 -29.45849228 #>   [64,] -16.637704849  13.153888702 -31.22548485 #>   [65,] -18.787925720  13.578173637 -29.61096954 #>   [66,] -17.491384506  14.686709404 -30.02880096 #>   [67,] -17.198511124  13.992078781 -30.43002892 #>   [68,] -21.558082581  12.577907562 -27.95833969 #>   [69,] -24.553806305  12.508445740 -25.38649750 #>   [70,] -28.292596817  12.114958763 -20.71068573 #>   [71,] -32.654975891  11.046130180 -12.83064175 #>   [72,] -34.475292206  10.257996559  -7.97299242 #>   [73,] -32.086647034   9.567536354 -14.70569992 #>   [74,] -25.187435150   9.242785454 -26.16022873 #>   [75,] -19.195819855   9.788839340 -31.01103973 #>   [76,] -17.955928802  11.034164429 -31.17009163 #>   [77,] -21.699365616  11.883537292 -28.23166656 #>   [78,] -26.003232956  12.218471527 -23.73834610 #>   [79,] -27.118564606  12.495532036 -22.27777290 #>   [80,] -27.570297241  13.401209831 -21.20125580 #>   [81,] -30.700716019  16.073799133 -12.04903698 #>   [82,] -30.132009506  18.731964111  -9.88312435 #>   [83,] -21.967195511  19.334716797 -22.48044395 #>   [84,] -17.621019363  17.987806320 -28.63211632 #>   [85,] -17.944908142  15.831708908 -28.78384781 #>   [86,] -15.289566040  15.015635490 -31.16483116 #>   [87,] -13.967074394  14.420297623 -32.17092896 #>   [88,] -18.468835831  11.962040901 -30.42018318 #>   [89,] -18.965934753  11.083924294 -30.58618546 #>   [90,] -15.460082054   7.996562958 -33.59389496 #>   [91,] -20.101051331   1.070634842 -31.53979111 #>   [92,] -25.333484650  -2.877438784 -27.54147148 #>   [93,] -24.955148697  -3.504588366 -27.48937225 #>   [94,] -25.403713226  -3.775198698 -27.14378357 #>   [95,] -28.534191132  -4.200693130 -23.34835434 #>   [96,] -31.928768158  -4.198651314 -18.01498032 #>   [97,] -33.244560242  -5.951651573 -14.56763268 #>   [98,] -34.139522552  -8.907657623  -9.48975754 #>   [99,] -33.934028625 -11.224345207  -7.90760040 #>  [100,] -27.731966019 -13.419416428 -19.15631485 #>  [101,] -22.494194031 -14.156865120 -26.94193077 #>  [102,] -22.284751892 -13.970219612 -26.48195076 #>  [103,] -17.043842316 -14.478337288 -30.00611115 #>  [104,] -13.782692909 -15.816985130 -31.52651787 #>  [105,] -20.255449295 -16.714471817 -26.23051643 #>  [106,] -23.275484085 -16.859712601 -24.10721016 #>  [107,] -23.636154175 -18.873788834 -21.19782639 #>  [108,] -27.433055878 -21.395235062 -11.98151016 #>  [109,] -26.579082489 -22.525279999 -11.91549397 #>  [110,] -17.791244507 -22.358922958 -23.45957184 #>  [111,] -12.066056252 -20.388975143 -29.87120628 #>  [112,] -14.319191933 -17.851121902 -29.69226265 #>  [113,] -15.866315842 -16.863248825 -29.69600677 #>  [114,] -14.405316353 -17.072525024 -30.36944008 #>  [115,] -15.490095139 -16.854595184 -29.86348724 #>  [116,] -18.967849731 -16.267213821 -27.91174889 #>  [117,] -21.411836624 -15.907951355 -26.24057579 #>  [118,] -23.541730881 -16.424654007 -23.59069824 #>  [119,] -26.010015488 -16.730661392 -20.42247963 #>  [120,] -26.640249252 -17.756757736 -18.83930206 #>  [121,] -27.897190094 -20.183357239 -12.16633320 #>  [122,] -28.703620911 -21.645715714  -7.88892937 #>  [123,] -21.875085831 -21.919057846 -18.96987915 #>  [124,] -15.018800735 -20.125745773 -28.73091125 #>  [125,] -15.938782692 -17.428094864 -29.08374596 #>  [126,] -17.147348404 -16.803297043 -28.88281250 #>  [127,] -13.179371834 -17.146696091 -30.90389824 #>  [128,] -11.929141998 -15.768656731 -32.28968811 #>  [129,] -17.038009644 -13.533438683 -30.61571503 #>  [130,] -19.697784424 -12.604020119 -29.40110970 #>  [131,] -19.281290054 -11.554589272 -30.10788918 #>  [132,] -21.841987610 -10.227912903 -28.57132912 #>  [133,] -25.123010635  -9.658274651 -25.85053444 #>  [134,] -25.860969543 -10.007973671 -24.80073166 #>  [135,] -27.071115494  -9.599970818 -23.47034454 #>  [136,] -29.124599457 -10.384954453 -20.70373344 #>  [137,] -31.817317963 -12.697112083 -12.59645557 #>  [138,] -33.820167542 -12.132277489  -7.53498840 #>  [139,] -29.298854828 -10.204291344 -18.56896400 #>  [140,] -24.069669724  -8.379761696 -28.02361298 #>  [141,] -23.953018188  -6.203319073 -27.88327408 #>  [142,] -21.336353302  -5.976846695 -30.12828636 #>  [143,] -19.499198914  -5.996492863 -31.70079613 #>  [144,] -23.268384933  -5.144373894 -28.78253555 #>  [145,] -25.595142365  -5.083691120 -26.67830849 #>  [146,] -27.176115036  -4.866919518 -25.04398346 #>  [147,] -31.187870026  -4.041055679 -19.28530693 #>  [148,] -34.922893524  -4.040025711 -10.39301682 #>  [149,] -34.696147919  -4.669787884 -10.73683739 #>  [150,] -28.533981323  -3.969110966 -22.83219528 #>  [151,] -23.603849411  -2.446221590 -29.42762184 #>  [152,] -22.982736588  -1.413478494 -29.40661049 #>  [153,] -19.789289474  -1.824713111 -31.92770958 #>  [154,] -19.927585602  -2.323848963 -31.79078674 #>  [155,] -23.591028214  -2.114618063 -29.04358101 #>  [156,] -20.029542923  -2.330146313 -31.63403511 #>  [157,] -18.989639282  -2.583933353 -32.44438934 #>  [158,] -25.056497574  -1.824238658 -27.60187912 #>  [159,] -27.883361816   0.274525315 -24.73421478 #>  [160,] -28.506008148   0.995427787 -23.77168846 #>  [161,] -30.951869965   1.076392055 -20.46475220 #>  [162,] -34.107379913   3.027508736 -12.57268429 #>  [163,] -36.043827057   4.979222775  -6.76177073 #>  [164,] -31.704891205  10.990396500 -13.52215576 #>  [165,] -22.865232468  18.097396851 -23.81584930 #>  [166,] -17.245996475  17.926332474 -28.49618912 #>  [167,] -11.731347084  16.840135574 -31.57099915 #>  [168,]  -9.060902596  19.869813919 -31.00649834 #>  [169,] -11.336899757  22.415464401 -28.33251953 #>  [170,] -12.917373657  24.552724838 -25.30923462 #>  [171,] -12.633805275  26.158504486 -23.85221100 #>  [172,] -12.289333344  26.308555603 -23.65293121 #>  [173,] -13.999633789  27.154232025 -21.78209877 #>  [174,] -15.090836525  27.458671570 -20.49645996 #>  [175,] -19.135272980  27.636940002 -15.46115494 #>  [176,] -18.353006363  27.486145020 -17.59221268 #>  [177,]  -4.747302055  27.486600876 -25.29158211 #>  [178,]   8.600187302  27.072143555 -26.09646225 #>  [179,]   9.683525085  20.896369934 -29.95403671 #>  [180,]   8.787096024  12.194394112 -35.46198654 #>  [181,]   9.974009514   6.567060947 -36.47145844 #>  [182,]   9.886974335   2.196476936 -36.85086441 #>  [183,]  10.284609795  -0.601612747 -36.89916229 #>  [184,]   9.968988419  -2.128766298 -36.82948685 #>  [185,]   9.633855820  -2.975902081 -36.80936813 #>  [186,]  10.866307259  -3.814905643 -36.32820129 #>  [187,]  10.960712433  -4.812403202 -36.14718628 #>  [188,]  11.002541542  -6.754908562 -35.80215073 #>  [189,]  10.360844612  -9.107967377 -35.41151810 #>  [190,]  10.906221390 -12.009172440 -34.26744843 #>  [191,]  10.870491982 -13.103398323 -33.92829514 #>  [192,]  10.470805168 -13.876219749 -33.61940002 #>  [193,]  11.307695389 -15.329237938 -32.72616577 #>  [194,]  10.650582314 -16.415122986 -32.36216354 #>  [195,]  10.244916916 -16.797315598 -32.23564148 #>  [196,]   9.393335342 -17.383689880 -32.09240341 #>  [197,]  10.243960381 -18.077714920 -31.42785645 #>  [198,]   9.626564026 -18.150783539 -31.50479126 #>  [199,]  10.486841202 -18.601196289 -30.89167023 #>  [200,]  10.007465363 -17.877761841 -31.44319153 #>  [201,]  10.484807014 -17.876953125 -31.26103783 #>  [202,]  10.465405464 -18.188142776 -31.07251358 #>  [203,]  10.045289040 -18.505592346 -30.98354721 #>  [204,]  10.928932190 -18.888935089 -30.46557808 #>  [205,]  10.113348007 -19.212522507 -30.49263191 #>  [206,]  11.053091049 -19.541164398 -29.94033432 #>  [207,]  10.346065521 -19.833580017 -29.98329926 #>  [208,]  11.113976479 -20.506223679 -29.19681549 #>  [209,]  10.554657936 -18.959936142 -30.31820869 #>  [210,]  10.162777901 -16.969682693 -31.69344711 #>  [211,]  10.488060951 -15.438447952 -32.26908493 #>  [212,]   9.721049309 -14.433612823 -32.95814514 #>  [213,]  11.698899269 -14.448618889 -32.30775833 #>  [214,]  10.123268127 -14.592926025 -32.75439072 #>  [215,]   9.144083023 -16.091222763 -32.35285950 #>  [216,]  11.317695618 -18.184047699 -30.51655006 #>  [217,]  11.683686256 -20.141469955 -29.14573860 #>  [218,]  11.716250420 -22.375076294 -27.45526886 #>  [219,]  11.986571312 -24.221714020 -25.76757812 #>  [220,]  12.046895981 -24.854333878 -25.12697411 #>  [221,]  12.383914948 -24.739164352 -25.04821777 #>  [222,]  12.768661499 -24.592756271 -24.97470856 #>  [223,]  12.805644035 -24.444932938 -25.10185432 #>  [224,]  12.237061501 -23.945405960 -25.83688164 #>  [225,]  11.676733017 -23.074985504 -26.86674309 #>  [226,]  11.426111221 -21.900297165 -27.92122459 #>  [227,]  11.073752403 -20.558855057 -29.03653526 #>  [228,]  10.887086868 -19.437644958 -29.85484505 #>  [229,]  10.790937424 -18.597105026 -30.40675545 #>  [230,]  10.671374321 -17.817884445 -30.90894318 #>  [231,]  10.553503036 -16.618053436 -31.59618187 #>  [232,]  10.226043701 -15.017032623 -32.48154449 #>  [233,]   9.842288971 -13.871871948 -33.10555649 #>  [234,]   9.739044189 -12.975923538 -33.47827911 #>  [235,]   9.632361412 -11.935625076 -33.88213348 #>  [236,]   9.519358635 -11.510530472 -34.06345749 #>  [237,]   9.707913399 -11.762912750 -33.92798615 #>  [238,]   9.894929886 -12.141782761 -33.74496841 #>  [239,]   9.954884529 -12.904808044 -33.46012115 #>  [240,]  10.405712128 -14.407987595 -32.69966507 #>  [241,]  11.179801941 -15.970385551 -31.71590805 #>  [242,]  11.415690422 -16.725383759 -31.25809097 #>  [243,]  11.186296463 -17.015089035 -31.19521523 #>  [244,]  11.258354187 -17.521039963 -30.89276886 #>  [245,]  11.476693153 -18.083793640 -30.49435425 #>  [246,]  11.528997421 -18.806684494 -30.04974937 #>  [247,]  11.623876572 -19.894134521 -29.30975151 #>  [248,]  12.005527496 -20.937845230 -28.42615509 #>  [249,]  12.288939476 -21.307626724 -28.04233551 #>  [250,]  12.283151627 -20.986988068 -28.26957321 #>  [251,]  12.484426498 -20.482206345 -28.55888939 #>  [252,]  12.480501175 -19.589820862 -29.17694473 #>  [253,]  12.245829582 -18.303899765 -30.06817627 #>  [254,]  12.126795769 -17.103580475 -30.81990242 #>  [255,]  11.948658943 -16.007040024 -31.47900581 #>  [256,]  11.922367096 -15.301674843 -31.82379532 #>  [257,]  11.756353378 -15.078610420 -31.99852371 #>  [258,]  11.322604179 -14.689617157 -32.35879898 #>  [259,]  11.093264580 -14.041060448 -32.72297287 #>  [260,]  11.045584679 -13.330962181 -33.02280807 #>  [261,]  10.850622177 -12.465860367 -33.43048477 #>  [262,]  10.638214111 -11.408686638 -33.87732697 #>  [263,]  10.644814491 -10.368358612 -34.21321106 #>  [264,]  10.633338928  -9.804052353 -34.37541199 #>  [265,]  10.439702988  -9.814324379 -34.43052673 #>  [266,]  10.286546707 -10.017293930 -34.44641876 #>  [267,]  10.221364021  -9.922039032 -34.50228882 #>  [268,]  10.241727829  -9.416962624 -34.62430573 #>  [269,]  10.328475952  -9.282574654 -34.63793945 #>  [270,]  10.447443962  -9.666481972 -34.50688171 #>  [271,]  10.674207687 -10.068508148 -34.32517624 #>  [272,]  10.886031151 -10.804568291 -34.03424072 #>  [273,]  11.041816711 -12.105093002 -33.55272675 #>  [274,]  10.788017273 -13.241214752 -33.23146439 #>  [275,]  10.508987427 -13.735326767 -33.12057495 #>  [276,]  10.667428970 -13.930766106 -32.98205566 #>  [277,]  10.734160423 -13.642292976 -33.08430481 #>  [278,]  10.575324059 -12.596873283 -33.54432678 #>  [279,]  10.502643585 -11.278820038 -34.03946304 #>  [280,]  10.550900459 -10.133522987 -34.37446213 #>  [281,]  10.581087112  -9.349925995 -34.59251404 #>  [282,]  10.651127815  -9.002028465 -34.68716049 #>  [283,]  10.638357162  -9.051593781 -34.66375732 #>  [284,]  10.577945709  -9.574833870 -34.54083252 #>  [285,]  10.649193764 -10.774455070 -34.18436050 #>  [286,]  10.908638000 -12.254663467 -33.60076523 #>  [287,]  11.155438423 -13.059912682 -33.21104431 #>  [288,]  11.125491142 -13.684514999 -32.97922897 #>  [289,]  10.967644691 -14.984429359 -32.48418427 #>  [290,]  10.798375130 -16.426321030 -31.83312988 #>  [291,]  10.976424217 -17.575588226 -31.14726257 #>  [292,]  11.397405624 -18.241365433 -30.64541817 #>  [293,]  11.405792236 -18.186180115 -30.67497635 #>  [294,]  11.336965561 -17.506486893 -31.07289314 #>  [295,]  11.395546913 -16.407939911 -31.65402603 #>  [296,]  11.232266426 -15.204954147 -32.30643845 #>  [297,]  10.964115143 -14.170799255 -32.86033249 #>  [298,]  10.836036682 -13.062899590 -33.35184860 #>  [299,]  10.768299103 -11.760122299 -33.84495163 #>  [300,]  10.832265854 -11.118603706 -34.05056381 #>  [301,]  11.111891747 -11.227131844 -33.92829895 #>  [302,]  11.462406158 -10.894828796 -33.91093445 #>  [303,]  11.711284637 -10.142884254 -34.05590439 #>  [304,]  11.962835312 -10.492856979 -33.86747360 #>  [305,]  12.052055359 -12.574954033 -33.12891388 #>  [306,]  12.185583115 -15.635200500 -31.77433586 #>  [307,]  12.655854225 -18.805299759 -29.82945633 #>  [308,]  12.923693657 -21.652000427 -27.71342659 #>  [309,]  13.077131271 -23.789670944 -25.83838844 #>  [310,]  13.256850243 -25.016103745 -24.56538391 #>  [311,]  13.306306839 -25.919588089 -23.57316780 #>  [312,]  13.437985420 -26.564304352 -22.77663994 #>  [313,]  13.503538132 -26.568208694 -22.73435593 #>  [314,]  13.244435310 -26.300897598 -23.19373322 #>  [315,]  13.104343414 -25.986907959 -23.62627220 #>  [316,]  13.367712021 -25.526552200 -23.98656273 #>  [317,]  13.444683075 -24.761859894 -24.73875046 #>  [318,]  12.998736382 -23.633636475 -26.04494667 #>  [319,]  12.432883263 -22.744026184 -27.11095428 #>  [320,]  12.233683586 -22.071084976 -27.74593925 #>  [321,]  12.456471443 -20.926879883 -28.50069046 #>  [322,]  12.548463821 -19.741971970 -29.30291748 #>  [323,]  12.040575027 -19.247598648 -29.85132027 #>  [324,]  11.731130600 -19.044637680 -30.11033821 #>  [325,]  12.029707909 -18.569494247 -30.28348732 #>  [326,]  11.890168190 -17.808153152 -30.78658485 #>  [327,]  11.350760460 -16.780483246 -31.55931091 #>  [328,]  11.125115395 -15.441272736 -32.32294083 #>  [329,]  11.020313263 -14.179329872 -32.94057465 #>  [330,]  10.745376587 -13.287828445 -33.38452911 #>  [331,]  10.519563675 -12.412834167 -33.78777695 #>  [332,]  10.438368797 -11.495381355 -34.15114975 #>  [333,]  10.422657967 -10.734645844 -34.39646149 #>  [334,]  10.319011688 -10.420250893 -34.52009201 #>  [335,]  10.278937340 -10.714562416 -34.44906616 #>  [336,]  10.365756989 -11.145082474 -34.28713608 #>  [337,]  10.232131958 -11.362904549 -34.25923920 #>  [338,]  10.030494690 -11.451543808 -34.29909134 #>  [339,]   9.899012566 -11.303491592 -34.39326859 #>  [340,]   9.960330009 -10.825694084 -34.53888321 #>  [341,]  10.138383865 -10.400521278 -34.61160278 #>  [342,]  10.043424606 -10.448564529 -34.61986160 #>  [343,]   9.952109337 -10.632971764 -34.60252380 #>  [344,]   9.966570854 -10.510153770 -34.64011383 #>  [345,]   9.820205688 -10.550564766 -34.67269135 #>  [346,]   9.634380341 -10.831507683 -34.64612961 #>  [347,]   9.491265297 -10.489980698 -34.79348755 #>  [348,]   9.454239845  -9.598361015 -35.05194092 #>  [349,]   9.384545326  -8.928132057 -35.24661255 #>  [350,]   9.366636276  -8.674728394 -35.31579208 #>  [351,]   9.621813774  -9.260269165 -35.08324814 #>  [352,]   9.305275917 -10.898025513 -34.71691895 #>  [353,]   8.404254913 -13.023953438 -34.26072693 #>  [354,]   7.836256504 -15.385265350 -33.40644836 #>  [355,]   7.534016132 -17.219684601 -32.58646393 #>  [356,]   7.677176952 -17.524950027 -32.38892746 #>  [357,]   8.156605721 -16.700216293 -32.69952011 #>  [358,]   8.602138519 -16.277503967 -32.80136108 #>  [359,]   9.202568054 -17.116436005 -32.18186951 #>  [360,]  10.181995392 -17.892051697 -31.42714500 #>  [361,]  11.752810478 -18.657873154 -30.60416794 #>  [362,]   8.307888985 -17.606494904 -31.86496353 #>  [363,]   3.611692429 -14.500875473 -34.45906448 #>  [364,]   5.643086910 -14.092657089 -34.46093369 #>  [365,]   7.845330238 -11.045224190 -35.02435684 #>  [366,]   8.381258965  -3.694815636 -36.45336533 #>  [367,]   9.756036758   1.688866258 -36.22073746 #>  [368,]  11.328683853   3.674281120 -35.52749634 #>  [369,]  12.396552086   3.320223331 -35.23701477 #>  [370,]  12.697211266   1.157662392 -35.27769470 #>  [371,]  12.451181412  -2.694712639 -35.31299973 #>  [372,]  12.198592186  -6.418664455 -34.98590851 #>  [373,]  12.437385559  -9.229299545 -34.26106644 #>  [374,]  13.104112625 -11.879631042 -33.19024658 #>  [375,]  13.217459679 -14.287803650 -32.20427704 #>  [376,]  13.226196289 -16.321657181 -31.20202255 #>  [377,]  14.185738564 -18.239665985 -29.72521019 #>  [378,]  12.253983498 -19.833448410 -29.50389290 #>  [379,]  11.149605751 -21.671508789 -28.50735092 #>  [380,]  13.351960182 -22.521684647 -26.95763397 #>  [381,]  12.250601768 -20.965576172 -28.71181679 #>  [382,]  11.745684624 -19.708021164 -29.85299492 #>  [383,]  12.697708130 -20.592439651 -28.80291939 #>  [384,]  12.738763809 -22.271492004 -27.52294540 #>  [385,]  12.688130379 -23.139165878 -26.82207298 #>  [386,]  12.554913521 -23.269985199 -26.77059364 #>  [387,]  12.071204185 -23.029348373 -27.21567154 #>  [388,]  11.068667412 -22.311903000 -28.22012520 #>  [389,]  10.351361275 -21.714256287 -28.97348213 #>  [390,]  10.214089394 -21.566751480 -29.13793945 #>  [391,]   9.835763931 -21.126472473 -29.55832863 #>  [392,]   9.424333572 -19.739072800 -30.65498161 #>  [393,]   9.269676208 -16.719455719 -32.41757584 #>  [394,]   8.921732903 -12.274478912 -34.42657089 #>  [395,]   8.763242722  -7.324311256 -35.88759232 #>  [396,]   9.094762802  -1.082996607 -36.41414642 #>  [397,]   9.791699409   5.535490990 -35.78985596 #>  [398,]  10.556771278  10.085864067 -34.52947235 #>  [399,]  10.616663933  13.009494781 -33.44268417 #>  [400,]  10.231987953  15.180124283 -32.64044952 #>  [401,]  10.200220108  15.817908287 -32.36727524 #>  [402,]  10.087974548  14.321650505 -33.09641266 #>  [403,]   9.553200722  11.906790733 -34.26615906 #>  [404,]   9.242117882  10.252847672 -34.93227768 #>  [405,]   8.941378593   9.547715187 -35.19977188 #>  [406,]   8.613583565   8.923902512 -35.44973755 #>  [407,]   8.615230560   7.869325161 -35.73007202 #>  [408,]   8.874625206   6.681752682 -35.91473770 #>  [409,]   9.126902580   5.553087711 -36.04246521 #>  [410,]   9.413140297   4.458016872 -36.13250351 #>  [411,]  10.125708580   3.475276470 -36.05133057 #>  [412,]  10.484992027   2.367962837 -36.05270386 #>  [413,]  10.536390305   0.690216899 -36.12416458 #>  [414,]  11.192745209  -1.563736677 -35.91249466 #>  [415,]  11.669658661  -4.309777260 -35.55633545 #>  [416,]  11.700786591  -7.564188957 -35.01211929 #>  [417,]  11.578444481 -10.694068909 -34.25261307 #>  [418,]  11.108743668 -12.781640053 -33.68948746 #>  [419,]  10.848685265 -13.152500153 -33.63115692 #>  [420,]  11.673206329 -12.084965706 -33.73907089 #>  [421,]  12.692570686 -11.576792717 -33.55898285 #>  [422,]  12.131242752 -12.416862488 -33.45958328 #>  [423,]  10.448616982 -13.575729370 -33.59953308 #>  [424,]   9.793736458 -14.787996292 -33.30973053 #>  [425,]  10.367831230 -16.139654160 -32.49173737 #>  [426,]  11.119768143 -16.954378128 -31.82055092 #>  [427,]  11.784290314 -16.408380508 -31.84549904 #>  [428,]  12.147331238 -14.319296837 -32.69701767 #>  [429,]  12.566668510 -10.987893105 -33.81417465 #>  [430,]  12.830385208  -6.692797184 -34.76826477 #>  [431,]  12.946732521  -2.583381891 -35.22702789 #>  [432,]  13.187473297  -0.627730608 -35.22256088 #>  [433,]  13.225933075  -0.943370223 -35.21099091 #>  [434,]  13.071208954  -2.200866699 -35.23110199 #>  [435,]  12.803855896  -3.907301903 -35.19808960 #>  [436,]  12.747382164  -6.044958591 -34.93983078 #>  [437,]  12.918925285  -8.760421753 -34.29899216 #>  [438,]  13.098098755 -11.429352760 -33.46192932 #>  [439,]  12.968546867 -13.020596504 -32.93766403 #>  [440,]  12.397885323 -13.923352242 -32.78686905 #>  [441,]  11.793653488 -15.430642128 -32.35322952 #>  [442,]  10.526685715 -17.905172348 -31.51303291 #>  [443,]   8.804872513 -19.383859634 -31.19126129 #>  [444,]   8.873478889 -19.121868134 -31.30750847 #>  [445,]   9.733661652 -18.997779846 -31.16394615 #>  [446,]   8.994626999 -19.380857468 -31.13695717 #>  [447,]   8.634307861 -19.364334106 -31.20461464 #>  [448,]   9.250030518 -18.443368912 -31.63274002 #>  [449,]   9.373174667 -15.133203506 -33.26657104 #>  [450,]   9.424911499  -9.382118225 -35.26026154 #>  [451,]   9.665999413  -3.579289675 -36.28944778 #>  [452,]   9.435833931   2.766443729 -36.29099274 #>  [453,]   8.702078819  10.618136406 -34.92528152 #>  [454,]   8.230297089  17.696441650 -32.01950073 #>  [455,]   7.691474915  22.868638992 -28.50218773 #>  [456,]   7.178093910  25.535377502 -26.27808571 #>  [457,]   7.225828171  25.720516205 -26.07793808 #>  [458,]   7.723974705  25.539957047 -26.12161827 #>  [459,]   8.166926384  25.688869476 -25.83654785 #>  [460,]   8.136146545  25.372310638 -26.17217445 #>  [461,]   7.937432289  24.632537842 -26.98872948 #>  [462,]   7.793244839  24.814683914 -26.85661316 #>  [463,]   7.902252197  26.156953812 -25.43258286 #>  [464,]   8.697003365  26.974094391 -24.26146698 #>  [465,]   9.395962715  26.565773010 -24.44994545 #>  [466,]   8.822002411  26.036066055 -25.26426315 #>  [467,]   7.943602085  25.780578613 -25.86212921 #>  [468,]   7.791650295  25.580986023 -26.10290909 #>  [469,]   7.610281467  25.747467041 -26.02514076 #>  [470,]   6.925744057  26.827205658 -25.00562096 #>  [471,]   5.964732170  28.465612411 -23.42002678 #>  [472,]   6.121398449  26.356670380 -25.77722740 #>  [473,]   7.714153767  18.301553726 -31.78053856 #>  [474,]   8.914915085   9.346491814 -35.50143051 #>  [475,]   9.693977356   3.349421740 -36.28702927 #>  [476,]  10.403316498  -0.176601127 -36.28486252 #>  [477,]  10.577465057  -1.612182379 -36.23558807 #>  [478,]  10.569824219  -0.319775581 -36.25976944 #>  [479,]  10.600260735   3.418896914 -36.03867340 #>  [480,]  10.419550896   7.978906155 -35.30915833 #>  [481,]  10.521663666  12.229580879 -33.95974350 #>  [482,]  10.802862167  15.827458382 -32.28513336 #>  [483,]  10.947052002  18.357007980 -30.80486679 #>  [484,]  11.208821297  19.799840927 -29.75107574 #>  [485,]  11.459554672  20.441558838 -29.21202087 #>  [486,]  11.680260658  20.578453064 -29.02371788 #>  [487,]  12.020412445  20.123327255 -29.20532227 #>  [488,]  12.495923996  19.185115814 -29.65310097 #>  [489,]  12.887036324  18.853919983 -29.70457268 #>  [490,]  13.104242325  19.249870300 -29.35276604 #>  [491,]  13.471208572  19.208330154 -29.20790100 #>  [492,]  14.041431427  18.775287628 -29.21698380 #>  [493,]  14.564635277  18.583654404 -29.07434845 #>  [494,]  15.006444931  18.593780518 -28.82647896 #>  [495,]  15.562223434  18.545196533 -28.55729294 #>  [496,]  16.031183243  18.219503403 -28.50538635 #>  [497,]  15.930171013  18.235246658 -28.56705666 #>  [498,]  16.072990417  18.882282257 -28.04493523 #>  [499,]  16.852346420  19.630165100 -27.00333786 #>  [500,]  17.192886353  20.520221710 -26.08843994 #>  [501,]  17.211000443  21.076963425 -25.60342598 #>  [502,]  17.559293747  21.188869476 -25.25650215 #>  [503,]  18.082080841  20.562395096 -25.40702820 #>  [504,]  18.719778061  18.750541687 -26.37629700 #>  [505,]  18.890727997  18.830593109 -26.19856644 #>  [506,]  17.946590424  21.713584900 -24.49858665 #>  [507,]  16.551788330  24.869239807 -22.31160545 #>  [508,]  15.599121094  27.493429184 -19.51457787 #>  [509,]  15.818599701  29.624631882 -15.96552467 #>  [510,]  16.473403931  31.745664597  -9.42325115 #>  [511,]  14.518877029  33.792999268   0.11803450 #>  [512,]   9.013318062  35.081516266   6.29114056 #>  [513,]   3.512897015  35.802883148   7.33032084 #>  [514,]  -0.169965178  36.288448334   6.00338316 #>  [515,]  -3.394709826  36.635646820   2.20928264 #>  [516,]  -6.081999302  36.405170441  -3.05204129 #>  [517,]  -7.917826176  35.283187866  -8.32089615 #>  [518,]  -8.540677071  33.685646057 -13.35216427 #>  [519,]  -8.737319946  31.514059067 -17.96299934 #>  [520,]  -8.236398697  28.882423401 -22.33135033 #>  [521,]  -6.776621342  25.986047745 -26.15845490 #>  [522,]  -5.659884453  22.961566925 -29.18977928 #>  [523,]  -3.546892881  19.836782455 -31.85169411 #>  [524,]   0.912674546  14.937634468 -34.54948044 #>  [525,]   6.299535751  10.186451912 -35.83206940 #>  [526,]  10.035332680   8.011891365 -35.55984879 #>  [527,]  13.175158501   6.724615097 -34.73377991 #>  [528,]  17.307371140   5.310211658 -33.14333725 #>  [529,]  20.788389206   4.034348488 -31.23542595 #>  [530,]  22.945051193   3.737192154 -29.65756416 #>  [531,]  23.746042252   6.769764423 -28.45913315 #>  [532,]  22.327692032  14.728642464 -26.25882530 #>  [533,]  19.719320297  23.932262421 -20.80119514 #>  [534,]  17.887283325  29.996070862 -12.42685795 #>  [535,]  16.062219620  32.970058441  -4.29383707 #>  [536,]  13.463335991  34.157966614   2.23711896 #>  [537,]  10.068114281  34.737628937   6.43994522 #>  [538,]   5.898966312  35.515235901   7.26548100 #>  [539,]   1.555582643  36.272468567   5.74933577 #>  [540,]  -2.623699903  36.658977509   3.21058154 #>  [541,]  -6.492042542  36.344539642  -1.22884297 #>  [542,]  -9.106103897  35.249626160  -7.10639668 #>  [543,] -10.413190842  33.883384705 -11.25868797 #>  [544,] -11.240173340  32.429737091 -14.49070644 #>  [545,] -11.088372231  30.154785156 -19.07205963 #>  [546,] -10.386888504  26.557712555 -24.29795456 #>  [547,]  -9.340531349  22.510131836 -28.60808182 #>  [548,]  -8.093786240  18.418121338 -31.82592773 #>  [549,]  -6.535668373  14.275005341 -34.30940247 #>  [550,]  -3.731781244  11.317468643 -35.82712936 #>  [551,]  -1.080232859  10.542263031 -36.24661636 #>  [552,]  -1.634045005   8.940130234 -36.70825958 #>  [553,]  -4.321313381   2.765258789 -37.52851486 #>  [554,]  -2.523136377  -6.025230885 -37.20489883 #>  [555,]   1.891117930 -10.662920952 -36.36600113 #>  [556,]   3.410652876  -9.673821449 -36.46271133 #>  [557,]   5.126791477  -5.931529045 -37.03442001 #>  [558,]   4.826182842   1.254621863 -37.45608139 #>  [559,]   1.860872149  10.986046791 -36.05755615 #>  [560,]   0.172795683  20.525150299 -31.44905281 #>  [561,]   0.376141697  28.348299026 -24.33877754 #>  [562,]   0.140977308  34.065967560 -15.00134087 #>  [563,]  -2.754735231  36.678600311  -3.12836432 #>  [564,]  -6.824357033  35.478511810   7.17996550 #>  [565,] -11.074691772  33.464912415  10.82893848 #>  [566,] -13.910627365  32.876781464   9.12017727 #>  [567,] -16.786550522  32.444538116   5.40396070 #>  [568,] -19.179277420  32.013435364   1.09586191 #>  [569,] -18.665424347  30.461353302  -8.66194248 #>  [570,] -18.287466049  27.722116470 -17.62725830 #>  [571,] -18.936134338  24.882688522 -20.67512703 #>  [572,] -17.958881378  20.470684052 -25.55602264 #>  [573,] -17.451066971  16.549623489 -29.19620132 #>  [574,] -17.152938843  12.422952652 -31.06816483 #>  [575,] -13.293949127   7.847864151 -34.32066345 #>  [576,] -12.949915886   7.319660664 -34.74630356 #>  [577,] -13.003574371   6.186223984 -34.74392700 #>  [578,] -10.235066414   4.954500198 -36.02040863 #>  [579,] -11.733440399   9.937672615 -34.41562653 #>  [580,] -10.857896805  17.531257629 -31.54595947 #>  [581,]  -9.142659187  24.240005493 -27.09503937 #>  [582,] -10.820698738  28.939222336 -21.04140282 #>  [583,] -11.896975517  31.246223450 -16.64715767 #>  [584,] -12.152606964  32.281940460 -14.05758858 #>  [585,] -12.438331604  33.042152405 -11.87097263 #>  [586,] -13.261455536  32.422149658 -12.62434959 #>  [587,] -15.210773468  30.024763107 -16.11053848 #>  [588,] -17.395425797  27.774843216 -18.14350700 #>  [589,] -17.219480515  25.698703766 -20.98793221 #>  [590,] -16.341165543  24.610654831 -23.12222672 #>  [591,] -15.806166649  25.657043457 -22.23274994 #>  [592,] -15.230226517  26.626007080 -21.43449783 #>  [593,] -17.093521118  26.069997787 -20.86760330 #>  [594,] -18.954675674  27.139436722 -17.26321793 #>  [595,] -18.941020966  29.790834427 -12.04101658 #>  [596,] -19.316061020  29.907592773 -11.20123291 #>  [597,] -21.584833145  28.051572800 -11.65379333 #>  [598,] -23.131965637  26.472188950 -12.59072590 #>  [599,] -24.277261734  24.321094513 -14.68328571 #>  [600,] -25.479148865  20.956520081 -17.48651886 #>  [601,] -26.210845947  18.220520020 -19.67433357 #>  [602,] -26.197734833  14.885107040 -22.04171562 #>  [603,] -26.210027695  11.365736961 -24.39221954 #>  [604,] -26.121343613   8.374292374 -25.51059341 #>  [605,] -25.607564926   6.236825466 -26.73554611 #>  [606,] -25.533433914   4.652025223 -27.08581352 #>  [607,] -25.173982620   2.667245150 -27.71244621 #>  [608,] -25.600233078   1.334984899 -27.45964241 #>  [609,] -25.114025116   0.365505278 -27.93243599 #>  [610,] -25.526090622   0.224930942 -27.55332375 #>  [611,] -25.355527878   0.043949842 -27.67692757 #>  [612,] -25.436414719   0.688542128 -27.64696503 #>  [613,] -24.533655167   2.022172689 -28.35930634 #>  [614,] -25.321151733   3.824933529 -27.47687149 #>  [615,] -25.184751511   4.775188923 -27.49773598 #>  [616,] -22.767335892   6.376235962 -29.28412628 #>  [617,] -23.532155991   7.499667645 -28.39804840 #>  [618,] -25.076187134   7.315453529 -27.03295326 #>  [619,] -25.873809814   8.030606270 -26.05615616 #>  [620,] -25.844860077   9.880726814 -25.42538643 #>  [621,] -25.919801712  11.962106705 -24.40818596 #>  [622,] -26.413040161  12.451324463 -23.61684036 #>  [623,] -26.433422089  11.538242340 -24.02051353 #>  [624,] -27.323055267  10.335618973 -23.70436287 #>  [625,] -25.878023148   8.229838371 -25.82757950 #>  [626,] -23.198318481   7.228291512 -28.75958443 #>  [627,] -25.251205444  10.053045273 -25.81186867 #>  [628,] -26.052410126  11.121364594 -24.71664047 #>  [629,] -23.983386993   8.771225929 -27.57462311 #>  [630,] -24.309257507   5.989444733 -28.17850685 #>  [631,] -24.098182678   1.654215336 -28.75191307 #>  [632,] -21.507509232  -3.933419943 -30.74287224 #>  [633,] -24.017000198  -7.733496666 -27.83831787 #>  [634,] -27.519533157 -11.402627945 -22.99342728 #>  [635,] -25.098394394 -14.632208824 -23.81796837 #>  [636,] -25.854290009 -11.822502136 -24.38971710 #>  [637,] -27.491907120  -7.418178558 -24.75769424 #>  [638,] -21.952165604  -5.293189526 -29.93936348 #>  [639,] -17.323642731  -1.901056647 -33.66727829 #>  [640,] -20.157243729   3.805458546 -31.47473717 #>  [641,] -22.794746399  11.153249741 -27.71448708 #>  [642,] -21.434932709  16.176933289 -26.45174599 #>  [643,] -23.766963959  17.899505615 -22.51369286 #>  [644,] -26.596593857  19.085021973 -18.30830765 #>  [645,] -26.266172409  18.985956192 -18.76774597 #>  [646,] -27.636100769  16.783668518 -18.85322571 #>  [647,] -28.795450211  14.538000107 -19.09444618 #>  [648,] -29.684316635  13.702947617 -18.14497185 #>  [649,] -30.034559250  12.067810059 -18.76229858 #>  [650,] -30.139406204   9.459232330 -20.30896378 #>  [651,] -29.123435974   6.250471592 -22.59469223 #>  [652,] -28.081020355   2.930698633 -24.88541222 #>  [653,] -26.822301865   0.108748384 -26.19515991 #>  [654,] -26.029962540  -2.905680895 -26.83039856 #>  [655,] -27.608741760  -6.110469341 -24.72850037 #>  [656,] -28.202730179  -9.308022499 -22.87509346 #>  [657,] -28.225486755 -11.989365578 -21.50522614 #>  [658,] -28.217828751 -13.738573074 -20.49701309 #>  [659,] -28.222902298 -15.242117882 -19.35754204 #>  [660,] -28.079534531 -16.343521118 -18.69844055 #>  [661,] -27.987014771 -16.794307709 -18.40342331 #>  [662,] -27.984416962 -17.162010193 -18.06038475 #>  [663,] -28.013631821 -17.350856781 -17.84970856 #>  [664,] -27.964120865 -17.126821518 -18.14377594 #>  [665,] -27.924943924 -16.465829849 -18.84170914 #>  [666,] -27.761108398 -15.785528183 -19.66728973 #>  [667,] -27.906957626 -14.771733284 -20.23231697 #>  [668,] -28.060712814 -14.129302979 -20.46997643 #>  [669,] -27.555328369 -14.288098335 -21.09328079 #>  [670,] -28.132452011 -13.200303078 -21.08471870 #>  [671,] -27.838430405 -11.662380219 -22.35213470 #>  [672,] -27.292331696 -11.354246140 -23.25758171 #>  [673,] -27.978792191 -11.182804108 -22.42407227 #>  [674,] -28.873310089  -9.770949364 -21.91938019 #>  [675,] -30.430742264  -8.025746346 -20.62255859 #>  [676,] -33.298625946  -6.440467358 -15.78189754 #>  [677,] -35.037166595  -5.581562996 -11.94223404 #>  [678,] -33.830600739  -5.721194744 -14.84115410 #>  [679,] -32.067661285  -7.295965672 -18.13863373 #>  [680,] -30.986333847  -9.643132210 -18.81691170 #>  [681,] -30.050498962  -9.496670723 -20.37618637 #>  [682,] -30.084482193  -7.624585629 -21.12738419 #>  [683,] -30.965013504  -7.580458164 -19.87573242 #>  [684,] -29.622138977  -9.992802620 -20.80253029 #>  [685,] -27.107475281 -13.990638733 -21.97538376 #>  [686,] -28.199968338 -16.293516159 -18.52198982 #>  [687,] -29.420139313 -16.372209549 -16.51546669 #>  [688,] -27.994138718 -16.481418610 -18.85092735 #>  [689,] -29.262777328 -15.138169289 -17.95914268 #>  [690,] -31.931114197 -14.373784065 -13.24625397 #>  [691,] -31.664192200 -15.883966446 -12.13848019 #>  [692,] -31.340408325 -15.962821960 -12.74437904 #>  [693,] -32.284328461 -15.155656815 -11.19057274 #>  [694,] -32.287075043 -14.729045868 -11.81216526 #>  [695,] -32.585597992 -13.521820068 -12.42000198 #>  [696,] -32.777614594 -11.808247566 -13.57906246 #>  [697,] -33.113491058  -9.396094322 -14.65209484 #>  [698,] -33.144763947  -7.168530464 -15.79600811 #>  [699,] -32.970596313  -5.717775822 -16.83709717 #>  [700,] -32.434772491  -4.656610966 -18.08940506 #>  [701,] -32.809513092  -3.099362135 -17.79186821 #>  [702,] -32.206150055  -2.308645248 -18.97446632 #>  [703,] -31.933753967  -1.425687909 -19.62114143 #>  [704,] -34.152217865  -0.814339578 -15.50116348 #>  [705,] -34.575462341  -1.645577431 -14.38354206 #>  [706,] -33.264617920  -2.481270552 -17.01441002 #>  [707,] -32.550422668  -2.882036209 -18.39701462 #>  [708,] -32.099273682  -3.206080914 -19.08680344 #>  [709,] -31.344144821  -3.525042295 -20.29232407 #>  [710,] -30.743999481  -3.392841339 -21.16817474 #>  [711,] -31.011241913  -3.013272762 -20.87673378 #>  [712,] -31.260335922  -3.202997684 -20.47886848 #>  [713,] -31.486370087  -3.521614552 -20.01366234 #>  [714,] -30.885963440  -3.234322548 -20.95424843 #>  [715,] -31.307310104  -2.007515669 -20.50191879 #>  [716,] -31.192197800  -2.192787647 -20.72567177 #>  [717,] -31.312305450  -2.601501942 -20.50325584 #>  [718,] -30.801820755  -3.153510571 -21.14047813 #>  [719,] -30.622978210  -3.449853659 -21.45471764 #>  [720,] -30.418090820  -3.949617624 -21.56418991 #>  [721,] -29.124713898  -3.054227591 -23.53165627 #>  [722,] -30.802778244   0.634677887 -21.48244095 #>  [723,] -31.888898849   2.403115511 -19.74390030 #>  [724,] -32.005870819   2.296781540 -19.57406044 #>  [725,] -30.794857025   1.146209836 -21.36837387 #>  [726,] -28.342922211   0.820737779 -24.62986946 #>  [727,] -29.324220657   2.507122993 -23.36085320 #>  [728,] -29.711318970   1.921649218 -22.92534065 #>  [729,] -28.107469559   0.315268993 -25.01039696 #>  [730,] -28.429637909   0.545430601 -24.65139389 #>  [731,] -28.857151031  -1.315646052 -24.00361824 #>  [732,] -28.605504990  -4.827788830 -23.99332428 #>  [733,] -27.640745163  -7.880003452 -24.26129150 #>  [734,] -24.505971909 -10.655214310 -26.46098900 #>  [735,] -23.530048370  -8.620409966 -28.05568123 #>  [736,] -25.651969910  -3.861866236 -27.28646278 #>  [737,] -25.528642654  -2.463757038 -27.57248116 #>  [738,] -23.969795227  -3.206800699 -28.82028961 #>  [739,] -24.036800385  -3.110129356 -28.83750916 #>  [740,] -23.696628571  -2.215934515 -29.20576477 #>  [741,] -19.916667938  -2.305085182 -31.82990837 #>  [742,] -18.488264084  -1.648696184 -32.89689636 #>  [743,] -20.401056290   1.573559761 -31.45929337 #>  [744,] -21.287885666   4.022118568 -30.97423553 #>  [745,] -17.924997330   7.122783661 -32.13214493 #>  [746,]  -5.414277077  15.856598854 -33.25868988 #>  [747,]   1.499425769  27.847417831 -25.22252846 #>  [748,]   0.412863731  32.780384064 -18.66554832 #>  [749,]   1.185156584  22.819993973 -28.26618385 #>  [750,]   1.470491767  14.364215851 -35.66311264 #>  [751,]  -2.498171568   9.859502792 -36.10429382 #>  [752,]  -7.021480083  -5.140132904 -36.50271988 #>  [753,]  -8.736996651 -20.369462967 -31.00594711 #>  [754,] -12.026412010 -26.502923965 -23.72471237 #>  [755,] -14.974112511 -25.723876953 -23.01518059 #>  [756,] -17.064552307 -21.238231659 -26.05601883 #>  [757,] -16.967718124 -15.781583786 -29.65561295 #>  [758,] -14.652819633 -10.820256233 -33.06203461 #>  [759,] -12.673221588  -7.177256584 -34.85173416 #>  [760,]  -8.846259117  -4.474581718 -36.37854767 #>  [761,]  -5.752209187  -2.239922523 -37.34182739 #>  [762,]  -5.109594822   0.581487477 -37.41267014 #>  [763,]  -4.604377270   4.385325432 -37.23850250 #>  [764,]  -1.411818385   6.645083904 -37.15018463 #>  [765,]   3.350166559   7.133206844 -36.95896912 #>  [766,]   5.049666405   7.218868732 -36.75149536 #>  [767,]   4.208475590   6.508373737 -36.99072647 #>  [768,]   4.367430210   4.053345680 -37.39956284 #>  [769,]   7.209424973  -0.241984114 -37.10646057 #>  [770,]  10.622968674  -2.352730751 -36.34858322 #>  [771,]  10.778733253   0.924466372 -36.26297760 #>  [772,]  10.929011345   6.087841034 -35.67771149 #>  [773,]  11.696458817   8.795866013 -34.86188507 #>  [774,]  11.214784622   9.603085518 -34.76739120 #>  [775,]  12.617614746   9.888624191 -34.21716690 #>  [776,]  14.983337402   9.582390785 -33.36240387 #>  [777,]  16.184324265   9.216164589 -32.90512466 #>  [778,]  15.512813568   9.786260605 -33.04960632 #>  [779,]  13.460192680  10.591255188 -33.66516876 #>  [780,]  12.496856689   9.655650139 -34.30126572 #>  [781,]  12.547444344   8.168162346 -34.70531845 #>  [782,]  11.847396851   6.469823837 -35.32189941 #>  [783,]  11.722769737   2.647495031 -35.87064743 #>  [784,]  13.328136444  -1.769289136 -35.42571259 #>  [785,]  14.762471199  -5.142685413 -34.53564453 #>  [786,]  14.943353653  -7.638122082 -33.99586105 #>  [787,]  14.648190498  -9.319550514 -33.71181488 #>  [788,]  14.060094833 -10.062770844 -33.73504257 #>  [789,]  13.880743027  -9.659944534 -33.93048096 #>  [790,]  14.385253906  -8.035945892 -34.13977432 #>  [791,]  15.097756386  -5.490992069 -34.33120728 #>  [792,]  15.451501846  -2.837594748 -34.49797058 #>  [793,]  15.590587616  -0.706069291 -34.52213669 #>  [794,]  16.029333115   0.994865060 -34.28038406 #>  [795,]  16.347227097   2.382176638 -34.06527710 #>  [796,]  16.852359772   3.428137064 -33.74344635 #>  [797,]  16.837923050   5.033053875 -33.52005768 #>  [798,]  15.785047531   6.618000984 -33.73505402 #>  [799,]  15.649321556   7.037502289 -33.70003510 #>  [800,]  15.963747025   7.055968761 -33.54247665 #>  [801,]  16.198543549   6.796196938 -33.49377823 #>  [802,]  16.666101456   5.964097023 -33.45055389 #>  [803,]  16.112525940   4.579880238 -33.93623734 #>  [804,]  15.770273209   3.091475964 -34.26729965 #>  [805,]  15.895625114   2.462308168 -34.26086807 #>  [806,]  15.620735168   2.911535740 -34.36027908 #>  [807,]  16.299142838   3.807846785 -33.94400024 #>  [808,]  17.439828873   4.727954388 -33.24560928 #>  [809,]  17.802707672   5.022125244 -33.00194550 #>  [810,]  17.716259003   4.637093067 -33.10915756 #>  [811,]  17.605070114   5.336255074 -33.06303787 #>  [812,]  17.651201248   7.471165657 -32.59241486 #>  [813,]  17.892795563   9.801160812 -31.80442238 #>  [814,]  18.646873474  12.566352844 -30.30697632 #>  [815,]  18.831899643  15.623466492 -28.71047020 #>  [816,]  17.247095108  17.354326248 -28.66196251 #>  [817,]  15.538969994  17.761428833 -29.41772079 #>  [818,]  14.519779205  19.482009888 -28.74124146 #>  [819,]  12.627777100  21.263237000 -28.38160133 #>  [820,]   9.908528328  18.345970154 -31.29393578 #>  [821,]   8.721017838  11.108269691 -35.06001663 #>  [822,]   8.296534538   1.377068162 -36.90138245 #>  [823,]   6.797443390  -9.828440666 -35.89919662 #>  [824,]   5.293516159 -18.820709229 -32.44895172 #>  [825,]   2.850774050 -21.620370865 -30.85256386 #>  [826,]   1.473330975 -18.964155197 -32.63074493 #>  [827,]   2.469060898 -14.537103653 -34.87977982 #>  [828,]   4.070631981  -8.359395981 -36.55733871 #>  [829,]   5.857094288  -0.751636982 -37.34784698 #>  [830,]   5.643182278   7.713386059 -36.56845856 #>  [831,]   2.839546919  17.661531448 -32.97563171 #>  [832,]   0.863919020  25.343662262 -27.74706650 #>  [833,]   0.816961646  27.069206238 -26.02012825 #>  [834,]  -0.084777020  23.783729553 -28.96587753 #>  [835,]  -1.792580366  18.930898666 -32.47565842 #>  [836,]  -1.298095822  14.182034492 -34.88154602 #>  [837,]   1.370403647   8.261384964 -36.67823029 #>  [838,]   3.957512379   4.825386524 -37.31484222 #>  [839,]   5.356670380   8.985268593 -36.21937943 #>  [840,]   4.265693665  16.316297531 -33.67496490 #>  [841,]   2.994006157  19.960008621 -31.75245094 #>  [842,]   3.287080050  19.127531052 -32.22060394 #>  [843,]   2.780971527  15.193822861 -34.32303619 #>  [844,]   3.453476191   9.931154251 -36.19068146 #>  [845,]   4.200078964   8.607841492 -36.50504684 #>  [846,]   3.050798416  12.080493927 -35.50662994 #>  [847,]   2.672906637  14.403536797 -34.73331451 #>  [848,]   2.882982492  14.595797539 -34.60455704 #>  [849,]   2.729433298  15.214725494 -34.32982635 #>  [850,]   2.463200092  15.065156937 -34.40230179 #>  [851,]   2.291837454  13.245343208 -35.17978287 #>  [852,]   2.328599691  10.594532013 -36.09542084 #>  [853,]   3.312112093   7.197628975 -36.86087799 #>  [854,]   5.121970654   4.191382885 -37.17635727 #>  [855,]   5.909006119   2.097832203 -37.24210358 #>  [856,]   5.950030327   0.024196090 -37.30857086 #>  [857,]   6.957141876  -2.169415236 -37.08822250 #>  [858,]   8.631657600  -4.513624191 -36.53220367 #>  [859,]   9.843069077  -6.482501030 -35.96276093 #>  [860,]  11.456715584  -7.738479614 -35.21977234 #>  [861,]  13.261047363  -8.480038643 -34.45322037 #>  [862,]  13.348145485 -10.275495529 -33.91437531 #>  [863,]  12.000082970 -14.605293274 -32.74040604 #>  [864,]  10.596434593 -19.382783890 -30.77571869 #>  [865,]   7.650918007 -23.258934021 -28.79905701 #>  [866,]   3.067283392 -26.406229019 -26.75260544 #>  [867,]  -0.066109747 -27.469306946 -25.92611504 #>  [868,]  -1.068218112 -24.467840195 -28.58546066 #>  [869,]  -0.419721991 -19.008749008 -32.57089996 #>  [870,]  -0.218928650 -14.979874611 -34.65420151 #>  [871,]  -0.480876148 -11.928507805 -35.73549652 #>  [872,]  -0.608129978  -8.997052193 -36.61009979 #>  [873,]  -2.440308094  -6.705052853 -36.98962784 #>  [874,]  -4.697882652  -2.597284555 -37.27908325 #>  [875,]  -4.238791466   5.113708496 -36.95098495 #>  [876,]  -2.315559864  13.691790581 -34.94454956 #>  [877,]  -1.907691956  20.654790878 -31.29682922 #>  [878,]  -0.517211378  26.107479095 -26.78872299 #>  [879,]   1.490762472  28.888963699 -23.83648109 #>  [880,]   2.679587364  29.292327881 -23.19988060 #>  [881,]   3.509782314  30.791082382 -20.99901962 #>  [882,]   4.380046368  33.219100952 -16.67922592 #>  [883,]   4.342502594  34.766193390 -12.94011307 #>  [884,]   2.381092072  35.119544983 -12.49584389 #>  [885,]   1.054093599  33.350105286 -16.83450127 #>  [886,]   0.896940887  29.420095444 -23.17568588 #>  [887,]   0.737909973  24.755878448 -28.20609283 #>  [888,]  -0.152397275  20.641338348 -31.35834694 #>  [889,]  -0.346237063  16.503152847 -33.74783707 #>  [890,]   0.728031337  11.309564590 -35.91123581 #>  [891,]   2.321618319   5.578791618 -37.22179413 #>  [892,]   4.379836559   0.860028088 -37.47974014 #>  [893,]   5.635392666  -1.957725406 -37.31034470 #>  [894,]   7.092727661  -3.603430748 -36.94392776 #>  [895,]   9.613152504  -4.670000553 -36.29597473 #>  [896,]  12.576668739  -5.134094715 -35.33469009 #>  [897,]  15.224645615  -5.641179562 -34.22564697 #>  [898,]  16.451961517  -6.613284588 -33.48040771 #>  [899,]  16.444944382  -7.041353703 -33.38369751 #>  [900,]  16.561746597  -6.789286613 -33.38037872 #>  [901,]  17.722549438  -7.886793613 -32.54605484 #>  [902,]  19.208503723 -11.551065445 -30.52169800 #>  [903,]  21.359664917 -15.837843895 -27.11156845 #>  [904,]  24.811386108 -19.374759674 -21.12707329 #>  [905,]  27.742925644 -22.442300797 -12.59904385 #>  [906,]  28.877468109 -24.040813446  -4.51628447 #>  [907,]  29.098228455 -23.938673019   1.45921278 #>  [908,]  29.276422501 -22.896003723   5.98030710 #>  [909,]  29.392456055 -21.346435547   9.77081871 #>  [910,]  29.418426514 -18.991973877  13.51382828 #>  [911,]  30.293376923 -14.917158127  16.38004112 #>  [912,]  32.243747711  -8.601251602  17.06036186 #>  [913,]  33.451786041  -1.775876403  16.89532661 #>  [914,]  33.306613922   3.509751081  16.84660149 #>  [915,]  32.712852478   7.828358650  16.43458366 #>  [916,]  31.779428482  11.072084427  16.40705872 #>  [917,]  30.811384201  12.844791412  16.92439270 #>  [918,]  30.002647400  15.376688957  16.08897972 #>  [919,]  28.268236160  19.516199112  14.60799503 #>  [920,]  25.630493164  24.130373001  12.64727592 #>  [921,]  23.074010849  28.629699707   6.28482962 #>  [922,]  20.354122162  31.165380478  -3.28007150 #>  [923,]  18.186487198  31.073581696 -10.37439251 #>  [924,]  17.114135742  29.802669525 -14.72109699 #>  [925,]  16.638481140  28.406818390 -17.90845490 #>  [926,]  16.276744843  27.178209305 -20.11080742 #>  [927,]  14.403388023  25.706056595 -23.15692329 #>  [928,]  12.778617859  23.101715088 -26.71221924 #>  [929,]  13.495244980  19.464447021 -29.18339348 #>  [930,]  15.072665215  16.181419373 -30.45863152 #>  [931,]  15.643666267  14.409827232 -31.09946823 #>  [932,]  15.656404495  13.061666489 -31.69132996 #>  [933,]  15.829662323  11.493438721 -32.24567795 #>  [934,]  15.854252815  10.586843491 -32.53092194 #>  [935,]  16.197620392   8.951539040 -32.88379288 #>  [936,]  15.716101646   4.865893841 -33.99627686 #>  [937,]  15.685628891  -1.279950500 -34.33498764 #>  [938,]  16.578577042  -6.734651089 -33.36632919 #>  [939,]  16.927059174 -10.603308678 -32.12900925 #>  [940,]  18.195930481 -14.327337265 -29.91151810 #>  [941,]  18.317983627 -17.895616531 -27.93939972 #>  [942,]  17.901519775 -21.039798737 -25.88812065 #>  [943,]  20.060289383 -23.270963669 -22.06923676 #>  [944,]  22.447530746 -24.232271194 -18.56715584 #>  [945,]  23.634204865 -24.776338577 -16.13670731 #>  [946,]  25.136396408 -25.047649384 -13.05145931 #>  [947,]  26.654830933 -24.908664703 -10.05084801 #>  [948,]  27.335811615 -24.986961365  -7.56061649 #>  [949,]  27.716472626 -25.239093781  -4.50628996 #>  [950,]  28.106229782 -25.132019043  -1.37827277 #>  [951,]  28.187536240 -25.049510956   0.41021463 #>  [952,]  27.586185455 -25.657217026   0.62058306 #>  [953,]  27.034244537 -26.240804672   0.19842426 #>  [954,]  26.633777618 -26.629680634  -1.16172278 #>  [955,]  26.119817734 -27.019660950  -3.16820240 #>  [956,]  26.035852432 -26.664451599  -6.04973078 #>  [957,]  26.066690445 -25.157514572 -10.65714455 #>  [958,]  24.854343414 -24.334518433 -14.85562611 #>  [959,]  22.820898056 -26.051048279 -15.02524090 #>  [960,]  21.066331863 -28.803365707 -12.23498821 #>  [961,]  19.202884674 -30.885192871  -9.95300102 #>  [962,]  15.879348755 -33.087375641  -8.01045036 #>  [963,]  11.299003601 -34.902896881  -8.03835773 #>  [964,]   7.725511551 -34.465847015 -12.54206181 #>  [965,]   5.017827034 -32.553756714 -18.00049973 #>  [966,]   2.606150389 -30.273973465 -22.14896965 #>  [967,]   1.616203666 -25.513189316 -27.32398033 #>  [968,]   2.189182520 -20.291707993 -31.55754662 #>  [969,]   2.078369617 -20.212036133 -31.55347824 #>  [970,]  -0.203173921 -22.617425919 -29.90664673 #>  [971,]  -0.515693605 -22.949008942 -29.68050766 #>  [972,]  -1.316203356 -20.353679657 -31.29840279 #>  [973,]  -3.179526806 -17.083593369 -33.15817261 #>  [974,]  -3.311463118 -14.511691093 -34.26501846 #>  [975,]  -4.923116207 -14.052858353 -34.33314514 #>  [976,]  -8.133775711 -15.633625984 -32.76728439 #>  [977,]  -6.634265900 -16.429067612 -33.03105927 #>  [978,]  -7.073814392 -18.740066528 -31.37479019 #>  [979,] -19.472173691 -18.489061356 -25.04843330 #>  [980,] -22.548048019  -9.956153870 -27.62715340 #>  [981,] -13.851230621  -7.577115536 -34.05101013 #>  [982,]  -4.733782768 -16.335596085 -33.13890076 #>  [983,]   3.177561998 -21.897642136 -30.44858360 #>  [984,]   7.193437576 -21.035949707 -30.26365662 #>  [985,]   9.441049576 -18.823808670 -31.16335106 #>  [986,]  10.050527573 -18.346851349 -31.30487061 #>  [987,]  10.007908821 -19.831840515 -30.37506676 #>  [988,]  12.014751434 -19.736511230 -29.69278145 #>  [989,]  13.579218864 -16.451702118 -31.03916359 #>  [990,]  14.294518471 -16.931058884 -30.43663597 #>  [991,]  16.024766922 -21.721462250 -26.21758652 #>  [992,]  17.382209778 -24.599454880 -22.82111740 #>  [993,]  19.439834595 -25.507169724 -19.67356300 #>  [994,]  21.864345551 -26.409303665 -15.65626240 #>  [995,]  21.087999344 -27.249090195 -15.24365139 #>  [996,]  18.832576752 -27.073093414 -18.10234070 #>  [997,]  17.874128342 -25.866399765 -20.82305717 #>  [998,]  16.178302765 -22.690635681 -25.34004402 #>  [999,]  12.090375900 -15.652581215 -31.84579277 #> [1000,]   9.906681061  -7.083242893 -35.57903671 #> [1001,]  10.442144394  -0.380666703 -35.99917603 #> [1002,]   8.789162636   4.264894962 -36.08890533 #> [1003,]   7.191241264   5.971945286 -36.25477219 #> [1004,]   7.296039104   3.509900570 -36.52777481 #> [1005,]   6.694078922  -1.264920235 -36.79389954 #> [1006,]   7.103074551  -6.226441383 -36.25847244 #> [1007,]   9.024994850 -11.112195015 -34.64070129 #> [1008,]  10.958613396 -15.043685913 -32.55994415 #> [1009,]  10.714646339 -16.849414825 -31.78538322 #> [1010,]   8.087021828 -16.464653015 -32.80025864 #> [1011,]   5.829157829 -11.361406326 -34.97339630 #> [1012,]   6.764017105  -6.480554581 -36.41698456 #> [1013,]  12.761514664  -8.740195274 -34.08723831 #> [1014,]  20.136356354 -13.192976952 -28.85824966 #> [1015,]  21.232536316 -16.471136093 -26.37697601 #> [1016,]  19.939496994 -19.651622772 -25.01726913 #> [1017,]  20.065694809 -22.335712433 -22.67804909 #> [1018,]  19.556076050 -23.883066177 -21.46919060 #> [1019,]  19.401298523 -25.019021988 -20.18850517 #> [1020,]  19.040044785 -26.230566025 -18.95450211 #> [1021,]  18.323820114 -27.771171570 -17.41006470 #> [1022,]  16.781690598 -30.210163116 -14.34141254 #> [1023,]  15.032775879 -32.400756836 -11.20276737 #> [1024,]  14.475444794 -31.965408325 -12.85040474 #> [1025,]  14.320395470 -28.969509125 -18.86674309 #> [1026,]  15.992256165 -26.756206512 -20.90587425 #> [1027,]  20.867572784 -25.750177383 -17.35224724 #> [1028,]  24.534061432 -23.655511856 -15.97896671 #> [1029,]  24.239439011 -21.087940216 -19.34676552 #> [1030,]  22.841535568 -19.861215591 -22.21719742 #> [1031,]  22.966323853 -20.149383545 -21.80265617 #> [1032,]  23.759994507 -21.300170898 -19.69430542 #> [1033,]  24.929458618 -21.700597763 -17.94928360 #> [1034,]  23.196588516 -20.106763840 -21.28872108 #> [1035,]  20.479331970 -19.356683731 -24.72610855 #> [1036,]  21.034973145 -21.045703888 -22.77863312 #> [1037,]  17.607875824 -22.964019775 -23.41934586 #> [1038,]  12.292930603 -23.659549713 -26.29780388 #> [1039,]   8.688648224 -22.624351501 -28.15789604 #> [1040,]   3.127357960 -21.971948624 -29.66539383 #> [1041,]  -3.048281908 -23.190134048 -28.87536430 #> [1042,] -12.076483727 -24.559114456 -24.45318031 #> [1043,] -21.144424438 -25.486366272 -15.90448952 #> [1044,] -24.785596848 -26.200519562  -5.69340706 #> [1045,] -24.224634171 -27.379745483   2.79863334 #> [1046,] -20.196224213 -28.338308334  10.44655418 #> [1047,] -15.316076279 -29.648094177  15.15833759 #> [1048,] -16.585218430 -31.960065842   6.19986343 #> [1049,] -18.980930328 -27.923208237 -13.62567329 #> [1050,] -12.600448608 -19.153835297 -28.75319862 #> [1051,]  -0.562206209 -16.429922104 -34.24773788 #> [1052,]  11.650902748 -24.022800446 -24.08444214 #> [1053,]  18.221309662 -32.258251190  -5.74063873 #> [1054,]  17.388032913 -32.293846130  -6.28770876 #> [1055,]  12.501435280 -30.130512238 -17.82835770 #> [1056,]   9.244969368 -28.602958679 -22.54475403 #> [1057,]  13.371577263 -28.462259293 -19.26477814 #> [1058,]  19.257802963 -28.860404968 -14.47005749 #> [1059,]  13.650731087 -29.462377548 -17.83001709 #> [1060,]  -2.124892712 -30.912536621 -20.19474983 #> [1061,] -14.122230530 -31.705635071 -12.48766327 #> [1062,] -18.155603409 -31.588148117  -2.61623430 #> [1063,] -19.551115036 -30.896638870   0.74518937 #> [1064,] -23.104969025 -28.165374756  -3.19811893 #> [1065,] -27.289255142 -21.738332748 -11.73154068 #> [1066,] -21.578123093 -17.535064697 -23.54602623 #> [1067,] -11.186482430 -23.124183655 -26.22619820 #> [1068,]  -8.956137657 -29.416475296 -20.17240715 #> [1069,] -10.807466507 -27.495868683 -22.01849174 #> [1070,] -15.365301132 -20.439889908 -26.78362083 #> [1071,] -15.323663712  -7.394478321 -31.79640198 #> [1072,] -13.779830933  -2.506740093 -34.18366241 #> [1073,] -18.685380936  -9.540918350 -29.96844864 #> [1074,] -22.360378265 -12.621376991 -26.76304245 #> [1075,] -25.243890762 -12.770203590 -23.02080345 #> [1076,] -29.521203995 -12.352739334 -16.51287651 #> [1077,] -33.796707153 -15.339170456  -8.96233368 #> [1078,] -30.919013977 -12.201966286  13.28426361 #> [1079,] -18.879766464  16.098712921  21.37125969 #> [1080,] -13.731657982  34.600055695  -5.01601553 #> [1081,] -20.210901260  28.357021332 -13.72798252 #> [1082,] -26.144048691  24.886934280  -4.89138603 #> [1083,] -26.060653687  25.874507904  -4.32912779 #> [1084,] -23.227409363  28.129627228  -0.87018329 #> [1085,] -22.984336853  28.701211929   3.51227355 #> [1086,] -25.133546829  26.422430038   5.29341221 #> [1087,] -23.713388443  25.167749405  12.38309574 #> [1088,] -18.285722733  24.607427597  20.69957924 #> [1089,] -11.683972359  27.029300690  21.37444115 #> [1090,]  -3.298988342  31.566444397  20.53367424 #> [1091,]   0.481893986  18.050186157  29.68784714 #> [1092,]   0.129702449  -4.825333118  36.49938965 #> [1093,]   2.014009237 -13.455089569  34.36212540 #> [1094,]   8.295457840 -15.607859612  31.72405052 #> [1095,]  16.779241562  -3.614351034  31.35363388 #> [1096,]  18.535812378  11.632010460  30.74811172 #> [1097,]  19.059581757  15.587809563  26.54339981 #> [1098,]  21.746059418  20.122539520  23.36978149 #> [1099,]  26.593486786  20.486627579  14.37534904 #> [1100,]  29.824073792  23.894649506  -5.07325792 #> [1101,]  20.822998047  22.564767838  10.01486588 #> [1102,]  10.618732452 -13.972579002  22.57617950 #> [1103,]   4.878327847 -39.023368835  -7.57737446 #> [1104,]  -1.259879947 -25.127719879 -27.48898506 #> [1105,]  -0.287993968 -14.864947319 -32.82224274 #> [1106,]  -2.082453489 -19.392225266 -32.98230362 #> [1107,] -11.349222183  -6.921614647 -31.32248878 #> [1108,]  -4.546107769  10.563135147 -35.13973618 #> [1109,]   8.761286736  -9.150277138 -32.18825150 #> [1110,]   9.707480431 -32.321132660 -18.77852058 #> [1111,]   4.621889591 -33.389114380 -20.27597046 #> [1112,]   8.622159958  -5.510872364 -30.16371918 #> [1113,]  27.139125824   6.450287342 -15.99879932 #> [1114,]  27.222543716 -19.384054184 -11.86318493 #> [1115,]  14.489999771 -19.619842529 -29.44863319 #> [1116,]  14.288273811  -9.323336601 -33.33583069 #> [1117,]  13.546674728  -9.492854118 -32.82904434 #> [1118,]   8.617543221  -9.437525749 -34.96887589 #> [1119,]   1.910895109  -8.297737122 -35.83462524 #> [1120,]  -5.059175968  -6.414906502 -35.83058167 #> [1121,]  -8.710234642  -9.435473442 -34.42195892 #> [1122,]  -9.325699806 -17.136707306 -31.07323647 #> [1123,]  -8.519761086 -24.003135681 -26.44603157 #> [1124,]  -7.950962543 -27.419115067 -23.13427353 #> [1125,]  -9.452843666 -28.738376617 -20.58533669 #> [1126,] -11.450173378 -28.781108856 -19.42947006 #> [1127,] -14.363060951 -27.807193756 -19.32703400 #> [1128,] -17.223674774 -29.663516998 -11.10627747 #> [1129,] -17.356290817 -32.042713165   1.06240833 #> [1130,] -17.322290421 -31.027736664   8.90537643 #> [1131,] -15.732317924 -25.478784561  20.12631416 #> [1132,] -16.087890625 -11.945213318  30.07167053 #> [1133,] -21.525556564   0.047848880  29.61791039 #> [1134,] -25.888931274   2.296596766  25.58466911 #> [1135,] -28.568151474   0.137607619  22.44117928 #> [1136,] -29.973730087  -2.383785248  20.67922401 #> [1137,] -31.133970261  -4.724332333  18.12207603 #> [1138,] -31.808567047  -6.690412521  16.40431023 #> [1139,] -28.613180161  -5.469217300  21.69898987 #> [1140,] -28.168006897   0.789951086  22.87167168 #> [1141,] -29.600339890   5.697960377  20.70928574 #> [1142,] -27.528419495   9.868814468  21.54068756 #> [1143,] -27.248590469  16.303428650  17.64604378 #> [1144,] -27.057481766  17.955471039  16.95201111 #> [1145,] -27.421504974  15.477179527  18.49419022 #> [1146,] -27.979183197  13.089343071  19.48657799 #> [1147,] -28.878898621  11.313604355  19.34709549 #> [1148,] -28.489509583   9.774511337  20.56326866 #> [1149,] -27.747373581   8.157579422  22.30977249 #> [1150,] -29.630292892   6.852306366  20.27585793 #> [1151,] -28.083621979   6.019844532  22.54937553 #> [1152,] -27.041893005   5.400507450  24.06341171 #> [1153,] -27.253557205   4.799240112  23.93087196 #> [1154,] -26.763187408   5.209780216  24.41084290 #> [1155,] -29.731422424   5.717158794  20.24458504 #> [1156,] -30.567340851   5.455882072  19.44100952 #> [1157,] -30.734420776   6.090806007  18.60620308 #> [1158,] -31.687889099   6.546082020  16.99516487 #> [1159,] -30.771514893   6.813503265  18.55389786 #> [1160,] -31.703241348   7.056138515  16.84380341 #> [1161,] -30.794731140   7.522673130  18.29138184 #> [1162,] -31.343812943   8.007130623  16.95360374 #> [1163,] -31.950689316   8.161897659  15.95980072 #> [1164,] -31.723266602   8.833594322  15.90602493 #> [1165,] -32.263061523   9.127407074  14.79553318 #> [1166,] -31.863904953   9.660946846  15.27001381 #> [1167,] -32.433311462  10.164390564  13.67082500 #> [1168,] -32.291538239   9.687909126  14.43338680 #> [1169,] -32.725872040   9.161045074  13.79834461 #> [1170,] -31.714397430   8.810685158  16.09973717 #> [1171,] -32.232616425   7.076808929  15.85771084 #> [1172,] -34.102081299   5.628739834  12.80979633 #> [1173,] -34.829856873   5.146453381   9.94891644 #> [1174,] -35.488746643   5.047268867   8.26552010 #> [1175,] -35.100944519   7.310050011   7.64860058 #> [1176,] -35.584285736   8.980648994   1.29234481 #> [1177,] -35.522499084   9.619554520  -2.52143049 #> [1178,] -34.461368561  11.192465782  -5.33682156 #> [1179,] -33.674667358  12.996363640  -7.35554075 #> [1180,] -32.306179047  13.984944344 -10.19040203 #> [1181,] -31.592130661  15.041405678 -11.28293419 #> [1182,] -30.890254974  16.010072708 -12.12015629 #> [1183,] -30.248291016  17.839485168 -10.92886543 #> [1184,] -31.033506393  19.883810043  -2.83818388 #> [1185,] -31.307628632  19.261312485  -3.02225256 #> [1186,] -30.741115570  19.494422913  -5.82800436 #> [1187,] -30.836606979  19.882043839  -3.95874143 #> [1188,] -30.957584381  19.071458817  -6.05189133 #> [1189,] -30.594409943  19.627544403  -6.58864212 #> [1190,] -30.322381973  19.850006104  -7.38976765 #> [1191,] -31.437013626  18.475009918  -4.99594307 #> [1192,] -33.791172028  14.977627754  -0.60751611 #> [1193,] -34.965061188  11.943310738   0.50873846 #> [1194,] -35.045520782  11.363718987  -0.34995955 #> [1195,] -35.420078278  10.067554474  -1.74426842 #> [1196,] -36.248733521   6.345888138   1.15888619 #> [1197,] -36.849399567   1.558352470   1.78199553 #> [1198,] -36.473609924  -3.299512386   2.70182276 #> [1199,] -35.843826294  -8.468317986   2.86437297 #> [1200,] -33.887508392 -11.359730721   7.99932432 #> [1201,] -30.887901306 -11.459712982  16.72428513 #> [1202,] -31.244726181 -10.781218529  16.21886635 #> [1203,] -32.710350037  -8.757821083  14.52480125 #> [1204,] -33.733089447  -3.910479546  14.36493683 #> [1205,] -34.000347137   0.873604178  14.43982506 #> [1206,] -33.849361420   4.472950935  13.90153885 #> [1207,] -33.846225739   7.077620029  13.56279850 #> [1208,] -32.968132019  11.155711174  11.79895496 #> [1209,] -33.305194855  15.030348778   6.54419994 #> [1210,] -33.078861237  16.123065948   4.17285204 #> [1211,] -33.062175751  16.576251984   0.76833999 #> [1212,] -32.580081940  17.635572433  -1.89741099 #> [1213,] -31.269180298  18.374807358  -6.66321850 #> [1214,] -30.732435226  18.202899933 -10.26561260 #> [1215,] -29.521242142  18.436069489 -12.35061646 #> [1216,] -29.213666916  18.855695724 -12.95013046 #> [1217,] -28.570325851  19.246023178 -13.64427662 #> [1218,] -27.801439285  20.328920364 -13.72207546 #> [1219,] -28.440542221  20.693525314 -11.90667629 #> [1220,] -28.969488144  20.160608292 -11.52906418 #> [1221,] -28.647617340  19.648178101 -13.21437073 #> [1222,] -28.525184631  17.735719681 -14.90923023 #> [1223,] -32.442363739  13.803160667 -14.24444389 #> [1224,] -24.317136765  17.289257050 -19.27996063 #> [1225,]  -4.596910477  27.617422104 -25.07825851 #> [1226,]  -8.340418816  31.886398315 -16.51691055 #> [1227,] -26.112062454  26.644062042  -2.93840551 #> [1228,] -34.547393799  14.365558624  -1.48107171 #> [1229,] -36.768402100   1.793608427  -1.97280788 #> [1230,] -36.111972809  -4.874649525   5.93493605 #> [1231,] -35.593326569  -6.234558105   9.29509163 #> [1232,] -34.550399780  -4.029826164  12.51882839 #> [1233,] -33.637123108   3.070676565  14.94366455 #> [1234,] -34.870944977   8.539655685  10.24237633 #> [1235,] -34.740989685  10.849979401   7.86778688 #> [1236,] -34.372219086  13.251867294   2.61224818 #> [1237,] -34.435153961  14.623371124  -0.19511425 #> [1238,] -33.857379913  14.595513344  -2.91714883 #> [1239,] -33.330570221  14.819144249  -7.86456728 #> [1240,] -31.617374420  16.149991989 -10.81447220 #> [1241,] -30.221950531  15.262179375 -15.24874496 #> [1242,] -29.840967178  14.203127861 -16.91899300 #> [1243,] -27.551586151  14.950467110 -20.22673416 #> [1244,] -28.456081390  12.357821465 -19.38356018 #> [1245,] -34.296085358   9.074542046  -9.69677830 #> [1246,] -34.499835968   5.010424614 -12.27715683 #> [1247,] -31.625518799   0.998671114 -20.08811188 #> [1248,] -32.868515015   4.119384289 -16.58965874 #> [1249,] -33.890216827   8.850054741 -12.93799019 #> [1250,] -31.775859833  11.685816765 -15.41018772 #> [1251,] -31.022914886  14.116662979 -14.96812057 #> [1252,] -30.723817825  15.100831985 -14.68726826 #> [1253,] -29.605384827  16.604839325 -15.16983318 #> [1254,] -30.043788910  18.249160767 -12.38298702 #> [1255,] -28.949323654  18.313234329 -14.76093674 #> [1256,] -28.612756729  19.778873444 -13.23724461 #> [1257,] -29.073238373  21.089630127 -10.40330029 #> [1258,] -28.311357498  21.451698303 -11.44536495 #> [1259,] -28.810853958  21.544633865  -9.94262886 #> [1260,] -28.871877670  21.361568451 -10.26575565 #> [1261,] -28.872682571  21.663545609  -9.61978149 #> [1262,] -29.540430069  20.566371918 -10.04155540 #> [1263,] -30.146068573  18.988399506 -11.08776760 #> [1264,] -31.657630920  18.526254654  -7.87868929 #> [1265,] -31.620828629  16.866722107 -10.05242157 #> [1266,] -29.983934402  14.126826286 -16.99750328 #> [1267,] -29.698202133  13.517432213 -18.20229912 #> [1268,] -27.527532578  12.627823830 -21.23647118 #> [1269,] -25.648487091  10.990914345 -24.96972656 #> [1270,] -24.126798630   9.855086327 -26.49410439 #> [1271,] -21.879249573  10.314630508 -28.32542610 #> [1272,] -22.095001221  11.357923508 -27.89958763 #> [1273,] -24.287969589  11.548136711 -25.67015266 #> [1274,] -25.268358231  12.206463814 -24.54537392 #> [1275,] -25.136816025  10.618962288 -25.29647827 #> [1276,] -25.994258881   6.230733395 -25.93528938 #> [1277,] -23.727857590   1.789030075 -28.67954826 #> [1278,] -18.970727921  -3.884734154 -31.68918419 #> [1279,] -15.967278481  -9.815356255 -32.41551971 #> [1280,] -18.388450623 -13.682694435 -29.38444328 #> [1281,] -21.939853668 -16.548044205 -25.31484795 #> [1282,] -22.831697464 -18.243480682 -23.24119949 #> [1283,] -24.129615784 -17.732431412 -22.09797859 #> [1284,] -24.383720398 -15.575057983 -23.64500046 #> [1285,] -24.948808670  -9.258922577 -26.16100693 #> [1286,] -28.573495865   1.594756722 -23.62203407 #> [1287,] -29.509508133   9.571966171 -21.01511002 #> [1288,] -28.119024277  13.578733444 -20.23896217 #> [1289,] -28.802923203  16.810186386 -16.69155502 #> [1290,] -28.307062149  17.755567551 -16.81234932 #> [1291,] -27.521385193  15.585623741 -19.73863411 #> [1292,] -26.479724884  15.181019783 -21.64457703 #> [1293,] -23.071237564  14.042961121 -25.45833969 #> [1294,] -19.884592056   7.831608772 -30.50427818 #> [1295,] -19.462055206   5.381408215 -31.58880997 #> [1296,] -19.346103668   6.769143581 -31.16361237 #> [1297,] -18.894422531   7.859656811 -31.29929161 #> [1298,] -20.682415009   9.400873184 -29.61691856 #> [1299,] -21.521533966  10.616456032 -28.65997887 #> [1300,] -19.606296539  11.109356880 -29.81820297 #> [1301,] -18.078840256  11.684292793 -30.58267212 #> [1302,] -17.474767685  13.399016380 -30.22279739 #> [1303,] -16.487722397  15.800480843 -29.63079453 #> [1304,] -14.642164230  18.378221512 -29.11936760 #> [1305,] -13.404587746  21.395915985 -27.63107491 #> [1306,] -12.914702415  24.395526886 -25.30619621 #> [1307,] -11.342924118  25.877935410 -24.56991959 #> [1308,]  -9.283272743  24.802709579 -26.50068283 #> [1309,]  -8.145850182  21.418708801 -29.64352036 #> [1310,]  -6.595148563  16.107465744 -33.11692429 #> [1311,]  -5.211713314   9.994179726 -35.83520126 #> [1312,]  -4.704943657   3.155932665 -36.97900772 #> [1313,]  -4.368640423  -0.423309088 -37.33570480 #> [1314,]  -4.395653248   4.170711040 -36.97968674 #> [1315,]  -1.652423501  11.042304993 -35.83957672 #> [1316,]   4.552503109  13.537161827 -34.83515549 #> [1317,]  11.316944122  12.646469116 -33.60424042 #> [1318,]  16.400512695  11.643751144 -31.99179840 #> [1319,]  19.124246597  13.282573700 -29.94049072 #> [1320,]  23.232057571  16.791051865 -24.60255623 #> [1321,]  29.185792923  16.512435913 -18.08912468 #> [1322,]  33.958396912  11.648287773 -13.34519768 #> [1323,]  36.866828918   7.753093243  -5.84942627 #> [1324,]  37.728717804   6.340065002  -1.72060263 #> [1325,]  37.598838806   5.753602028  -3.79232192 #> [1326,]  37.745788574   5.803819180  -1.91209888 #> [1327,]  37.816684723   5.893486023  -0.56815213 #> [1328,]  37.732547760   6.122567654  -0.69521344 #> [1329,]  37.866443634   5.916473389   0.24202870 #> [1330,]  37.884616852   3.794971466   2.07296896 #> [1331,]  38.076896667   3.768664122   2.98298573 #> [1332,]  38.303451538   3.881119251   2.00109506 #> [1333,]  36.260318756  -8.329950333   3.31115294 #> [1334,]  35.962726593 -13.754152298   1.16923428 #> [1335,]  37.840145111   2.229212523  -2.09439635 #> [1336,]  33.544692993  18.698663712   2.77143836 #> [1337,]  24.515604019  28.235303879   6.18034840 #> [1338,]  16.532152176  33.994789124   2.48852372 #> [1339,]  11.297508240  35.704185486  -4.81571245 #> [1340,]   8.574583054  34.781326294 -11.85920334 #> [1341,]   6.095715046  33.713855743 -15.71444035 #> [1342,]   2.649815559  32.698165894 -18.41288567 #> [1343,]   0.261934370  30.931472778 -21.40817261 #> [1344,]  -1.121209025  29.802524567 -22.86070251 #> [1345,]  -3.604633808  29.404603958 -23.13155937 #> [1346,]  -5.896490097  26.299497604 -26.06346321 #> [1347,]  -5.386531830  20.404727936 -31.03189087 #> [1348,]  -2.815989733  14.751833916 -34.50960541 #> [1349,]   0.329241008   9.114291191 -36.43564987 #> [1350,]   3.465897560   5.053649902 -37.20081329 #> [1351,]   5.119151592   4.995683193 -37.05102539 #> [1352,]   6.586544037   6.096368790 -36.63790512 #> [1353,]   8.466012955   5.954918385 -36.32518768 #> [1354,]   8.288229942   4.624193668 -36.57807159 #> [1355,]   6.564170837   4.221186638 -36.95652008 #> [1356,]   4.798067093   6.718434334 -36.78899384 #> [1357,]   4.430141926  10.108162880 -36.05165863 #> [1358,]   4.678444862  13.015199661 -35.09672165 #> [1359,]   4.191771984  17.202383041 -33.23387146 #> [1360,]   3.230715513  22.149038315 -30.28739738 #> [1361,]   2.322553635  24.479150772 -28.56808853 #> [1362,]   1.762372017  24.473793030 -28.54003906 #> [1363,]   1.218271613  24.433710098 -28.62047005 #> [1364,]   0.318838269  24.171878815 -28.86369705 #> [1365,]  -0.604444146  22.331197739 -30.29509544 #> [1366,]  -1.162120461  18.699396133 -32.62920761 #> [1367,]  -0.593288064  14.559335709 -34.68288803 #> [1368,]   1.884225845  12.229192734 -35.55410004 #> [1369,]   3.769376278  11.977067947 -35.54251099 #> [1370,]   3.096146345  12.063007355 -35.59151459 #> [1371,]   1.221002936  12.451660156 -35.54614639 #> [1372,]  -0.344002008  12.588709831 -35.48023987 #> [1373,]   0.335375220  11.363838196 -35.89191437 #> [1374,]   1.099418283   8.655916214 -36.66171265 #> [1375,]  -0.318720549   4.925183296 -37.34252548 #> [1376,]  -1.515778899   1.863308668 -37.60714722 #> [1377,]  -1.029045939   0.761691511 -37.63111115 #> [1378,]  -0.079136752   1.383063912 -37.64765549 #> [1379,]   0.510621846   3.524843216 -37.52120972 #> [1380,]   0.591527820   7.176217079 -36.96616364 #> [1381,]  -0.026847428  11.237021446 -35.93053818 #> [1382,]   0.249329090  13.815449715 -35.04365158 #> [1383,]  -0.186458245  15.026572227 -34.51413345 #> [1384,]  -1.354142904  15.993186951 -34.03416443 #> [1385,]  -1.609470010  16.036979675 -34.00098038 #> [1386,]  -2.746651649  15.749055862 -34.02000427 #> [1387,]  -4.909684181  16.525732040 -33.41225433 #> [1388,]  -6.974385738  18.907646179 -31.71183014 #> [1389,]  -9.441698074  22.140289307 -28.77913284 #> [1390,] -11.552073479  23.627664566 -26.78298378 #> [1391,] -12.484400749  22.949884415 -26.90679359 #> [1392,] -14.740199089  21.666645050 -26.79789352 #> [1393,] -18.380966187  21.374370575 -24.69439316 #> [1394,] -20.775995255  22.601434708 -21.43860054 #> [1395,] -21.902973175  24.429618835 -18.21018600 #> [1396,] -23.401084900  25.723089218 -13.88476849 #> [1397,] -24.280353546  26.035665512 -11.74839973 #> [1398,] -23.464031219  26.662590027 -12.02975464 #> [1399,] -24.846246719  27.377555847  -5.26337862 #> [1400,] -28.276189804  24.714530945   3.49773026 #> [1401,] -30.927177429  20.367507935   5.70489788 #> [1402,] -32.902378082  16.890716553   6.13860893 #> [1403,] -34.490371704  11.115684509   8.95780563 #> [1404,] -35.839714050   4.261767864   9.64182377 #> [1405,] -36.418918610   0.044135798   8.34949207 #> [1406,] -35.623924255  -5.656078815   8.61799240 #> [1407,] -35.553863525  -8.377063751   5.52448177 #> [1408,] -36.952495575  -4.885774612   1.71171749 #> [1409,] -36.981727600  -5.007315159   1.92813981 #> [1410,] -36.892589569  -5.071700096   0.43224487 #> [1411,] -37.397060394  -0.336019427   0.90593123 #> [1412,] -37.032173157   5.558506012   0.23339435 #> [1413,] -35.309017181   8.900771141  -7.81174707 #> [1414,] -34.145462036  10.820034981 -10.64906979 #> [1415,] -33.284961700  13.826011658  -9.38844585 #> [1416,] -32.222221375  15.528438568 -10.80737686 #> [1417,] -32.412307739  18.033155441  -4.25175190 #> [1418,] -31.297454834  20.116552353   6.29547167 #> [1419,] -31.016059875  17.580564499  11.51820183 #> [1420,] -33.527145386  12.854814529  10.94057941 #> [1421,] -34.660652161   7.976127625  11.66988373 #> [1422,] -35.646167755   3.841443062  10.53171539 #> [1423,] -36.341541290   0.025542453   8.90476227 #> [1424,] -35.848716736  -5.821949005   7.82280779 #> [1425,] -35.416030884  -9.605199814   7.16964436 #> [1426,] -34.659297943 -11.864025116   6.01508951 #> [1427,] -34.253402710 -14.342705727   2.64094639 #> [1428,] -34.331054688 -13.869758606   4.12121868 #> [1429,] -34.725013733 -13.042020798   1.96435523 #> [1430,] -34.728580475 -13.694997787  -0.29475129 #> [1431,] -33.937538147 -14.892127037  -2.02769327 #> [1432,] -34.149101257 -14.269526482  -4.19403648 #> [1433,] -34.420059204 -13.040255547  -5.43256187 #> [1434,] -33.876304626 -12.982571602  -8.16541958 #> [1435,] -34.637866974 -12.238857269  -6.81419468 #> [1436,] -33.251850128 -13.078348160  -9.93778419 #> [1437,] -30.976745605 -13.293985367 -15.92475986 #> [1438,] -31.676061630 -12.000969887 -15.60532475 #> [1439,] -29.757873535 -12.423033714 -18.28087997 #> [1440,] -27.748519897 -11.071285248 -22.29226303 #> [1441,] -29.215406418  -8.898814201 -21.31126022 #> [1442,] -29.129821777  -8.857606888 -21.45287323 #> [1443,] -28.249965668  -9.489880562 -22.37444496 #> [1444,] -27.486171722 -11.031369209 -22.57273483 #> [1445,] -26.698362350 -12.301170349 -22.92297935 #> [1446,] -26.092494965 -13.469798088 -22.93041420 #> [1447,] -25.898502350 -14.566196442 -22.46023560 #> [1448,] -26.934772491 -13.786314011 -21.87228966 #> [1449,] -24.358991623 -14.053685188 -24.13934517 #> [1450,] -20.849102020 -15.420258522 -26.85960197 #> [1451,] -18.861785889 -17.039604187 -27.20338249 #> [1452,] -16.456541061 -17.840625763 -28.27754974 #> [1453,] -17.568380356 -18.972543716 -26.77935791 #> [1454,] -17.136133194 -21.535106659 -25.18456268 #> [1455,] -19.306400299 -20.755935669 -23.98939705 #> [1456,] -20.895050049 -20.270532608 -23.17160797 #> [1457,] -18.071706772 -20.991336823 -24.98191261 #> [1458,] -16.687147141 -22.320762634 -24.65655518 #> [1459,] -16.027217865 -24.871374130 -22.77655983 #> [1460,] -14.856916428 -25.121152878 -23.33316231 #> [1461,]  -7.680170536 -22.439453125 -28.73522949 #> [1462,]  -3.696046114 -26.224853516 -26.72540855 #> [1463,] -16.614509583 -30.768218994  -9.25291824 #> [1464,] -31.084373474 -21.580820084   0.25574610 #> [1465,] -34.887321472 -11.099141121  -6.27865553 #> [1466,] -35.815933228  -4.386991501  -7.88559675 #> [1467,] -36.990600586   1.924047232  -4.01547194 #> [1468,] -36.914745331   5.057699680  -2.58413768 #> [1469,] -36.221347809   8.372295380  -0.24251769 #> [1470,] -35.142955780  11.705193520  -3.58294177 #> [1471,] -34.543144226  13.741570473  -4.09691906 #> [1472,] -33.546482086  15.235237122  -5.19992590 #> [1473,] -32.659542084  16.187389374  -7.99596977 #> [1474,] -33.380329132  16.349834442  -4.41955137 #> [1475,] -32.668933868  16.086660385  -8.08819008 #> [1476,] -31.757053375  16.523880005 -10.64713955 #> [1477,] -33.168205261  15.831248283  -6.84434748 #> [1478,] -34.477912903  13.920492172  -4.50403404 #> [1479,] -35.466915131  11.309523582   0.53372735 #> [1480,] -36.620201111   7.620796204   1.80506194 #> [1481,] -37.048702240   3.817053318   2.10952282 #> [1482,] -37.179962158   0.198460311   2.54548311 #> [1483,] -37.161731720  -3.016575098   1.04791248 #> [1484,] -36.562526703  -6.828201294   0.81551421 #> [1485,] -35.634357452 -10.686994553   1.61920738 #> [1486,] -34.303100586 -14.034594536   1.48045969 #> [1487,] -33.314323425 -16.558395386  -1.29546595 #> [1488,] -32.513919830 -17.796167374  -3.26390815 #> [1489,] -31.223144531 -19.491594315  -4.74028111 #> [1490,] -30.226978302 -21.490730286  -1.23059297 #> [1491,] -29.140249252 -23.447473526  -0.17619717 #> [1492,] -27.572154999 -24.451019287   3.71204996 #> [1493,] -26.567386627 -23.883821487  10.93596172 #> [1494,] -26.512590408 -23.661758423  11.58603001 #> [1495,] -26.598615646 -21.646869659  14.22480869 #> [1496,] -28.001728058 -17.337160110  17.94116592 #> [1497,] -29.037830353 -13.168109894  19.52746582 #> [1498,] -30.649127960  -8.012339592  19.80860329 #> [1499,] -32.012435913  -3.729337692  19.32940483 #> [1500,] -31.929950714   0.869151473  19.20028305 #> [1501,] -33.121517181   2.247502565  17.71611786 #> [1502,] -31.853305817   6.440416336  18.86853981 #> [1503,] -22.080209732   9.509019852  28.73019791 #> [1504,] -17.086984634  -8.731211662  30.44187355 #> [1505,] -21.401178360 -23.504552841  21.83191299 #> [1506,] -23.287244797 -17.436401367  23.04330826 #> [1507,] -26.829719543  -8.300424576  24.64369774 #> [1508,] -28.832038879  -4.514681816  24.08978081 #> [1509,] -28.229888916   1.485331893  24.06390572 #> [1510,] -30.381729126   8.107798576  21.07259941 #> [1511,] -30.757995605  11.644318581  18.14372253 #> [1512,] -31.734102249  15.880342484  11.72063065 #> [1513,] -32.881282806  16.862823486   8.08038235 #> [1514,] -33.581298828  15.769629478   4.67263269 #> [1515,] -34.553016663  14.889279366   0.99212605 #> [1516,] -34.565830231  14.027605057  -2.08522892 #> [1517,] -34.895675659  13.427956581  -3.37353325 #> [1518,] -34.748119354  12.124670982  -6.00556803 #> [1519,] -34.522510529  10.476724625  -9.92314911 #> [1520,] -35.019725800   9.632797241  -9.12430191 #> [1521,] -35.627174377   8.671176910  -7.32998180 #> [1522,] -35.519058228   6.089375019  -9.07999229 #> [1523,] -35.763980865   3.463709831 -10.99420929 #> [1524,] -34.409381866  -2.669074059 -13.13522816 #> [1525,] -31.345886230 -10.094307899 -17.54471207 #> [1526,] -31.633340836 -10.309127808 -17.00014305 #> [1527,] -32.629180908  -9.125961304 -15.56703758 #> [1528,] -33.037117004  -8.995841026 -14.87752724 #> [1529,] -33.916122437  -7.187058449 -13.85480022 #> [1530,] -34.832408905  -5.690987587 -12.25325680 #> [1531,] -35.749942780  -5.330225945  -9.42149353 #> [1532,] -36.401542664  -4.673186779  -7.07917547 #> [1533,] -36.922958374  -2.619143724  -6.08228159 #> [1534,] -35.577232361  -1.733230352 -10.58902645 #> [1535,] -34.336765289  -0.911524177 -14.79279613 #> [1536,] -34.197784424  -0.322193176 -14.91973972 #> [1537,] -32.297264099  -2.169554949 -18.39627457 #> [1538,] -32.859676361  -0.340013415 -17.60477448 #> [1539,] -34.929115295   3.757103920 -13.13239002 #> [1540,] -35.477432251   7.117344379  -9.58795834 #> [1541,] -35.060211182   9.352770805  -9.15220070 #> [1542,] -33.828502655  10.629068375 -11.79413795 #> [1543,] -34.118099213  12.042869568  -9.50651264 #> [1544,] -33.876502991  12.644244194  -9.69331169 #> [1545,] -33.355537415  14.021186829  -9.34457684 #> [1546,] -33.781375885  14.489696503  -7.74403095 #> [1547,] -33.963973999  14.568819046  -5.90328407 #> [1548,] -34.059612274  14.910874367  -4.37621880 #> [1549,] -34.409679413  13.235832214  -7.05437660 #> [1550,] -34.914810181  10.537004471  -8.39247990 #> [1551,] -34.945819855   8.996949196  -9.35084629 #> [1552,] -35.256809235   9.392846107  -9.64567852 #> [1553,] -32.673984528   6.094692707 -16.03187370 #> [1554,] -29.838294983  -1.724849105 -22.30059814 #> [1555,] -31.360042572  -4.674618244 -19.87479401 #> [1556,] -32.637363434  -3.401063919 -17.76603889 #> [1557,] -32.169078827  -2.127514362 -19.08464432 #> [1558,] -32.757450104   1.985138655 -17.54245567 #> [1559,] -33.646110535   8.043564796 -14.50186348 #> [1560,] -33.072978973  12.665847778 -12.17933846 #> [1561,] -33.877571106  14.850830078  -5.22179413 #> [1562,] -35.060329437  14.292960167   0.57946587 #> [1563,] -34.947219849  12.786473274   1.39518583 #> [1564,] -36.500274658  10.092752457   1.48281157 #> [1565,] -35.419479370  12.457600594  -1.48353493 #> [1566,] -24.984403610  25.624441147 -10.29938412 #> [1567,] -20.858573914  31.092845917  -0.07782037 #> [1568,] -28.597465515  13.200732231  19.91017914 #> [1569,] -32.406410217  -8.290091515  18.81820297 #> [1570,] -29.432086945 -15.403179169  16.75526810 #> [1571,] -27.081903458 -16.408451080  20.10850334 #> [1572,] -26.128641129 -18.925569534  19.47908592 #> [1573,] -23.923460007 -22.928504944  17.40637398 #> [1574,] -22.991359711 -26.045436859  14.24638844 #> [1575,] -22.923860550 -26.499032974  13.54566860 #> [1576,] -22.228872299 -26.956398010  13.79079151 #> [1577,] -24.708744049 -23.248043060  16.47956276 #> [1578,] -27.101116180 -21.882719040  12.63795185 #> [1579,] -21.885120392 -29.979326248   1.97430086 #> [1580,] -19.732440948 -32.071414948   3.45340562 #> [1581,] -21.946821213 -27.774047852  12.60396862 #> [1582,] -23.530529022 -23.020856857  18.17446899 #> [1583,] -25.352752686 -18.970317841  20.30244064 #> [1584,] -24.838912964 -17.674671173  22.06438255 #> [1585,] -24.865825653 -16.721393585  22.80832672 #> [1586,] -24.561372757 -16.459825516  23.30614281 #> [1587,] -24.263462067 -17.111499786  23.15886688 #> [1588,] -24.113729477 -17.723760605  22.84752846 #> [1589,] -23.759351730 -18.109983444  22.91241646 #> [1590,] -23.862428665 -18.460056305  22.56448555 #> [1591,] -24.175289154 -18.623666763  22.06807327 #> [1592,] -24.596714020 -18.514812469  21.71074295 #> [1593,] -24.885951996 -18.045728683  21.75572395 #> [1594,] -24.946552277 -17.405645370  22.22313881 #> [1595,] -24.604011536 -17.004375458  23.00557709 #> [1596,] -22.709699631 -16.986551285  24.72036934 #> [1597,] -22.626211166 -15.527928352  25.83100128 #> [1598,] -24.222087860 -13.389313698  25.68029022 #> [1599,] -25.310380936 -10.427380562  25.87878609 #> [1600,] -25.360897064  -7.868548393  27.02409744 #> [1601,] -26.099958420  -4.512171745  26.71046829 #> [1602,] -28.835870743  -1.191367984  24.58575439 #> [1603,] -29.176862717  -1.949126005  24.07711792 #> [1604,] -32.122440338  -3.274389267  19.24789619 #> [1605,] -33.758361816  -4.516561985  16.63153076 #> [1606,] -33.771530151  -6.239184856  15.31836319 #> [1607,] -34.359580994  -7.238597393  14.08155441 #> [1608,] -34.047119141 -10.416598320  11.74324512 #> [1609,] -34.133396149 -13.278122902   8.74573803 #> [1610,] -33.667652130 -13.628067017   9.83888054 #> [1611,] -33.784370422 -14.978507042   6.57282925 #> [1612,] -34.672943115 -13.610297203   5.32721472 #> [1613,] -35.967357635  -9.689020157   5.48216438 #> [1614,] -36.736633301  -6.228015900   5.28562355 #> [1615,] -37.276790619  -1.802813530   5.14943981 #> [1616,] -37.238952637   2.007952929   6.41070223 #> [1617,] -34.612304688   3.699829578  14.71859741 #> [1618,] -32.811378479   3.285536051  18.77921295 #> [1619,] -34.519176483   3.047281504  14.85157108 #> [1620,] -34.849880219   2.057263374  14.71314907 #> [1621,] -35.151473999  -0.088004462  13.66830635 #> [1622,] -35.790149689  -1.294795394  12.25067329 #> [1623,] -35.907924652  -2.282646179  11.34091949 #> [1624,] -36.287128448  -3.272536993  10.05048275 #> [1625,] -35.643241882  -5.378335476  11.11547565 #> [1626,] -35.696128845  -8.418915749   8.73161411 #> [1627,] -35.390441895 -10.457969666   7.84997082 #> [1628,] -35.440513611 -11.291272163   5.14554119 #> [1629,] -35.909801483 -11.146190643   3.17106557 #> [1630,] -35.544487000 -11.992722511   1.71693635 #> [1631,] -35.648693085 -12.087270737  -0.19281973 #> [1632,] -36.101001740 -10.592904091   0.65614134 #> [1633,] -36.477706909  -9.160382271   1.86393785 #> [1634,] -37.016334534  -6.822949409   2.45349169 #> [1635,] -37.135616302  -3.703058004   2.45264220 #> [1636,] -38.303440094  -2.204700708   1.07667506 #> [1637,] -35.717426300   3.713101387   8.10902309 #> [1638,] -28.954736710  16.483318329  17.82011223 #> [1639,] -29.158514023  20.695039749  13.40257645 #> [1640,] -31.996543884  18.614185333   8.67258549 #> [1641,] -32.617225647  17.950246811   7.40057898 #> [1642,] -33.821594238  16.826593399   3.59964371 #> [1643,] -34.107002258  15.609411240   5.16093111 #> [1644,] -35.023971558  12.390031815   7.44890738 #> [1645,] -35.511371613  10.220857620   8.57399464 #> [1646,] -34.777854919  11.356483459   9.46525002 #> [1647,] -35.083942413  12.835601807   6.08795977 #> [1648,] -34.349479675  14.597881317   7.12853956 #> [1649,] -33.587207794  16.562286377   2.55820394 #> [1650,] -33.517433167  17.778638840  -2.71247673 #> [1651,] -32.544883728  18.728311539  -4.00680304 #> [1652,] -31.824281693  19.683847427  -4.89142132 #> [1653,] -31.762361526  20.447109222  -2.45321321 #> [1654,] -31.364404678  20.831167221  -3.36685181 #> [1655,] -31.468816757  20.782464981  -3.35038090 #> [1656,] -32.031219482  20.063571930  -1.71208453 #> [1657,] -32.769340515  18.792003632   1.48484683 #> [1658,] -33.789947510  16.948738098   3.46081805 #> [1659,] -34.547832489  15.144149780   3.66404295 #> [1660,] -35.035697937  14.044977188   3.04868031 #> [1661,] -35.394588470  12.787804604   4.23560429 #> [1662,] -35.931468964  10.907454491   5.60515642 #> [1663,] -35.589515686   8.709955215   9.21492481 #> [1664,] -35.775665283   5.269127369  11.52120876 #> [1665,] -35.470329285   3.868237972  12.53978443 #> [1666,] -34.702396393   5.491805077  14.28856277 #> [1667,] -34.419620514   7.350366116  14.24767208 #> [1668,] -34.340820312   9.583836555  12.65596104 #> [1669,] -34.831111908  10.853558540  10.56186199 #> [1670,] -35.360416412  10.267864227   9.03656197 #> [1671,] -36.969104767   6.473477364   4.93414545 #> [1672,] -37.788818359   0.763461530   0.96495926 #> [1673,] -37.402832031  -4.855352879  -0.96600246 #> [1674,] -35.750156403 -11.508934975  -2.20650697 #> [1675,] -33.664039612 -16.491254807  -4.40083599 #> [1676,] -32.315013885 -18.106809616  -6.66491842 #> [1677,] -32.217468262 -18.252059937  -6.84505177 #> [1678,] -31.861001968 -18.581132889  -7.34233809 #> [1679,] -30.903093338 -19.172624588  -9.58457565 #> [1680,] -31.145677567 -19.142501831  -8.97800255 #> [1681,] -31.138891220 -19.063179016  -9.14572430 #> [1682,] -31.830772400 -18.376398087  -8.21464825 #> [1683,] -30.869735718 -19.204320908  -9.46275425 #> [1684,] -30.199724197 -19.114336014 -11.58899307 #> [1685,] -31.972587585 -17.472301483  -9.40132141 #> [1686,] -32.012348175 -16.944810867 -10.20981216 #> [1687,] -33.407356262 -14.727179527  -8.95715141 #> [1688,] -34.066783905 -13.471938133  -8.73135567 #> [1689,] -32.625106812 -11.891472816 -14.23044205 #> [1690,] -33.683425903  -7.826243877 -15.05439949 #> [1691,] -32.572856903  -5.826084137 -17.51674652 #> [1692,] -30.184749603  -3.701794624 -22.13579178 #> [1693,] -29.992633820  -0.529844582 -22.66725159 #> [1694,] -28.026138306   1.072991490 -24.90562820 #> [1695,] -28.136301041   3.132259369 -24.69617653 #> [1696,] -30.602186203   6.121420383 -20.97387314 #> [1697,] -31.167434692   8.065663338 -19.68245888 #> [1698,] -28.934534073   7.835191250 -22.57456970 #> [1699,] -25.902790070   5.755120754 -26.60528374 #> [1700,] -26.192092896   2.870533228 -26.77423096 #> [1701,] -25.810127258  -0.486918777 -27.13870239 #> [1702,] -25.563302994  -0.803874314 -27.43385887 #> [1703,] -25.225475311   1.474321008 -27.70027161 #> [1704,] -24.551994324   2.267997026 -28.24856377 #> [1705,] -25.542728424   3.220205545 -27.28630066 #> [1706,] -26.299777985   2.793993473 -26.64779091 #> [1707,] -25.908813477  -2.234404802 -26.82644653 #> [1708,] -26.797670364  -6.101556778 -25.54501915 #> [1709,] -26.473615646  -6.386163712 -26.06574631 #> [1710,] -17.984210968 -10.903552055 -30.70555687 #> [1711,] -13.796740532 -19.737106323 -29.20572472 #> [1712,] -21.232217789 -25.847177505 -16.86469078 #> [1713,] -27.486822128 -25.769321442   0.29992577 #> [1714,] -31.440055847 -19.199302673   8.42017937 #> [1715,] -34.586772919 -11.007412910  10.41620636 #> [1716,] -34.946456909  -5.876437187  13.29263020 #> [1717,] -35.317745209  -4.759829998  13.15723896 #> [1718,] -34.715568542  -7.388855457  13.07730293 #> [1719,] -34.781143188 -11.164197922   9.34411526 #> [1720,] -35.312995911 -11.963382721   6.81419706 #> [1721,] -35.527393341 -11.699957848   3.99818707 #> [1722,] -35.757862091 -12.421652794  -0.79466921 #> [1723,] -34.999721527 -12.422487259  -5.49198866 #> [1724,] -34.690944672 -11.528198242  -9.49225521 #> [1725,] -33.189319611 -11.391078949 -13.16753101 #> [1726,] -31.737068176 -10.258751869 -17.30591202 #> [1727,] -31.207580566  -8.994473457 -19.12232399 #> [1728,] -28.034400940  -7.582223892 -23.54338074 #> [1729,] -27.322950363  -4.121028900 -25.52080154 #> [1730,] -27.193647385  -5.074612141 -25.43946457 #> [1731,] -20.957626343  -8.785160065 -29.70718765 #> [1732,] -17.720674515  -9.733051300 -31.80730057 #> [1733,] -18.294282913 -10.199934959 -31.12322998 #> [1734,] -15.560102463  -9.836775780 -32.71579361 #> [1735,] -14.515998840  -8.879337311 -33.55282593 #> [1736,] -15.130891800 -10.282039642 -32.80691147 #> [1737,] -14.866832733 -11.240623474 -32.65192795 #> [1738,] -15.465779305  -9.843926430 -32.78543854 #> [1739,] -16.803785324  -7.482868671 -32.74484634 #> [1740,] -17.356658936  -4.701061726 -32.96608734 #> [1741,] -17.530656815  -2.514020205 -33.07806778 #> [1742,] -18.767406464  -0.093244143 -32.64737701 #> [1743,] -23.346187592   3.499020815 -28.99387932 #> [1744,] -27.491842270   8.579119682 -24.33651161 #> [1745,] -28.273368835  14.214819908 -20.22002029 #> [1746,] -30.560693741  16.463043213 -14.31855106 #> [1747,] -32.491397858  16.135784149 -11.10490513 #> [1748,] -32.410430908  15.070189476 -11.72743702 #> [1749,] -31.761442184  12.251531601 -15.80754662 #> [1750,] -32.138843536  10.536365509 -16.86851883 #> [1751,] -31.874797821   9.176757812 -17.81244087 #> [1752,] -30.338247299   8.831074715 -20.24975395 #> [1753,] -29.244363785  10.841604233 -21.68119431 #> [1754,] -22.838365555   8.511017799 -28.19742584 #> [1755,] -10.307150841   3.479510784 -35.80818939 #> [1756,]  -3.779039621   4.759253502 -37.26384735 #> [1757,]  -1.413637519   7.817200661 -36.54734802 #> [1758,]   0.736697316   8.572175026 -36.61298370 #> [1759,]   2.433984280   8.265449524 -36.58190536 #> [1760,]   5.823174953   8.470888138 -36.27470016 #> [1761,]   9.355490685   9.348501205 -35.28194809 #> [1762,]  10.740117073   9.697921753 -34.85573578 #> [1763,]  10.738292694   9.491002083 -34.87306976 #> [1764,]   8.947167397   8.774382591 -35.48566437 #> [1765,]   6.386066914   7.486200809 -36.56520844 #> [1766,]   7.297956944   2.064906836 -36.29719543 #> [1767,]   4.224071980  -5.808025837 -37.96761703 #> [1768,]   8.321990013 -14.272924423 -32.83522034 #> [1769,]  30.075086594 -13.486574173 -15.76284695 #> [1770,]  36.827667236   5.217836380 -12.67320156 #> [1771,]  21.724044800  25.532155991 -18.13589478 #> [1772,]   2.724275827  35.160305023 -13.04200649 #> [1773,] -12.182299614  35.021038055  -8.71545887 #> [1774,] -21.599027634  30.179130554  -6.28596449 #> [1775,] -28.014127731  25.489612579  -2.87928891 #> [1776,] -30.562833786  22.463624954   1.03494823 #> [1777,] -32.693939209  18.309289932   5.36667633 #> [1778,] -34.585693359  14.215983391   6.94491482 #> [1779,] -34.478073120  13.727922440   7.92864180 #> [1780,] -34.275215149  14.423048019   7.72325134 #> [1781,] -34.085147858  13.778875351   9.49745750 #> [1782,] -34.599655151  12.085663795  10.23166275 #> [1783,] -34.782733917  11.214379311  10.48006344 #> [1784,] -35.292869568  10.474701881   9.29507351 #> [1785,] -35.286994934   9.833059311  10.07884693 #> [1786,] -35.536109924   9.133875847   9.63667393 #> [1787,] -36.196552277   8.378770828   8.03115940 #> [1788,] -36.317375183   7.719521046   7.62351799 #> [1789,] -36.789272308   6.782767296   6.81893396 #> [1790,] -37.155277252   4.946530819   4.71766138 #> [1791,] -37.781288147   2.899207354   0.95679712 #> [1792,] -37.854549408   1.067104340   0.21967424 #> [1793,] -37.350368500  -1.483782649  -4.39467907 #> [1794,] -37.140075684  -4.118834496  -6.33627081 #> [1795,] -36.276657104  -7.025042534  -7.18579769 #> [1796,] -34.922615051  -9.176019669 -10.87111759 #> [1797,] -35.041500092 -10.190051079  -9.69764614 #> [1798,] -33.921680450 -11.810915947 -11.05638123 #> [1799,] -32.753639221 -12.573062897 -13.75229549 #> [1800,] -33.521736145 -12.591577530 -11.74549103 #> [1801,] -31.970857620 -13.560457230 -14.35842896 #> [1802,] -32.120616913 -12.320635796 -15.20533657 #> [1803,] -33.406124115 -11.428193092 -13.05728436 #> [1804,] -32.582801819 -12.132143974 -14.39255524 #> [1805,] -33.056064606 -11.865818024 -13.60773468 #> [1806,] -31.895975113 -12.503897667 -15.42950439 #> [1807,] -32.023181915 -11.185821533 -16.22128868 #> [1808,] -32.529170990  -9.696816444 -16.22554398 #> [1809,] -31.957456589  -8.623178482 -17.68741989 #> [1810,] -33.179832458  -7.306139469 -16.21465302 #> [1811,] -33.462677002  -5.363497257 -16.41370583 #> [1812,] -35.265533447  -0.793433189 -12.93485641 #> [1813,] -36.921478271   0.898279905  -8.57431316 #> [1814,] -36.936634064   1.254826427  -7.81543970 #> [1815,] -36.972583771   1.420680761  -7.84574127 #> [1816,] -35.518707275   0.330489218 -12.30389881 #> [1817,] -34.990756989  -0.918994188 -14.21463871 #> [1818,] -34.371253967  -2.912708044 -14.91427612 #> [1819,] -33.230953217  -4.508956432 -17.08913994 #> [1820,] -33.650608063  -5.847094059 -15.83564663 #> [1821,] -32.464622498  -7.936980247 -17.24922371 #> [1822,] -33.557151794  -8.845857620 -14.52003860 #> [1823,] -34.065601349  -9.532457352 -12.85784340 #> [1824,] -30.937631607 -11.258406639 -18.14778328 #> [1825,] -31.606306076 -12.181138039 -16.45771790 #> [1826,] -34.252189636 -12.684505463  -9.71443748 #> [1827,] -33.597175598 -14.731649399  -8.50617123 #> [1828,] -31.930593491 -17.157035828 -10.19439411 #> [1829,] -32.158355713 -18.160583496  -7.78103495 #> [1830,] -30.459257126 -19.930210114  -9.44493294 #> [1831,] -28.914813995 -21.119449615 -11.93413830 #> [1832,] -30.121616364 -20.965116501  -8.74003124 #> [1833,] -30.185346603 -20.767677307  -8.64478397 #> [1834,] -29.926519394 -20.924409866  -9.68954659 #> [1835,] -28.990209579 -20.866899490 -12.19493294 #> [1836,] -24.895153046 -17.863262177 -21.32033730 #> [1837,] -22.754854202 -13.800539970 -26.93223763 #> [1838,] -21.179050446 -10.119434357 -29.08890915 #> [1839,] -19.950889587  -9.084053040 -30.47831154 #> [1840,] -20.536037445 -13.767394066 -28.19842529 #> [1841,] -19.608175278 -18.453645706 -26.44527435 #> [1842,] -21.790311813 -21.440963745 -21.56293106 #> [1843,] -21.667325974 -26.494953156 -16.03885651 #> [1844,] -21.323143005 -29.229879379 -10.44179440 #> [1845,] -23.784118652 -29.134670258  -2.42670202 #> [1846,] -24.556625366 -28.799491882   1.76745808 #> [1847,] -25.479110718 -27.334014893   5.20513391 #> [1848,] -26.597105026 -25.220495224   9.58355713 #> [1849,] -28.401231766 -22.891664505  10.00695419 #> [1850,] -29.310377121 -21.486049652  10.57629585 #> [1851,] -29.950143814 -20.415382385  10.78332710 #> [1852,] -30.680952072 -19.967449188   9.75217628 #> [1853,] -30.977996826 -19.821445465   8.87741089 #> [1854,] -31.719619751 -19.963773727   5.17499542 #> [1855,] -31.705926895 -20.533063889   1.54896247 #> [1856,] -31.725255966 -20.440414429  -0.27149659 #> [1857,] -30.697780609 -21.830633163  -1.70551252 #> [1858,] -29.716728210 -22.915803909  -4.84680080 #> [1859,] -28.670633316 -22.430391312  -8.71337509 #> [1860,] -28.988636017 -22.297037125 -10.15862179 #> [1861,] -29.165866852 -18.361690521 -14.59018803 #> [1862,] -21.684556961 -10.353376389 -27.98308182 #> [1863,] -18.898584366  -3.674892902 -32.88318253 #> [1864,] -24.336746216   4.609069824 -27.79073906 #> [1865,] -26.987045288  10.339799881 -24.41296005 #> [1866,] -27.974803925   8.729376793 -23.54881287 #> [1867,] -30.665212631   5.855944633 -21.00726700 #> [1868,] -32.264328003   1.928960800 -19.21947289 #> [1869,] -30.868791580  -3.727365017 -21.23561287 #> [1870,] -32.075641632  -8.124704361 -17.65375710 #> [1871,] -32.558025360 -12.714633942 -14.06603050 #> [1872,] -31.553779602 -15.966989517 -12.86098194 #> [1873,] -31.766296387 -17.756509781  -9.72008038 #> [1874,] -31.610609055 -18.908458710  -8.17121506 #> [1875,] -31.302856445 -19.259717941  -7.95454407 #> [1876,] -30.598688126 -20.030006409  -8.98464680 #> [1877,] -30.199451447 -20.430608749  -9.35102272 #> [1878,] -28.936306000 -21.624933243 -10.56636715 #> [1879,] -27.710884094 -23.298122406 -10.49919510 #> [1880,] -26.249889374 -24.242759705 -11.76989174 #> [1881,] -25.377798080 -24.462669373 -13.42653179 #> [1882,] -24.306341171 -24.626760483 -14.77597523 #> [1883,] -25.125745773 -22.784606934 -16.29587746 #> [1884,] -26.464759827 -21.995691299 -15.34204388 #> [1885,] -25.366373062 -22.998218536 -15.66771317 #> [1886,] -25.055913925 -22.379796982 -17.16965294 #> [1887,] -22.421058655 -22.827453613 -19.61572838 #> [1888,] -18.796394348 -25.694690704 -20.55658150 #> [1889,] -21.775505066 -27.844436646 -11.82521439 #> [1890,] -26.212066650 -27.535482407  -0.26782587 #> [1891,] -28.144340515 -24.638582230   5.19806576 #> [1892,] -30.146728516 -21.598941803   7.18892002 #> [1893,] -31.601778030 -19.230577469   8.21566868 #> [1894,] -32.885280609 -16.129791260   9.53037548 #> [1895,] -34.010635376 -14.257712364   8.80836010 #> [1896,] -33.513477325 -13.284959793  11.64540482 #> [1897,] -31.939012527 -14.559092522  14.92691135 #> [1898,] -31.388992310 -18.957057953   7.29689264 #> [1899,] -31.726768494 -21.065612793  -0.24495415 #> [1900,] -30.808496475 -21.087680817  -3.82043052 #> [1901,] -29.619266510 -21.249788284  -9.54209328 #> [1902,] -28.597030640 -20.405675888 -13.61213970 #> [1903,] -27.558971405 -19.370235443 -16.56840515 #> [1904,] -27.346221924 -19.269426346 -17.32026100 #> [1905,] -24.183408737 -19.744850159 -20.67762947 #> [1906,] -23.368043900 -19.913793564 -21.76119614 #> [1907,] -23.339843750 -21.616378784 -19.95195770 #> [1908,] -21.370410919 -23.575246811 -20.15872765 #> [1909,] -22.412841797 -25.554306030 -15.85453320 #> [1910,] -22.643445969 -28.350770950 -10.78089619 #> [1911,] -23.461503983 -28.884975433  -5.31707716 #> [1912,] -25.114372253 -28.226659775   0.80442679 #> [1913,] -25.958576202 -27.317985535   3.20261216 #> [1914,] -26.523309708 -26.540382385   4.19839478 #> [1915,] -27.729751587 -25.444465637   3.31858611 #> [1916,] -28.604038239 -24.604021072   1.75327861 #> [1917,] -28.476551056 -24.653961182  -0.98110813 #> [1918,] -28.915061951 -24.016271591  -3.89280081 #> [1919,] -29.254533768 -22.785579681  -6.32169867 #> [1920,] -30.587989807 -20.878736496  -6.80328655 #> [1921,] -31.601617813 -19.781660080  -5.77389002 #> [1922,] -32.453548431 -18.661640167  -3.64849544 #> [1923,] -32.907062531 -18.077934265  -3.43304348 #> [1924,] -33.192024231 -17.552846909  -2.51285148 #> [1925,] -33.835010529 -16.793457031  -0.66884434 #> [1926,] -34.019268036 -16.528688431  -0.41241983 #> [1927,] -33.659927368 -16.744369507  -1.73002350 #> [1928,] -33.408660889 -17.552152634  -3.10119081 #> [1929,] -32.383930206 -18.378379822  -5.09511805 #> [1930,] -30.034498215 -18.533920288 -12.74867630 #> [1931,] -29.437978745 -17.205734253 -16.37291336 #> [1932,] -27.269985199 -15.892849922 -19.87816811 #> [1933,] -25.440156937 -15.955224037 -22.70054054 #> [1934,] -24.219217300 -18.049661636 -22.30832100 #> [1935,] -23.553260803 -20.768362045 -20.68234253 #> [1936,] -26.424592972 -22.782825470 -13.94806671 #> [1937,] -26.668395996 -25.076911926  -9.33253288 #> [1938,] -25.592603683 -26.477073669  -7.79600811 #> [1939,] -26.680381775 -26.240961075  -4.33736944 #> [1940,] -26.462423325 -26.847793579  -2.56718493 #> [1941,] -27.015539169 -26.288331985  -0.58081621 #> [1942,] -29.325059891 -23.662452698   3.38637257 #> [1943,] -30.666965485 -21.441873550   5.54144526 #> [1944,] -32.036720276 -19.177141190   6.03941107 #> [1945,] -32.199703217 -18.456584930   7.63985157 #> [1946,] -31.283035278 -20.356338501   3.86399150 #> [1947,] -31.561885834 -20.867906570  -2.20127988 #> [1948,] -31.385370255 -19.914150238  -5.75094891 #> [1949,] -31.084865570 -18.819122314  -9.80815411 #> [1950,] -30.449537277 -17.920856476 -12.93484688 #> [1951,] -29.397508621 -17.013338089 -16.23366928 #> [1952,] -27.527540207 -15.797538757 -20.02009964 #> [1953,] -26.642847061 -13.808251381 -22.56823540 #> [1954,] -25.601602554 -12.260314941 -24.61012268 #> [1955,] -25.295211792 -13.218553543 -24.21517944 #> [1956,] -27.708841324 -16.506673813 -19.11996269 #> [1957,] -26.847673416 -19.929059982 -17.30218124 #> [1958,] -26.808593750 -21.500997543 -15.04705524 #> [1959,] -26.811481476 -23.368932724 -12.31785011 #> [1960,] -26.390312195 -24.482112885 -10.95295620 #> [1961,] -26.361663818 -25.194377899  -9.44655418 #> [1962,] -26.435543060 -25.982574463  -6.63086367 #> [1963,] -26.553199768 -26.521169662  -4.09281063 #> [1964,] -26.689296722 -26.506610870  -2.64100385 #> [1965,] -27.101016998 -26.189527512  -1.94146383 #> [1966,] -27.108148575 -26.152059555  -1.72478068 #> [1967,] -27.126293182 -26.147960663  -1.76182604 #> [1968,] -27.242908478 -26.074750900  -2.12633395 #> [1969,] -26.778667450 -26.097286224  -4.34104681 #> [1970,] -26.651411057 -25.975831985  -6.17161274 #> [1971,] -25.802696228 -26.567953110  -6.83446264 #> [1972,] -25.554714203 -26.518495560  -7.91583776 #> [1973,] -27.081655502 -25.778438568  -5.03209066 #> [1974,] -26.138160706 -26.408533096  -6.01391792 #> [1975,] -26.073518753 -25.915637970  -8.46573830 #> [1976,] -26.119031906 -25.326227188  -9.57480907 #> [1977,] -26.168815613 -24.256168365 -12.01680756 #> [1978,] -26.701128006 -22.809631348 -13.54798222 #> [1979,] -25.283390045 -22.420454025 -16.41561127 #> [1980,] -26.201385498 -21.889604568 -15.75645161 #> [1981,] -25.777862549 -22.655382156 -15.35130882 #> [1982,] -25.155485153 -23.382575989 -15.29176807 #> [1983,] -25.115043640 -24.288980484 -13.92228699 #> [1984,] -24.860677719 -24.940818787 -13.19706154 #> [1985,] -25.123960495 -25.524587631 -11.52438164 #> [1986,] -24.120708466 -26.637311935 -11.27421856 #> [1987,] -24.092739105 -27.001846313 -10.47255993 #> [1988,] -24.162103653 -27.290609360  -9.54892540 #> [1989,] -24.497863770 -27.203844070  -8.87906456 #> [1990,] -24.540172577 -27.182670593  -8.91576004 #> [1991,] -24.223379135 -27.075767517  -9.84135342 #> [1992,] -24.265867233 -26.026088715 -12.19416618 #> [1993,] -24.557668686 -24.523077011 -14.51708412 #> [1994,] -23.170612335 -22.773077011 -18.61518669 #> [1995,] -23.682638168 -19.788139343 -21.88211250 #> [1996,] -31.933444977 -11.452540398 -13.65841770 #> [1997,] -38.270999908  -0.177885428  -1.87822092 #> [1998,] -37.473285675  -2.287889242   4.72840405 #> [1999,] -35.157150269 -12.035194397  -1.66535842 #> [2000,] -33.154167175 -14.451354027 -11.71264458 #> [2001,] -32.200836182 -15.183332443 -11.78259945 #> [2002,] -31.045021057 -16.643096924 -12.94262981 #> [2003,] -30.920425415 -16.672725677 -13.50748062 #> [2004,] -29.895666122 -16.788454056 -15.08410263 #> [2005,] -29.850690842 -15.950023651 -16.37257576 #> [2006,] -29.387517929 -15.769786835 -17.22089958 #> [2007,] -29.420272827 -15.150314331 -17.68657875 #> [2008,] -30.809288025 -14.421827316 -15.97166348 #> [2009,] -28.915235519 -14.328228951 -19.21906662 #> [2010,] -30.535469055 -13.245738029 -17.35226059 #> [2011,] -31.311286926 -13.757753372 -15.54008198 #> [2012,] -28.928150177 -14.176039696 -19.25309753 #> [2013,] -29.534914017 -14.292990685 -18.24127197 #> [2014,] -28.694124222 -15.974109650 -18.21679497 #> [2015,] -28.452510834 -17.024826050 -17.67690086 #> [2016,] -28.107294083 -18.147527695 -17.05902290 #> [2017,] -27.792161942 -18.967170715 -16.69533730 #> [2018,] -27.649366379 -19.801034927 -15.94209290 #> [2019,] -26.658752441 -21.043066025 -16.07524681 #> [2020,] -26.373468399 -22.502552032 -14.50037289 #> [2021,] -25.949388504 -23.023887634 -14.60931301 #> [2022,] -26.346687317 -22.265871048 -14.84113503 #> [2023,] -25.567071915 -22.295125961 -16.19993782 #> [2024,] -25.711774826 -20.515995026 -18.42885590 #> [2025,] -23.425777435 -16.264774323 -24.02399826 #> [2026,] -22.795209885 -12.573424339 -27.10462189 #> [2027,] -23.665569305 -11.158942223 -26.78074074 #> [2028,] -21.857223511 -10.575748444 -28.52623558 #> [2029,] -23.058210373 -11.923828125 -26.97217560 #> [2030,] -22.171657562 -15.337549210 -26.05828857 #> [2031,] -22.844043732 -16.352376938 -24.82093048 #> [2032,] -22.614885330 -17.262601852 -24.37850952 #> [2033,] -21.048103333 -18.531072617 -24.95048714 #> [2034,] -22.145290375 -20.382873535 -22.35790062 #> [2035,] -21.069248199 -22.608837128 -21.40610123 #> [2036,] -21.645719528 -23.492774963 -19.68502808 #> [2037,] -21.260307312 -25.071100235 -18.21278572 #> [2038,] -21.496047974 -25.359413147 -17.51477051 #> [2039,] -21.591176987 -25.766027451 -16.86131668 #> [2040,] -21.573043823 -25.846603394 -16.70571136 #> [2041,] -22.013864517 -25.845108032 -16.26161575 #> [2042,] -21.947162628 -26.434431076 -15.37746716 #> [2043,] -24.606376648 -26.229772568 -11.08639526 #> [2044,] -24.021642685 -27.086788177 -10.40572643 #> [2045,] -22.366872787 -27.437820435 -12.85666466 #> [2046,] -23.364078522 -27.074743271 -11.77541256 #> [2047,] -22.232919693 -27.639583588 -12.61347580 #> [2048,] -23.088134766 -27.337724686 -11.64447784 #> [2049,] -23.605653763 -27.538673401 -10.10599232 #> [2050,] -22.071208954 -27.799476624 -12.49606419 #> [2051,] -22.871433258 -27.359104156 -12.09666729 #> [2052,] -22.272016525 -27.726127625 -12.36583519 #> [2053,] -22.636505127 -27.473697662 -12.29960442 #> [2054,] -22.488069534 -27.617671967 -12.17537117 #> [2055,] -22.315052032 -27.359815598 -13.10781002 #> [2056,] -22.617523193 -26.985527039 -13.23430252 #> [2057,] -21.736055374 -26.755607605 -15.01413918 #> [2058,] -21.994495392 -25.964862823 -16.04667282 #> [2059,] -21.402517319 -25.765718460 -17.05993652 #> [2060,] -21.204214096 -25.637245178 -17.52925301 #> [2061,] -20.657806396 -25.414804459 -18.42226982 #> [2062,] -21.547149658 -24.414342880 -18.80816269 #> [2063,] -20.801879883 -23.707002640 -20.31591034 #> [2064,] -20.600284576 -22.449485779 -22.14279747 #> [2065,] -20.040052414 -19.739671707 -24.64365005 #> [2066,] -17.766969681 -16.864923477 -28.37113190 #> [2067,] -18.147033691 -16.302972794 -28.48573112 #> [2068,] -16.394359589 -17.239040375 -28.91986275 #> [2069,] -17.327081680 -17.485321045 -28.26047325 #> [2070,] -16.597242355 -18.641511917 -27.94542503 #> [2071,] -15.950654030 -19.453227997 -27.77308273 #> [2072,] -17.776874542 -20.778312683 -25.65213013 #> [2073,] -16.426040649 -22.594589233 -25.11309624 #> [2074,] -17.785820007 -23.171875000 -23.52289772 #> [2075,] -16.707351685 -23.878662109 -23.58780670 #> [2076,] -15.934949875 -23.868633270 -24.22769547 #> [2077,] -15.718814850 -24.765413284 -23.44664001 #> [2078,] -15.563308716 -25.235857010 -23.03745651 #> [2079,] -16.874738693 -25.577560425 -21.68772507 #> [2080,] -15.539631844 -26.393611908 -21.78364182 #> [2081,] -17.127515793 -26.036643982 -20.93204689 #> [2082,] -16.590368271 -26.977231979 -20.18035316 #> [2083,] -16.117778778 -27.023925781 -20.53460503 #> [2084,] -16.424249649 -26.881465912 -20.45256615 #> [2085,] -16.092956543 -26.856100082 -20.76891136 #> [2086,] -16.409017563 -26.541444778 -20.93264198 #> [2087,] -15.936318398 -26.612421036 -21.22260094 #> [2088,] -16.177371979 -26.779005051 -20.80118752 #> [2089,] -15.073226929 -26.695386887 -21.67843437 #> [2090,] -16.075395584 -25.745273590 -22.13576889 #> [2091,] -15.582923889 -25.487459183 -22.72072792 #> [2092,] -15.665647507 -25.022916794 -23.20845032 #> [2093,] -15.146681786 -25.032915115 -23.48456573 #> [2094,] -14.537118912 -24.339897156 -24.56990814 #> [2095,] -14.786147118 -23.495779037 -25.23711586 #> [2096,] -14.727796555 -23.311319351 -25.45535660 #> [2097,] -16.511835098 -22.539304733 -24.94891357 #> [2098,] -14.562358856 -22.794984818 -26.00045395 #> [2099,] -15.323013306 -20.781251907 -27.49396133 #> [2100,] -13.458787918 -12.228343964 -32.23776627 #> [2101,]  -9.911458015  -3.813160419 -36.12337112 #> [2102,] -13.118725777   1.185925126 -34.88213348 #> [2103,] -12.323554993   5.662178993 -34.79587936 #> [2104,] -13.370024681   5.863518238 -34.41360474 #> [2105,] -14.704590797  -0.123350888 -34.15232468 #> [2106,] -12.347573280  -4.941914558 -35.04687881 #> [2107,] -13.417379379  -7.930579662 -33.90065765 #> [2108,] -11.747700691 -12.192865372 -33.32682800 #> [2109,] -11.878338814 -14.468901634 -32.44316101 #> [2110,] -11.861296654 -16.963718414 -31.15248680 #> [2111,] -10.325840950 -19.320417404 -30.43401718 #> [2112,] -11.256157875 -19.943244934 -29.62369347 #> [2113,] -12.155858994 -19.983850479 -29.29943848 #> [2114,] -10.693591118 -20.395082474 -29.60182190 #> [2115,] -11.353670120 -20.513633728 -29.29593658 #> [2116,] -10.881377220 -21.527158737 -28.69297791 #> [2117,]  -9.540225029 -21.975820541 -28.89539146 #> [2118,] -10.923157692 -22.048074722 -28.29794502 #> [2119,]  -8.855435371 -22.839057922 -28.41532707 #> [2120,]  -9.980319977 -22.451000214 -28.34826469 #> [2121,]  -9.722232819 -23.291164398 -27.74629402 #> [2122,]  -9.241869926 -23.816394806 -27.52103424 #> [2123,]  -9.897500992 -24.661798477 -26.49949265 #> [2124,]  -8.794203758 -25.590219498 -26.04493523 #> [2125,] -10.292010307 -25.438291550 -25.61301422 #> [2126,]  -8.879617691 -26.096645355 -25.53437424 #> [2127,]  -9.916836739 -26.112876892 -25.13241768 #> [2128,]  -9.721632957 -26.593845367 -24.66925049 #> [2129,]  -8.499869347 -26.554134369 -25.20393181 #> [2130,]  -9.568855286 -26.322515488 -25.03063583 #> [2131,]  -6.922674656 -26.457155228 -25.82065582 #> [2132,]  -9.576088905 -25.105998993 -26.16656113 #> [2133,] -12.895981789 -24.914192200 -25.08046150 #> [2134,]  -8.901153564 -25.739297867 -25.83344269 #> [2135,]  -9.547045708 -25.083124161 -26.27403450 #> [2136,] -10.899066925 -25.323118210 -25.47318459 #> [2137,]  -8.003600121 -25.798805237 -26.12114906 #> [2138,]  -9.144851685 -25.469890594 -26.07032776 #> [2139,]  -7.479666710 -25.855981827 -26.15205956 #> [2140,]  -8.044050217 -24.942403793 -26.87082481 #> [2141,]  -9.594589233 -24.626291275 -26.67259407 #> [2142,]  -6.624235630 -24.464431763 -27.68554115 #> [2143,]  -7.825756550 -23.528907776 -28.19961739 #> [2144,]  -6.254242897 -23.925481796 -28.19953156 #> [2145,]  -6.222867489 -23.087272644 -28.91980934 #> [2146,]  -7.283357620 -22.718191147 -28.96477127 #> [2147,]  -5.564151764 -22.864034653 -29.25622177 #> [2148,]  -7.059601784 -22.961713791 -28.82611084 #> [2149,]  -5.276285648 -24.069011688 -28.34119797 #> [2150,]  -6.682518959 -23.746019363 -28.25757599 #> [2151,]  -7.313476086 -24.521032333 -27.43836784 #> [2152,]  -5.629189968 -25.276840210 -27.22968292 #> [2153,]  -9.140960693 -25.209882736 -26.30533600 #> [2154,]  -7.274383545 -26.544298172 -25.53714180 #> [2155,]  -6.402774334 -26.694086075 -25.69876099 #> [2156,]  -6.892454624 -27.173254013 -25.02816391 #> [2157,]  -5.305590630 -27.156578064 -25.44414902 #> [2158,]  -7.570533752 -25.773445129 -26.27656364 #> [2159,]  -5.759389877 -25.470342636 -26.96784782 #> [2160,]  -5.844725609 -24.698816299 -27.67083549 #> [2161,]  -6.106019020 -24.842294693 -27.45557785 #> [2162,]  -4.617333412 -24.664596558 -27.95175362 #> [2163,]  -6.080299854 -24.170568466 -28.10385513 #> [2164,]  -4.119481087 -24.537075043 -28.14012527 #> [2165,]  -6.423306942 -23.526470184 -28.50012207 #> [2166,]  -6.576402664 -23.487609863 -28.48170280 #> [2167,]  -3.942287445 -23.525135040 -28.99960899 #> [2168,]  -6.650686741 -23.032072067 -28.89171982 #> [2169,]  -3.896705151 -23.138015747 -29.23325348 #> [2170,]  -3.961303711 -22.065652847 -30.09519386 #> [2171,]  -5.958727837 -22.375377655 -29.53566551 #> [2172,]  -2.974503040 -23.179788589 -29.39748955 #> [2173,]  -4.387664795 -23.039554596 -29.30114937 #> [2174,]  -3.468012094 -24.145448685 -28.55907822 #> [2175,]  -3.960916519 -23.893817902 -28.70474052 #> [2176,]  -5.050207138 -23.837335587 -28.54872322 #> [2177,]  -2.190244913 -23.857879639 -28.93439865 #> [2178,]  -3.707347631 -23.086700439 -29.39086151 #> [2179,]  -2.378710747 -23.781309128 -28.97607994 #> [2180,]  -3.200654745 -23.415594101 -29.16939735 #> [2181,]  -4.096593857 -23.844959259 -28.70144844 #> [2182,]  -1.925935030 -24.457376480 -28.47987366 #> [2183,]  -4.930072308 -24.154306412 -28.33174324 #> [2184,]  -3.557363987 -25.317995071 -27.51978493 #> [2185,]  -3.338965654 -25.395626068 -27.48892784 #> [2186,]  -4.068738937 -25.562692642 -27.21929359 #> [2187,]  -2.518574476 -25.638879776 -27.37899399 #> [2188,]  -5.115911007 -25.246881485 -27.36327934 #> [2189,]  -3.258471966 -26.126445770 -26.83814049 #> [2190,]  -3.570298195 -25.803213120 -27.09189224 #> [2191,]  -4.727443218 -26.164152145 -26.54643822 #> [2192,]  -2.662446260 -26.844484329 -26.22407341 #> [2193,]  -4.929175854 -26.586526871 -26.12229538 #> [2194,]  -3.339263439 -26.921287537 -26.01407051 #> [2195,]  -3.241864443 -26.199989319 -26.75126648 #> [2196,]  -4.077102661 -26.527343750 -26.30085754 #> [2197,]  -2.644218683 -26.892129898 -26.15970802 #> [2198,]  -5.154169083 -26.242607117 -26.42870140 #> [2199,]  -3.193071604 -26.573078156 -26.37303543 #> [2200,]  -3.107179880 -25.835388184 -27.12572098 #> [2201,]  -3.638803244 -25.890958786 -26.99721336 #> [2202,]  -1.352257133 -26.071371078 -27.11261940 #> [2203,]  -5.320890903 -25.197336197 -27.37281799 #> [2204,]  -4.339881897 -25.877511978 -26.84700394 #> [2205,]  -1.908702612 -25.730047226 -27.35872269 #> [2206,]  -4.368809700 -25.329603195 -27.44742966 #> [2207,]  -1.970228672 -25.646131516 -27.40714264 #> [2208,]  -3.182768106 -24.646110535 -28.15913773 #> [2209,]  -3.483162165 -24.986724854 -27.79211426 #> [2210,]  -0.652071297 -24.553409576 -28.44173622 #> [2211,]  -3.222355127 -23.495559692 -29.13501740 #> [2212,]  -1.274878502 -24.466379166 -28.46142006 #> [2213,]  -1.438514948 -24.017438889 -28.86721230 #> [2214,]  -2.932532787 -24.554723740 -28.28417587 #> [2215,]   0.065937027 -25.296192169 -27.85232925 #> [2216,]  -3.477943659 -23.737684250 -28.87864304 #> [2217,]  -3.235508442 -23.406993866 -29.14206123 #> [2218,]   0.056965768 -23.086383820 -29.66558456 #> [2219,]  -3.275882006 -22.787759781 -29.69669342 #> [2220,]  -0.825183690 -23.575546265 -29.17848015 #> [2221,]  -0.188587666 -22.740861893 -29.89260864 #> [2222,]  -3.191672325 -22.713796616 -29.74856377 #> [2223,]   0.301676452 -23.490417480 -29.30070496 #> [2224,]  -1.132215023 -22.689296722 -29.88987160 #> [2225,]  -1.421342850 -23.420848846 -29.28718948 #> [2226,]   0.187079325 -23.715309143 -29.14274025 #> [2227,]  -1.980930805 -23.706050873 -29.05987167 #> [2228,]   0.715445399 -24.905279160 -28.20440292 #> [2229,]  -1.578581095 -24.548830032 -28.36935043 #> [2230,]  -4.252814293 -24.950660706 -27.83157349 #> [2231,]  -0.209558353 -25.523651123 -27.60401726 #> [2232,]  -1.674193859 -24.867328644 -28.14597321 #> [2233,]  -1.163211703 -25.832561493 -27.28700066 #> [2234,]  -0.313821822 -25.678604126 -27.45476341 #> [2235,]  -2.985914469 -25.049705505 -27.86400414 #> [2236,]   0.020353127 -25.676437378 -27.47704506 #> [2237,]  -1.319873810 -25.064228058 -27.97993279 #> [2238,]  -2.151072025 -25.509288788 -27.54539680 #> [2239,]   0.267878890 -25.727163315 -27.47541618 #> [2240,]  -3.413201809 -25.076559067 -27.78719521 #> [2241,]  -2.116743565 -26.161731720 -26.91481400 #> [2242,]  -0.903352737 -26.251504898 -26.96016312 #> [2243,]  -3.143544912 -26.473711014 -26.52458763 #> [2244,]  -0.652093351 -27.413772583 -25.83876038 #> [2245,]  -3.467840433 -26.720760345 -26.20395851 #> [2246,]  -4.822080135 -26.973100662 -25.79457664 #> [2247,]  -0.960003912 -27.097597122 -26.13544083 #> [2248,]  -3.926554680 -26.261825562 -26.62382126 #> [2249,]  -3.592497110 -27.008558273 -25.90089798 #> [2250,]  -1.424876332 -26.994972229 -26.20337296 #> [2251,]  -3.861738205 -26.702367783 -26.22103691 #> [2252,]  -1.310056210 -27.541650772 -25.59779739 #> [2253,]  -2.148622513 -26.948734283 -26.15178108 #> [2254,]  -3.218189478 -26.737573624 -26.25796318 #> [2255,]  -0.701421916 -26.439807892 -26.76213455 #> [2256,]  -2.460293055 -25.881330490 -27.17053604 #> [2257,]  -0.985800922 -26.466436386 -26.70909691 #> [2258,]  -2.107235670 -25.726692200 -27.31730843 #> [2259,]  -2.966179132 -25.631076813 -27.33204651 #> [2260,]  -0.102755450 -25.781896591 -27.42283058 #> [2261,]  -3.243474245 -25.460126877 -27.48375893 #> [2262,]  -2.066445112 -26.979869843 -26.10414124 #> [2263,]  -0.884359837 -27.297172546 -25.93408585 #> [2264,]  -3.307808876 -27.357339859 -25.63979340 #> [2265,]  -0.379122049 -28.020351410 -25.17066193 #> [2266,]  -1.780535936 -27.132843018 -26.01967430 #> [2267,]  -2.407869816 -27.615341187 -25.44425964 #> [2268,]  -0.490413457 -27.673933029 -25.51285553 #> [2269,]  -2.899846554 -26.917785645 -26.15513420 #> [2270,]  -0.905269861 -27.434886932 -25.74772072 #> [2271,]  -1.483461976 -26.544612885 -26.59165955 #> [2272,]  -2.276257992 -26.144691467 -26.94758987 #> [2273,]   0.173632845 -25.780954361 -27.39636612 #> [2274,]  -2.717415571 -24.945867538 -28.00903893 #> [2275,]  -0.684447825 -25.749837875 -27.35308647 #> [2276,]   0.138221040 -25.258138657 -27.86724091 #> [2277,]  -2.215434313 -25.282882690 -27.73508072 #> [2278,]   0.912593842 -26.030569077 -27.14877319 #> [2279,]  -1.057547450 -25.002935410 -28.06359863 #> [2280,]  -0.735998869 -25.201944351 -27.87167740 #> [2281,]   1.487958908 -24.830026627 -28.22782135 #> [2282,]  -0.822583914 -24.112102509 -28.83720970 #> [2283,]   0.914633989 -24.422100067 -28.56083107 #> [2284,]   0.204217821 -23.775150299 -29.11279678 #> [2285,]   0.448931873 -24.125957489 -28.81382179 #> [2286,]   1.105235696 -24.127983093 -28.83846092 #> [2287,]   0.236902177 -24.253950119 -28.71940613 #> [2288,]   2.696640491 -24.662225723 -28.31295395 #> [2289,]  -0.424099445 -23.816003799 -29.08644104 #> [2290,]  -0.110753655 -24.506153107 -28.47293472 #> [2291,]   3.028471231 -24.732105255 -28.23674583 #> [2292,]  -1.002569437 -24.182792664 -28.79415321 #> [2293,]   0.493459046 -25.516832352 -27.59510040 #> [2294,]   2.401205540 -25.861112595 -27.27285385 #> [2295,]  -1.546436548 -25.402065277 -27.74547195 #> [2296,]   1.227081656 -25.815210342 -27.33787346 #> [2297,]   1.431596994 -25.051353455 -28.00354004 #> [2298,]  -1.824299335 -24.811828613 -28.23568726 #> [2299,]   1.966562271 -25.333578110 -27.72546196 #> [2300,]   1.185936809 -24.552953720 -28.48126411 #> [2301,]   0.684182703 -24.700592041 -28.30603409 #> [2302,]   2.988748074 -24.597887039 -28.30711365 #> [2303,]   0.844466507 -24.130573273 -28.83910179 #> [2304,]   2.925211191 -24.747453690 -28.17840958 #> [2305,]   1.622971177 -24.245061874 -28.66455841 #> [2306,]  -0.257547170 -24.797821045 -28.27753258 #> [2307,]   4.046196938 -25.431756973 -27.48028564 #> [2308,]   1.515842915 -24.138847351 -28.77096748 #> [2309,]   1.097282767 -24.700510025 -28.29899788 #> [2310,]   4.428815842 -25.141092300 -27.70192146 #> [2311,]   1.052474380 -24.100469589 -28.86698151 #> [2312,]   2.804927111 -24.378854752 -28.46375847 #> [2313,]   4.210153103 -23.961345673 -28.70138550 #> [2314,]   0.204684332 -23.771995544 -29.17490768 #> [2315,]   3.260203123 -24.865957260 -28.00389290 #> [2316,]   3.250017643 -24.377746582 -28.47337914 #> [2317,]   1.063787460 -24.446031570 -28.56903076 #> [2318,]   4.648574352 -25.033466339 -27.74454498 #> [2319,]   1.973438501 -24.292339325 -28.63908768 #> [2320,]   1.396107435 -24.932439804 -28.11680031 #> [2321,]   4.704974174 -25.059877396 -27.71757698 #> [2322,]   1.427363992 -24.375688553 -28.59609222 #> [2323,]   2.806652546 -25.271524429 -27.72663116 #> [2324,]   3.366712570 -24.721960068 -28.15772820 #> [2325,]  -0.077589646 -24.604089737 -28.47892570 #> [2326,]   3.369341850 -26.062511444 -26.93925476 #> [2327,]   2.476037264 -25.585447311 -27.47829628 #> [2328,]   0.579205573 -25.907649994 -27.29325294 #> [2329,]   4.137913704 -26.615060806 -26.38902664 #> [2330,]   1.094439387 -25.620550156 -27.55248642 #> [2331,]   0.739712179 -26.009527206 -27.19364357 #> [2332,]   4.318759441 -25.937761307 -26.99586487 #> [2333,]   0.667632401 -24.704910278 -28.37231064 #> [2334,]   1.609838605 -25.289001465 -27.79122734 #> [2335,]   3.376934290 -24.972726822 -27.96072197 #> [2336,]   0.211208522 -24.531305313 -28.54710197 #> [2337,]   3.116511345 -25.463857651 -27.52544022 #> [2338,]   2.477057934 -24.766878128 -28.19983101 #> [2339,]   0.634204388 -24.928640366 -28.18215752 #> [2340,]   3.910098553 -25.542762756 -27.42982674 #> [2341,]   0.533253968 -24.671092987 -28.37805367 #> [2342,]   0.288425863 -25.333301544 -27.77070045 #> [2343,]   3.641676664 -25.468336105 -27.50773430 #> [2344,]   1.025934577 -24.772880554 -28.33930016 #> [2345,]   3.206730127 -25.545539856 -27.43468857 #> [2346,]   3.425276041 -25.393857956 -27.59702492 #> [2347,]   0.009909347 -25.571531296 -27.67728424 #> [2348,]   3.910149097 -26.699058533 -26.28069305 #> [2349,]   3.219039679 -25.986175537 -27.04610062 #> [2350,]  -0.442937851 -25.880968094 -27.41025162 #> [2351,]   3.514534712 -26.843955994 -26.19410896 #> [2352,]   2.647311926 -26.055675507 -27.02370834 #> [2353,]   0.154631704 -25.914068222 -27.34317970 #> [2354,]   3.786553144 -26.319225311 -26.74652100 #> [2355,]   0.988409162 -25.423307419 -27.68186378 #> [2356,]  -1.635470986 -25.802175522 -27.42195129 #> [2357,]   3.187665701 -26.772495270 -26.31535339 #> [2358,]   1.829432964 -26.321249008 -26.87030983 #> [2359,]   0.699697196 -26.305068970 -26.92481422 #> [2360,]   4.546917439 -25.984256744 -26.94449615 #> [2361,]   0.982805431 -24.885883331 -28.20405769 #> [2362,]   0.276465446 -25.347566605 -27.82372284 #> [2363,]   4.855620384 -25.594877243 -27.25587463 #> [2364,]   2.087118864 -24.863183975 -28.18700409 #> [2365,]   2.486269951 -25.287113190 -27.72962761 #> [2366,]   5.159270763 -24.874708176 -27.81710815 #> [2367,]   1.500577331 -24.063400269 -28.92708969 #> [2368,]   3.731985807 -24.807498932 -28.00144768 #> [2369,]   5.619826794 -24.470129013 -28.10146713 #> [2370,]   1.615862012 -23.962709427 -29.03444862 #> [2371,]   4.244307518 -24.725605011 -27.99568176 #> [2372,]   5.522267818 -24.196512222 -28.30755615 #> [2373,]   4.659514427 -23.853626251 -28.64021111 #> [2374,]   7.075423717 -24.168521881 -27.99571419 #> [2375,]   4.875715733 -23.997535706 -28.62094116 #> [2376,]   2.039143085 -24.227178574 -28.81762314 #> [2377,]   1.336661696 -24.521940231 -28.60713005 #> [2378,]   4.635827541 -25.346342087 -27.40785027 #> [2379,]   6.550706387 -25.380050659 -27.10634995 #> [2380,]   3.668218613 -24.901477814 -28.01916313 #> [2381,]   6.159035683 -25.086902618 -27.42739487 #> [2382,]   6.057427406 -24.232044220 -28.14888000 #> [2383,]   0.869898200 -23.764533997 -29.29969025 #> [2384,]   3.674450636 -24.946977615 -27.88063812 #> [2385,]   6.554320335 -25.017858505 -27.46577072 #> [2386,]   2.492341042 -24.399879456 -28.58211517 #> [2387,]   4.488723278 -25.111417770 -27.65495872 #> [2388,]   6.454227448 -24.682195663 -27.72244644 #> [2389,]   1.198271155 -23.941646576 -29.05970573 #> [2390,]   3.193050146 -25.099388123 -27.79404068 #> [2391,]   6.549741745 -25.259765625 -27.24525452 #> [2392,]   2.479849577 -24.588363647 -28.41208649 #> [2393,]   4.053134441 -25.323053360 -27.50890541 #> [2394,]   6.374625683 -25.212654114 -27.29742050 #> [2395,]   1.613529921 -24.533054352 -28.56958771 #> [2396,]   2.550796032 -25.381263733 -27.64900970 #> [2397,]   6.427728653 -25.638620377 -26.93349075 #> [2398,]   2.112454176 -24.751148224 -28.23825645 #> [2399,]   0.864361703 -25.266206741 -27.88854599 #> [2400,]   4.357449055 -25.664258957 -27.22054863 #> [2401,]   3.908806801 -25.339836121 -27.54730606 #> [2402,]   5.875466347 -25.559629440 -26.96715736 #> [2403,]   6.484178066 -24.989059448 -27.49554443 #> [2404,]   4.583594799 -24.457700729 -28.32155037 #> [2405,]   4.130942345 -24.279661179 -28.51063538 #> [2406,]   1.981156707 -23.931188583 -29.05495834 #> [2407,]   2.284263611 -24.528186798 -28.44711113 #> [2408,]   5.505361557 -25.038772583 -27.58193970 #> [2409,]   5.464822292 -24.661775589 -27.91167259 #> [2410,]   7.156560421 -24.737131119 -27.39802361 #> [2411,]   7.355315685 -24.435352325 -27.72865295 #> [2412,]   4.065695763 -24.204675674 -28.61551666 #> [2413,]   2.064311028 -24.379646301 -28.70437050 #> [2414,]   3.969580173 -25.268125534 -27.58551979 #> [2415,]   6.897348881 -25.414405823 -26.99360847 #> [2416,]   3.463546276 -24.381023407 -28.46677017 #> [2417,]   4.176476002 -24.981817245 -27.80870628 #> [2418,]   6.911040783 -24.689979553 -27.60297203 #> [2419,]   3.880934238 -23.850597382 -28.86117363 #> [2420,]   6.016958714 -24.855464935 -27.61997795 #> [2421,]   6.465662003 -24.351083755 -27.97352028 #> [2422,]   2.290196419 -23.825775146 -29.11034966 #> [2423,]   5.643836498 -25.169574738 -27.38780785 #> [2424,]   6.792007923 -24.664690018 -27.65318298 #> [2425,]   1.926276565 -23.530454636 -29.38447380 #> [2426,]   4.384231567 -24.053010941 -28.53161240 #> [2427,]   6.401687145 -23.526311874 -28.66201210 #> [2428,]   5.119969845 -23.105400085 -29.16418266 #> [2429,]   7.289102077 -23.508613586 -28.48353767 #> [2430,]   5.381580353 -23.410438538 -28.99550438 #> [2431,]   1.905490994 -23.667343140 -29.27979279 #> [2432,]   0.984575570 -24.152589798 -28.92457581 #> [2433,]   4.511031151 -25.312076569 -27.44339943 #> [2434,]   6.112495899 -25.435426712 -27.15563011 #> [2435,]   3.111899376 -24.600076675 -28.36632156 #> [2436,]   5.763473034 -24.182863235 -28.20821571 #> [2437,]   6.643506050 -23.245782852 -28.85960960 #> [2438,]   6.827028275 -22.805973053 -29.05083275 #> [2439,]   9.182569504 -22.470727921 -28.80069160 #> [2440,]   6.718715668 -22.257844925 -29.60023880 #> [2441,]   3.967429399 -22.713674545 -29.82883072 #> [2442,]   4.734605312 -23.623943329 -28.91653824 #> [2443,]   9.072483063 -24.376720428 -27.29642296 #> [2444,]   7.491342068 -23.458866119 -28.42653084 #> [2445,]   4.169391155 -23.279991150 -29.35088158 #> [2446,]   8.666004181 -23.933437347 -27.72401237 #> [2447,]   7.945500851 -22.898742676 -28.80003357 #> [2448,]   5.457280636 -23.081893921 -29.24355888 #> [2449,]   9.768826485 -24.567739487 -26.87531281 #> [2450,]   8.133182526 -24.461301804 -27.45618439 #> [2451,]   4.929714203 -24.338594437 -28.41803169 #> [2452,]   9.598692894 -24.451934814 -26.98673630 #> [2453,]  10.223466873 -23.403417587 -27.71654320 #> [2454,]   5.658242226 -22.834270477 -29.50231361 #> [2455,]   8.453000069 -23.621553421 -27.97862625 #> [2456,]  11.683372498 -23.311738968 -27.28073120 #> [2457,]   7.064318657 -22.237977982 -29.57787514 #> [2458,]   6.950036049 -23.063150406 -28.93417740 #> [2459,]  11.557247162 -23.689962387 -27.01193047 #> [2460,]   8.545150757 -22.657131195 -28.81829453 #> [2461,]   6.995522499 -23.233949661 -28.78744507 #> [2462,]  11.681499481 -24.012655258 -26.64135361 #> [2463,]   9.612604141 -22.917928696 -28.25061798 #> [2464,]   5.615848064 -22.872684479 -29.51976013 #> [2465,]   9.350289345 -24.305269241 -27.11693382 #> [2466,]  11.503212929 -24.227308273 -26.57648087 #> [2467,]   6.698242664 -23.367769241 -28.78257751 #> [2468,]   5.022926807 -23.789171219 -28.86338806 #> [2469,]   9.650708199 -24.404157639 -27.01535797 #> [2470,]   9.138613701 -23.868053436 -27.69343948 #> [2471,]   5.468606949 -24.180677414 -28.41905403 #> [2472,]   9.714149475 -25.630897522 -25.80639458 #> [2473,]  10.069416046 -24.843513489 -26.45720482 #> [2474,]   4.630317688 -23.678928375 -29.05516243 #> [2475,]   7.278499126 -24.247825623 -27.82264709 #> [2476,]  10.096330643 -24.243972778 -27.11622047 #> [2477,]   5.309069157 -23.689142227 -28.83074760 #> [2478,]   5.278295040 -24.631637573 -27.95230865 #> [2479,]   9.853366852 -25.266298294 -26.27820587 #> [2480,]   6.951667786 -24.378507614 -27.82783699 #> [2481,]   2.836610079 -24.224058151 -28.88253784 #> [2482,]   6.789510250 -24.812946320 -27.42252350 #> [2483,]   9.147021294 -24.343624115 -27.33408546 #> [2484,]   5.069386005 -23.760034561 -28.81673813 #> [2485,]   6.990568161 -24.313049316 -27.83039093 #> [2486,]   9.490376472 -23.930912018 -27.56370926 #> [2487,]   5.975037575 -23.589761734 -28.77017021 #> [2488,]   8.177606583 -24.581659317 -27.29094315 #> [2489,]   9.644767761 -24.457304001 -27.04371071 #> [2490,]   4.823844433 -23.865007401 -28.84298706 #> [2491,]   5.771792412 -25.021520615 -27.50820541 #> [2492,]  10.004562378 -26.036079407 -25.46777725 #> [2493,]   6.562619686 -25.343959808 -27.07146454 #> [2494,]   4.895836353 -25.676300049 -27.20133591 #> [2495,]   9.572482109 -26.466690063 -25.15707779 #> [2496,]   7.855051517 -25.912513733 -26.23554993 #> [2497,]   6.485086918 -26.266998291 -26.27427292 #> [2498,]  10.028309822 -26.706258774 -24.78034973 #> [2499,]   7.238573551 -25.955003738 -26.36456871 #> [2500,]   6.176249981 -26.477962494 -26.13923264 #> [2501,]   9.778492928 -27.159362793 -24.41972542 #> [2502,]   7.038086891 -26.455730438 -25.91783905 #> [2503,]   3.699937820 -26.248199463 -26.98172951 #> [2504,]   7.298662663 -26.863733292 -25.40642929 #> [2505,]   9.030344009 -26.656703949 -25.20241547 #> [2506,]   4.242456436 -26.107080460 -26.89533043 #> [2507,]   3.765310287 -26.586292267 -26.49200630 #> [2508,]   8.466995239 -26.748706818 -25.25813293 #> [2509,]   7.070409775 -25.873365402 -26.47939110 #> [2510,]   3.072356462 -25.429851532 -27.81512260 #> [2511,]   6.115964890 -25.707389832 -26.81460953 #> [2512,]   9.778381348 -25.103151321 -26.47065926 #> [2513,]   6.239180088 -23.944496155 -28.41464996 #> [2514,]   6.209960461 -24.340963364 -28.05858421 #> [2515,]  10.248435020 -24.536701202 -26.79661179 #> [2516,]   7.309610844 -23.476137161 -28.55421448 #> [2517,]   6.422387600 -23.852806091 -28.44778633 #> [2518,]  11.192682266 -25.041496277 -25.91243744 #> [2519,]  10.467964172 -25.065177917 -26.18106079 #> [2520,]   7.501368046 -25.158327103 -27.11262703 #> [2521,]   6.799235821 -25.325403214 -27.21160126 #> [2522,]   8.064796448 -25.682861328 -26.40881348 #> [2523,]  12.057474136 -26.231586456 -24.31491852 #> [2524,]  11.830799103 -25.927776337 -24.77551079 #> [2525,]   9.018975258 -25.926185608 -25.95150185 #> [2526,]   8.464902878 -25.969921112 -26.04901314 #> [2527,]   8.885725021 -25.446353912 -26.49236679 #> [2528,]  12.630981445 -25.780387878 -24.43815041 #> [2529,]  16.897798538 -26.812427521 -20.72814941 #> [2530,]  17.304140091 -27.506576538 -19.41531563 #> [2531,]  16.328447342 -28.187200546 -19.26111221 #> [2532,]  15.772691727 -29.444738388 -17.87396812 #> [2533,]  15.165953636 -30.283197403 -17.00436974 #> [2534,]  14.463950157 -30.400878906 -17.34652901 #> [2535,]  13.829940796 -30.562593460 -17.60515785 #> [2536,]  13.300254822 -30.528339386 -18.05464935 #> [2537,]  12.985813141 -30.025646210 -19.08052826 #> [2538,]  12.675744057 -29.351221085 -20.27831650 #> [2539,]  12.406352043 -28.833400726 -21.13035011 #> [2540,]  12.453472137 -28.401470184 -21.66068840 #> [2541,]  11.617960930 -27.750593185 -22.93080711 #> [2542,]  12.586789131 -27.261730194 -22.89657784 #> [2543,]  15.672834396 -27.011550903 -21.33288765 #> [2544,]  14.704694748 -26.544767380 -22.52275467 #> [2545,]  12.457470894 -26.123226166 -24.33134651 #> [2546,]  11.978363991 -25.975053787 -24.76861572 #> [2547,]  14.167802811 -26.062822342 -23.32585335 #> [2548,]  17.231082916 -25.743818283 -21.71264076 #> [2549,]  15.728684425 -25.303916931 -23.24288368 #> [2550,]  13.752039909 -25.329944611 -24.47660255 #> [2551,]  13.190996170 -25.313207626 -24.80813789 #> [2552,]  14.682811737 -25.626823425 -23.49442863 #> [2553,]  17.854677200 -25.897731781 -21.03004837 #> [2554,]  16.817090988 -25.802274704 -21.91777229 #> [2555,]  14.718648911 -25.986970901 -23.22393417 #> [2556,]  14.666032791 -26.223749161 -22.97620392 #> [2557,]  14.437374115 -26.619052887 -22.66514206 #> [2558,]  14.110859871 -27.104036331 -22.26313400 #> [2559,]  13.455319405 -27.186906815 -22.64923668 #> [2560,]  14.792829514 -27.157028198 -21.72268867 #> [2561,]  17.736982346 -27.027364731 -19.66896057 #> [2562,]  16.737419128 -26.752769470 -20.84110451 #> [2563,]  14.755107880 -26.965068817 -22.11418915 #> [2564,]  14.510766983 -27.322675705 -21.77635956 #> [2565,]  13.983222961 -27.156282425 -22.30951881 #> [2566,]  14.015714645 -26.443820953 -23.11133385 #> [2567,]  14.294047356 -25.877347946 -23.52627373 #> [2568,]  13.388335228 -26.166858673 -23.86179733 #> [2569,]  15.347360611 -25.901329041 -22.76163673 #> [2570,]  19.847862244 -24.739002228 -20.61280251 #> [2571,]  20.466051102 -24.102365494 -20.83040237 #> [2572,]  20.118322372 -23.038557053 -22.23085785 #> [2573,]  21.102165222 -21.285575867 -23.03807068 #> [2574,]  21.467378616 -20.152790070 -23.67298889 #> [2575,]  21.367500305 -19.859893799 -24.02071381 #> [2576,]  21.402519226 -19.663089752 -24.14071274 #> [2577,]  21.730150223 -19.166896820 -24.23086357 #> [2578,]  22.337461472 -17.959896088 -24.57036209 #> [2579,]  23.270395279 -16.065036774 -25.00287056 #> [2580,]  23.689231873 -15.425354004 -25.02153969 #> [2581,]  23.199132919 -16.337791443 -24.89232635 #> [2582,]  22.325405121 -16.967893600 -25.28767967 #> [2583,]  21.805328369 -17.067575455 -25.65650749 #> [2584,]  21.151411057 -17.601076126 -25.83786964 #> [2585,]  20.185070038 -18.872106552 -25.81382942 #> [2586,]  22.579946518 -19.724351883 -22.84969330 #> [2587,]  24.608657837 -19.490472794 -21.12397385 #> [2588,]  21.742250443 -19.786506653 -23.70802498 #> [2589,]  18.928789139 -20.766431808 -25.35675430 #> [2590,]  18.821956635 -20.279960632 -25.74063873 #> [2591,]  22.783868790 -17.768230438 -24.17863274 #> [2592,]  25.424797058 -15.850544930 -23.14283180 #> [2593,]  24.258043289 -15.133677483 -24.67521286 #> [2594,]  23.808279037 -14.765256882 -25.33498955 #> [2595,]  23.520702362 -15.214934349 -25.33176804 #> [2596,]  22.580133438 -16.096973419 -25.66156197 #> [2597,]  20.711147308 -17.020223618 -26.62820053 #> [2598,]  20.197402954 -18.017629623 -26.34850311 #> [2599,]  23.393400192 -18.450496674 -23.22360611 #> [2600,]  23.524894714 -18.274995804 -23.27131462 #> [2601,]  20.373077393 -18.300397873 -26.04523659 #> [2602,]  18.724534988 -18.127056122 -27.35692978 #> [2603,]  17.937650681 -18.135580063 -27.87447739 #> [2604,]  20.845867157 -18.861679077 -25.08611298 #> [2605,]  22.478021622 -19.191356659 -23.62080002 #> [2606,]  19.305812836 -19.648986816 -25.85076332 #> [2607,]  16.883790970 -20.226797104 -27.19852448 #> [2608,]  17.513536453 -20.712802887 -26.25601959 #> [2609,]  20.527517319 -21.187025070 -23.64332771 #> [2610,]  19.287818909 -21.102737427 -24.68391991 #> [2611,]  15.210512161 -21.221408844 -27.40695000 #> [2612,]  13.611249924 -21.499359131 -28.03279114 #> [2613,]  16.101816177 -22.380878448 -25.74735451 #> [2614,]  17.853864670 -22.880195618 -24.28592300 #> [2615,]  14.585229874 -22.939291000 -26.22981644 #> [2616,]  15.789696693 -23.631391525 -24.91681099 #> [2617,]  16.559638977 -23.449985504 -24.57277298 #> [2618,]  12.202759743 -22.905782700 -27.49625969 #> [2619,]  14.184415817 -22.925897598 -26.41122627 #> [2620,]  16.064308167 -22.497102737 -25.76447678 #> [2621,]  12.280090332 -21.995191574 -28.14319038 #> [2622,]  14.210463524 -22.062225342 -27.07823372 #> [2623,]  15.946800232 -21.965579987 -26.29509354 #> [2624,]  11.240649223 -22.021486282 -28.55206871 #> [2625,]  11.822341919 -22.565504074 -27.82955742 #> [2626,]  15.245788574 -22.424072266 -26.37666512 #> [2627,]  11.406199455 -21.675794601 -28.64518166 #> [2628,]   8.762145042 -21.959938049 -29.49581146 #> [2629,]  12.397656441 -22.596193314 -27.51392174 #> [2630,]  12.418819427 -22.306726456 -27.80813026 #> [2631,]  12.669294357 -22.303627014 -27.60468674 #> [2632,]  14.529375076 -22.165046692 -26.94956970 #> [2633,]  12.038613319 -22.081079483 -28.19471550 #> [2634,]   9.267355919 -22.446979523 -28.98924065 #> [2635,]   9.140075684 -23.010463715 -28.50975037 #> [2636,]  12.648461342 -23.639692307 -26.59608078 #> [2637,]  12.001590729 -22.898136139 -27.48993111 #> [2638,]  10.859577179 -22.721824646 -28.08113861 #> [2639,]  13.303340912 -23.095317841 -26.83182144 #> [2640,]   9.605360985 -22.684637070 -28.54037666 #> [2641,]   7.166182995 -22.936857224 -29.18009949 #> [2642,]  11.620916367 -23.545946121 -27.13471603 #> [2643,]  14.240489006 -25.688749313 -23.81912422 #> [2644,]  12.820950508 -27.806768417 -22.21685791 #> [2645,]  11.549706459 -26.779733658 -24.13894081 #> [2646,]  12.051090240 -25.645864487 -25.10576439 #> [2647,]  11.563891411 -25.935478210 -25.00868225 #> [2648,]   9.851829529 -26.693239212 -24.97162056 #> [2649,]   8.087879181 -27.458774567 -24.82507324 #> [2650,]   9.488637924 -28.817684174 -22.55994606 #> [2651,]  10.703767776 -29.445976257 -21.27136612 #> [2652,]   9.622740746 -28.702459335 -22.65557861 #> [2653,]  11.925904274 -28.032480240 -22.43705940 #> [2654,]  12.637257576 -27.104345322 -23.24680710 #> [2655,]  11.986235619 -26.324363708 -24.42573357 #> [2656,]  12.608132362 -25.858457565 -24.60142708 #> [2657,]  12.371103287 -25.572589874 -25.01807213 #> [2658,]  11.590528488 -25.486507416 -25.47005272 #> [2659,]  10.868716240 -25.479417801 -25.78240395 #> [2660,]   9.520803452 -25.552497864 -26.23245239 #> [2661,]   8.941932678 -25.930686951 -26.06583023 #> [2662,]  11.416894913 -26.252098083 -24.71526146 #> [2663,]  11.175615311 -25.603860855 -25.42913246 #> [2664,]  11.240966797 -25.292058945 -25.67861366 #> [2665,]  13.168770790 -25.182495117 -25.01935196 #> [2666,]  11.824231148 -24.920335770 -25.90852737 #> [2667,]  11.011979103 -24.753393173 -26.37844467 #> [2668,]  10.790125847 -24.411764145 -26.77982140 #> [2669,]   9.889726639 -24.187479019 -27.33639908 #> [2670,]   8.773834229 -23.874143600 -27.99901962 #> [2671,]  10.846310616 -23.956110001 -27.09142685 #> [2672,]  12.282993317 -23.463705063 -26.94787407 #> [2673,]  11.633731842 -23.148401260 -27.37736893 #> [2674,]  13.852277756 -23.715734482 -25.92371368 #> [2675,]  13.499569893 -23.870975494 -26.07438660 #> [2676,]  12.186341286 -23.901885986 -26.64977837 #> [2677,]  11.844713211 -23.426103592 -27.20332527 #> [2678,]  10.633002281 -22.840578079 -28.18655205 #> [2679,]   9.453428268 -22.928983688 -28.50165176 #> [2680,]   7.485552788 -23.369173050 -28.75553894 #> [2681,]   7.124604225 -23.951446533 -28.35042381 #> [2682,]  10.069879532 -24.253026962 -27.13002205 #> [2683,]  10.616430283 -23.533218384 -27.53807068 #> [2684,]  10.889506340 -22.528116226 -28.18024445 #> [2685,]  10.547586441 -22.124576569 -28.68326187 #> [2686,]   9.621543884 -22.607183456 -28.71998405 #> [2687,]  10.349276543 -22.977893829 -28.18489265 #> [2688,]   9.799081802 -23.176095963 -28.21946335 #> [2689,]   8.231607437 -23.400682449 -28.53067207 #> [2690,]   7.158915997 -23.713678360 -28.58252144 #> [2691,]  10.474522591 -24.403598785 -26.85899734 #> [2692,]  11.420682907 -23.914157867 -26.95289612 #> [2693,]   6.774935722 -23.149887085 -29.12362671 #> [2694,]   8.065156937 -23.566265106 -28.33554077 #> [2695,]  10.479115486 -23.171632767 -27.90390968 #> [2696,]   9.897765160 -23.014453888 -28.13148117 #> [2697,]  12.192747116 -23.832952499 -26.63843155 #> [2698,]  11.199174881 -23.990703583 -27.01963234 #> [2699,]   8.863676071 -24.282018661 -27.63080025 #> [2700,]   7.556719303 -24.634731293 -27.66822243 #> [2701,]   6.009054184 -25.062538147 -27.72279739 #> [2702,]   8.661893845 -25.955919266 -26.02625084 #> [2703,]  10.268467903 -25.693084717 -25.75915909 #> [2704,]   9.672695160 -24.628517151 -26.89791298 #> [2705,]  10.319163322 -23.914039612 -27.32421112 #> [2706,]   9.584365845 -23.604448318 -27.93240738 #> [2707,]   9.845426559 -23.723609924 -27.75178337 #> [2708,]   9.324935913 -23.668992996 -27.96002388 #> [2709,]   8.057371140 -23.650329590 -28.37510872 #> [2710,]   6.673919201 -23.651371002 -28.70188522 #> [2711,]   5.364979744 -24.000604630 -28.76300812 #> [2712,]   8.569594383 -24.984081268 -26.94809341 #> [2713,]  11.149210930 -24.972690582 -26.17554283 #> [2714,]   7.649064064 -24.150909424 -28.04550552 #> [2715,]   7.290574551 -24.147891998 -28.14830399 #> [2716,]  11.404712677 -24.335275650 -26.63382721 #> [2717,]   9.593249321 -24.421787262 -27.20361519 #> [2718,]   6.519884109 -25.199693680 -27.49486542 #> [2719,]  10.653319359 -25.793933868 -25.45851326 #> [2720,]  11.530565262 -25.048995972 -25.89646530 #> [2721,]   6.749496460 -24.495332718 -28.08856773 #> [2722,]   8.352923393 -25.077131271 -26.94910812 #> [2723,]  11.886420250 -25.163755417 -25.71208191 #> [2724,]   7.854654312 -24.726200104 -27.48904419 #> [2725,]   6.538612366 -25.507381439 -27.11566353 #> [2726,]  10.073717117 -26.126672745 -25.39605141 #> [2727,]  10.186456680 -25.872705460 -25.59076881 #> [2728,]  10.467178345 -25.743423462 -25.56135941 #> [2729,]   9.874417305 -25.479398727 -26.14983749 #> [2730,]   9.530014992 -25.635578156 -26.16652870 #> [2731,]   9.779228210 -25.798692703 -25.91868019 #> [2732,]   8.666455269 -25.838199615 -26.26842880 #> [2733,]   6.825637341 -25.876533508 -26.75219154 #> [2734,]   6.062447548 -26.128520966 -26.69990730 #> [2735,]   9.006669998 -26.440860748 -25.47321892 #> [2736,]   9.685398102 -25.899036407 -25.76858711 #> [2737,]   9.328110695 -25.438091278 -26.28133392 #> [2738,]   9.201632500 -25.065294266 -26.73605728 #> [2739,]   8.841344833 -24.910112381 -27.04863167 #> [2740,]   9.865743637 -25.196146011 -26.44095230 #> [2741,]   9.168025970 -25.458332062 -26.48122406 #> [2742,]   7.456548214 -25.622068405 -26.82237434 #> [2743,]   5.373003960 -25.628051758 -27.34659958 #> [2744,]   7.352354527 -26.107816696 -26.29808617 #> [2745,]   9.656993866 -26.028980255 -25.69003105 #> [2746,]   7.070803165 -25.578737259 -26.93310356 #> [2747,]   9.190506935 -26.244878769 -25.54928398 #> [2748,]  11.156016350 -26.820764542 -24.35750008 #> [2749,]   7.151242733 -27.228914261 -25.37768555 #> [2750,]   8.254923820 -28.248775482 -23.73428535 #> [2751,]  11.011605263 -28.312063217 -22.60360336 #> [2752,]  10.518263817 -27.366470337 -23.87703514 #> [2753,]  12.329083443 -26.626441956 -23.88713837 #> [2754,]  11.014252663 -26.087394714 -25.06782150 #> [2755,]   7.791311741 -26.469800949 -25.95566177 #> [2756,]   6.706104755 -27.246896744 -25.51598930 #> [2757,]   8.622624397 -28.565860748 -23.23610878 #> [2758,]  11.669062614 -29.440174103 -20.92076111 #> [2759,]   8.983002663 -28.937683105 -22.70986557 #> [2760,]   7.914126396 -29.163963318 -22.85733032 #> [2761,]  11.268203735 -29.420837402 -21.12582016 #> [2762,]   9.130644798 -28.602201462 -23.02748108 #> [2763,]   5.357289314 -28.479230881 -24.54950142 #> [2764,]   7.937052727 -29.442487717 -22.34989548 #> [2765,]   9.593017578 -29.427545547 -21.83860207 #> [2766,]   8.912695885 -28.943235397 -22.66030884 #> [2767,]  10.754597664 -28.787790298 -22.15805817 #> [2768,]   9.560443878 -27.997537613 -23.66672516 #> [2769,]   7.567444801 -27.568460464 -24.88208008 #> [2770,]   6.748435974 -27.610469818 -24.99314308 #> [2771,]   5.140226364 -27.897563934 -25.15535736 #> [2772,]   7.289511204 -28.774974823 -23.42886162 #> [2773,]   9.243985176 -28.762683868 -22.84223366 #> [2774,]   8.390833855 -27.866884232 -24.12409592 #> [2775,]  10.780151367 -27.240121841 -23.89289284 #> [2776,]  10.530003548 -26.568117142 -24.82603645 #> [2777,]   8.067420006 -26.599163055 -25.73707390 #> [2778,]   7.268299103 -27.103710175 -25.41510391 #> [2779,]   5.511116028 -27.402223587 -25.60394859 #> [2780,]   6.480872631 -28.095203400 -24.46013069 #> [2781,]   9.325895309 -28.248155594 -23.40368652 #> [2782,]   8.658041000 -27.562910080 -24.41495132 #> [2783,]  10.230070114 -27.559951782 -23.76016045 #> [2784,]  10.796820641 -27.134683609 -24.09315300 #> [2785,]   8.191902161 -26.640235901 -25.65195084 #> [2786,]   6.467693329 -26.517518997 -26.26194954 #> [2787,]   6.292433739 -26.791658401 -25.96660423 #> [2788,]   9.227936745 -27.357015610 -24.43227005 #> [2789,]   9.130899429 -26.804941177 -25.05570221 #> [2790,]   9.692491531 -26.534994125 -25.02933693 #> [2791,]  11.591271400 -26.235557556 -24.70391464 #> [2792,]   9.456410408 -25.553483963 -26.28318596 #> [2793,]   8.059031487 -25.650392532 -26.65081978 #> [2794,]   6.581453323 -25.863740921 -26.88302422 #> [2795,]   7.093768597 -26.613828659 -25.88258934 #> [2796,]  10.062311172 -27.377565384 -24.06958008 #> [2797,]   9.939779282 -27.374261856 -24.13062859 #> [2798,]  10.234853745 -27.249139786 -24.11362267 #> [2799,]   9.906492233 -26.984781265 -24.61391449 #> [2800,]   9.448034286 -27.206457138 -24.58142662 #> [2801,]   9.707173347 -27.468103409 -24.17804146 #> [2802,]   8.583866119 -27.672632217 -24.38460922 #> [2803,]   6.788963318 -27.862607956 -24.79222107 #> [2804,]   7.312094688 -28.209527969 -24.14330101 #> [2805,]  10.030571938 -28.266872406 -23.08406639 #> [2806,]   9.321379662 -27.284225464 -24.46031570 #> [2807,]  10.548022270 -26.653871536 -24.62211800 #> [2808,]  11.924287796 -26.184488297 -24.63389397 #> [2809,]   9.824575424 -25.929319382 -25.77832222 #> [2810,]   8.871762276 -26.236976624 -25.80106735 #> [2811,]   7.653847694 -26.422861099 -25.98602104 #> [2812,]   6.209796429 -26.628671646 -26.23110390 #> [2813,]   8.712018013 -27.529403687 -24.36234474 #> [2814,]  10.234565735 -27.787242889 -23.59786034 #> [2815,]   9.882755280 -27.379558563 -24.09048653 #> [2816,]  12.130814552 -27.079683304 -23.46008873 #> [2817,]  11.230697632 -26.566432953 -24.52663994 #> [2818,]   9.564616203 -26.702529907 -25.11281395 #> [2819,]   8.740850449 -27.069478989 -24.95975876 #> [2820,]   6.926587105 -27.442092896 -25.20284653 #> [2821,]   9.054632187 -28.251920700 -23.43124771 #> [2822,]  10.914990425 -28.024681091 -22.97437859 #> [2823,]  10.006542206 -27.045637131 -24.43716431 #> [2824,]  12.187151909 -26.453990936 -24.12037468 #> [2825,]  11.616438866 -25.531711578 -25.36863518 #> [2826,]   9.113960266 -25.170537949 -26.77222443 #> [2827,]   7.893992901 -25.208635330 -27.06804657 #> [2828,]   6.467128277 -25.524711609 -27.22047424 #> [2829,]   9.210970879 -26.938192368 -24.84034538 #> [2830,]  10.571276665 -27.122053146 -24.17638969 #> [2831,]   6.764864922 -26.230466843 -26.40383339 #> [2832,]   8.275531769 -26.484016418 -25.65934372 #> [2833,]   9.668857574 -26.155420303 -25.54610252 #> [2834,]   9.442048073 -25.669017792 -26.00649452 #> [2835,]  11.831746101 -25.564430237 -25.23626900 #> [2836,]  10.459286690 -25.260900497 -26.15877151 #> [2837,]   9.043748856 -25.546955109 -26.42361259 #> [2838,]   9.449891090 -26.175214767 -25.65739059 #> [2839,]   8.470326424 -26.607387543 -25.55234146 #> [2840,]   6.819672108 -26.585641861 -26.08157921 #> [2841,]   8.638500214 -25.919752121 -26.11926842 #> [2842,]  10.043026924 -24.733402252 -26.73730469 #> [2843,]   9.850049973 -23.965211868 -27.37689972 #> [2844,]  10.582591057 -23.574108124 -27.50271797 #> [2845,]  10.082959175 -23.700572968 -27.68321419 #> [2846,]  11.360317230 -24.368711472 -26.58540726 #> [2847,]  12.384984970 -24.678333282 -25.87730980 #> [2848,]  11.769013405 -24.924610138 -25.91672134 #> [2849,]  10.974662781 -25.387023926 -25.84246445 #> [2850,]  10.057767868 -26.128385544 -25.47663116 #> [2851,]   8.339048386 -26.540315628 -25.67128944 #> [2852,]   8.720584869 -26.366228104 -25.66455078 #> [2853,]  10.680583000 -25.878469467 -25.39832497 #> [2854,]  10.307712555 -25.579715729 -25.77148056 #> [2855,]  10.619149208 -25.590942383 -25.63601875 #> [2856,]  10.148678780 -25.003921509 -26.46702957 #> [2857,]  10.444359779 -24.695894241 -26.66508102 #> [2858,]  11.414490700 -24.643062592 -26.32448387 #> [2859,]  10.509142876 -24.596498489 -26.72867393 #> [2860,]   9.784993172 -24.911272049 -26.72846603 #> [2861,]   8.053471565 -25.048295975 -27.17918205 #> [2862,]   6.910000801 -25.583059311 -26.98064232 #> [2863,]   9.235849380 -26.704580307 -25.07234955 #> [2864,]   9.825310707 -26.548858643 -25.02993393 #> [2865,]   9.880186081 -25.887174606 -25.61011314 #> [2866,]   9.669789314 -25.355375290 -26.28709984 #> [2867,]   9.598072052 -24.984319687 -26.73016930 #> [2868,]  11.176369667 -25.105247498 -25.99967003 #> [2869,]  10.854846954 -25.369085312 -25.89064598 #> [2870,]   9.873333931 -25.653099060 -26.01150703 #> [2871,]   7.779053688 -25.709468842 -26.65625763 #> [2872,]   7.553750515 -26.075767517 -26.33087540 #> [2873,]  10.185647964 -26.150817871 -25.32822037 #> [2874,]  10.364289284 -25.455541611 -25.90632629 #> [2875,]  10.507404327 -24.878988266 -26.35484886 #> [2876,]   9.890302658 -24.107748032 -27.34878159 #> [2877,]   9.557490349 -23.829025269 -27.75849724 #> [2878,]  10.037365913 -23.858194351 -27.53305435 #> [2879,]   9.054336548 -23.865438461 -27.88646889 #> [2880,]   6.799372196 -23.736768723 -28.62035751 #> [2881,]   6.074334621 -23.693130493 -28.80357170 #> [2882,]   8.961312294 -23.549484253 -28.09581566 #> [2883,]   9.283234596 -22.707323074 -28.64418411 #> [2884,]   9.513816833 -22.142049789 -28.94694901 #> [2885,]   9.378352165 -21.846288681 -29.30145645 #> [2886,]   9.143444061 -22.420738220 -28.98468208 #> [2887,]  10.852387428 -23.194728851 -27.80223846 #> [2888,]  10.281612396 -23.572303772 -27.68921280 #> [2889,]   8.399923325 -23.920717239 -28.02348900 #> [2890,]   6.604407310 -24.051652908 -28.44504356 #> [2891,]   8.793074608 -24.565485001 -27.24792290 #> [2892,]  11.397097588 -24.817531586 -26.20320702 #> [2893,]   8.035597801 -24.645046234 -27.50588036 #> [2894,]   6.574237347 -25.203310013 -27.42694855 #> [2895,]  10.130700111 -25.940073013 -25.50682449 #> [2896,]  10.775448799 -25.868188858 -25.34531021 #> [2897,]  11.017211914 -25.595272064 -25.38910675 #> [2898,]  11.018100739 -25.381290436 -25.71403313 #> [2899,]  10.486831665 -25.590288162 -25.81788063 #> [2900,]  12.235058784 -25.856018066 -24.78395653 #> [2901,]  12.905839920 -25.410791397 -24.89272881 #> [2902,]  12.705520630 -24.485006332 -25.84853554 #> [2903,]  12.272638321 -24.039142609 -26.48083687 #> [2904,]  10.773494720 -24.335506439 -26.84521484 #> [2905,]   8.404567719 -24.748153687 -27.33098221 #> [2906,]   9.403679848 -25.292613983 -26.42118645 #> [2907,]  10.883105278 -25.151199341 -25.99171448 #> [2908,]  10.246615410 -24.652030945 -26.62742424 #> [2909,]  10.427731514 -24.267700195 -26.92074203 #> [2910,]   9.618777275 -23.953443527 -27.59337807 #> [2911,]  10.666215897 -24.067041397 -27.10979462 #> [2912,]  11.900866508 -23.855005264 -26.80962944 #> [2913,]  11.396396637 -23.541543961 -27.27774239 #> [2914,]  10.601742744 -23.900964737 -27.28149605 #> [2915,]   9.896862984 -24.606786728 -26.94232941 #> [2916,]   8.630374908 -25.066688538 -26.96169090 #> [2917,]   8.002748489 -25.642894745 -26.61994362 #> [2918,]   9.854831696 -25.614650726 -25.96354294 #> [2919,]   9.818966866 -24.544403076 -26.88125420 #> [2920,]   9.665293694 -23.924066544 -27.46873665 #> [2921,]   9.424777985 -23.768859863 -27.76192474 #> [2922,]   9.458999634 -24.365196228 -27.26154137 #> [2923,]  11.724502563 -24.826719284 -26.00100708 #> [2924,]  12.149423599 -24.523759842 -26.09485245 #> [2925,]  11.666621208 -24.486192703 -26.32358551 #> [2926,]  11.120141029 -24.525541306 -26.52191162 #> [2927,]  10.501107216 -24.603433609 -26.71185112 #> [2928,]   9.605744362 -24.674676895 -26.96128464 #> [2929,]   8.745027542 -24.785316467 -27.20839310 #> [2930,]  10.810025215 -25.797742844 -25.40648842 #> [2931,]  13.754236221 -27.406787872 -22.22003555 #> [2932,]  13.380659103 -28.575920105 -20.98334885 #> [2933,]  12.123342514 -29.837678909 -19.97396660 #> [2934,]  13.475539207 -31.455415726 -16.22972298 #> [2935,]  14.219670296 -31.892911911 -14.90275574 #> [2936,]  12.797126770 -31.185041428 -17.37045860 #> [2937,]  12.846633911 -30.178874969 -19.03297424 #> [2938,]  13.800671577 -29.191736221 -19.83250237 #> [2939,]  13.872472763 -28.626781464 -20.57850647 #> [2940,]  13.684453011 -28.166433334 -21.30034637 #> [2941,]  13.510800362 -27.684000015 -22.01914406 #> [2942,]  13.307427406 -27.109687805 -22.81591034 #> [2943,]  13.243889809 -26.470027924 -23.57248306 #> [2944,]  13.130949974 -26.087911606 -24.05131912 #> [2945,]  13.044523239 -25.937923431 -24.26269150 #> [2946,]  12.985150337 -25.947681427 -24.28448868 #> [2947,]  13.069728851 -26.072006226 -24.09741592 #> [2948,]  13.501574516 -26.178096771 -23.74830246 #> [2949,]  14.138700485 -26.201776505 -23.35704231 #> [2950,]  14.727360725 -26.155942917 -23.03839493 #> [2951,]  15.263089180 -25.943876266 -22.93130302 #> [2952,]  16.012228012 -25.508419037 -22.91013718 #> [2953,]  16.730247498 -25.087062836 -22.84789658 #> [2954,]  17.458320618 -24.724548340 -22.67955780 #> [2955,]  18.501960754 -24.296222687 -22.31801987 #> [2956,]  19.506772995 -23.900341034 -21.90572739 #> [2957,]  20.230987549 -23.667522430 -21.50561714 #> [2958,]  20.694643021 -23.477333069 -21.26376915 #> [2959,]  20.913431168 -23.131032944 -21.44273949 #> [2960,]  21.116325378 -22.837547302 -21.54673386 #> [2961,]  21.273075104 -22.621643066 -21.58878326 #> [2962,]  21.360876083 -22.482223511 -21.74423409 #> [2963,]  23.399484634 -22.687259674 -19.10184669 #> [2964,]  25.173458099 -22.532281876 -17.12498856 #> [2965,]  23.222133636 -22.033403397 -20.08416176 #> [2966,]  21.778862000 -21.570793152 -22.21373177 #> [2967,]  21.970382690 -21.007671356 -22.44936371 #> [2968,]  21.656265259 -20.741628647 -23.01033783 #> [2969,]  21.377620697 -20.732019424 -23.28937340 #> [2970,]  21.289190292 -20.654268265 -23.44062805 #> [2971,]  21.081455231 -20.554622650 -23.71065903 #> [2972,]  20.975111008 -20.483354568 -23.84361839 #> [2973,]  20.627040863 -20.353305817 -24.25336647 #> [2974,]  19.990125656 -20.286539078 -24.91279602 #> [2975,]  22.292901993 -20.084751129 -22.84250641 #> [2976,]  24.996421814 -19.394945145 -20.75250244 #> [2977,]  23.845415115 -18.696292877 -22.56043053 #> [2978,]  22.638967514 -18.503778458 -23.97217751 #> [2979,]  22.319698334 -18.739715576 -24.04136276 #> [2980,]  21.727005005 -18.852449417 -24.48457718 #> [2981,]  21.375375748 -18.844799042 -24.78861618 #> [2982,]  21.098512650 -18.854175568 -25.01846504 #> [2983,]  20.894182205 -18.758657455 -25.27081299 #> [2984,]  20.871322632 -18.707950592 -25.33030319 #> [2985,]  20.834283829 -18.716556549 -25.34560013 #> [2986,]  20.764032364 -18.536012650 -25.52807045 #> [2987,]  20.779220581 -18.269699097 -25.70258141 #> [2988,]  20.865364075 -18.057960510 -25.77069855 #> [2989,]  21.131074905 -17.885637283 -25.67006493 #> [2990,]  21.526216507 -17.911403656 -25.33325386 #> [2991,]  21.817687988 -18.031723022 -25.01732826 #> [2992,]  21.981639862 -18.233736038 -24.73356438 #> [2993,]  22.077230453 -18.537458420 -24.41285896 #> [2994,]  22.100990295 -18.780048370 -24.19999313 #> [2995,]  22.040029526 -18.918987274 -24.16484642 #> [2996,]  21.977756500 -19.059352875 -24.11767197 #> [2997,]  21.921083450 -19.313734055 -23.96101761 #> [2998,]  21.807666779 -19.623714447 -23.83847237 #> [2999,]  21.671131134 -19.870809555 -23.77519989 #> [3000,]  21.630441666 -19.746677399 -23.89130020 #> [3001,]  21.490612030 -19.617675781 -24.11571503 #> [3002,]  21.161346436 -19.934782028 -24.16095352 #> [3003,]  20.951042175 -20.226226807 -24.10548782 #> [3004,]  20.794908524 -20.280080795 -24.18218231 #> [3005,]  20.572937012 -20.281263351 -24.37447166 #> [3006,]  20.436098099 -20.269897461 -24.50191879 #> [3007,]  20.340015411 -20.364746094 -24.49688530 #> [3008,]  20.117868423 -20.743314743 -24.36870575 #> [3009,]  19.894714355 -21.137289047 -24.22369576 #> [3010,]  19.856872559 -21.236097336 -24.16182709 #> [3011,]  19.637599945 -21.483068466 -24.12635612 #> [3012,]  19.271896362 -21.813600540 -24.14266968 #> [3013,]  19.250799179 -21.677246094 -24.28831100 #> [3014,]  19.283231735 -21.485294342 -24.42284012 #> [3015,]  19.007930756 -21.848672867 -24.32819939 #> [3016,]  18.650215149 -22.353607178 -24.16037941 #> [3017,]  18.547225952 -22.566947937 -24.02033806 #> [3018,]  18.594814301 -22.809656143 -23.76698494 #> [3019,]  18.747745514 -23.039369583 -23.44879150 #> [3020,]  18.553684235 -23.409778595 -23.23937988 #> [3021,]  17.973461151 -23.860731125 -23.23741722 #> [3022,]  17.863790512 -23.814121246 -23.36080742 #> [3023,]  18.049844742 -23.625829697 -23.39623642 #> [3024,]  18.033552170 -23.849735260 -23.21145821 #> [3025,]  18.008239746 -23.889348984 -23.20679092 #> [3026,]  17.907224655 -23.579748154 -23.56989479 #> [3027,]  17.355215073 -23.834287643 -23.71840096 #> [3028,]  16.926221848 -24.428287506 -23.44347000 #> [3029,]  17.185443878 -24.504449844 -23.17895126 #> [3030,]  17.359403610 -24.446758270 -23.10630417 #> [3031,]  17.064779282 -24.677604675 -23.08307076 #> [3032,]  16.579706192 -24.879583359 -23.22802734 #> [3033,]  16.329711914 -24.810134888 -23.47178078 #> [3034,]  16.474910736 -24.665218353 -23.51978111 #> [3035,]  16.261175156 -24.807905197 -23.51020432 #> [3036,]  15.842911720 -25.012720108 -23.58415985 #> [3037,]  15.816027641 -25.092166901 -23.53199577 #> [3038,]  15.878552437 -25.232433319 -23.33138275 #> [3039,]  15.813905716 -25.359920502 -23.24534035 #> [3040,]  15.201226234 -25.651872635 -23.34153748 #> [3041,]  14.644515038 -25.952655792 -23.37883186 #> [3042,]  14.900764465 -26.065412521 -23.10482407 #> [3043,]  14.859151840 -26.386514664 -22.76287270 #> [3044,]  15.007691383 -26.286369324 -22.75869560 #> [3045,]  15.901062965 -25.516359329 -23.03294563 #> [3046,]  16.722595215 -24.746034622 -23.27614784 #> [3047,]  17.065973282 -24.630817413 -23.12596703 #> [3048,]  17.032371521 -24.899398804 -22.87016487 #> [3049,]  17.453096390 -24.608837128 -22.85621452 #> [3050,]  18.206563950 -24.026317596 -22.89836502 #> [3051,]  18.484848022 -24.010923386 -22.70614243 #> [3052,]  18.203151703 -24.386272430 -22.51718330 #> [3053,]  18.350975037 -24.304622650 -22.48743820 #> [3054,]  19.106899261 -23.880773544 -22.30580330 #> [3055,]  18.742816925 -23.103189468 -23.38979721 #> [3056,]  19.086128235 -22.158622742 -23.97725487 #> [3057,]  22.286054611 -21.694286346 -21.45114517 #> [3058,]  23.177795410 -21.269996643 -21.05634499 #> [3059,]  21.673706055 -20.946781158 -22.87168312 #> [3060,]  21.260038376 -21.116249084 -23.10375214 #> [3061,]  20.754785538 -21.301242828 -23.35927391 #> [3062,]  19.905998230 -21.481529236 -23.94162941 #> [3063,]  19.677133560 -21.581171036 -24.03944206 #> [3064,]  19.939657211 -21.528244019 -23.87563515 #> [3065,]  20.057209015 -21.415437698 -23.87729645 #> [3066,]  19.955522537 -20.989311218 -24.30768776 #> [3067,]  19.580148697 -20.743476868 -24.80723000 #> [3068,]  18.614799500 -21.343395233 -25.05058861 #> [3069,]  16.985151291 -22.336944580 -25.35313416 #> [3070,]  14.971337318 -23.145092010 -25.90958023 #> [3071,]  12.829321861 -23.780719757 -26.46765518 #> [3072,]  11.114608765 -24.451211929 -26.62944221 #> [3073,]   8.945925713 -24.702739716 -27.22271538 #> [3074,]   6.767073154 -25.357017517 -27.26251984 #> [3075,]   9.021672249 -26.881408691 -24.93141556 #> [3076,]  10.409120560 -26.940841675 -24.48613930 #> [3077,]   6.701292515 -26.720014572 -25.93815804 #> [3078,]   4.014945030 -27.064990997 -26.20881462 #> [3079,]   1.826481581 -26.498620987 -26.94414520 #> [3080,]  -0.407175004 -26.971710205 -26.58321381 #> [3081,]   1.939745784 -29.275142670 -23.84836197 #> [3082,]   3.031199217 -29.410882950 -23.67291641 #> [3083,]  -0.912216842 -28.120088577 -25.33937073 #> [3084,]  -4.025970936 -27.619583130 -25.64332008 #> [3085,]  -5.563501358 -27.892578125 -24.98015976 #> [3086,]  -3.056903124 -29.349346161 -23.65258408 #> [3087,]  -1.582927585 -29.409261703 -23.82818031 #> [3088,]  -5.267238617 -28.554328918 -24.28416443 #> [3089,]  -7.978950500 -28.219335556 -24.06313705 #> [3090,]  -7.016509533 -28.621858597 -23.75311279 #> [3091,]  -4.664535522 -28.959112167 -23.93959618 #> [3092,]  -5.256731510 -27.814907074 -25.08107758 #> [3093,]  -3.765228271 -26.846107483 -26.29009438 #> [3094,]  -3.231956959 -26.207052231 -27.07437134 #> [3095,]  -5.777262688 -25.884754181 -26.99961281 #> [3096,]  -6.573077202 -25.389291763 -27.24263763 #> [3097,]  -7.470366478 -24.829544067 -27.56492424 #> [3098,]  -4.960653305 -25.013391495 -27.84352684 #> [3099,]  -3.192472219 -24.635704041 -28.49471855 #> [3100,]  -3.725662947 -24.748628616 -28.22124290 #> [3101,]  -1.875586510 -25.129735947 -28.12317848 #> [3102,]  -3.814431906 -24.772439957 -28.26843643 #> [3103,]  -6.573505402 -25.127679825 -27.55417824 #> [3104,]  -6.813018322 -25.455795288 -27.18003654 #> [3105,]  -4.013512611 -25.898580551 -27.18478584 #> [3106,]  -2.766909599 -25.902626038 -27.42287064 #> [3107,]  -2.944293737 -25.447681427 -27.69806671 #> [3108,]  -0.470100701 -25.198974609 -28.13137054 #> [3109,]  -2.237447739 -24.928937912 -28.33956718 #> [3110,]  -4.639460087 -25.024642944 -28.00407028 #> [3111,]  -5.293044567 -24.879577637 -28.01335526 #> [3112,]  -2.884227276 -24.854780197 -28.25779343 #> [3113,]  -0.837650895 -24.857149124 -28.50481796 #> [3114,]  -0.997277081 -24.894397736 -28.33671570 #> [3115,]   1.634705305 -24.888599396 -28.33299065 #> [3116,]   0.187642395 -24.453723907 -28.81430435 #> [3117,]  -2.732002258 -24.363351822 -28.81278038 #> [3118,]  -4.354207039 -24.036727905 -28.86506653 #> [3119,]  -4.116532326 -24.422496796 -28.50931931 #> [3120,]  -0.860617936 -25.318979263 -28.03520203 #> [3121,]  -0.964075983 -25.425701141 -27.95492935 #> [3122,]   0.567015707 -25.956586838 -27.36273193 #> [3123,]   1.379925013 -25.708538055 -27.69463348 #> [3124,]  -1.739355564 -25.196538925 -28.15880775 #> [3125,]  -3.625386953 -25.194049835 -28.02503967 #> [3126,]  -2.974720478 -25.915966034 -27.34160614 #> [3127,]  -0.423170388 -27.233299255 -26.25815010 #> [3128,]  -0.207052901 -27.393671036 -26.05594063 #> [3129,]   1.088269353 -27.001585007 -26.31024933 #> [3130,]   0.993283749 -26.773521423 -26.68860435 #> [3131,]   0.155559137 -27.214614868 -26.31578636 #> [3132,]   1.035368919 -27.721029282 -25.75579643 #> [3133,]   0.098104693 -27.989776611 -25.49031639 #> [3134,]  -1.300386548 -28.496454239 -24.95387840 #> [3135,]   0.425944835 -29.459325790 -23.72021103 #> [3136,]   2.545772314 -29.912679672 -23.12129593 #> [3137,]   2.727069616 -29.883432388 -23.03013039 #> [3138,]   4.063879967 -29.600517273 -23.15681458 #> [3139,]   3.167499304 -28.636808395 -24.57534790 #> [3140,]   2.638166666 -28.288074493 -25.07110977 #> [3141,]   2.864608526 -28.490762711 -24.76881409 #> [3142,]   1.121610880 -29.160350800 -24.20351028 #> [3143,]   2.758474827 -30.039293289 -22.84791946 #> [3144,]   5.596678734 -29.473249435 -23.04981613 #> [3145,]   4.979069233 -28.450111389 -24.35382462 #> [3146,]   5.560954571 -28.038242340 -24.68555450 #> [3147,]   4.827934742 -27.401388168 -25.62692642 #> [3148,]   4.049095154 -27.304698944 -25.92926598 #> [3149,]   4.503871918 -27.241914749 -25.88246346 #> [3150,]   3.551737785 -27.277603149 -25.99670982 #> [3151,]   1.931614995 -27.814079285 -25.65642166 #> [3152,]   3.241871595 -28.100542068 -25.07762146 #> [3153,]   5.876312733 -27.891849518 -24.90980911 #> [3154,]   6.559218407 -28.004259109 -24.52750397 #> [3155,]   7.430353642 -27.781072617 -24.44355392 #> [3156,]   6.236304283 -27.207689285 -25.53343773 #> [3157,]   6.382197857 -27.387855530 -25.33865547 #> [3158,]   7.197864056 -27.549264908 -24.93856430 #> [3159,]   6.226819038 -27.820442200 -24.91498756 #> [3160,]   5.015772820 -28.249271393 -24.71981239 #> [3161,]   3.663379192 -28.618423462 -24.57054710 #> [3162,]   5.656004906 -29.246023178 -23.28216743 #> [3163,]   7.253857136 -29.176591873 -22.99090576 #> [3164,]   7.164420605 -28.403762817 -23.85602379 #> [3165,]   8.185276031 -27.404390335 -24.66067314 #> [3166,]   7.136548519 -26.686513901 -25.86133003 #> [3167,]   7.477864265 -26.751396179 -25.70159912 #> [3168,]   7.878414154 -26.799177170 -25.51628113 #> [3169,]   6.899401188 -26.781419754 -25.83230019 #> [3170,]   4.975632668 -26.630487442 -26.42984009 #> [3171,]   4.266435146 -26.846775055 -26.30369568 #> [3172,]   7.155517578 -26.975889206 -25.45436668 #> [3173,]   7.723124981 -26.379571915 -25.90312004 #> [3174,]   7.908385277 -26.254959106 -25.89920998 #> [3175,]   7.780730247 -26.034151077 -26.24781036 #> [3176,]   7.215803146 -25.922264099 -26.58170319 #> [3177,]   8.499247551 -26.208702087 -25.90897751 #> [3178,]   7.883465290 -26.438274384 -25.86643028 #> [3179,]   6.044053555 -26.782865524 -26.06820488 #> [3180,]   7.540620804 -27.375299454 -24.94039917 #> [3181,]   9.256028175 -27.685630798 -24.08116531 #> [3182,]   9.030049324 -27.118171692 -24.66273880 #> [3183,]  10.327710152 -26.249876022 -25.10316277 #> [3184,]  10.306997299 -26.297399521 -25.14889336 #> [3185,]  11.054414749 -26.930620193 -24.11933517 #> [3186,]  11.586875916 -26.867330551 -24.00439644 #> [3187,]   9.841328621 -26.425367355 -25.18852615 #> [3188,]   7.602316380 -26.427703857 -25.96289444 #> [3189,]   8.624338150 -27.098489761 -24.87196159 #> [3190,]  10.291308403 -26.867933273 -24.49618912 #> [3191,]   9.826015472 -26.425424576 -25.06839371 #> [3192,]   9.414654732 -26.705387115 -24.97382164 #> [3193,]   9.212619781 -26.595201492 -25.23121643 #> [3194,]  10.877200127 -26.227855682 -24.96283340 #> [3195,]  10.891025543 -25.602617264 -25.59439850 #> [3196,]   9.623235703 -25.152784348 -26.54067993 #> [3197,]   8.267156601 -25.180028915 -26.94238281 #> [3198,]   6.522911072 -25.417991638 -27.23855782 #> [3199,]   8.610148430 -25.686399460 -26.25604820 #> [3200,]  10.718430519 -25.586235046 -25.66289902 #> [3201,]  10.746325493 -25.435485840 -25.65347290 #> [3202,]  11.239483833 -25.349666595 -25.56612968 #> [3203,]  10.513644218 -25.610855103 -25.74729347 #> [3204,]  11.541648865 -26.217864990 -24.65582657 #> [3205,]  12.155686378 -26.480667114 -24.11109161 #> [3206,]  10.774536133 -26.902631760 -24.29556656 #> [3207,]   8.662262917 -27.375169754 -24.66221237 #> [3208,]   9.059720993 -27.709991455 -24.04902649 #> [3209,]  11.495065689 -27.559143066 -23.17267036 #> [3210,]  11.668168068 -27.103712082 -23.56142426 #> [3211,]  11.913462639 -26.947395325 -23.57782936 #> [3212,]  11.277303696 -26.631786346 -24.33898354 #> [3213,]  11.668689728 -26.553873062 -24.25383949 #> [3214,]  12.672804832 -26.515106201 -23.80123711 #> [3215,]  11.653246880 -26.359334946 -24.48235703 #> [3216,]  10.718653679 -26.215187073 -25.06288719 #> [3217,]   8.830695152 -26.008483887 -26.02250862 #> [3218,]   9.239631653 -26.057880402 -25.64956474 #> [3219,]  11.987294197 -25.508232117 -25.01147652 #> [3220,]  11.106316566 -25.036989212 -26.00245667 #> [3221,]  11.350255013 -25.607858658 -25.36219406 #> [3222,]  12.225768089 -25.769432068 -24.81990814 #> [3223,]  11.304881096 -25.556535721 -25.47574615 #> [3224,]   9.633527756 -25.297424316 -26.37709808 #> [3225,]   8.235305786 -25.351661682 -26.80433083 #> [3226,]  10.600125313 -25.672061920 -25.55530548 #> [3227,]  11.475848198 -25.079664230 -25.74122620 #> [3228,]  11.250543594 -24.503637314 -26.29768753 #> [3229,]  11.330936432 -24.467277527 -26.39711189 #> [3230,]  10.965076447 -24.956670761 -26.17539215 #> [3231,]  12.515269279 -25.536993027 -24.92208290 #> [3232,]  12.509059906 -25.715740204 -24.72851562 #> [3233,]  11.564779282 -26.041515350 -24.83853722 #> [3234,]  10.157483101 -26.166345596 -25.31879997 #> [3235,]   9.122272491 -26.176715851 -25.73221207 #> [3236,]  11.370241165 -26.463308334 -24.43821144 #> [3237,]  12.012494087 -25.959644318 -24.60509682 #> [3238,]  11.756130219 -25.308591843 -25.31013107 #> [3239,]  11.924901009 -25.065980911 -25.56559753 #> [3240,]  11.191834450 -25.105489731 -25.94673538 #> [3241,]  12.727730751 -25.393102646 -24.90942955 #> [3242,]  13.683838844 -25.410499573 -24.41200638 #> [3243,]  13.554168701 -25.758514404 -24.11759377 #> [3244,]  13.596827507 -26.330186844 -23.48776627 #> [3245,]  13.202560425 -26.591560364 -23.42847824 #> [3246,]  11.878348351 -26.832384109 -23.86729240 #> [3247,]   9.287806511 -27.415481567 -24.41906357 #> [3248,]   9.785720825 -28.361555099 -22.88927269 #> [3249,]  12.289484024 -28.207843781 -21.83498764 #> [3250,]  10.999606133 -27.102804184 -23.95146751 #> [3251,]  11.353661537 -26.441701889 -24.54319382 #> [3252,]  12.883623123 -25.557643890 -24.66662025 #> [3253,]  12.340631485 -24.780973434 -25.72139931 #> [3254,]  11.335074425 -25.186937332 -25.81516075 #> [3255,]   9.300683022 -26.116434097 -25.69454384 #> [3256,]   7.704625130 -26.247074127 -26.10122108 #> [3257,]   9.254048347 -25.486124039 -26.28545761 #> [3258,]   9.437002182 -24.562065125 -27.01942444 #> [3259,]   9.340997696 -23.947027206 -27.52070427 #> [3260,]   9.451253891 -23.260305405 -28.12268257 #> [3261,]   9.206441879 -23.231405258 -28.29128456 #> [3262,]  11.469941139 -23.943675995 -26.84952736 #> [3263,]  12.506581306 -24.357461929 -26.04407501 #> [3264,]  12.126648903 -24.821907043 -25.75248909 #> [3265,]  11.116975784 -25.565366745 -25.51300430 #> [3266,]   9.617364883 -26.246816635 -25.52283478 #> [3267,]  10.902883530 -27.734899521 -23.17210960 #> [3268,]  11.899937630 -28.818319321 -21.38322067 #> [3269,]  11.094540596 -28.120391846 -22.59616470 #> [3270,]  11.654855728 -26.752920151 -23.90468979 #> [3271,]  11.084965706 -25.916139603 -25.17468262 #> [3272,]  12.377812386 -25.769439697 -24.70920372 #> [3273,]  14.432682037 -25.585008621 -23.80220604 #> [3274,]  14.838459969 -25.779397964 -23.29875755 #> [3275,]  14.564506531 -26.205764771 -23.01221466 #> [3276,]  13.853265762 -26.320213318 -23.35242081 #> [3277,]  12.514028549 -25.963281631 -24.47292900 #> [3278,]  11.260119438 -26.018520355 -25.01956940 #> [3279,]  12.899548531 -26.916656494 -23.11943436 #> [3280,]  12.955758095 -26.749097824 -23.22700500 #> [3281,]  12.185807228 -26.024778366 -24.40496635 #> [3282,]  12.285906792 -25.819820404 -24.62461662 #> [3283,]  11.860526085 -26.090093613 -24.63300705 #> [3284,]  13.631194115 -26.339883804 -23.44056511 #> [3285,]  14.277275085 -25.917638779 -23.52378464 #> [3286,]  13.061949730 -25.380512238 -24.74329185 #> [3287,]  11.984313011 -24.953435898 -25.72519112 #> [3288,]  10.092064857 -24.635816574 -26.79839134 #> [3289,]   8.749225616 -24.714803696 -27.21223068 #> [3290,]  11.306140900 -24.856731415 -26.01571465 #> [3291,]  12.474329948 -24.716373444 -25.65591621 #> [3292,]  12.547580719 -25.085088730 -25.12520218 #> [3293,]  12.405097961 -25.331932068 -25.06090355 #> [3294,]  11.908308983 -25.786697388 -24.92868233 #> [3295,]  13.693454742 -26.242717743 -23.51345825 #> [3296,]  14.568190575 -25.880668640 -23.37505531 #> [3297,]  14.304197311 -25.510885239 -23.90454674 #> [3298,]  13.556957245 -25.598941803 -24.27269363 #> [3299,]  12.515662193 -26.268808365 -24.12065506 #> [3300,]  11.831195831 -27.252923965 -23.39923477 #> [3301,]  10.005463600 -27.917945862 -23.47042274 #> [3302,]   9.605513573 -28.535573959 -22.73032188 #> [3303,]  11.298237801 -28.520742416 -21.97379112 #> [3304,]  10.935890198 -27.601507187 -23.40817833 #> [3305,]  12.152607918 -26.819744110 -23.69654465 #> [3306,]  12.806315422 -25.696115494 -24.54020119 #> [3307,]  11.951251030 -24.303453445 -26.32501984 #> [3308,]  11.717907906 -23.267896652 -27.31562042 #> [3309,]  10.221679688 -22.498975754 -28.49411392 #> [3310,]  11.145211220 -22.093696594 -28.40902901 #> [3311,]  12.590023994 -22.034585953 -27.89204979 #> [3312,]  13.276602745 -21.053375244 -28.15663147 #> [3313,]  14.007730484 -19.283180237 -29.08817482 #> [3314,]  13.601674080 -19.206878662 -29.45035172 #> [3315,]  15.418112755 -20.395217896 -27.68954468 #> [3316,]  17.044420242 -21.393739700 -25.99168205 #> [3317,]  17.738878250 -21.967119217 -25.01366234 #> [3318,]  17.826877594 -22.624696732 -24.37532425 #> [3319,]  17.249664307 -23.509452820 -23.97166443 #> [3320,]  16.920343399 -23.905708313 -23.83793068 #> [3321,]  15.373744965 -24.349925995 -24.43790627 #> [3322,]  14.737848282 -25.421318054 -23.69950867 #> [3323,]  16.186182022 -26.182556152 -21.87599373 #> [3324,]  16.301473618 -26.005699158 -21.96369362 #> [3325,]  17.099880219 -24.908447266 -22.49821472 #> [3326,]  16.954677582 -23.246343613 -24.38629723 #> [3327,]  17.455106735 -21.934093475 -25.27165794 #> [3328,]  19.902004242 -20.545186996 -24.56577492 #> [3329,]  21.074237823 -19.777158737 -24.24291992 #> [3330,]  21.739250183 -20.184347153 -23.31520462 #> [3331,]  21.957178116 -20.576566696 -22.77199936 #> [3332,]  21.426397324 -20.952062607 -22.93800545 #> [3333,]  20.277301788 -20.702859879 -24.16603661 #> [3334,]  19.494182587 -18.462120056 -26.47392273 #> [3335,]  18.314468384 -15.686208725 -28.92675400 #> [3336,]  16.751800537 -14.735685349 -30.31440353 #> [3337,]  18.757837296 -15.572048187 -28.58052444 #> [3338,]  19.552103043 -15.924485207 -27.90787125 #> [3339,]  19.186618805 -15.384566307 -28.30640030 #> [3340,]  19.896589279 -14.541009903 -28.34848785 #> [3341,]  19.458841324 -14.124518394 -28.96653175 #> [3342,]  21.183929443 -14.336486816 -27.59255791 #> [3343,]  22.683778763 -14.523845673 -26.33355331 #> [3344,]  23.076957703 -14.975546837 -25.69173050 #> [3345,]  23.042232513 -15.632227898 -25.36032295 #> [3346,]  22.432664871 -15.626684189 -25.90893745 #> [3347,]  21.867967606 -14.829273224 -26.80513763 #> [3348,]  21.408437729 -14.355103493 -27.43586159 #> [3349,]  19.752300262 -14.719758034 -28.44228363 #> [3350,]  17.264505386 -15.797533989 -29.51108551 #> [3351,]  18.807426453 -15.734090805 -28.49278450 #> [3352,]  19.932611465 -13.951325417 -28.60313797 #> [3353,]  19.619157791 -13.467304230 -28.93299103 #> [3354,]  20.845029831 -14.272217751 -27.85541916 #> [3355,]  21.343093872 -14.877238274 -27.21965981 #> [3356,]  23.317138672 -15.521137238 -25.13081360 #> [3357,]  24.660142899 -16.433082581 -23.31245995 #> [3358,]  24.790992737 -17.446308136 -22.38335419 #> [3359,]  25.056070328 -17.619306564 -21.99234009 #> [3360,]  24.899108887 -17.316923141 -22.39621353 #> [3361,]  23.704090118 -18.136173248 -23.01523781 #> [3362,]  22.721986771 -19.657306671 -22.79399109 #> [3363,]  22.310729980 -20.477317810 -22.49662209 #> [3364,]  20.141035080 -21.114000320 -23.98493195 #> [3365,]  18.352962494 -23.935600281 -22.58663940 #> [3366,]  18.317802429 -27.262559891 -18.69740295 #> [3367,]  17.365879059 -28.105747223 -18.32977676 #> [3368,]  17.102231979 -27.676330566 -19.02327347 #> [3369,]  16.408483505 -26.547531128 -21.21777344 #> [3370,]  16.905672073 -25.601652145 -22.09845543 #> [3371,]  18.964242935 -24.345153809 -21.73742104 #> [3372,]  19.350929260 -22.650072098 -23.15194702 #> [3373,]  18.957370758 -21.567436218 -24.45744324 #> [3374,]  18.658235550 -20.162036896 -25.80108261 #> [3375,]  18.260330200 -17.809061050 -27.68620872 #> [3376,]  17.737949371 -15.596693039 -29.28293800 #> [3377,]  17.277900696 -14.152212143 -30.24732208 #> [3378,]  15.641466141 -13.098674774 -31.59672546 #> [3379,]  15.695768356 -14.066309929 -31.06257629 #> [3380,]  16.895769119 -16.652975082 -29.16079903 #> [3381,]  16.550586700 -17.263019562 -28.97063255 #> [3382,]  17.100145340 -15.989563942 -29.28333282 #> [3383,]  16.001443863 -15.481965065 -30.30651855 #> [3384,]  17.228208542 -15.877007484 -29.41962242 #> [3385,]  19.868345261 -15.916723251 -27.76668358 #> [3386,]  20.179325104 -16.267372131 -27.31367111 #> [3387,]  20.415683746 -16.847345352 -26.80591393 #> [3388,]  19.980001450 -17.684471130 -26.60084534 #> [3389,]  18.585489273 -18.538604736 -27.08032417 #> [3390,]  20.281517029 -16.816352844 -26.81703568 #> [3391,]  21.643672943 -13.582671165 -27.51712227 #> [3392,]  21.094400406 -13.724247932 -27.74881172 #> [3393,]  20.591478348 -15.676336288 -27.21248817 #> [3394,]  19.642208099 -17.203590393 -27.13022995 #> [3395,]  21.237943649 -18.781957626 -24.80594826 #> [3396,]  21.933712006 -20.133861542 -23.18200111 #> [3397,]  21.100198746 -21.098979950 -23.08816910 #> [3398,]  20.186990738 -21.409507751 -23.59825325 #> [3399,]  19.317377090 -21.147361755 -24.57019615 #> [3400,]  17.732421875 -20.672405243 -26.08137131 #> [3401,]  15.085546494 -20.568565369 -27.77451134 #> [3402,]  16.136793137 -20.115173340 -27.45500755 #> [3403,]  17.085773468 -18.287591934 -28.02747154 #> [3404,]  16.629953384 -16.645172119 -29.22173691 #> [3405,]  16.809982300 -15.242236137 -29.88821793 #> [3406,]  16.426794052 -14.118158340 -30.74369431 #> [3407,]  18.729433060 -14.086731911 -29.40717506 #> [3408,]  20.722936630 -14.525758743 -27.85622406 #> [3409,]  21.564090729 -15.176115036 -26.82137871 #> [3410,]  21.943181992 -14.898340225 -26.69648552 #> [3411,]  21.732954025 -13.475686073 -27.56351471 #> [3412,]  21.526718140 -12.655624390 -28.16360855 #> [3413,]  19.485790253 -13.299245834 -29.28177643 #> [3414,]  17.324464798 -14.714563370 -29.98560715 #> [3415,]  18.793500900 -15.437881470 -28.65917778 #> [3416,]  18.710798264 -15.146988869 -28.78004646 #> [3417,]  18.116960526 -15.419861794 -28.97949982 #> [3418,]  18.071453094 -15.543410301 -29.07422638 #> [3419,]  18.618661880 -15.393696785 -28.83965683 #> [3420,]  21.334638596 -15.653815269 -26.79979706 #> [3421,]  22.619127274 -15.826304436 -25.62538719 #> [3422,]  22.745874405 -16.043962479 -25.33167839 #> [3423,]  22.020383835 -16.192417145 -25.93236923 #> [3424,]  19.998861313 -15.707606316 -27.75413132 #> [3425,]  17.860715866 -15.187855721 -29.45444107 #> [3426,]  19.294509888 -14.644139290 -28.73080444 #> [3427,]  19.880409241 -13.425363541 -28.84561729 #> [3428,]  19.172185898 -13.186167717 -29.35889244 #> [3429,]  19.119239807 -13.713511467 -29.26490402 #> [3430,]  18.935583115 -14.357874870 -29.15744209 #> [3431,]  21.465421677 -14.878868103 -27.08471489 #> [3432,]  23.329273224 -14.918092728 -25.53479385 #> [3433,]  23.819238663 -15.312057495 -24.76826859 #> [3434,]  23.539684296 -15.972638130 -24.64691734 #> [3435,]  22.501472473 -16.784536362 -25.11935806 #> [3436,]  20.437732697 -17.368259430 -26.42769623 #> [3437,]  17.983219147 -18.180524826 -27.66501427 #> [3438,]  18.555519104 -20.141605377 -25.82158852 #> [3439,]  18.312700272 -20.983419418 -25.30693245 #> [3440,]  17.841606140 -20.192218781 -26.17040253 #> [3441,]  18.076019287 -18.725013733 -27.10404396 #> [3442,]  17.342468262 -17.840560913 -28.31039238 #> [3443,]  18.905359268 -17.115804672 -27.68416405 #> [3444,]  19.728408813 -15.572265625 -27.98534775 #> [3445,]  19.204612732 -14.606681824 -28.86908913 #> [3446,]  18.387798309 -13.907275200 -29.71640778 #> [3447,]  16.549543381 -12.771393776 -31.24448013 #> [3448,]  17.490943909 -10.699841499 -31.44196701 #> [3449,]  18.242261887  -8.276412010 -31.66301727 #> [3450,]  17.623519897  -8.056140900 -31.95206261 #> [3451,]  17.737390518  -9.196124077 -31.66976357 #> [3452,]  17.273601532  -9.913990021 -31.82763672 #> [3453,]  19.430341721 -10.861080170 -30.24810410 #> [3454,]  20.891321182 -12.148118019 -28.81243896 #> [3455,]  20.599462509 -13.398709297 -28.42610168 #> [3456,]  19.577140808 -14.210178375 -28.80165863 #> [3457,]  16.452062607 -15.469661713 -30.10078621 #> [3458,]  15.779016495 -18.198162079 -28.86455154 #> [3459,]  17.486745834 -19.780467987 -26.81265068 #> [3460,]  16.446554184 -19.692602158 -27.42958450 #> [3461,]  16.309453964 -19.384014130 -27.73041534 #> [3462,]  15.861925125 -17.865745544 -29.04498672 #> [3463,]  16.593532562 -16.613153458 -29.41941071 #> [3464,]  18.673507690 -15.503657341 -28.74411392 #> [3465,]  19.133491516 -14.183519363 -29.09176636 #> [3466,]  19.134180069 -13.209468842 -29.55248260 #> [3467,]  17.252433777 -12.459063530 -30.98018837 #> [3468,]  17.348674774 -11.485698700 -31.25489807 #> [3469,]  19.234130859  -8.947963715 -30.89337349 #> [3470,]  18.207120895  -7.704240322 -31.73659897 #> [3471,]  18.300405502  -8.764151573 -31.41750336 #> [3472,]  17.761812210  -9.577258110 -31.64572144 #> [3473,]  18.619167328 -11.051796913 -30.65050507 #> [3474,]  21.185678482 -12.123859406 -28.58636093 #> [3475,]  22.267845154 -12.199527740 -27.70142365 #> [3476,]  22.904664993 -12.907659531 -26.88543510 #> [3477,]  22.413589478 -14.974675179 -26.20264435 #> [3478,]  21.249637604 -16.911674500 -26.06664085 #> [3479,]  19.894563675 -17.103912354 -27.00720024 #> [3480,]  16.841423035 -17.641729355 -28.70228958 #> [3481,]  16.000499725 -21.091575623 -26.67516708 #> [3482,]  16.409379959 -23.834556580 -24.15599632 #> [3483,]  15.464260101 -23.683324814 -24.79318619 #> [3484,]  15.195588112 -22.753108978 -25.77029419 #> [3485,]  14.177768707 -22.122865677 -26.97979736 #> [3486,]  15.454306602 -21.707490921 -26.65384674 #> [3487,]  16.173666000 -20.038784027 -27.45870781 #> [3488,]  14.932256699 -17.807138443 -29.60671425 #> [3489,]  13.622166634 -15.656706810 -31.36268425 #> [3490,]  10.366663933 -13.826930046 -33.37022781 #> [3491,]  11.275047302 -13.200528145 -33.09873962 #> [3492,]  14.156113625 -12.456229210 -32.36036301 #> [3493,]  13.320384979 -12.025086403 -32.98092270 #> [3494,]  15.177289963 -12.465744019 -31.97802162 #> [3495,]  17.292955399 -13.078284264 -30.72167206 #> [3496,]  17.421417236 -14.318804741 -30.02612877 #> [3497,]  16.973415375 -15.260993004 -29.85365486 #> [3498,]  15.711374283 -15.836854935 -30.29053307 #> [3499,]  12.630605698 -16.551851273 -31.27967834 #> [3500,]  11.468619347 -17.143930435 -31.42598152 #> [3501,]  13.171756744 -16.613138199 -30.99394035 #> [3502,]  12.813939095 -15.650994301 -31.53283501 #> [3503,]  12.866684914 -15.644974709 -31.50570107 #> [3504,]  12.228930473 -15.869721413 -31.77819633 #> [3505,]  13.085196495 -16.738712311 -31.00635147 #> [3506,]  14.556283951 -17.957441330 -29.70701981 #> [3507,]  13.948483467 -19.022058487 -29.33572960 #> [3508,]  12.081418991 -19.374969482 -29.92953682 #> [3509,]   9.249990463 -19.882360458 -30.59587288 #> [3510,]  11.358391762 -20.862342834 -28.96373177 #> [3511,]  12.527750969 -20.467821121 -28.93445778 #> [3512,]  11.517922401 -20.051464081 -29.71872139 #> [3513,]  13.345973969 -19.634428024 -29.17283249 #> [3514,]  13.231878281 -18.460708618 -30.00598526 #> [3515,]  11.163846970 -17.230369568 -31.52630615 #> [3516,]   8.497402191 -16.354885101 -32.76235199 #> [3517,]   9.567358971 -16.283407211 -32.42487335 #> [3518,]  11.376562119 -16.138259888 -31.94412994 #> [3519,]  11.828792572 -16.896907806 -31.23653221 #> [3520,]  12.443408012 -18.163702011 -30.42883492 #> [3521,]  12.076615334 -19.239894867 -30.01023674 #> [3522,]  13.377451897 -20.890472412 -28.31066895 #> [3523,]  13.842033386 -22.615922928 -26.77818871 #> [3524,]  11.867549896 -23.968814850 -26.58675003 #> [3525,]  11.050208092 -25.134407043 -25.85048103 #> [3526,]  13.081186295 -26.152870178 -23.75461578 #> [3527,]  13.063477516 -26.133134842 -23.75745010 #> [3528,]  13.027486801 -25.432636261 -24.44447899 #> [3529,]  13.114600182 -24.114200592 -25.74928474 #> [3530,]  13.227595329 -22.721790314 -27.01655769 #> [3531,]  13.958318710 -20.972747803 -27.95642281 #> [3532,]  13.242081642 -18.698282242 -29.86584473 #> [3533,]  10.569055557 -17.181308746 -31.74501801 #> [3534,]   9.187259674 -16.371276855 -32.49137497 #> [3535,]  12.635655403 -14.691495895 -31.94986725 #> [3536,]  13.088583946 -12.913202286 -32.71298599 #> [3537,]  12.388816833 -12.492588997 -33.16311646 #> [3538,]  13.151875496 -12.548664093 -32.82450867 #> [3539,]  12.182796478 -12.931735039 -33.10621262 #> [3540,]   9.017471313 -13.170820236 -34.04499435 #> [3541,]   8.763012886 -14.448639870 -33.36314392 #> [3542,]  11.752793312 -16.212343216 -31.66334343 #> [3543,]  10.773204803 -17.194578171 -31.65612984 #> [3544,]  10.949990273 -18.156946182 -31.05417633 #> [3545,]  11.711220741 -18.064334869 -30.86549187 #> [3546,]   9.300859451 -17.361179352 -32.03641891 #> [3547,]   9.300150871 -17.703010559 -31.81925011 #> [3548,]  11.178843498 -17.495557785 -31.26326561 #> [3549,]  10.726991653 -16.097888947 -32.06281281 #> [3550,]  11.099775314 -16.032386780 -32.02308655 #> [3551,]  10.864128113 -16.391586304 -32.02301407 #> [3552,]  11.462980270 -16.857767105 -31.57221222 #> [3553,]  12.180810928 -18.051372528 -30.66716003 #> [3554,]   9.921223640 -19.177013397 -30.80883026 #> [3555,]   9.138347626 -20.599479675 -30.10584641 #> [3556,]  11.070899010 -21.988086700 -28.41299820 #> [3557,]  10.833874702 -21.700607300 -28.67257881 #> [3558,]  11.004157066 -20.515197754 -29.41766548 #> [3559,]  10.551781654 -18.673353195 -30.84114838 #> [3560,]  10.342199326 -16.948171616 -31.94579506 #> [3561,]  11.464305878 -16.302566528 -31.83843040 #> [3562,]  10.766245842 -16.511405945 -32.03505325 #> [3563,]   7.704629898 -16.393377304 -32.95736694 #> [3564,]   7.068591118 -16.926506042 -32.66158295 #> [3565,]   9.933137894 -18.587587357 -31.01253128 #> [3566,]   9.510892868 -19.807968140 -30.56575012 #> [3567,]   9.940413475 -21.186676025 -29.45345688 #> [3568,]  11.410674095 -22.804340363 -27.73773384 #> [3569,]   9.695787430 -24.316858292 -27.14864349 #> [3570,]   8.520590782 -25.984554291 -25.92715454 #> [3571,]  11.038592339 -26.326669693 -24.41070747 #> [3572,]  10.836164474 -24.134048462 -26.68552780 #> [3573,]  10.431230545 -21.764453888 -28.95144272 #> [3574,]  11.940682411 -19.785787582 -29.63835716 #> [3575,]  11.417728424 -18.100021362 -30.92497826 #> [3576,]   9.201052666 -17.227991104 -32.11848450 #> [3577,]   8.043723106 -17.457653046 -32.26222610 #> [3578,]  10.350983620 -17.516971588 -31.51927757 #> [3579,]   9.947646141 -16.209701538 -32.32637405 #> [3580,]  11.928873062 -16.024835587 -31.57228851 #> [3581,]  14.902005196 -15.839011192 -30.63945770 #> [3582,]  13.303730965 -15.341551781 -31.60327911 #> [3583,]  11.396095276 -15.051300049 -32.47109604 #> [3584,]   8.373799324 -14.375382423 -33.64586258 #> [3585,]   9.732800484 -15.246109962 -32.66966629 #> [3586,]  11.531716347 -16.346721649 -31.73199844 #> [3587,]  10.422218323 -17.208900452 -31.73308372 #> [3588,]  11.718425751 -18.652162552 -30.44998932 #> [3589,]  11.088987350 -19.282924652 -30.32269478 #> [3590,]   7.761373043 -19.528764725 -31.20249557 #> [3591,]   8.294976234 -20.668863297 -30.23383904 #> [3592,]  10.202404022 -20.795097351 -29.57011414 #> [3593,]   9.896757126 -20.833389282 -29.54901123 #> [3594,]  10.117568970 -22.406753540 -28.42278099 #> [3595,]   9.881186485 -23.939331055 -27.35755348 #> [3596,]  10.634322166 -24.762893677 -26.32106781 #> [3597,]  10.358041763 -24.328969955 -26.81151772 #> [3598,]   9.089153290 -23.474349976 -28.05641174 #> [3599,]   6.422507763 -22.434097290 -29.53655624 #> [3600,]   4.841649532 -21.992424011 -30.10342407 #> [3601,]   6.867421627 -21.471168518 -29.96807289 #> [3602,]   6.227008820 -19.377569199 -31.57945442 #> [3603,]   6.137806416 -17.498212814 -32.71266937 #> [3604,]   7.098089695 -16.474208832 -32.99815750 #> [3605,]   4.999877453 -15.975509644 -33.65599823 #> [3606,]   4.353794098 -16.947708130 -33.23757935 #> [3607,]   6.374520779 -18.845235825 -31.85552788 #> [3608,]   6.276428223 -18.876626968 -31.82346916 #> [3609,]   6.620460510 -18.287042618 -32.02968216 #> [3610,]   5.901298523 -18.976371765 -31.88469315 #> [3611,]   6.091402531 -21.125516891 -30.49055481 #> [3612,]   7.892231464 -23.193292618 -28.63772202 #> [3613,]   6.005019188 -23.975677490 -28.41279221 #> [3614,]   6.417492390 -25.212024689 -27.15565300 #> [3615,]   8.116567612 -26.436176300 -25.62626076 #> [3616,]   7.956774235 -27.905187607 -23.87322998 #> [3617,]   7.807515621 -29.394437790 -22.23660660 #> [3618,]   7.526400566 -29.597524643 -22.17508888 #> [3619,]   9.084826469 -29.341262817 -21.87203979 #> [3620,]   9.537692070 -28.487558365 -22.82899284 #> [3621,]   7.681244850 -27.152898788 -25.03490257 #> [3622,]   4.294680119 -25.919860840 -27.04147148 #> [3623,]   4.182510376 -25.309192657 -27.48388481 #> [3624,]   6.507393837 -24.145032883 -28.03555489 #> [3625,]   6.008368969 -22.406597137 -29.66543961 #> [3626,]   7.295027256 -21.871252060 -29.71534729 #> [3627,]   8.503224373 -22.765855789 -28.72743416 #> [3628,]   6.812444210 -24.430727005 -27.88341904 #> [3629,]   6.688201427 -26.382614136 -26.01708984 #> [3630,]   8.817899704 -27.930130005 -23.69531250 #> [3631,]   9.569032669 -28.515636444 -22.67883873 #> [3632,]   9.862401009 -28.226808548 -22.79456711 #> [3633,]   8.880963326 -27.291862488 -24.39838219 #> [3634,]   9.313179016 -26.348377228 -25.30331421 #> [3635,]  10.269258499 -24.801259995 -26.41699600 #> [3636,]   7.693476677 -23.062602997 -28.72421265 #> [3637,]   6.292894363 -22.101022720 -29.79776764 #> [3638,]   8.502585411 -20.666715622 -30.17516708 #> [3639,]   9.454523087 -19.262390137 -30.76871872 #> [3640,]  10.076225281 -18.907857895 -30.69677544 #> [3641,]   9.386528015 -18.611478806 -31.20298767 #> [3642,]   9.666164398 -19.144790649 -30.81992531 #> [3643,]  11.112936020 -20.304023743 -29.62256050 #> [3644,]   8.882455826 -20.974414825 -29.92997169 #> [3645,]   8.504548073 -22.054037094 -29.23294067 #> [3646,]  10.268099785 -23.078613281 -27.83357620 #> [3647,]   9.370189667 -22.306865692 -28.66019821 #> [3648,]   9.500214577 -21.261627197 -29.42404556 #> [3649,]   9.717221260 -21.316192627 -29.40414429 #> [3650,]   9.986865044 -21.493766785 -29.17377281 #> [3651,]  10.384481430 -20.425981522 -29.79173470 #> [3652,]   9.134095192 -18.532508850 -31.40899467 #> [3653,]   6.429427147 -17.095226288 -32.81726456 #> [3654,]   7.465912819 -17.517581940 -32.17166138 #> [3655,]   9.103957176 -17.913560867 -31.63336945 #> [3656,]   7.968525887 -17.545227051 -32.22939301 #> [3657,]   9.264698982 -17.751001358 -31.76260948 #> [3658,]   8.919352531 -17.446334839 -32.03028107 #> [3659,]   5.611780643 -16.640077591 -33.19113541 #> [3660,]   5.601722717 -16.679895401 -33.12956619 #> [3661,]   7.609807014 -16.634960175 -32.73223495 #> [3662,]   8.027481079 -16.320249557 -32.68560028 #> [3663,]   8.780999184 -17.442331314 -31.96664238 #> [3664,]   8.063942909 -19.794019699 -30.89663124 #> [3665,]   8.522676468 -21.575504303 -29.59653473 #> [3666,]   8.190971375 -21.473480225 -29.76248741 #> [3667,]   5.152096748 -21.059547424 -30.77169228 #> [3668,]   5.778924465 -21.610704422 -30.16791534 #> [3669,]   7.823585033 -21.615262985 -29.66641045 #> [3670,]   7.813200474 -20.830047607 -30.21112061 #> [3671,]   8.543800354 -18.049926758 -31.64949608 #> [3672,]   8.505831718 -13.110407829 -34.08105087 #> [3673,]   9.761937141 -10.872287750 -34.51701355 #> [3674,]  10.773087502 -12.084952354 -33.81355667 #> [3675,]   8.157581329 -12.957657814 -34.27406311 #> [3676,]   4.712862015 -13.300795555 -34.75291443 #> [3677,]   6.805704117 -15.222946167 -33.37328339 #> [3678,]   7.849274158 -16.575317383 -32.72463226 #> [3679,]   6.839931965 -17.676776886 -32.41043854 #> [3680,]   8.729547501 -18.937311172 -31.25859451 #> [3681,]   7.736248970 -18.934524536 -31.50789070 #> [3682,]   6.791659832 -19.293603897 -31.48576164 #> [3683,]   8.369827271 -20.294963837 -30.44847107 #> [3684,]   7.861114502 -20.319234848 -30.49211884 #> [3685,]   8.029684067 -20.541154861 -30.28700829 #> [3686,]   7.628131866 -21.093355179 -30.12962723 #> [3687,]   7.340950012 -21.623300552 -29.85194969 #> [3688,]   8.262193680 -21.934419632 -29.40853310 #> [3689,]   6.205910206 -21.880498886 -29.97256660 #> [3690,]   4.279462814 -22.787183762 -29.58445930 #> [3691,]   6.600041866 -23.882181168 -28.11704063 #> [3692,]   6.339562416 -23.320854187 -28.74438286 #> [3693,]   5.521383762 -23.186704636 -29.10880661 #> [3694,]   7.408510208 -23.482822418 -28.47706604 #> [3695,]   5.773409367 -22.648008347 -29.46156693 #> [3696,]   5.043469429 -22.447177887 -29.73281288 #> [3697,]   6.596323967 -22.601951599 -29.25742531 #> [3698,]   6.249943733 -21.494522095 -30.05205727 #> [3699,]   6.995597363 -20.555706024 -30.53625298 #> [3700,]   6.618710995 -19.793870926 -31.22955704 #> [3701,]   6.493797302 -19.487298965 -31.46307755 #> [3702,]   7.548963070 -20.364788055 -30.66743660 #> [3703,]   5.308558941 -21.219181061 -30.60062408 #> [3704,]   3.112536192 -22.317647934 -30.02924919 #> [3705,]   4.899016857 -24.633083344 -27.81138802 #> [3706,]   4.597736835 -25.896539688 -26.94185257 #> [3707,]   4.346649647 -26.808767319 -26.05150032 #> [3708,]   6.423139572 -27.921424866 -24.52087784 #> [3709,]   5.134043694 -28.018445969 -24.65783310 #> [3710,]   2.537033796 -27.875497818 -25.25769806 #> [3711,]   4.227548599 -26.779550552 -26.00498390 #> [3712,]   4.573941708 -23.607408524 -28.79840660 #> [3713,]   3.361154318 -20.911943436 -31.13414383 #> [3714,]   4.243761063 -18.987449646 -32.13167191 #> [3715,]   2.772012711 -17.114381790 -33.29700470 #> [3716,]   2.733750343 -16.761377335 -33.46916199 #> [3717,]   4.188601971 -17.881845474 -32.74190140 #> [3718,]   4.544419289 -19.390840530 -31.73018837 #> [3719,]   4.831104755 -19.984296799 -31.33781815 #> [3720,]   3.860236168 -20.667182922 -31.15345764 #> [3721,]   5.070258141 -22.703823090 -29.51143646 #> [3722,]   4.652552128 -24.352537155 -28.35450745 #> [3723,]   3.443122625 -26.035913467 -26.95208168 #> [3724,]   5.681769371 -28.002519608 -24.49300766 #> [3725,]   5.794273376 -28.973724365 -23.29440498 #> [3726,]   5.254179955 -30.128627777 -21.89928246 #> [3727,]   4.773253918 -31.308176041 -20.51880074 #> [3728,]   4.239005566 -32.222499847 -19.18270493 #> [3729,]   4.477546215 -32.008525848 -19.46608734 #> [3730,]   3.681785822 -30.310501099 -22.17762375 #> [3731,]   1.499945760 -27.994348526 -25.18306160 #> [3732,]  -0.340849072 -25.795267105 -27.45272827 #> [3733,]   0.922586381 -24.713865280 -28.36345482 #> [3734,]   1.450185537 -23.636526108 -29.16902161 #> [3735,]   1.539607048 -22.845285416 -29.72190094 #> [3736,]   1.327685356 -22.849695206 -29.82685471 #> [3737,]   1.100831628 -23.762060165 -29.18793297 #> [3738,]   2.757151604 -25.638467789 -27.45781898 #> [3739,]   1.770010233 -27.391670227 -25.88644600 #> [3740,]   0.984164596 -29.342803955 -23.55730247 #> [3741,]   2.514607906 -30.420589447 -22.04576874 #> [3742,]   1.647183776 -30.459289551 -22.17384338 #> [3743,]   1.372528434 -30.914922714 -21.59702110 #> [3744,]   2.338202715 -30.365495682 -22.32363701 #> [3745,]  -0.011528028 -28.880210876 -24.23340607 #> [3746,]  -1.475522876 -28.724960327 -24.30178833 #> [3747,]  -0.107846700 -29.224660873 -23.73127365 #> [3748,]  -1.081610441 -29.002819061 -24.05299950 #> [3749,]  -1.139084697 -29.125648499 -23.99633026 #> [3750,]   0.521674156 -30.434579849 -22.26268387 #> [3751,]   1.830687404 -32.546813965 -18.98357391 #> [3752,]   2.097111940 -33.127986908 -18.02641296 #> [3753,]   2.328755140 -33.409229279 -17.35856819 #> [3754,]   2.480410814 -33.877918243 -16.50367928 #> [3755,]   0.164208591 -32.665100098 -18.87498283 #> [3756,]  -3.153343916 -30.950647354 -21.41948891 #> [3757,]  -6.163397789 -29.332021713 -22.88690948 #> [3758,]  -9.404769897 -27.296773911 -24.31046104 #> [3759,] -11.074316025 -27.234405518 -23.65361595 #> [3760,]  -9.858081818 -30.542692184 -19.70607185 #> [3761,] -10.235393524 -32.095207214 -17.13626862 #> [3762,] -10.142043114 -31.709743500 -17.66244507 #> [3763,]  -8.716522217 -32.030052185 -18.01650238 #> [3764,]  -7.866514683 -32.514774323 -17.53079605 #> [3765,]  -6.458410740 -33.011489868 -17.15645790 #> [3766,]  -5.817180634 -33.251182556 -16.97974396 #> [3767,]  -7.044238567 -32.750194550 -17.44023705 #> [3768,]  -7.411057949 -31.706068039 -18.98645973 #> [3769,]  -6.090102673 -31.070598602 -20.45483017 #> [3770,]  -6.959634781 -31.169075012 -20.10831642 #> [3771,]  -6.795671940 -32.031402588 -18.78174019 #> [3772,]  -5.922760010 -33.119613647 -17.17864990 #> [3773,]  -7.253017902 -33.855392456 -15.17044353 #> [3774,]  -6.880497932 -34.541484833 -13.56370449 #> [3775,]  -4.742551804 -34.600227356 -14.23276043 #> [3776,]  -5.284081936 -33.940750122 -15.69466400 #> [3777,]  -5.319951534 -33.601360321 -16.38208771 #> [3778,]  -4.841794014 -33.278469086 -17.16197777 #> [3779,]  -6.303061485 -33.074230194 -17.09528160 #> [3780,]  -6.464970589 -33.425148010 -16.30032730 #> [3781,]  -4.750131130 -33.528404236 -16.61817169 #> [3782,]  -4.929029465 -32.836162567 -17.86937904 #> [3783,]  -4.668787003 -32.209560394 -19.00124741 #> [3784,]  -4.753864288 -31.496854782 -20.17860031 #> [3785,]  -5.217725754 -30.891016006 -20.99314308 #> [3786,]  -5.700551033 -30.370960236 -21.59767342 #> [3787,]  -7.020388603 -30.369302750 -21.25815773 #> [3788,]  -5.608004570 -30.981824875 -20.71790123 #> [3789,]  -4.578590870 -31.050170898 -20.86126137 #> [3790,]  -4.842617512 -31.446722031 -20.13377953 #> [3791,]  -4.984090328 -31.724164963 -19.74421501 #> [3792,]  -5.596718311 -31.585840225 -19.87382889 #> [3793,]  -5.291391850 -31.575939178 -19.95664024 #> [3794,]  -7.081569195 -30.671356201 -20.74329376 #> [3795,]  -7.159497738 -30.162305832 -21.45193481 #> [3796,]  -4.823369503 -30.021850586 -22.28261948 #> [3797,]  -7.964524269 -28.815202713 -22.86227608 #> [3798,]  -9.351804733 -28.415752411 -22.93746567 #> [3799,]  -5.281877995 -28.571294785 -23.97865295 #> [3800,]  -6.871432781 -27.246660233 -25.03902054 #> [3801,]  -9.203610420 -26.217687607 -25.43964577 #> [3802,]  -7.085738659 -25.973611832 -26.27132988 #> [3803,]  -6.694550991 -25.498113632 -26.80063820 #> [3804,]  -6.248802662 -25.358415604 -26.99499321 #> [3805,]  -6.682615280 -25.798315048 -26.54545021 #> [3806,]  -7.285151958 -26.260288239 -25.98177147 #> [3807,]  -8.591344833 -26.046524048 -25.81662560 #> [3808,] -10.360519409 -27.343841553 -23.75534248 #> [3809,]  -8.230370522 -29.822465897 -21.48300934 #> [3810,]  -7.840803146 -29.857246399 -21.53800964 #> [3811,]  -8.501928329 -29.401102066 -21.83578491 #> [3812,]  -7.525000095 -29.498201370 -22.17142677 #> [3813,]  -7.741402149 -28.790311813 -23.04272079 #> [3814,]  -6.749839783 -28.384519577 -23.78350258 #> [3815,]  -6.013175011 -27.960975647 -24.54497528 #> [3816,]  -7.901238918 -26.993379593 -25.00410461 #> [3817,]  -8.795882225 -27.017101288 -24.59331131 #> [3818,]  -7.833679676 -27.918184280 -23.95408630 #> [3819,]  -8.870060921 -28.610620499 -22.82626534 #> [3820,]  -8.078428268 -29.656324387 -21.80107307 #> [3821,]  -8.283368111 -29.651580811 -21.67834091 #> [3822,]  -9.797554016 -29.138647079 -21.71746826 #> [3823,]  -9.523389816 -28.447784424 -22.66920662 #> [3824,] -10.509907722 -26.965076447 -24.08514786 #> [3825,]  -9.913037300 -26.802682877 -24.51517487 #> [3826,]  -9.105217934 -27.276996613 -24.32076645 #> [3827,] -11.190099716 -26.741539001 -24.04581642 #> [3828,] -13.317861557 -26.593320847 -23.08053589 #> [3829,] -11.543933868 -27.370859146 -22.96688843 #> [3830,] -11.120347977 -27.450475693 -23.21879387 #> [3831,] -11.716117859 -27.786396027 -22.53947830 #> [3832,] -10.574417114 -28.088104248 -22.77187920 #> [3833,] -12.569298744 -27.422161102 -22.53062630 #> [3834,] -14.130903244 -27.520408630 -21.44038391 #> [3835,] -12.176452637 -27.729040146 -22.22833061 #> [3836,] -11.192313194 -26.892826080 -23.76968765 #> [3837,] -12.174762726 -26.476470947 -23.79264450 #> [3838,] -11.746321678 -27.709217072 -22.60405731 #> [3839,] -10.769154549 -29.419296265 -20.87240791 #> [3840,] -11.028098106 -30.050874710 -19.84450912 #> [3841,] -12.549121857 -30.025568008 -18.92440224 #> [3842,] -13.073467255 -30.435165405 -17.82607460 #> [3843,] -11.727180481 -29.993459702 -19.34239769 #> [3844,] -11.823379517 -28.800199509 -21.13141441 #> [3845,] -13.307500839 -28.160507202 -21.12845993 #> [3846,] -12.864183426 -28.609136581 -20.75504303 #> [3847,] -11.920614243 -28.996999741 -20.80876541 #> [3848,] -12.660017014 -29.228319168 -20.02685547 #> [3849,] -12.202551842 -31.073062897 -17.26368904 #> [3850,] -10.429300308 -31.187995911 -18.07229805 #> [3851,] -10.626434326 -28.745267868 -21.76008797 #> [3852,] -12.467582703 -25.717149734 -24.40167618 #> [3853,] -12.697169304 -22.453784943 -27.27910995 #> [3854,] -11.877381325 -20.597431183 -29.06562614 #> [3855,] -11.338106155 -20.714265823 -29.16951752 #> [3856,] -10.694777489 -22.003711700 -28.47430038 #> [3857,]  -9.693368912 -23.818531036 -27.35667610 #> [3858,] -10.194280624 -24.758769989 -26.29393196 #> [3859,] -12.138972282 -24.864606857 -25.27916527 #> [3860,] -11.678970337 -25.704841614 -24.65671921 #> [3861,] -10.973359108 -27.169315338 -23.47790909 #> [3862,] -11.344828606 -29.322414398 -20.55518341 #> [3863,] -11.713526726 -31.227220535 -17.53343582 #> [3864,] -11.088749886 -31.249546051 -17.74053001 #> [3865,]  -8.946600914 -29.452556610 -21.44335556 #> [3866,] -10.219408035 -29.267965317 -21.09735489 #> [3867,] -13.014818192 -30.567485809 -17.74430847 #> [3868,] -13.184368134 -30.450239182 -17.77147293 #> [3869,] -13.138231277 -30.263637543 -18.06466675 #> [3870,] -13.511387825 -30.507078171 -17.45070839 #> [3871,] -13.551801682 -30.853141785 -16.83478546 #> [3872,] -13.462361336 -31.444866180 -15.78495121 #> [3873,] -13.363031387 -31.517259598 -15.71210766 #> [3874,] -12.727807045 -31.311218262 -16.61382675 #> [3875,] -10.586696625 -30.520702362 -19.16849709 #> [3876,]  -6.578981876 -29.044403076 -22.74939728 #> [3877,]  -3.542915821 -28.322975159 -24.32839775 #> [3878,]  -3.255004168 -28.583646774 -24.03945923 #> [3879,]  -3.428075790 -28.842201233 -23.71012306 #> [3880,]  -3.919444799 -28.495141983 -24.05665588 #> [3881,]  -3.587269783 -28.769927979 -23.75999451 #> [3882,]  -2.983225107 -29.874118805 -22.49681664 #> [3883,]  -3.192716837 -30.503934860 -21.64767838 #> [3884,]  -4.100221157 -31.139287949 -20.59862328 #> [3885,]  -4.693902969 -30.999137878 -20.61371231 #> [3886,]  -2.779159784 -29.935377121 -22.33995056 #> [3887,]  -1.294179797 -29.725059509 -22.79830933 #> [3888,]  -1.618552446 -28.758903503 -23.82064819 #> [3889,]  -3.113683701 -27.423524857 -25.31538200 #> [3890,]  -3.052646637 -27.490306854 -25.25266457 #> [3891,]  -1.706347346 -27.956350327 -24.85181618 #> [3892,]  -1.679358244 -28.381347656 -24.40754128 #> [3893,]  -0.778340101 -28.172954559 -24.64065552 #> [3894,]   1.159451723 -27.842515945 -24.99255180 #> [3895,]   1.435064793 -27.722305298 -25.13743210 #> [3896,]   0.846576452 -26.363611221 -26.52423477 #> [3897,]   0.423871219 -24.738540649 -28.04222488 #> [3898,]   0.263644874 -24.616907120 -28.13651085 #> [3899,]   0.542762399 -25.881191254 -27.06075287 #> [3900,]  -0.143196195 -28.331741333 -24.52092361 #> [3901,]  -1.592635512 -30.025920868 -22.55738449 #> [3902,]  -0.351665527 -28.962543488 -23.86318588 #> [3903,]   3.451288462 -26.519794464 -26.37889862 #> [3904,]   6.897485733 -23.494714737 -28.41329384 #> [3905,]   9.416596413 -20.093914032 -30.20942497 #> [3906,]  11.137793541 -18.171253204 -30.90717888 #> [3907,]  13.040392876 -15.982460976 -31.33584213 #> [3908,]  15.464282036 -12.059980392 -32.04969788 #> [3909,]  16.995836258  -8.082436562 -32.50455475 #> [3910,]  17.524436951  -7.067646027 -32.48819733 #> [3911,]  19.292350769  -8.549343109 -31.19533157 #> [3912,]  22.031890869  -6.795815468 -29.78883743 #> [3913,]  23.342563629  -4.680200577 -29.37479973 #> [3914,]  23.285423279  -8.831803322 -28.33083153 #> [3915,]  22.304588318 -15.073060036 -26.69342995 #> [3916,]  21.932592392 -16.285268784 -26.31899261 #> [3917,]  23.112924576 -12.856072426 -27.12391472 #> [3918,]  24.889938354  -7.734243870 -27.48721886 #> [3919,]  25.611299515  -1.774346352 -27.55482674 #> [3920,]  23.576078415   5.226434231 -29.48258972 #> [3921,]  15.622021675  15.029414177 -30.41998863 #> [3922,]   4.444959164  24.391448975 -28.41147041 #> [3923,]   7.128073215  25.329679489 -26.76587105 #> [3924,]  21.982288361  22.126102448 -20.89630508 #> [3925,]  27.905963898  21.526603699 -14.98267460 #> [3926,]  26.863605499  22.038925171 -14.63826466 #> [3927,]  28.683937073  19.967649460 -14.96806622 #> [3928,]  27.441331863  18.404415131 -18.36544418 #> [3929,]  24.738939285  21.399267197 -18.90851402 #> [3930,]  24.594501495  23.020774841 -17.52748871 #> [3931,]  17.773859024  23.925125122 -22.76511955 #> [3932,]  11.374179840  28.934110641 -21.59543991 #> [3933,]  15.584668159  31.234741211 -14.52814770 #> [3934,]  23.045843124  25.645719528 -14.93276215 #> [3935,]  24.659727097  20.515983582 -20.97846222 #> [3936,]  15.980376244  21.716243744 -26.40135002 #> [3937,]   2.093422890  25.204423904 -27.75408745 #> [3938,]   2.466010809  26.949296951 -26.17410088 #> [3939,]  15.717769623  26.659633636 -21.78367233 #> [3940,]  24.184473038  25.503786087 -14.69461727 #> [3941,]  25.110877991  25.214431763 -12.81334782 #> [3942,]  24.778184891  24.165424347 -15.31817722 #> [3943,]  26.840742111  22.330070496 -14.94044018 #> [3944,]  28.457872391  20.834714890 -14.18857574 #> [3945,]  31.449722290  17.985076904 -11.17308998 #> [3946,]  32.573360443  16.198062897 -11.07834435 #> [3947,]  28.793132782  16.082073212 -19.28274727 #> [3948,]  20.534664154  17.170564651 -26.97706985 #> [3949,]   9.765329361  18.296129227 -31.67315483 #> [3950,]  11.767933846  18.415102005 -30.98634720 #> [3951,]  25.547014236  18.176931381 -21.11557770 #> [3952,]  30.966037750  15.304769516 -16.68132019 #> [3953,]  27.824222565  15.508735657 -20.16400528 #> [3954,]  28.206119537  19.916612625 -15.58357143 #> [3955,]  30.781351089  18.739212036 -12.64368629 #> [3956,]  33.542743683  14.181822777 -10.50827503 #> [3957,]  35.194473267  11.441232681  -9.27153397 #> [3958,]  33.810600281   7.570801258 -15.85891533 #> [3959,]  33.141540527   4.274087906 -18.89192772 #> [3960,]  32.254508972   5.930575371 -19.42923927 #> [3961,]  32.687820435   7.026107311 -18.38962364 #> [3962,]  32.501739502   8.259812355 -18.55505562 #> [3963,]  25.614612579  12.431208611 -25.02937126 #> [3964,]  16.477027893  14.588220596 -31.46111679 #> [3965,]  18.006326675  15.867925644 -29.09454346 #> [3966,]  28.116786957  15.089084625 -20.62192917 #> [3967,]  31.658071518  13.425410271 -17.15279007 #> [3968,]  30.946769714  16.379592896 -14.40043736 #> [3969,]  32.062110901  16.389026642 -12.65054893 #> [3970,]  33.489273071  11.784520149 -13.76702785 #> [3971,]  33.815097809   8.479030609 -15.86638165 #> [3972,]  29.818120956   7.388775826 -23.00573349 #> [3973,]  18.147979736   8.066969872 -32.12221909 #> [3974,]  14.005367279   8.237575531 -34.91761017 #> [3975,]  27.053289413   7.492183685 -24.67065811 #> [3976,]  36.390018463   5.294582367 -12.79097366 #> [3977,]  35.645118713   3.691075087 -12.65238094 #> [3978,]  34.639122009   1.843231797 -16.39562225 #> [3979,]  34.491069794  -4.012340069 -16.09356880 #> [3980,]  33.011436462  -9.753088951 -16.54450226 #> [3981,]  32.242076874  -8.965001106 -18.57398224 #> [3982,]  32.733280182  -8.850864410 -17.86377525 #> [3983,]  32.019615173 -13.741126060 -15.77821159 #> [3984,]  31.451744080 -16.568132401 -14.40060997 #> [3985,]  31.838228226 -16.148864746 -13.82436848 #> [3986,]  31.933567047 -16.077148438 -13.66989613 #> [3987,]  31.749172211 -17.033971786 -12.80133533 #> [3988,]  31.746356964 -17.501739502 -12.24344349 #> [3989,]  31.902183533 -16.874553680 -12.61940861 #> [3990,]  31.850000381 -16.155244827 -13.61861610 #> [3991,]  31.388692856 -17.463874817 -13.01085949 #> [3992,]  30.487352371 -18.961284637 -13.02295494 #> [3993,]  30.108865738 -18.791357040 -14.13420582 #> [3994,]  29.562765121 -18.662992477 -15.21669865 #> [3995,]  29.158143997 -19.059715271 -15.52026272 #> [3996,]  28.854160309 -19.330614090 -15.71222878 #> [3997,]  28.317050934 -19.821498871 -16.13076019 #> [3998,]  28.083034515 -19.614492416 -16.63874245 #> [3999,]  27.396778107 -19.897933960 -17.41723061 #> [4000,]  26.863351822 -20.921838760 -17.05371666 #> [4001,]  26.378152847 -21.387027740 -17.22009087 #> [4002,]  26.065452576 -21.432983398 -17.56678581 #> [4003,]  25.274335861 -22.141159058 -17.88304329 #> [4004,]  26.026567459 -21.919221878 -17.10611916 #> [4005,]  27.861019135 -19.344728470 -17.20780754 #> [4006,]  27.355628967 -19.061964035 -18.25498390 #> [4007,]  26.562833786 -20.574127197 -17.89205551 #> [4008,]  25.354389191 -20.605100632 -19.41387367 #> [4009,]  23.607126236 -20.765010834 -21.49168777 #> [4010,]  23.202322006 -20.856124878 -21.75596046 #> [4011,]  22.055280685 -20.624067307 -23.06111908 #> [4012,]  20.411607742 -20.829866409 -24.34879112 #> [4013,]  19.672739029 -21.152452469 -24.70065689 #> [4014,]  19.292135239 -22.942543030 -23.36323738 #> [4015,]  17.717432022 -25.846424103 -21.52865219 #> [4016,]  15.930977821 -27.041473389 -21.49564552 #> [4017,]  14.641613960 -27.016681671 -22.37563705 #> [4018,]  12.822646141 -27.372720718 -23.00111961 #> [4019,]  11.994879723 -27.313920975 -23.53001785 #> [4020,]  11.930536270 -27.149057388 -23.73711777 #> [4021,]  11.251621246 -27.401138306 -23.76266479 #> [4022,]  11.107445717 -27.469274521 -23.77649879 #> [4023,]  10.662010193 -27.426652908 -24.01097488 #> [4024,]  10.002830505 -27.055587769 -24.71901131 #> [4025,]  10.174916267 -27.056831360 -24.67099571 #> [4026,]   9.524819374 -28.137565613 -23.69322395 #> [4027,]   8.697405815 -28.878993988 -23.15736008 #> [4028,]   8.666520119 -29.026958466 -22.97472572 #> [4029,]   9.001680374 -29.024166107 -22.84400940 #> [4030,]  10.804735184 -28.467233658 -22.79059982 #> [4031,]  13.635943413 -27.130517960 -23.00678062 #> [4032,]  16.455417633 -24.717344284 -23.84830856 #> [4033,]  18.495098114 -22.936855316 -24.18391228 #> [4034,]  18.610839844 -22.740592957 -24.27263832 #> [4035,]  18.765787125 -22.048465729 -24.79692459 #> [4036,]  19.831163406 -21.481786728 -24.50728798 #> [4037,]  20.298242569 -22.221530914 -23.46918678 #> [4038,]  21.061614990 -22.429754257 -22.60173988 #> [4039,]  22.112880707 -22.620170593 -21.39781380 #> [4040,]  22.168445587 -23.150001526 -20.78705025 #> [4041,]  22.636072159 -21.949281693 -21.60667419 #> [4042,]  24.325857162 -19.259006500 -22.35090637 #> [4043,]  26.410865784 -17.173114777 -21.68625259 #> [4044,]  28.261568069 -17.201925278 -19.21331978 #> [4045,]  29.478212357 -18.054643631 -16.37523270 #> [4046,]  28.859182358 -19.439607620 -16.20196724 #> [4047,]  23.375818253 -20.181297302 -22.34613419 #> [4048,]  14.196927071 -20.632978439 -28.83384323 #> [4049,]   6.427793980 -22.847141266 -29.94254684 #> [4050,]   7.853920937 -24.135938644 -28.53424072 #> [4051,]  19.763998032 -22.287960052 -23.44038773 #> [4052,]  26.888235092 -20.309099197 -18.91480637 #> [4053,]  25.654582977 -21.853649139 -17.90774536 #> [4054,]  25.871494293 -22.680990219 -16.94517326 #> [4055,]  28.200950623 -21.497945786 -14.52860832 #> [4056,]  29.166444778 -20.905355453 -13.33350658 #> [4057,]  28.060022354 -20.125644684 -16.49406815 #> [4058,]  25.388269424 -19.601541519 -21.36120224 #> [4059,]  18.095825195 -18.639022827 -27.74023056 #> [4060,]   8.854523659 -18.626890182 -32.39107132 #> [4061,]  12.449586868 -21.044652939 -28.86716843 #> [4062,]  25.136241913 -21.619901657 -19.24789810 #> [4063,]  29.498512268 -20.768510818 -13.83593369 #> [4064,]  26.880332947 -21.338361740 -16.44221497 #> [4065,]  25.803892136 -21.821855545 -18.30882263 #> [4066,]  24.785577774 -21.475246429 -19.66349030 #> [4067,]  19.923381805 -20.895643234 -25.21273041 #> [4068,]  12.305003166 -20.624891281 -29.57768059 #> [4069,]   8.595710754 -20.935430527 -31.06209946 #> [4070,]  17.020055771 -22.406219482 -25.23168373 #> [4071,]  26.553657532 -23.810108185 -14.53574181 #> [4072,]  28.222898483 -23.602628708 -10.74057674 #> [4073,]  28.531757355 -22.246755600 -12.21864605 #> [4074,]  28.329816818 -20.433771133 -16.41569328 #> [4075,]  22.416896820 -18.581972122 -24.56927872 #> [4076,]  12.975829124 -18.657196045 -30.89885139 #> [4077,]  14.334080696 -19.502513885 -29.54410362 #> [4078,]  25.463998795 -18.865201950 -21.19191742 #> [4079,]  30.575313568 -18.322395325 -14.89602661 #> [4080,]  29.942018509 -19.234443665 -13.93912029 #> [4081,]  29.405952454 -19.108428955 -15.59125900 #> [4082,]  28.369018555 -19.208251953 -17.03459930 #> [4083,]  27.551185608 -21.741384506 -15.27631569 #> [4084,]  25.103118896 -22.336128235 -18.85928535 #> [4085,]  15.942956924 -20.955022812 -27.47183418 #> [4086,]   7.618795395 -22.055818558 -30.42454147 #> [4087,]  13.359005928 -24.610572815 -25.54994202 #> [4088,]  23.046192169 -25.314458847 -17.66248703 #> [4089,]  26.211017609 -25.158226013 -12.40725899 #> [4090,]  26.030088425 -23.744403839 -14.75032711 #> [4091,]  24.977659225 -22.913326263 -17.97297096 #> [4092,]  24.365798950 -24.083219528 -16.95591164 #> [4093,]  22.365993500 -24.251232147 -19.67750549 #> [4094,]  16.461450577 -23.044826508 -25.62445068 #> [4095,]   9.041240692 -22.079956055 -30.02776146 #> [4096,]  13.001920700 -22.413501740 -27.60384750 #> [4097,]  23.648519516 -23.057807922 -19.57014465 #> [4098,]  26.108585358 -23.614412308 -15.62458229 #> [4099,]  26.275266647 -23.030778885 -15.43985844 #> [4100,]  26.287084579 -21.535514832 -17.78409004 #> [4101,]  25.680278778 -22.867597580 -16.63445473 #> [4102,]  26.888717651 -24.040866852 -13.06804180 #> [4103,]  27.856065750 -21.010990143 -15.52815723 #> [4104,]  30.461090088 -17.729034424 -15.21627140 #> [4105,]  30.641244888 -14.475340843 -18.08912086 #> [4106,]  23.214445114  -9.187147141 -28.61207199 #> [4107,]  15.947163582  -5.960027218 -34.60681915 #> [4108,]  20.807365417  -5.634294987 -31.67870140 #> [4109,]  32.715625763  -6.067170620 -18.21715164 #> [4110,]  37.448532104  -7.219335556  -7.39058018 #> [4111,]  35.334915161  -6.310359955 -12.25095749 #> [4112,]  34.336391449  -6.019887924 -16.04347610 #> [4113,]  34.277202606  -6.519141674 -16.32268143 #> [4114,]  27.965341568  -3.094029427 -25.54649162 #> [4115,]  17.049764633   0.842684925 -34.46271515 #> [4116,]  16.022390366   0.081452198 -34.83726120 #> [4117,]  28.141012192  -1.748636365 -25.16911125 #> [4118,]  35.587425232  -2.315304518 -15.55487728 #> [4119,]  33.454319000  -3.841591120 -17.60808563 #> [4120,]  33.100452423  -2.705855608 -19.00471306 #> [4121,]  34.151924133  -2.229435444 -17.25839996 #> [4122,]  33.371845245  -3.977000713 -18.34304619 #> [4123,]  32.111595154  -3.257993937 -20.46518898 #> [4124,]  32.700160980  -1.935321450 -19.74496460 #> [4125,]  34.151100159  -3.025627851 -17.39151382 #> [4126,]  31.712829590  -6.199819088 -20.50060272 #> [4127,]  28.454040527  -5.484901428 -25.25380898 #> [4128,]  25.162069321   1.220814586 -28.80499268 #> [4129,]  15.940306664   4.501391888 -34.31369400 #> [4130,]  14.712297440   2.948593140 -35.18560410 #> [4131,]  29.236194611   1.669044614 -23.38980484 #> [4132,]  36.643417358  -1.269949675 -13.64142704 #> [4133,]  35.674621582  -0.709035993 -13.13418865 #> [4134,]  36.619186401   1.716276407 -11.20040989 #> [4135,]  37.211975098  -0.346281499  -9.11607456 #> [4136,]  35.505268097  -3.576880693 -13.76469040 #> [4137,]  32.284435272  -7.389838696 -19.64600372 #> [4138,]  26.219188690 -11.721083641 -25.31012917 #> [4139,]  16.559976578 -12.821924210 -31.89542007 #> [4140,]  10.861872673 -11.887694359 -35.35696030 #> [4141,]  21.103338242 -13.711503029 -27.03760338 #> [4142,]  30.893821716 -14.476438522 -18.62568474 #> [4143,]  29.334417343 -12.221347809 -21.20432091 #> [4144,]  29.181493759 -10.480279922 -22.46236229 #> [4145,]  29.575180054 -11.814146042 -21.15517807 #> [4146,]  28.985569000 -14.915677071 -20.09311485 #> [4147,]  27.486923218 -17.600723267 -20.10742760 #> [4148,]  26.797506332 -20.413833618 -18.31413078 #> [4149,]  25.794656754 -22.817878723 -16.84738350 #> [4150,]  23.553544998 -24.436012268 -17.73508072 #> [4151,]  21.436397552 -25.280920029 -19.18533897 #> [4152,]  19.793790817 -26.383377075 -19.37867928 #> [4153,]  18.694585800 -26.992773056 -19.59190941 #> [4154,]  17.381574631 -27.149757385 -20.56235886 #> [4155,]  16.599411011 -27.365230560 -20.82844543 #> [4156,]  16.589256287 -26.748668671 -21.84133911 #> [4157,]  10.845477104 -27.069599152 -24.41266060 #> [4158,]   0.085424222 -28.615974426 -25.03680611 #> [4159,]  -7.642313004 -30.457281113 -21.49465561 #> [4160,]  -4.840703011 -31.557704926 -19.82267952 #> [4161,]   5.561281204 -30.728452682 -21.62597656 #> [4162,]   9.309242249 -29.490524292 -22.70895195 #> [4163,]  11.785277367 -29.307821274 -21.06329155 #> [4164,]  15.613645554 -29.738859177 -18.38981628 #> [4165,]  16.690706253 -29.260007858 -18.12611771 #> [4166,]  18.688665390 -28.292566299 -17.62227058 #> [4167,]  21.117555618 -27.543237686 -16.12289429 #> [4168,]  21.252727509 -26.642505646 -17.30369186 #> [4169,]  21.306190491 -26.178174973 -18.01643372 #> [4170,]  21.953907013 -25.333007812 -18.61904907 #> [4171,]  17.703590393 -23.604921341 -24.03839874 #> [4172,]  11.524641991 -21.598276138 -29.42633438 #> [4173,]  11.397222519 -19.325412750 -31.23677063 #> [4174,]  19.871953964 -18.986675262 -26.05260849 #> [4175,]  28.494138718 -19.791290283 -16.76794243 #> [4176,]  30.649497986 -19.077728271 -13.13735676 #> [4177,]  30.697221756 -19.329404831 -12.20796299 #> [4178,]  30.307701111 -18.877431870 -13.95516300 #> [4179,]  31.622705460 -16.178228378 -14.27899265 #> [4180,]  33.030555725 -14.645599365 -12.94489479 #> [4181,]  31.437549591 -14.024064064 -16.72406578 #> [4182,]  29.623529434 -13.536745071 -20.64415550 #> [4183,]  25.546318054 -12.900662422 -25.37721825 #> [4184,]  17.269941330 -10.935568810 -32.40559006 #> [4185,]  17.560626984  -9.733832359 -32.96797562 #> [4186,]  29.285396576 -12.495567322 -19.93990517 #> [4187,]  34.513114929 -14.245292664 -10.91650391 #> [4188,]  34.378292084 -10.971393585 -12.27063465 #> [4189,]  34.878036499  -8.728127480 -13.34821129 #> [4190,]  33.278373718  -9.223993301 -16.42758179 #> [4191,]  33.287303925  -9.203834534 -16.62253952 #> [4192,]  32.660839081  -8.615810394 -18.19447708 #> [4193,]  33.279243469  -8.649839401 -16.76132965 #> [4194,]  35.375972748  -9.141653061 -11.71614742 #> [4195,]  34.510280609  -8.510099411 -14.47218323 #> [4196,]  32.152969360  -4.866628170 -20.34547997 #> [4197,]  28.009395599   0.510446072 -26.14252663 #> [4198,]  21.035005569   2.178050756 -31.88014030 #> [4199,]  16.911508560  -2.235159874 -34.46578217 #> [4200,]  24.789047241  -8.595059395 -26.96315002 #> [4201,]  33.380641937 -11.055828094 -16.68031693 #> [4202,]  34.670738220  -6.668248177 -14.71458244 #> [4203,]  33.377326965  -3.848850727 -18.41415977 #> [4204,]  33.464031219  -6.504572392 -17.27800941 #> [4205,]  34.700832367  -7.095328331 -14.58873367 #> [4206,]  33.727405548  -5.824782848 -17.39010429 #> [4207,]  32.804504395  -4.535794735 -19.39539528 #> [4208,]  32.808612823  -3.684552670 -19.52874184 #> [4209,]  34.077430725  -4.808378220 -17.04050636 #> [4210,]  33.009582520  -6.884540558 -17.95595932 #> [4211,]  29.335494995 -10.743074417 -22.72092247 #> [4212,]  22.126550674 -14.613514900 -27.43455887 #> [4213,]  12.359292984 -17.466577530 -31.77176285 #> [4214,]  14.509541512 -19.601343155 -29.34608459 #> [4215,]  25.782579422 -19.695812225 -20.35627365 #> [4216,]  30.851480484 -19.650999069 -12.11672497 #> [4217,]  31.650209427 -20.094131470  -7.69204903 #> [4218,]  31.698526382 -18.985811234  -9.96681881 #> [4219,]  30.614128113 -17.298025131 -15.21065235 #> [4220,]  31.238779068 -15.640291214 -15.73732758 #> [4221,]  31.734689713 -14.612207413 -15.83087921 #> [4222,]  32.309352875 -14.802384377 -14.31796646 #> [4223,]  33.457786560 -13.419961929 -13.00228119 #> [4224,]  32.772693634 -10.410355568 -17.18610382 #> [4225,]  28.384258270  -7.212353230 -24.83772659 #> [4226,]  19.908725739  -2.897768974 -32.37154388 #> [4227,]  16.814739227   1.266960859 -34.68003082 #> [4228,]  26.168476105   1.321369171 -27.51114655 #> [4229,]  35.825942993  -1.405680180 -14.09332180 #> [4230,]  37.140167236  -0.519540608  -9.10481834 #> [4231,]  34.963588715   1.054682493 -15.63553905 #> [4232,]  29.931108475   1.134112358 -24.45247650 #> [4233,]  18.489084244   1.462610364 -32.85604477 #> [4234,]  13.746748924  -0.903985322 -36.38608170 #> [4235,]  25.842256546  -3.015319824 -27.11286354 #> [4236,]  35.920066833  -4.085560799 -14.11938190 #> [4237,]  34.606674194  -4.617927551 -15.07165146 #> [4238,]  33.329795837  -3.330064535 -18.65232849 #> [4239,]  33.821121216  -4.058790207 -17.60423851 #> [4240,]  32.552318573  -6.009512901 -19.22500229 #> [4241,]  31.713397980  -9.920982361 -18.66671944 #> [4242,]  31.633745193 -14.537723541 -16.05522346 #> [4243,]  31.876358032 -16.109149933 -13.73861599 #> [4244,]  31.806858063 -16.966438293 -12.58987522 #> [4245,]  30.292810440 -18.136308670 -14.38376713 #> [4246,]  28.434078217 -20.369890213 -15.32707405 #> [4247,]  24.642944336 -23.361623764 -17.18527412 #> [4248,]  20.054405212 -26.235662460 -18.94494057 #> [4249,]  18.568593979 -28.842184067 -16.51703262 #> [4250,]  18.490972519 -29.661306381 -14.95662689 #> [4251,]  18.460147858 -28.710809708 -16.61895561 #> [4252,]  19.184591293 -28.092430115 -17.00348282 #> [4253,]  19.317298889 -28.638294220 -15.74378300 #> [4254,]  19.423767090 -29.099864960 -14.91854095 #> [4255,]  20.883045197 -29.129543304 -12.28496075 #> [4256,]  22.453727722 -29.257093430  -9.10893917 #> [4257,]  23.341737747 -28.819082260  -7.99036312 #> [4258,]  24.508371353 -28.115301132  -7.02943516 #> [4259,]  26.078773499 -26.945953369  -5.53353167 #> [4260,]  26.934856415 -26.308162689  -4.38366747 #> [4261,]  27.070137024 -26.027633667  -5.24712896 #> [4262,]  27.870639801 -25.151584625  -5.10815716 #> [4263,]  27.977121353 -24.895973206  -5.39421272 #> [4264,]  28.321224213 -24.722995758  -4.29563332 #> [4265,]  28.898645401 -24.234951019  -3.41205406 #> [4266,]  29.178422928 -23.917837143  -2.57243681 #> [4267,]  29.178859711 -23.893072128  -2.87944078 #> [4268,]  29.464851379 -23.491083145  -3.02476048 #> [4269,]  29.491231918 -23.234434128  -3.96798825 #> [4270,]  29.972866058 -22.609096527  -3.62379646 #> [4271,]  30.469568253 -21.958152771  -3.33581638 #> [4272,]  30.661430359 -21.520223618  -3.97248507 #> [4273,]  31.220888138 -20.904678345  -3.17174220 #> [4274,]  31.564645767 -20.388677597  -2.84402180 #> [4275,]  31.834213257 -19.966554642  -2.48584390 #> [4276,]  31.926586151 -19.523645401  -3.97049665 #> [4277,]  32.314197540 -19.185297012  -1.93479359 #> [4278,]  32.518939972 -19.022367477  -1.11037064 #> [4279,]  32.716941833 -18.538637161  -1.79645944 #> [4280,]  32.791202545 -18.534004211   0.24648122 #> [4281,]  32.873825073 -18.346462250   0.14946176 #> [4282,]  33.147876740 -17.651870728  -1.60305119 #> [4283,]  33.533069611 -16.871877670  -0.92029220 #> [4284,]  33.845928192 -16.191698074  -1.18275571 #> [4285,]  34.246681213 -15.320436478  -0.89508295 #> [4286,]  34.060596466 -15.563076973  -2.01925969 #> [4287,]  33.714649200 -16.286579132  -3.07827330 #> [4288,]  33.883605957 -16.151229858  -1.61579978 #> [4289,]  33.681690216 -16.598630905  -1.33468235 #> [4290,]  33.740383148 -16.478605270  -1.17863512 #> [4291,]  34.025356293 -15.888487816  -0.98555601 #> [4292,]  33.482582092 -16.967782974  -1.02024257 #> [4293,]  33.146076202 -17.633691788  -1.42709255 #> [4294,]  33.331573486 -17.206783295  -2.01826787 #> [4295,]  32.797321320 -17.958292007  -3.36102772 #> [4296,]  32.567691803 -18.281185150  -3.82704973 #> [4297,]  33.451160431 -16.875350952  -1.52308047 #> [4298,]  33.708824158 -16.322401047  -1.87219870 #> [4299,]  33.599384308 -16.537069321  -1.46407795 #> [4300,]  33.796585083 -16.371170044  -0.11192691 #> [4301,]  33.547462463 -16.797155380  -1.70370662 #> [4302,]  33.110488892 -17.658514023  -1.82243717 #> [4303,]  32.523727417 -18.670185089  -2.11403584 #> [4304,]  31.942827225 -19.442768097  -3.49646735 #> [4305,]  31.941547394 -19.191448212  -4.56762886 #> [4306,]  32.187061310 -18.746227264  -4.67616892 #> [4307,]  32.110366821 -19.026201248  -4.10279655 #> [4308,]  32.317367554 -18.688144684  -3.90234590 #> [4309,]  32.452182770 -18.434902191  -3.93413758 #> [4310,]  32.254589081 -18.883531570  -3.56847525 #> [4311,]  32.289817810 -18.901174545  -3.22244477 #> [4312,]  32.062702179 -19.249647141  -3.43982339 #> [4313,]  31.935377121 -19.389732361  -3.78817320 #> [4314,]  32.022602081 -19.256122589  -3.66725206 #> [4315,]  32.087989807 -19.145168304  -3.72885585 #> [4316,]  32.607295990 -18.048805237  -4.41360044 #> [4317,]  32.924083710 -17.461582184  -4.47796059 #> [4318,]  33.053451538 -17.403484344  -3.61506224 #> [4319,]  33.244121552 -17.180488586  -2.80768156 #> [4320,]  33.169044495 -17.446470261  -2.17911386 #> [4321,]  33.468338013 -16.918432236  -1.84841573 #> [4322,]  33.867897034 -16.080968857  -1.85238409 #> [4323,]  33.715843201 -16.404983521  -1.72147894 #> [4324,]  33.600940704 -16.672750473  -1.59375215 #> [4325,]  33.878017426 -16.079002380  -1.65502322 #> [4326,]  34.112529755 -15.522601128  -1.94551551 #> [4327,]  34.070735931 -15.549142838  -2.15474033 #> [4328,]  34.111698151 -15.470026016  -2.05744863 #> [4329,]  34.359443665 -14.919749260  -2.02894115 #> [4330,]  34.416072845 -14.774106979  -2.08328390 #> [4331,]  34.464328766 -14.634696960  -2.23850918 #> [4332,]  34.582485199 -14.313682556  -2.42107034 #> [4333,]  34.608932495 -14.237005234  -2.51179886 #> [4334,]  34.556266785 -14.370203018  -2.52984118 #> [4335,]  34.523433685 -14.380586624  -2.69812393 #> [4336,]  34.597824097 -14.082693100  -3.20183802 #> [4337,]  34.480781555 -14.182397842  -3.89663815 #> [4338,]  34.408542633 -14.089403152  -4.63931513 #> [4339,]  34.479557037 -13.668718338  -5.33015490 #> [4340,]  34.482959747 -13.450717926  -5.80239058 #> [4341,]  34.479095459 -13.334514618  -6.02442169 #> [4342,]  34.547786713 -13.013875961  -6.30477333 #> [4343,]  34.725128174 -12.406048775  -6.53372383 #> [4344,]  34.849464417 -12.081541061  -6.50410700 #> [4345,]  34.825084686 -12.159235954  -6.51563263 #> [4346,]  34.836238861 -12.165567398  -6.47383881 #> [4347,]  34.891967773 -12.192089081  -6.14179230 #> [4348,]  34.914081573 -12.334362984  -5.63236427 #> [4349,]  34.990253448 -12.245212555  -5.33566856 #> [4350,]  35.050224304 -11.931668282  -5.63615704 #> [4351,]  35.201770782 -11.084953308  -6.18650389 #> [4352,]  35.343589783 -10.422870636  -6.52311563 #> [4353,]  35.433967590  -9.911224365  -6.88010597 #> [4354,]  35.548709869  -9.169411659  -7.19417381 #> [4355,]  35.605022430  -8.807334900  -7.29979849 #> [4356,]  35.691818237  -8.356431007  -7.35547590 #> [4357,]  35.869514465  -7.459375381  -7.39988804 #> [4358,]  35.960151672  -6.951849937  -7.53831339 #> [4359,]  35.959274292  -6.743297100  -7.69978142 #> [4360,]  36.058746338  -5.858925343  -7.76629686 #> [4361,]  36.142662048  -5.157312393  -7.83482742 #> [4362,]  36.117362976  -5.542330265  -7.80172539 #> [4363,]  36.091667175  -5.694853306  -7.86715078 #> [4364,]  36.053501129  -5.392591476  -8.19049168 #> [4365,]  35.947525024  -5.291208267  -8.64764309 #> [4366,]  35.854694366  -4.733228207  -9.25434303 #> [4367,]  35.733650208  -4.498668194  -9.83536243 #> [4368,]  35.577995300  -4.792391300 -10.29428577 #> [4369,]  35.526531219  -4.598587990 -10.59889221 #> [4370,]  35.478633881  -4.682935238 -10.69564533 #> [4371,]  35.467041016  -5.046814442 -10.54985237 #> [4372,]  35.509464264  -5.225399017 -10.38537407 #> [4373,]  35.485904694  -5.159429073 -10.47658253 #> [4374,]  35.384994507  -5.048627377 -10.83061314 #> [4375,]  35.244712830  -5.179113865 -11.27471161 #> [4376,]  35.150936127  -4.952641010 -11.64192867 #> [4377,]  35.088558197  -4.642624855 -11.92242241 #> [4378,]  35.141098022  -4.319734573 -11.89520931 #> [4379,]  35.328441620  -3.879048109 -11.45426559 #> [4380,]  35.505702972  -3.749944925 -10.89038086 #> [4381,]  35.622325897  -3.813529968 -10.45449162 #> [4382,]  35.707519531  -3.850429773 -10.16797924 #> [4383,]  35.761268616  -3.951354980  -9.97308254 #> [4384,]  35.796493530  -3.787438393  -9.90715027 #> [4385,]  35.803024292  -3.402421474  -9.99377918 #> [4386,]  35.786357880  -3.340251207 -10.08383179 #> [4387,]  35.819503784  -3.221078157  -9.99027443 #> [4388,]  35.878536224  -2.857424736  -9.83322430 #> [4389,]  35.913005829  -2.690114021  -9.74526310 #> [4390,]  35.938842773  -2.822688818  -9.66609669 #> [4391,]  35.957038879  -2.800468683  -9.63679981 #> [4392,]  35.935009003  -2.605956078  -9.74792671 #> [4393,]  35.897796631  -2.515147209  -9.89214802 #> [4394,]  35.851242065  -2.440221786 -10.03146935 #> [4395,]  35.819042206  -2.538248539 -10.10638237 #> [4396,]  35.824241638  -2.699241161 -10.09996891 #> [4397,]  35.767883301  -2.801299810 -10.23219585 #> [4398,]  35.706241608  -2.864860535 -10.37864113 #> [4399,]  35.727935791  -2.740480661 -10.39418030 #> [4400,]  35.778068542  -2.466425419 -10.34112358 #> [4401,]  35.829963684  -2.308530331 -10.18391609 #> [4402,]  35.829246521  -2.891593695 -10.01039505 #> [4403,]  35.774639130  -3.734912157  -9.94575500 #> [4404,]  35.728313446  -4.113199234  -9.98770523 #> [4405,]  35.732532501  -4.355292320  -9.86224270 #> [4406,]  35.804504395  -4.501481533  -9.53808212 #> [4407,]  35.882728577  -4.513856888  -9.29889488 #> [4408,]  35.917091370  -4.579879761  -9.14220047 #> [4409,]  35.925662994  -4.401624680  -9.16827679 #> [4410,]  35.898620605  -4.390124321  -9.25471973 #> [4411,]  35.826477051  -5.071671486  -9.18342781 #> [4412,]  35.766044617  -5.686093330  -9.08041668 #> [4413,]  35.718978882  -6.066455364  -9.05538750 #> [4414,]  35.623718262  -6.588643074  -9.12230015 #> [4415,]  35.537925720  -6.776463985  -9.29778576 #> [4416,]  35.543273926  -6.507035255  -9.44954681 #> [4417,]  35.598678589  -6.264347076  -9.41348934 #> [4418,]  35.682201385  -6.048353195  -9.24842167 #> [4419,]  35.804710388  -5.543379307  -9.06402397 #> [4420,]  35.941684723  -4.825652122  -8.86336422 #> [4421,]  35.996025085  -4.263751030  -8.89702797 #> [4422,]  35.950923920  -3.886604071  -9.24747086 #> [4423,]  35.884056091  -3.629044533  -9.59585285 #> [4424,]  35.836547852  -3.738047600  -9.70322514 #> [4425,]  35.828296661  -4.087871075  -9.60826111 #> [4426,]  35.872509003  -4.172383308  -9.42148399 #> [4427,]  35.951568604  -3.952373743  -9.17883873 #> [4428,]  36.010505676  -3.660258532  -9.02035713 #> [4429,]  36.049190521  -3.459804296  -8.94306850 #> [4430,]  36.042327881  -3.640538454  -8.88367271 #> [4431,]  35.971679688  -4.237448215  -8.93910122 #> [4432,]  35.915721893  -4.585795403  -9.06300735 #> [4433,]  35.880832672  -4.607741833  -9.15287876 #> [4434,]  35.859504700  -4.715151787  -9.15077209 #> [4435,]  35.884330750  -4.863059044  -9.04613018 #> [4436,]  35.906017303  -5.072196007  -8.89851093 #> [4437,]  35.856296539  -5.431713104  -8.86186409 #> [4438,]  35.799304962  -5.598844528  -8.97691059 #> [4439,]  35.808216095  -5.425123215  -9.06810856 #> [4440,]  35.845344543  -5.215369225  -9.00161362 #> [4441,]  35.871154785  -4.995619774  -8.95378590 #> [4442,]  35.869674683  -4.731555462  -9.12643433 #> [4443,]  35.847255707  -4.668458462  -9.26121330 #> [4444,]  35.810607910  -4.773893833  -9.31232452 #> [4445,]  35.795135498  -4.797278404  -9.37854862 #> [4446,]  35.831466675  -4.821657658  -9.24744892 #> [4447,]  35.923210144  -4.771595001  -8.90384197 #> [4448,]  36.004966736  -4.799057961  -8.53465080 #> [4449,]  36.039997101  -4.987452507  -8.28705025 #> [4450,]  36.053157806  -4.916791439  -8.30610275 #> [4451,]  35.929374695  -5.259264946  -8.59531116 #> [4452,]  35.700843811  -6.080074310  -9.06874084 #> [4453,]  35.560508728  -6.464911461  -9.44461727 #> [4454,]  35.362224579  -6.609358311  -9.98568916 #> [4455,]  35.128353119  -6.762516975 -10.69545937 #> [4456,]  35.059440613  -6.896004200 -10.91558552 #> [4457,]  35.053367615  -6.914113998 -10.90043259 #> [4458,]  35.059013367  -6.857286453 -10.88114643 #> [4459,]  35.102863312  -6.775373459 -10.79763317 #> [4460,]  35.162178040  -6.613739014 -10.71430302 #> [4461,]  35.238643646  -6.477030754 -10.56618690 #> [4462,]  35.284194946  -6.424618244 -10.44283962 #> [4463,]  35.226047516  -6.380871773 -10.62722492 #> [4464,]  35.189163208  -6.469551086 -10.67628574 #> [4465,]  35.238460541  -6.717231274 -10.37233162 #> [4466,]  35.347572327  -6.820564747  -9.95552540 #> [4467,]  35.479804993  -6.790890217  -9.45956326 #> [4468,]  35.501678467  -6.629082680  -9.47923088 #> [4469,]  35.434368134  -6.371929169  -9.90921307 #> [4470,]  35.421684265  -6.271744251 -10.00669193 #> [4471,]  35.416378021  -6.177750111 -10.07168484 #> [4472,]  35.387748718  -5.760616779 -10.41379642 #> [4473,]  35.288074493  -5.711311817 -10.82087040 #> [4474,]  35.053798676  -6.397743225 -11.19318771 #> [4475,]  34.904747009  -6.773445129 -11.43314266 #> [4476,]  34.896095276  -6.750446320 -11.47308540 #> [4477,]  34.887969971  -6.937582016 -11.41649151 #> [4478,]  34.886913300  -7.148565292 -11.31247616 #> [4479,]  34.879009247  -7.287992477 -11.21618938 #> [4480,]  34.727336884  -7.790270805 -11.33626080 #> [4481,]  34.496162415  -8.408265114 -11.65671730 #> [4482,]  34.360359192  -8.376795769 -12.07948112 #> [4483,]  34.303558350  -7.989353180 -12.46929169 #> [4484,]  34.268959045  -7.788316250 -12.69648933 #> [4485,]  34.220947266  -7.853977680 -12.77024746 #> [4486,]  34.194919586  -8.017680168 -12.72026825 #> [4487,]  34.171123505  -8.140098572 -12.74503613 #> [4488,]  34.099658966  -8.190128326 -12.91971016 #> [4489,]  34.017448425  -8.173212051 -13.13687801 #> [4490,]  33.926605225  -8.406014442 -13.22574329 #> [4491,]  33.863208771  -8.828085899 -13.11480522 #> [4492,]  33.847457886  -8.991551399 -13.04254532 #> [4493,]  33.776943207  -9.085619926 -13.16926289 #> [4494,]  33.664501190  -9.180381775 -13.38524914 #> [4495,]  33.598350525  -9.122293472 -13.56563473 #> [4496,]  33.536453247  -9.127568245 -13.73896599 #> [4497,]  33.480987549  -8.708645821 -14.13242054 #> [4498,]  33.433891296  -8.094689369 -14.57994080 #> [4499,]  33.342506409  -7.984998703 -14.84431648 #> [4500,]  33.226276398  -7.958238602 -15.11820316 #> [4501,]  33.125503540  -7.856225491 -15.38267612 #> [4502,]  33.099845886  -7.635621071 -15.55415535 #> [4503,]  33.105987549  -7.188182354 -15.73555279 #> [4504,]  33.095420837  -6.733683109 -15.92058086 #> [4505,]  33.104503632  -6.489742756 -16.00878906 #> [4506,]  33.131111145  -6.333986282 -16.02722740 #> [4507,]  33.135570526  -6.214477062 -16.04745483 #> [4508,]  33.125274658  -6.184008121 -16.06577492 #> [4509,]  33.134269714  -6.253325939 -16.04019737 #> [4510,]  33.143222809  -6.350807190 -15.97131252 #> [4511,]  33.216712952  -6.264237404 -15.84175205 #> [4512,]  33.385044098  -6.135822296 -15.57013702 #> [4513,]  33.487018585  -6.145516872 -15.31982994 #> [4514,]  33.528629303  -6.085855007 -15.23667336 #> [4515,]  33.590854645  -5.932549953 -15.16454220 #> [4516,]  33.642787933  -5.943785191 -15.03455257 #> [4517,]  33.740119934  -6.112748623 -14.78740883 #> [4518,]  33.868602753  -6.218871117 -14.44985485 #> [4519,]  33.932605743  -6.103513718 -14.29695988 #> [4520,]  33.946502686  -5.861452579 -14.36812878 #> [4521,]  33.913185120  -5.788039684 -14.49935055 #> [4522,]  33.844921112  -5.866186142 -14.62443352 #> [4523,]  33.819587708  -5.773851395 -14.73643780 #> [4524,]  33.818294525  -5.588273048 -14.80599976 #> [4525,]  33.767158508  -5.593006134 -14.86884212 #> [4526,]  33.716682434  -5.671805859 -14.93971348 #> [4527,]  33.707809448  -5.637237072 -15.00705051 #> [4528,]  33.664382935  -5.542347431 -15.15030861 #> [4529,]  33.590461731  -5.650269508 -15.26770115 #> [4530,]  33.485622406  -5.895160198 -15.40973663 #> [4531,]  33.261074066  -6.016268730 -15.82313347 #> [4532,]  32.983291626  -6.162602901 -16.35332680 #> [4533,]  32.806575775  -6.419756413 -16.63292122 #> [4534,]  32.722667694  -6.672743320 -16.69432449 #> [4535,]  32.662231445  -6.864783287 -16.75943565 #> [4536,]  32.549991608  -6.874681950 -16.96863937 #> [4537,]  32.294990540  -6.877168655 -17.41945267 #> [4538,]  31.890977859  -6.681142330 -18.26141167 #> [4539,]  30.865100861  -6.332533836 -20.04390144 #> [4540,]  29.821226120  -6.022371292 -21.69328880 #> [4541,]  30.102554321  -5.828127384 -21.33618736 #> [4542,]  31.098890305  -6.126852512 -19.74313164 #> [4543,]  31.815137863  -6.354959011 -18.46930313 #> [4544,]  32.193046570  -6.090074539 -17.87475204 #> [4545,]  32.363002777  -5.722179413 -17.70436859 #> [4546,]  32.363674164  -5.721253395 -17.70632362 #> [4547,]  32.144943237  -6.038403511 -18.00750351 #> [4548,]  31.848974228  -6.105559826 -18.50380516 #> [4549,]  31.719060898  -6.106807709 -18.72205544 #> [4550,]  31.702869415  -6.211479664 -18.70204735 #> [4551,]  31.700731277  -6.087220192 -18.73132324 #> [4552,]  31.769025803  -5.936022758 -18.68605232 #> [4553,]  31.913410187  -5.966693401 -18.42724991 #> [4554,]  32.128559113  -6.148983955 -17.98386002 #> [4555,]  32.364723206  -6.326501369 -17.50139236 #> [4556,]  32.522686005  -6.371593475 -17.17304802 #> [4557,]  32.619293213  -6.347232819 -16.97061920 #> [4558,]  32.688472748  -6.446577072 -16.80339622 #> [4559,]  32.681564331  -6.524935246 -16.78017998 #> [4560,]  32.691829681  -6.276035786 -16.86266899 #> [4561,]  32.743740082  -6.332600594 -16.76411819 #> [4562,]  32.733139038  -6.747141361 -16.61861610 #> [4563,]  32.680885315  -7.105036259 -16.57118607 #> [4564,]  32.595642090  -7.470513344 -16.57664680 #> [4565,]  32.486751556  -7.469898701 -16.78642082 #> [4566,]  32.369499207  -7.037034988 -17.16185951 #> [4567,]  32.320095062  -6.586024284 -17.41721725 #> [4568,]  32.395149231  -6.197193146 -17.44585800 #> [4569,]  32.491867065  -5.769120693 -17.40102768 #> [4570,]  32.525081635  -5.687336445 -17.36054993 #> [4571,]  32.518878937  -6.007732391 -17.29041100 #> [4572,]  32.442104340  -6.226933479 -17.33718109 #> [4573,]  32.138339996  -6.084261894 -17.98681259 #> [4574,]  32.529777527  -6.232330799 -17.15771675 #> [4575,]  33.882835388  -6.770841599 -13.98768806 #> [4576,]  34.336769104  -7.139252186 -12.68478203 #> [4577,]  33.851974487  -7.415007591 -13.72751522 #> [4578,]  33.476104736  -7.306476116 -14.74751663 #> [4579,]  33.256866455  -6.930828571 -15.39392471 #> [4580,]  33.134307861  -6.607827663 -15.80315876 #> [4581,]  33.040866852  -6.370893478 -16.11048126 #> [4582,]  32.908943176  -6.146584988 -16.44147301 #> [4583,]  32.755889893  -5.859775066 -16.82291985 #> [4584,]  32.656188965  -5.580910206 -17.11874199 #> [4585,]  32.449619293  -5.442367077 -17.55907249 #> [4586,]  32.107292175  -5.401354790 -18.19181442 #> [4587,]  31.866769791  -5.205225468 -18.65077019 #> [4588,]  31.685525894  -5.111228466 -18.98565865 #> [4589,]  31.540859222  -5.247876644 -19.19805717 #> [4590,]  31.474145889  -5.337606430 -19.28500557 #> [4591,]  31.441120148  -5.299747467 -19.34827423 #> [4592,]  31.371545792  -5.340602398 -19.44816017 #> [4593,]  31.310302734  -5.570071220 -19.49263763 #> [4594,]  31.336217880  -5.861099243 -19.35117149 #> [4595,]  31.447071075  -6.119741440 -19.08335876 #> [4596,]  31.548343658  -6.281122208 -18.88856316 #> [4597,]  31.583927155  -6.375918388 -18.79370689 #> [4598,]  31.619134903  -6.426253796 -18.70204926 #> [4599,]  31.693832397  -6.498457432 -18.55069923 #> [4600,]  31.724861145  -6.577423573 -18.43433762 #> [4601,]  31.224161148  -6.760814190 -19.30954552 #> [4602,]  31.850133896  -6.851880074 -18.04218864 #> [4603,]  33.498069763  -6.345053196 -15.01293278 #> [4604,]  32.800643921  -5.909192562 -16.63236046 #> [4605,]  32.919708252  -5.639157772 -16.38456535 #> [4606,]  33.770881653  -5.285343170 -14.80025101 #> [4607,]  32.265060425  -5.457863808 -17.82035828 #> [4608,]  31.118099213  -5.713874817 -19.80901146 #> [4609,]  30.772882462  -5.823555470 -20.22549820 #> [4610,]  30.364145279  -6.260255337 -20.74376297 #> [4611,]  29.704660416  -6.781057835 -21.59587860 #> [4612,]  30.682430267  -7.014086723 -19.90244675 #> [4613,]  31.976278305  -6.934479237 -17.85704231 #> [4614,]  30.340929031  -7.056135178 -20.44480705 #> [4615,]  30.193788528  -7.418305874 -20.58852386 #> [4616,]  31.421644211  -7.593037605 -18.64021301 #> [4617,]  31.061849594  -7.778172970 -19.16543007 #> [4618,]  30.597694397  -7.546648502 -19.98080826 #> [4619,]  30.066896439  -6.882114887 -20.97362709 #> [4620,]  29.285491943  -6.699915409 -22.18099022 #> [4621,]  30.515363693  -7.062828541 -20.11117172 #> [4622,]  31.999921799  -7.284077644 -17.74613762 #> [4623,]  30.245214462  -7.168602467 -20.52577591 #> [4624,]  27.825141907  -7.020866871 -24.02198410 #> [4625,]  28.792476654  -7.224252701 -22.46926880 #> [4626,]  31.014974594  -7.481683254 -19.30809593 #> [4627,]  29.874317169  -7.660038948 -20.94413376 #> [4628,]  30.256275177  -7.744204998 -20.33753395 #> [4629,]  30.610498428  -7.401704311 -19.88061523 #> [4630,]  27.699560165  -7.449375629 -23.86603355 #> [4631,]  28.193990707  -7.834549427 -23.11795807 #> [4632,]  30.268655777  -7.872447014 -20.37044144 #> [4633,]  29.894088745  -7.962390423 -20.87348938 #> [4634,]  28.429594040  -8.413915634 -22.69206238 #> [4635,]  28.772912979  -9.214111328 -21.81151009 #> [4636,]  30.128376007  -9.882540703 -19.75215721 #> [4637,]  27.415126801  -9.999228477 -23.18974304 #> [4638,]  25.590257645 -10.056807518 -25.35951614 #> [4639,]  28.396539688  -9.758422852 -22.09590912 #> [4640,]  27.634220123  -9.296800613 -23.25130081 #> [4641,]  26.556320190  -9.246950150 -24.51346970 #> [4642,]  29.172048569  -8.861997604 -21.58109093 #> [4643,]  27.101554871  -8.420063019 -24.14529991 #> [4644,]  25.058446884  -8.862191200 -26.25563049 #> [4645,]  28.222595215  -9.156421661 -22.64564323 #> [4646,]  26.967504501  -8.960113525 -24.11577988 #> [4647,]  23.478454590  -9.365051270 -27.61599922 #> [4648,]  26.403337479  -9.602526665 -24.47160530 #> [4649,]  27.012235641  -9.164988518 -24.04973602 #> [4650,]  23.522432327  -9.225912094 -27.54286575 #> [4651,]  25.838222504  -9.578640938 -25.08208466 #> [4652,]  26.636514664  -9.299815178 -24.40350723 #> [4653,]  23.492372513  -9.341132164 -27.49439240 #> [4654,]  25.839057922  -9.461484909 -25.18060493 #> [4655,]  25.570993423  -9.083757401 -25.55478096 #> [4656,]  22.393268585  -9.504280090 -28.39994621 #> [4657,]  25.481414795  -9.952525139 -25.31368637 #> [4658,]  25.454360962  -9.459966660 -25.56239891 #> [4659,]  22.801750183  -9.401995659 -28.07596970 #> [4660,]  25.793113708  -9.500472069 -25.23740005 #> [4661,]  24.963047028  -9.068796158 -26.17247009 #> [4662,]  22.016298294  -9.234202385 -28.81378746 #> [4663,]  25.350248337  -9.474528313 -25.60345840 #> [4664,]  25.583547592  -8.969607353 -25.64877701 #> [4665,]  23.666347504  -9.302175522 -27.32785606 #> [4666,]  26.406829834 -10.189796448 -24.36378860 #> [4667,]  25.481206894 -10.045425415 -25.34237862 #> [4668,]  21.975521088  -9.784293175 -28.71779823 #> [4669,]  24.577108383  -9.784449577 -26.24105072 #> [4670,]  26.332973480  -9.099281311 -24.86079788 #> [4671,]  23.398986816  -8.500535965 -27.82921219 #> [4672,]  25.056072235  -8.470279694 -26.22682190 #> [4673,]  27.190454483  -7.999913692 -24.35067558 #> [4674,]  23.852552414  -7.504853249 -27.69188118 #> [4675,]  22.931625366  -7.782180309 -28.43579483 #> [4676,]  26.424179077  -8.145410538 -25.01461029 #> [4677,]  25.546890259  -7.917229652 -26.00082016 #> [4678,]  23.671537399  -8.069958687 -27.74465752 #> [4679,]  26.781244278  -8.597271919 -24.44127083 #> [4680,]  27.526485443  -8.638680458 -23.73513985 #> [4681,]  24.685964584  -8.371916771 -26.74921227 #> [4682,]  24.204286575  -8.532014847 -27.11567879 #> [4683,]  26.939439774  -9.086440086 -24.12480354 #> [4684,]  26.599739075  -8.781994820 -24.65952682 #> [4685,]  22.520751953  -8.196753502 -28.71938324 #> [4686,]  21.998331070  -8.434362411 -28.98885918 #> [4687,]  25.706699371  -8.667047501 -25.59375191 #> [4688,]  24.769435883  -8.257524490 -26.63718605 #> [4689,]  23.035844803  -8.246645927 -28.16221619 #> [4690,]  26.303226471  -7.978827477 -25.26481247 #> [4691,]  24.619771957  -7.251477718 -27.01290131 #> [4692,]  21.089302063  -7.848028183 -29.92182159 #> [4693,]  24.163673401  -8.780111313 -27.00340271 #> [4694,]  24.306798935  -8.493640900 -26.99466896 #> [4695,]  21.511953354  -8.241388321 -29.41105270 #> [4696,]  24.764934540  -7.660692692 -26.79504013 #> [4697,]  24.026649475  -6.521725178 -27.71540833 #> [4698,]  21.398605347  -6.910027504 -29.81608772 #> [4699,]  24.319627762  -7.377852440 -27.29454803 #> [4700,]  22.580610275  -7.078946114 -28.78269577 #> [4701,]  22.131893158  -7.352343559 -29.09674263 #> [4702,]  24.724437714  -7.018177986 -27.11258125 #> [4703,]  20.705224991  -6.882237911 -30.25128555 #> [4704,]  20.482706070  -7.870381355 -30.17444801 #> [4705,]  23.982967377  -8.077828407 -27.51118660 #> [4706,]  20.275732040  -7.881625652 -30.30873680 #> [4707,]  19.151571274  -8.538456917 -30.91822052 #> [4708,]  23.016998291  -8.815181732 -28.04720116 #> [4709,]  21.603902817  -8.781852722 -29.19721985 #> [4710,]  22.023052216  -9.322689056 -28.60520172 #> [4711,]  23.518590927  -9.209787369 -27.50887299 #> [4712,]  22.020164490  -9.231104851 -28.70652962 #> [4713,]  24.180431366  -9.553462029 -26.81794739 #> [4714,]  22.421842575  -9.319211006 -28.27150536 #> [4715,]  20.106212616  -9.629279137 -29.99800110 #> [4716,]  23.065267563  -9.473369598 -27.75817871 #> [4717,]  21.664106369  -8.988479614 -29.03297997 #> [4718,]  22.074523926  -9.031744003 -28.66021156 #> [4719,]  23.251813889  -8.462868690 -27.93089676 #> [4720,]  21.271490097  -8.383658409 -29.52529335 #> [4721,]  23.370504379  -8.363798141 -27.89867592 #> [4722,]  21.642400742  -7.947923183 -29.32180786 #> [4723,]  20.498554230  -8.654380798 -29.97724724 #> [4724,]  22.832572937  -8.826965332 -28.17462158 #> [4725,]  20.532457352  -8.733012199 -29.93798637 #> [4726,]  21.693218231  -9.504479408 -28.82846832 #> [4727,]  22.054563522  -9.520131111 -28.58558655 #> [4728,]  20.770486832  -9.539024353 -29.51634216 #> [4729,]  22.842304230  -9.559601784 -27.95109558 #> [4730,]  21.192886353  -9.783880234 -29.16793251 #> [4731,]  22.248306274 -10.559633255 -28.02541924 #> [4732,]  23.083583832 -10.453693390 -27.45816612 #> [4733,]  20.349489212 -10.599783897 -29.55930901 #> [4734,]  23.079015732 -11.170789719 -27.10843086 #> [4735,]  24.068193436 -10.791877747 -26.51568031 #> [4736,]  20.601089478 -10.640119553 -29.40353394 #> [4737,]  22.559484482 -11.315250397 -27.48597336 #> [4738,]  24.092332840 -11.069951057 -26.35359001 #> [4739,]  20.909824371 -10.512689590 -29.19618225 #> [4740,]  22.669805527 -10.618219376 -27.68322563 #> [4741,]  23.585165024 -10.150355339 -27.13153076 #> [4742,]  21.628448486  -9.875919342 -28.84482193 #> [4743,]  24.028900146  -9.784087181 -26.86845398 #> [4744,]  22.610061646  -9.225775719 -28.22645760 #> [4745,]  22.010040283  -9.232892990 -28.70841599 #> [4746,]  24.213153839  -8.918979645 -27.02365875 #> [4747,]  22.071763992  -8.701440811 -28.86826134 #> [4748,]  23.719064713  -9.258867264 -27.26648331 #> [4749,]  24.167118073  -8.922650337 -27.06315994 #> [4750,]  21.920541763  -8.710066795 -29.00754929 #> [4751,]  24.882585526  -9.062072754 -26.34433556 #> [4752,]  23.692399979  -8.564326286 -27.54677773 #> [4753,]  21.167470932  -8.907566071 -29.54098511 #> [4754,]  24.662244797  -9.723239899 -26.33568764 #> [4755,]  23.437026978  -9.273940086 -27.55167198 #> [4756,]  21.196660995  -9.083662033 -29.46074486 #> [4757,]  24.463392258  -8.963624001 -26.76438904 #> [4758,]  23.155265808  -8.465495110 -28.02249718 #> [4759,]  22.531438828  -8.628216743 -28.49046707 #> [4760,]  24.566766739  -8.304707527 -26.90414429 #> [4761,]  20.870138168  -7.941653252 -29.96446419 #> [4762,]  21.640789032  -8.382153511 -29.23597527 #> [4763,]  24.105911255  -7.926509380 -27.43773842 #> [4764,]  20.734086990  -7.759315968 -30.10517883 #> [4765,]  22.232856750  -8.153226852 -28.86105537 #> [4766,]  22.250595093  -7.706022263 -28.91572571 #> [4767,]  20.056312561  -7.510500431 -30.62093544 #> [4768,]  22.929807663  -6.814437389 -28.70919609 #> [4769,]  20.646459579  -6.066066742 -30.50714684 #> [4770,]  19.996429443  -6.940416813 -30.76028442 #> [4771,]  22.786804199  -7.507996559 -28.68347740 #> [4772,]  20.123647690  -7.623589039 -30.56965446 #> [4773,]  21.327678680  -8.278636932 -29.49737549 #> [4774,]  21.899259567  -8.139134407 -29.17875290 #> [4775,]  20.435495377  -7.899896145 -30.27672386 #> [4776,]  22.805627823  -7.387657166 -28.62952042 #> [4777,]  21.619913101  -6.712825298 -29.70460510 #> [4778,]  22.516292572  -7.012136936 -28.96237946 #> [4779,]  22.377403259  -6.423640251 -29.18415451 #> [4780,]  19.434333801  -6.180624962 -31.35702896 #> [4781,]  22.536531448  -6.959845066 -28.95783615 #> [4782,]  22.273279190  -6.671331882 -29.26424980 #> [4783,]  17.051179886  -6.690041542 -32.75235748 #> [4784,]  18.588703156  -8.328050613 -31.27540207 #> [4785,]  21.273502350  -9.074097633 -29.40994263 #> [4786,]  18.433879852  -8.911016464 -31.28643608 #> [4787,]  19.916830063  -9.608688354 -30.14715958 #> [4788,]  19.404500961  -9.450040817 -30.51425743 #> [4789,]  16.842723846  -9.694146156 -32.00836945 #> [4790,]  20.012905121 -10.465077400 -29.80575180 #> [4791,]  18.598150253 -10.297114372 -30.76971245 #> [4792,]  18.624725342 -10.214197159 -30.79144859 #> [4793,]  20.097923279  -9.454954147 -30.12458038 #> [4794,]  16.709581375  -9.407101631 -32.16682053 #> [4795,]  18.511438370 -10.365562439 -30.76326752 #> [4796,]  18.930644989 -10.186701775 -30.63296700 #> [4797,]  18.164705276 -10.751066208 -30.87190819 #> [4798,]  20.646087646 -10.827673912 -29.33739662 #> [4799,]  16.896322250  -9.485545158 -32.00060654 #> [4800,]  15.691802979  -9.810101509 -32.58203888 #> [4801,]  19.379617691 -10.445528984 -30.29936600 #> [4802,]  16.614059448 -10.353549004 -31.90901184 #> [4803,]  16.880474091 -10.623974800 -31.64940262 #> [4804,]  19.014215469 -10.220830917 -30.59254646 #> [4805,]  15.783792496  -9.728046417 -32.54287338 #> [4806,]  17.895530701  -9.510620117 -31.46109390 #> [4807,]  17.284528732  -9.252542496 -31.83063126 #> [4808,]  14.346295357  -9.804255486 -33.19808197 #> [4809,]  17.961860657  -9.932146072 -31.27147865 #> [4810,]  16.740373611  -9.505059242 -32.09536362 #> [4811,]  16.661983490  -9.470715523 -32.11042404 #> [4812,]  17.942575455  -8.735758781 -31.61454391 #> [4813,]  16.119758606  -8.261157990 -32.74663162 #> [4814,]  17.935367584  -7.852641106 -31.87397385 #> [4815,]  15.662856102  -7.229432106 -33.15313339 #> [4816,]  16.004859924  -7.239400387 -32.99578476 #> [4817,]  17.609176636  -6.574592113 -32.34485626 #> [4818,]  15.327466965  -6.376633644 -33.55064392 #> [4819,]  17.773750305  -6.219208241 -32.30110931 #> [4820,]  16.847600937  -5.466527939 -32.96101379 #> [4821,]  16.869510651  -5.963106155 -32.84609222 #> [4822,]  19.160169601  -6.377264023 -31.56409073 #> [4823,]  14.843103409  -6.307148933 -33.78315735 #> [4824,]  15.316367149  -6.527065754 -33.46850967 #> [4825,]  18.086097717  -5.776501656 -32.23530960 #> [4826,]  16.257455826  -5.226582527 -33.30358505 #> [4827,]  18.085470200  -5.154094219 -32.33358383 #> [4828,]  16.661485672  -4.552399158 -33.15142059 #> [4829,]  16.100814819  -5.080789089 -33.38799667 #> [4830,]  18.054136276  -5.280626297 -32.37692642 #> [4831,]  14.160039902  -5.223363876 -34.27184296 #> [4832,]  15.979493141  -6.349416256 -33.13931656 #> [4833,]  17.940073013  -6.594248772 -32.22440338 #> [4834,]  15.689786911  -6.915965080 -33.29029083 #> [4835,]  18.157875061  -7.414855003 -31.86734390 #> [4836,]  16.614028931  -7.099736691 -32.77421188 #> [4837,]  16.352214813  -7.615563393 -32.76332855 #> [4838,]  18.184667587  -7.675146103 -31.82290649 #> [4839,]  16.550094604  -7.806951523 -32.66953659 #> [4840,]  18.790025711  -8.202185631 -31.30942345 #> [4841,]  17.368242264  -7.472692013 -32.27445221 #> [4842,]  16.912197113  -7.531960964 -32.52207947 #> [4843,]  18.522399902  -7.125278950 -31.74215126 #> [4844,]  16.027156830  -7.070258141 -33.09508514 #> [4845,]  18.477882385  -7.907396317 -31.60348511 #> [4846,]  17.098779678  -7.020799160 -32.49154282 #> [4847,]  13.774417877  -7.764137268 -34.01272964 #> [4848,]  17.189649582  -9.639810562 -31.89893341 #> [4849,]  14.705805779  -9.248326302 -33.14501572 #> [4850,]  13.087347031  -9.975544930 -33.67127609 #> [4851,]  16.003038406 -10.730238914 -32.16973877 #> [4852,]  13.153837204 -10.646682739 -33.45942307 #> [4853,]  14.489836693 -12.041390419 -32.40650177 #> [4854,]  14.946727753 -11.302791595 -32.42725754 #> [4855,]  10.910648346 -10.608714104 -34.33250809 #> [4856,]  14.398319244 -11.911331177 -32.49993896 #> [4857,]  14.089608192 -11.010830879 -32.91957855 #> [4858,]   9.903919220 -10.591333389 -34.66645813 #> [4859,]  13.622672081 -11.616499901 -32.94932556 #> [4860,]  12.436883926 -10.408794403 -33.74195480 #> [4861,]   8.798701286 -10.342950821 -35.02108002 #> [4862,]  12.331548691 -11.672405243 -33.40889359 #> [4863,]  11.160877228 -11.385030746 -33.95251083 #> [4864,]  11.401517868 -12.034744263 -33.58895111 #> [4865,]  12.853339195 -12.710360527 -32.89064026 #> [4866,]  10.770723343 -13.495478630 -33.31778336 #> [4867,]  12.531674385 -14.384324074 -32.32734680 #> [4868,]  10.220565796 -14.053750992 -33.23748398 #> [4869,]  10.385422707 -14.752573967 -32.89186096 #> [4870,]  11.515783310 -15.076699257 -32.38900375 #> [4871,]   8.371003151 -15.565013885 -33.15794373 #> [4872,]  11.143570900 -16.656866074 -31.74887085 #> [4873,]   9.991960526 -16.037021637 -32.39612961 #> [4874,]   8.665863037 -16.098129272 -32.80872726 #> [4875,]  10.434875488 -16.436830521 -32.13386536 #> [4876,]   7.712929249 -16.485683441 -32.88328934 #> [4877,]   9.230207443 -16.695159912 -32.35089111 #> [4878,]   8.733607292 -16.220849991 -32.72872162 #> [4879,]   8.341626167 -16.701059341 -32.58731461 #> [4880,]   9.785736084 -16.604986191 -32.23643112 #> [4881,]   8.159297943 -16.345727921 -32.79853821 #> [4882,]   9.036219597 -16.670902252 -32.40460968 #> [4883,]   9.245093346 -16.408523560 -32.49256897 #> [4884,]   9.998023033 -15.741136551 -32.57886887 #> [4885,]   9.107899666 -15.186179161 -33.12641144 #> [4886,]   9.904417038 -14.747299194 -33.06029129 #> [4887,]   9.613051414 -13.784523010 -33.55183029 #> [4888,]   9.854492188 -13.334921837 -33.67334747 #> [4889,]  10.755655289 -12.919990540 -33.56100464 #> [4890,]   7.707304955 -12.565944672 -34.58382416 #> [4891,]  10.354525566 -11.552782059 -34.14684296 #> [4892,]  10.175395012 -10.408746719 -34.60347748 #> [4893,]   9.335812569 -10.247848511 -34.86397934 #> [4894,]  11.780651093  -9.584338188 -34.29568481 #> [4895,]   9.223043442  -9.150489807 -35.21100235 #> [4896,]  11.027653694  -8.383204460 -34.82681274 #> [4897,]  11.166844368  -7.161544323 -35.08075333 #> [4898,]  10.395882607  -6.812036514 -35.36087036 #> [4899,]  12.256523132  -6.295472622 -34.92594528 #> [4900,]   9.510791779  -6.391272545 -35.58869553 #> [4901,]  11.022547722  -4.854643822 -35.55816650 #> [4902,]  12.385008812  -7.804603100 -34.68618774 #> [4903,]  11.357542038 -21.781972885 -27.62937355 #> [4904,]  10.509274483 -31.438095093 -19.10840797 #> [4905,]   7.489712715 -32.797218323 -16.77347183 #> [4906,]   4.254038811 -33.590209961 -16.68805504 #> [4907,]   1.035156369 -34.115146637 -16.39067650 #> [4908,]  -2.522409916 -34.820198059 -14.45696545 #> [4909,]  -6.564569950 -35.178489685 -12.26468563 #> [4910,]  -9.650010109 -34.695636749 -11.69787979 #> [4911,] -11.841552734 -33.680618286 -12.63643265 #> [4912,] -15.359375954 -31.694061279 -13.85299683 #> [4913,] -19.220773697 -30.363571167 -11.97136974 #> [4914,] -20.655794144 -29.626462936 -11.50181961 #> [4915,] -21.809810638 -27.780092239 -13.74865627 #> [4916,] -24.486982346 -26.350677490 -11.92418766 #> [4917,] -26.442327499 -25.372188568  -9.92994881 #> [4918,] -27.467756271 -23.439294815 -11.63294792 #> [4919,] -28.442022324 -21.514688492 -13.07079411 #> [4920,] -29.109645844 -19.713603973 -14.19476604 #> [4921,] -29.385761261 -17.611963272 -16.29181099 #> [4922,] -29.056177139 -15.442291260 -18.91546631 #> [4923,] -28.369365692 -12.352092743 -21.86874390 #> [4924,] -27.987464905 -10.439177513 -23.39484024 #> [4925,] -26.150785446 -12.217260361 -24.56784058 #> [4926,] -23.499797821 -10.647791862 -27.57336998 #> [4927,] -23.078050613  -5.268217087 -29.56535149 #> [4928,] -21.725887299  -5.000008583 -30.55331993 #> [4929,] -18.384490967  -5.253960609 -32.57691956 #> [4930,] -15.733540535  -2.462984324 -34.24019241 #> [4931,] -13.395044327  -0.480475068 -35.27909851 #> [4932,] -10.026401520   0.619405508 -36.38539124 #> [4933,]  -7.435504913   5.279408932 -36.46097565 #> [4934,]  -7.069817066   8.022684097 -36.16848373 #> [4935,]  -2.666020155   2.350420713 -37.17446518 #> [4936,]   1.984660745   3.414394140 -37.41296387 #> [4937,]   2.408716202   4.542260170 -37.10190582 #> [4938,]   6.339706898  -1.383668780 -36.83998489 #> [4939,]   7.933343410   0.713071048 -36.78953934 #> [4940,]   7.264681816  -0.498037338 -36.64926910 #> [4941,]  10.995738983  -4.909410477 -35.56242752 #> [4942,]  10.386399269  -2.569889784 -36.04064941 #> [4943,]   9.991045952  -5.913218021 -35.51937485 #> [4944,]  12.913285255  -8.915599823 -34.22156525 #> [4945,]  10.538847923  -6.772005558 -35.38400650 #> [4946,]  10.649326324  -9.474379539 -34.67383957 #> [4947,]  11.429134369 -10.346885681 -34.28364563 #> [4948,]   9.755144119  -6.032627583 -35.76566315 #> [4949,]  12.806801796  -2.278672695 -35.19825363 #> [4950,]  13.122391701   0.694353461 -35.14401245 #> [4951,]  11.182819366   3.736010313 -35.63294220 #> [4952,]  12.442793846   5.805812836 -34.90980530 #> [4953,]  13.498826027   7.283246517 -34.20503235 #> [4954,]  13.354369164   8.145199776 -34.05737305 #> [4955,]  11.764125824   7.734846115 -34.78182220 #> [4956,]  12.432434082   8.235293388 -34.34534836 #> [4957,]  15.764825821  10.122748375 -32.40886307 #> [4958,]  14.604671478  10.991328239 -32.69935608 #> [4959,]  13.901165962  10.789075851 -33.03152847 #> [4960,]  16.940000534  11.545366287 -31.29349518 #> [4961,]  16.010471344  11.974915504 -31.63819695 #> [4962,]  12.978642464   9.838015556 -33.75312042 #> [4963,]  11.560685158   5.843941689 -35.27907181 #> [4964,]  13.500396729   2.051742077 -34.81325531 #> [4965,]  17.183334351   1.548263431 -33.36810684 #> [4966,]  15.203257561  -0.841224432 -34.37025833 #> [4967,]  15.313703537 -10.385881424 -32.26425552 #> [4968,]  17.810129166 -15.715466499 -29.53686333 #> [4969,]  14.631400108 -18.140481949 -29.35587502 #> [4970,]  14.429940224 -24.491363525 -24.53007507 #> [4971,]  13.415801048 -26.459735870 -23.40673637 #> [4972,]  10.146621704 -27.774637222 -23.19809151 #> [4973,]  10.769787788 -30.120336533 -20.10439301 #> [4974,]   8.136455536 -29.727922440 -21.69099617 #> [4975,]   7.276393890 -30.812320709 -20.65176201 #> [4976,]   6.976076603 -30.665353775 -20.76367188 #> [4977,]   4.011847496 -30.253616333 -22.28541565 #> [4978,]   4.561502457 -31.119140625 -20.96881866 #> [4979,]   2.217809439 -29.620784760 -23.15446472 #> [4980,]   1.650233746 -28.582622528 -24.80678177 #> [4981,]   1.576007962 -26.842491150 -26.35128975 #> [4982,]  -1.102562189 -23.566558838 -29.49358177 #> [4983,]   0.969305634 -21.441141129 -31.03807259 #> [4984,]  -0.399115235 -19.811183929 -32.06546402 #> [4985,]   0.243240952 -17.976991653 -33.08707428 #> [4986,]   2.135460138 -15.786445618 -34.12619781 #> [4987,]  -2.050884485 -13.966141701 -34.95802307 #> [4988,]   0.142004311 -12.312623978 -35.54321289 #> [4989,]   0.643096864 -10.905750275 -35.99771500 #> [4990,]  -2.163784981 -10.040752411 -36.21545792 #> [4991,]   0.971236050  -9.295921326 -36.44045258 #> [4992,]  -0.978674889  -8.964954376 -36.53568268 #> [4993,]  -1.009429216  -8.429043770 -36.63351059 #> [4994,]   0.539269567  -7.597180367 -36.82884216 #> [4995,]  -2.410168409  -6.693564415 -36.95158005 #> [4996,]   0.371266872  -5.529098988 -37.18850708 #> [4997,]  -1.296484113  -5.977620602 -37.12628174 #> [4998,]  -3.487734318 -10.512893677 -35.90005493 #> [4999,]  -0.180449530 -14.127886772 -34.96261597 #> [5000,]  -2.679351807 -15.104821205 -34.37502670 #> [5001,]  -1.876544952 -18.063331604 -32.94202423 #> [5002,]  -0.918896317 -18.148605347 -33.03041077 #> [5003,]  -2.353881121 -18.202507019 -32.92267227 #> [5004,]  -1.601713300 -19.220230103 -32.41831970 #> [5005,]  -4.020848751 -16.379770279 -33.69954300 #> [5006,]  -2.378085375 -13.567204475 -35.07173157 #> [5007,]  -2.774408579 -12.249897957 -35.50960922 #> [5008,]  -3.510638475 -10.927588463 -35.84807968 #> [5009,]  -1.649303675  -9.235961914 -36.46121979 #> [5010,]  -3.099223852  -8.217416763 -36.62936020 #> [5011,]  -1.091803789  -7.306077480 -36.90002441 #> [5012,]  -2.964975357  -6.485931396 -36.95608139 #> [5013,]  -3.111962795  -5.647264957 -37.05416107 #> [5014,]  -1.061450243  -3.932204485 -37.39825821 #> [5015,]  -3.624628544  -2.588293076 -37.37898636 #> [5016,]  -1.496688366  -1.488737822 -37.54183578 #> [5017,]  -2.530409336  -1.076741576 -37.51876450 #> [5018,]  -2.636090279  -1.675762653 -37.46284866 #> [5019,]  -1.314565897  -0.803827584 -37.65178680 #> [5020,]  -3.046695948  -3.116640806 -37.25052643 #> [5021,]  -0.696901023  -7.047961235 -36.98877716 #> [5022,]  -1.880688548  -8.174647331 -36.70577240 #> [5023,]  -1.359278083 -12.159305573 -35.48136139 #> [5024,]  -1.463646770 -13.963711739 -35.02386093 #> [5025,]  -2.961980104 -15.549605370 -34.10280228 #> [5026,]  -1.433904767 -17.744752884 -33.23958588 #> [5027,]  -3.919213772 -17.597957611 -33.09263229 #> [5028,]  -2.847648859 -19.373785019 -32.20907211 #> [5029,]  -3.740264416 -19.049535751 -32.29391098 #> [5030,]  -4.888102055 -19.709577560 -31.73894501 #> [5031,]  -3.521737099 -20.737134933 -31.29984856 #> [5032,]  -6.243551731 -17.248058319 -32.91660309 #> [5033,]  -4.587750435 -13.156606674 -35.00582504 #> [5034,]  -4.678486824 -10.347678185 -35.95403671 #> [5035,]  -4.096606731  -7.850359917 -36.54416656 #> [5036,]  -3.025634289  -5.564931870 -37.13650131 #> [5037,]  -4.066988945  -3.782652855 -37.23305511 #> [5038,]  -2.146826744  -1.896565318 -37.48656464 #> [5039,]  -3.904342175  -0.504970729 -37.43614197 #> [5040,]  -2.841919422   0.929725170 -37.50370789 #> [5041,]  -3.365319967   2.359039545 -37.40068436 #> [5042,]  -4.221517086   3.430952311 -37.24087143 #> [5043,]  -2.198740482   4.077364445 -37.36479950 #> [5044,]  -4.872700214   3.796591520 -37.15469360 #> [5045,]  -3.121319056   4.027330875 -37.28775406 #> [5046,]  -3.606921434   4.136688232 -37.21966553 #> [5047,]  -5.426019192   3.571146965 -37.09800720 #> [5048,]  -3.428292274   2.987487316 -37.36687469 #> [5049,]  -5.484501362   1.866630793 -37.21701813 #> [5050,]  -3.695626259   1.493929863 -37.40617371 #> [5051,]  -3.153898478   1.405491590 -37.52530670 #> [5052,]  -3.315699577   0.274304330 -37.48395538 #> [5053,]  -1.904096365   1.096753240 -37.59903717 #> [5054,]  -4.686728001   0.495845705 -37.34016800 #> [5055,]  -2.442375898  -2.340540886 -37.43674088 #> [5056,]  -2.263643980  -1.432593346 -37.60791397 #> [5057,]  -2.719222784  -4.372251034 -37.10576248 #> [5058,]  -1.003743410  -8.278529167 -36.81540680 #> [5059,]  -3.525790930  -9.637755394 -36.18024063 #> [5060,]  -1.588198185 -13.274326324 -35.13320541 #> [5061,]  -2.320151567 -13.700328827 -35.07905197 #> [5062,]  -2.631230354 -15.819777489 -33.94298553 #> [5063,]  -0.382458180 -17.896017075 -33.20301056 #> [5064,]  -2.824976683 -17.787315369 -33.07329178 #> [5065,]  -1.149566412 -20.648027420 -31.51573563 #> [5066,]  -2.839384794 -20.070791245 -31.73115921 #> [5067,]  -4.660328865 -16.922208786 -33.38215256 #> [5068,]  -2.187081337 -15.669169426 -34.21401596 #> [5069,]  -4.393503666 -15.033139229 -34.28146362 #> [5070,]  -2.874369383 -13.921815872 -34.86367798 #> [5071,]  -3.252029419 -12.998464584 -35.22243118 #> [5072,]  -4.334674358 -12.124745369 -35.39458847 #> [5073,]  -2.463438272 -10.909849167 -35.97804260 #> [5074,]  -4.753830910  -9.256747246 -36.21047974 #> [5075,]  -2.437647104  -6.287903309 -36.96847916 #> [5076,]  -2.624915838  -4.350841999 -37.34862137 #> [5077,]  -3.363768816  -3.273329258 -37.31401443 #> [5078,]  -0.537674308  -2.245350122 -37.57776642 #> [5079,]  -3.038641453  -2.797080517 -37.46528625 #> [5080,]  -0.954593420  -3.399709463 -37.41993713 #> [5081,]   0.382039905  -4.429480553 -37.39530563 #> [5082,]  -1.789947987  -5.823402882 -37.17644501 #> [5083,]   1.719717622  -5.885289669 -37.10774612 #> [5084,]   0.892995954  -5.912819386 -37.20478821 #> [5085,]   0.990290701  -5.231207848 -37.19153595 #> [5086,]   3.850536585  -4.250657082 -37.21012497 #> [5087,]   1.711730003  -4.905499935 -37.29113388 #> [5088,]   4.399466515  -4.241433144 -37.01240540 #> [5089,]   5.347749233  -3.235574961 -37.25096893 #> [5090,]   4.017111301  -9.014894485 -36.03585815 #> [5091,]   6.038878918 -14.897597313 -34.18369293 #> [5092,]   3.003459692 -16.705722809 -33.56502914 #> [5093,]   2.893569946 -21.367357254 -30.75040436 #> [5094,]   3.105332613 -23.216131210 -29.63443375 #> [5095,]  -0.325270623 -23.942312241 -29.02468681 #> [5096,]   0.336764574 -27.259899139 -26.31169701 #> [5097,]   5.214007378 -25.692058563 -26.96914291 #> [5098,]  11.348115921 -21.321310043 -28.94403267 #> [5099,]  13.224164009 -19.619668961 -29.38305664 #> [5100,]  12.399722099 -19.778978348 -29.52220535 #> [5101,]  10.247298241 -21.335462570 -29.35408020 #> [5102,]   7.117425919 -23.640933990 -28.52551842 #> [5103,]   4.427881241 -25.681751251 -27.30166435 #> [5104,]   2.699325323 -27.186647415 -26.09425545 #> [5105,]   1.794220209 -28.176347733 -25.11166954 #> [5106,]   0.905991733 -28.839862823 -24.40301895 #> [5107,]   0.944010139 -29.522224426 -23.55148697 #> [5108,]   1.915011525 -29.783472061 -23.17476463 #> [5109,]   2.637622595 -28.530918121 -24.57432938 #> [5110,]   3.671768904 -26.480585098 -26.68625069 #> [5111,]   4.554356098 -24.562664032 -28.32192993 #> [5112,]   5.722103119 -21.811695099 -30.21293640 #> [5113,]   7.718133450 -17.974033356 -32.23296356 #> [5114,]  10.034486771 -13.256997108 -33.78022385 #> [5115,]  12.997050285  -8.361088753 -34.26039124 #> [5116,]  15.719158173  -5.220752716 -33.78986359 #> [5117,]  18.310979843  -4.388337612 -32.54254913 #> [5118,]  20.339113235  -5.306707859 -31.17689133 #> [5119,]  18.805633545  -6.176010132 -31.92613983 #> [5120,]  19.058649063  -4.437541485 -32.01286316 #> [5121,]  19.855470657  -3.310429096 -31.72238350 #> [5122,]  18.105491638  -3.111238241 -32.76208115 #> [5123,]  20.443862915  -1.570525885 -31.42041016 #> [5124,]  20.157699585  -1.502995729 -31.66813278 #> [5125,]  18.865802765  -2.236982584 -32.40668488 #> [5126,]  22.509010315  -1.911833525 -29.97484589 #> [5127,]  22.300001144  -1.754577398 -30.16785049 #> [5128,]  19.400188446  -2.562005997 -32.12213898 #> [5129,]  18.986227036  -4.096955299 -32.19325256 #> [5130,]  18.127708435  -5.401906013 -32.52148819 #> [5131,]  18.364208221  -5.997331619 -32.26223373 #> [5132,]  21.720386505  -5.968413830 -30.04350090 #> [5133,]  21.589387894  -5.344667435 -30.28783035 #> [5134,]  18.877473831  -4.625402451 -32.19361496 #> [5135,]  17.921785355  -4.374871254 -32.78237915 #> [5136,]  18.112094879  -3.619852543 -32.75304031 #> [5137,]  21.552591324  -1.475680947 -30.61728096 #> [5138,]  22.282291412  -0.356941104 -30.25271034 #> [5139,]  21.353672028  -0.052363344 -30.84983444 #> [5140,]  23.903596878   1.262074471 -28.90551186 #> [5141,]  23.090314865   2.053310871 -29.54713440 #> [5142,]  20.875465393   2.033172607 -31.18636703 #> [5143,]  20.528261185   1.762592077 -31.36338615 #> [5144,]  19.486158371   1.558215380 -32.14382935 #> [5145,]  20.646907806   3.546041250 -31.08852577 #> [5146,]  23.622270584   6.698360443 -28.38625908 #> [5147,]  22.113660812   7.572256088 -29.31286812 #> [5148,]  18.799606323   7.176772118 -31.74005890 #> [5149,]  17.038316727   6.970090866 -32.72149658 #> [5150,]  14.768274307   6.155857086 -34.01506805 #> [5151,]  15.767057419   5.948678493 -33.52977371 #> [5152,]  20.299701691   7.196176052 -30.72336388 #> [5153,]  19.537950516   7.385216236 -31.16275406 #> [5154,]  17.596527100   6.800078392 -32.46935272 #> [5155,]  20.293016434   7.265619278 -30.71228790 #> [5156,]  19.818258286   7.099089622 -31.06368637 #> [5157,]  18.473951340   6.795839787 -31.95230484 #> [5158,]  19.807733536   7.963063240 -30.85414314 #> [5159,]  18.106674194   6.353413582 -32.12811279 #> [5160,]  14.790484428   0.453972369 -34.82142258 #> [5161,]  14.362625122  -8.653792381 -33.44812393 #> [5162,]  17.000673294 -16.464282990 -29.25394630 #> [5163,]  16.119338989 -18.895601273 -28.45730400 #> [5164,]  14.825043678 -23.688190460 -24.84793472 #> [5165,]  13.874553680 -27.010553360 -22.53622818 #> [5166,]  10.911424637 -27.161378860 -23.77920341 #> [5167,]  10.131231308 -28.986654282 -22.00091743 #> [5168,]   7.651962280 -29.323198318 -22.50516891 #> [5169,]   7.218044758 -29.764884949 -22.22004318 #> [5170,]   6.105352402 -29.518093109 -22.74186325 #> [5171,]   2.167077541 -30.583688736 -21.95445251 #> [5172,]   1.444522619 -32.653854370 -19.16239357 #> [5173,]  -1.227635026 -32.580539703 -19.11859322 #> [5174,]  -3.106665373 -34.679676056 -14.63451004 #> [5175,]  -4.935240746 -35.237430573 -12.87698174 #> [5176,]  -7.128298759 -32.712955475 -17.64803505 #> [5177,]  -5.564222336 -30.630008698 -21.58213043 #> [5178,]  -7.604449749 -27.033006668 -25.14039040 #> [5179,]  -8.278530121 -23.777021408 -28.23269272 #> [5180,]  -7.692486286 -22.700965881 -29.24356270 #> [5181,]  -7.331491470 -21.166728973 -30.35675049 #> [5182,]  -5.833403111 -18.695255280 -32.25270462 #> [5183,]  -6.720690250 -18.342655182 -32.30818176 #> [5184,]  -6.175384521 -18.403627396 -32.37402725 #> [5185,]  -8.528203011 -15.215033531 -33.46909714 #> [5186,]  -7.418482780 -11.287107468 -35.20526123 #> [5187,]  -6.551952362  -9.262577057 -35.96585846 #> [5188,]  -9.045605659  -7.683616161 -35.81616974 #> [5189,]  -6.800347328  -5.040113449 -36.71829987 #> [5190,]  -8.419718742  -3.845477581 -36.56556320 #> [5191,]  -8.279488564  -2.960869551 -36.67716217 #> [5192,]  -8.052062988  -1.242074490 -36.82646179 #> [5193,]  -8.782231331  -0.861841798 -36.66830444 #> [5194,]  -7.519709587  -0.320949405 -36.96282196 #> [5195,]  -9.376395226   1.433578730 -36.53154755 #> [5196,]  -8.031671524   3.555360556 -36.67859268 #> [5197,]  -9.152773857   4.602081776 -36.27649307 #> [5198,]  -9.765520096   5.797595024 -36.01600266 #> [5199,] -10.123542786   6.602937222 -35.83824539 #> [5200,] -10.558285713   1.769981503 -35.96965790 #> [5201,]  -9.204660416  -2.643281698 -36.61204147 #> [5202,] -10.498500824  -5.319759846 -35.73843765 #> [5203,]  -9.184509277  -9.937237740 -35.19662857 #> [5204,] -10.448670387 -12.257466316 -34.12659073 #> [5205,] -10.481941223 -15.126600266 -32.88988495 #> [5206,] -10.677479744 -17.230684280 -31.87547684 #> [5207,] -11.379205704 -20.427339554 -29.50661087 #> [5208,] -11.011787415 -23.287794113 -27.67673874 #> [5209,] -12.463073730 -24.718984604 -25.61101913 #> [5210,] -12.478563309 -26.398191452 -23.99378014 #> [5211,] -13.852739334 -26.734151840 -22.79158974 #> [5212,] -13.795400620 -27.473024368 -22.00260353 #> [5213,] -14.801024437 -27.276943207 -21.53528214 #> [5214,] -15.045678139 -28.005943298 -20.47029877 #> [5215,] -15.216513634 -28.459085464 -19.70030212 #> [5216,] -15.952911377 -29.363365173 -17.70293236 #> [5217,] -16.011571884 -30.149478912 -16.35478401 #> [5218,] -17.183586121 -30.029809952 -15.36555386 #> [5219,] -17.180416107 -30.477674484 -14.59121513 #> [5220,] -17.839458466 -30.559589386 -13.44386196 #> [5221,] -19.398414612 -30.300580978 -12.16171265 #> [5222,] -21.116392136 -27.395111084 -15.30432796 #> [5223,] -19.612556458 -23.628921509 -21.94442177 #> [5224,] -19.052864075 -20.745077133 -25.37484741 #> [5225,] -17.767656326 -17.414211273 -28.18055344 #> [5226,] -16.827245712 -13.515290260 -31.03193283 #> [5227,] -16.706193924  -9.472071648 -32.40172577 #> [5228,] -15.363127708  -5.106435776 -33.99347687 #> [5229,] -15.705958366  -1.387119174 -34.24956894 #> [5230,] -14.837282181   0.998636007 -34.56437683 #> [5231,] -15.381604195   2.037821531 -34.32752991 #> [5232,] -14.901357651   3.044285297 -34.45419693 #> [5233,] -15.234679222   3.218739510 -34.23433685 #> [5234,] -15.755467415   2.611698389 -34.16268921 #> [5235,] -16.641111374   1.365831494 -33.77519989 #> [5236,] -15.529499054  -4.338889122 -33.82738495 #> [5237,] -15.357035637  -7.943234921 -33.61883926 #> [5238,] -15.712940216 -10.702267647 -32.37179565 #> [5239,] -13.945220947 -14.409476280 -31.95563698 #> [5240,] -16.893737793 -15.327298164 -30.05250931 #> [5241,] -16.432157516 -18.691703796 -28.29947472 #> [5242,] -16.051370621 -20.466836929 -27.38018036 #> [5243,] -17.207284927 -21.002143860 -26.19015312 #> [5244,] -15.964840889 -22.123517990 -26.11679649 #> [5245,] -17.160549164 -22.124547958 -25.32463646 #> [5246,] -15.990478516 -24.602228165 -23.76759720 #> [5247,] -16.501014709 -26.152790070 -21.76835442 #> [5248,] -18.012155533 -27.164628983 -19.24004555 #> [5249,] -16.845859528 -28.891099930 -17.83753014 #> [5250,] -18.447044373 -28.974124908 -15.95554161 #> [5251,] -18.714729309 -29.604656219 -14.49955940 #> [5252,] -18.424816132 -29.815845490 -14.34811306 #> [5253,] -19.778572083 -29.601644516 -12.95324802 #> [5254,] -19.180871964 -30.582679749 -11.64182281 #> [5255,] -19.422536850 -30.932319641 -10.14445019 #> [5256,] -20.476909637 -30.943641663  -7.97228098 #> [5257,] -20.219293594 -31.216854095  -7.55403996 #> [5258,] -20.882387161 -30.796539307  -7.30583143 #> [5259,] -21.694562912 -30.394557953  -6.68220377 #> [5260,] -21.212871552 -30.760217667  -6.50531054 #> [5261,] -21.522609711 -30.739522934  -5.46666813 #> [5262,] -22.031784058 -30.499887466  -4.74016190 #> [5263,] -21.230451584 -31.150539398  -4.28221941 #> [5264,] -21.243698120 -31.271068573  -2.74816632 #> [5265,] -22.998302460 -30.189968109  -1.13834906 #> [5266,] -23.159488678 -29.898820877  -3.15562844 #> [5267,] -20.181554794 -29.942884445 -10.65101528 #> [5268,] -17.129100800 -29.967845917 -16.02136421 #> [5269,] -13.688008308 -29.021909714 -19.89133644 #> [5270,]  -7.924457073 -25.839807510 -26.27433395 #> [5271,]  -4.430598736 -23.406406403 -29.58364868 #> [5272,]  -2.762368679 -21.292446136 -31.04188538 #> [5273,]   1.416182160 -18.177637100 -33.12295151 #> [5274,]   5.024749756 -15.105278015 -34.37927246 #> [5275,]   7.058841228 -12.014145851 -35.14894104 #> [5276,]   9.243417740  -9.389261246 -35.48895645 #> [5277,]  11.518467903  -6.869200230 -35.41899490 #> [5278,]  14.066976547  -3.656850100 -34.98140335 #> [5279,]  15.920406342  -0.169169560 -34.35987854 #> [5280,]  16.210895538   2.548214197 -34.19958115 #> [5281,]  19.537311554   2.856376410 -32.17749786 #> [5282,]  23.700044632   3.568355560 -29.43005180 #> [5283,]  22.057085037   7.591104031 -29.84089088 #> [5284,]  19.290699005  10.792758942 -30.86103058 #> [5285,]  18.156688690  11.888845444 -31.09483337 #> [5286,]  16.687614441  13.223557472 -31.42673683 #> [5287,]  15.084178925  16.308780670 -30.72274590 #> [5288,]  13.715662956  19.731111526 -29.56197357 #> [5289,]   9.074777603  21.470243454 -29.86855698 #> [5290,]   2.627008915  23.313949585 -29.78353691 #> [5291,]   3.453070879  24.704265594 -28.88882256 #> [5292,]  12.955461502  23.853277206 -26.38119316 #> [5293,]  21.986774445  22.866441727 -21.12025833 #> [5294,]  23.283761978  23.473831177 -18.57228661 #> [5295,]  22.056627274  24.073289871 -19.70085335 #> [5296,]  17.517112732  24.446231842 -23.16598701 #> [5297,]   6.755341053  25.147470474 -27.49644089 #> [5298,]   5.601724625  24.698478699 -28.55123711 #> [5299,]  17.142511368  24.535860062 -23.07278633 #> [5300,]  25.315616608  24.681503296 -14.69113445 #> [5301,]  25.101274490  24.138286591 -14.75059414 #> [5302,]  23.792430878  23.522314072 -18.15718269 #> [5303,]  27.349620819  21.934091568 -14.56825733 #> [5304,]  28.011661530  21.040681839 -14.67907619 #> [5305,]  22.073270798  22.886867523 -21.22726440 #> [5306,]  12.480275154  24.908290863 -25.84875298 #> [5307,]   1.962039948  26.183767319 -27.42468262 #> [5308,]   4.076161385  27.319164276 -25.96697426 #> [5309,]  16.556785583  27.479318619 -20.22974968 #> [5310,]  21.095500946  27.288887024 -16.41525078 #> [5311,]  18.645128250  26.759778976 -18.97182083 #> [5312,]  19.066806793  26.279870987 -20.24336815 #> [5313,]  14.746001244  26.535274506 -22.53983688 #> [5314,]   3.185207129  25.960163116 -27.42803764 #> [5315,]   0.715053320  25.795160294 -28.39747810 #> [5316,]  11.534615517  26.839313507 -23.82805634 #> [5317,]  22.456983566  26.833776474 -15.25803852 #> [5318,]  25.940599442  25.680852890 -10.67769527 #> [5319,]  27.150529861  23.720705032 -11.82186031 #> [5320,]  28.570569992  21.712398529 -12.89406395 #> [5321,]  27.037576675  20.207807541 -17.17647743 #> [5322,]  23.340482712  20.080533981 -23.14763832 #> [5323,]  14.946086884  20.835256577 -27.65565109 #> [5324,]   8.117405891  20.424356461 -31.81414986 #> [5325,]  18.406375885  19.767618179 -25.64236832 #> [5326,]  30.623109818  19.185457230 -13.67152882 #> [5327,]  30.698915482  18.282297134 -13.16248989 #> [5328,]  30.089134216  17.920600891 -14.72565651 #> [5329,]  31.621852875  17.737773895 -12.11592484 #> [5330,]  32.185935974  15.502916336 -13.17004776 #> [5331,]  33.521980286  11.853337288 -14.19924259 #> [5332,]  31.672245026   9.848769188 -19.37333298 #> [5333,]  21.307624817  11.159734726 -29.37145233 #> [5334,]  13.004027367  13.774732590 -33.87323380 #> [5335,]  20.790803909  14.801322937 -27.47700310 #> [5336,]  31.282289505  15.534704208 -16.36912727 #> [5337,]  33.540386200  14.551548004 -11.35351562 #> [5338,]  32.935508728  12.334422112 -14.17723751 #> [5339,]  29.105199814  13.672678947 -21.29034996 #> [5340,]  20.097192764  14.835659981 -28.65566254 #> [5341,]  11.538660049  13.893542290 -34.01745605 #> [5342,]  18.768154144  14.212352753 -29.34967613 #> [5343,]  31.296346664  14.088914871 -17.57043839 #> [5344,]  34.175266266  12.320823669 -12.43098545 #> [5345,]  33.834934235  12.227558136 -12.43050575 #> [5346,]  32.909343719  12.891214371 -14.49759960 #> [5347,]  31.350547791  11.595102310 -19.25000763 #> [5348,]  24.613285065  11.089145660 -26.74089813 #> [5349,]  13.947784424  13.368040085 -33.11980820 #> [5350,]  15.023304939  14.989836693 -31.99464035 #> [5351,]  26.545011520  14.811112404 -22.76738358 #> [5352,]  33.015625000  13.214745522 -14.88732338 #> [5353,]  33.202404022  13.527669907 -12.92135429 #> [5354,]  33.218948364  14.855404854 -11.56722260 #> [5355,]  33.950565338  11.462069511 -13.01178741 #> [5356,]  33.578708649   7.373301506 -17.38282204 #> [5357,]  27.939100266   7.375480652 -24.98317337 #> [5358,]  16.799427032   8.261273384 -33.61190414 #> [5359,]  16.054759979   7.945313931 -34.03968430 #> [5360,]  29.660778046   7.434843540 -21.83046341 #> [5361,]  36.218685150   5.475370884 -13.25561047 #> [5362,]  35.037899017   4.276002884 -14.13514805 #> [5363,]  34.139499664   4.540324688 -17.67930984 #> [5364,]  26.206560135   6.448250771 -26.74930191 #> [5365,]  15.226301193   6.318382263 -35.21286774 #> [5366,]  19.762493134   3.731665373 -31.95754814 #> [5367,]  32.545883179   3.767162561 -20.19374275 #> [5368,]  35.821464539   5.080622196 -13.76848030 #> [5369,]  36.108009338   4.476306915 -11.09097862 #> [5370,]  37.770961761   2.364971161  -7.16626310 #> [5371,]  36.611274719   1.842007756 -10.61971474 #> [5372,]  33.875408173   1.477432609 -17.95607185 #> [5373,]  34.043537140  -2.026190042 -18.03135109 #> [5374,]  32.761379242   0.816649377 -19.45801544 #> [5375,]  27.795881271  12.086373329 -23.15298080 #> [5376,]  26.071300507  18.612033844 -21.30520821 #> [5377,]  22.881013870  22.723203659 -20.10641479 #> [5378,]  12.811555862  26.594404221 -23.82923889 #> [5379,]   8.033645630  27.997003555 -24.73629761 #> [5380,]  12.438854218  31.047702789 -17.55967712 #> [5381,]  19.319557190  31.019514084 -10.85224724 #> [5382,]  26.823005676  24.785146713 -10.17308617 #> [5383,]  31.386434555  18.980588913 -10.81153774 #> [5384,]  33.343460083  15.158667564 -10.50571537 #> [5385,]  34.883663177  11.506773949 -10.35863876 #> [5386,]  35.611751556   8.297223091 -10.99621105 #> [5387,]  35.884624481   5.609783173 -11.75402069 #> [5388,]  35.868087769   3.784943819 -12.56878090 #> [5389,]  35.714279175   2.282732010 -13.33089638 #> [5390,]  35.573257446   0.674113274 -13.88203526 #> [5391,]  35.288745880  -0.255331486 -14.63715935 #> [5392,]  35.029083252  -1.527698040 -15.17008305 #> [5393,]  34.805435181  -3.301422119 -15.42158699 #> [5394,]  34.321884155  -4.250825405 -16.28067398 #> [5395,]  33.506076813  -5.156629086 -17.65338326 #> [5396,]  32.734653473  -6.305707932 -18.70295334 #> [5397,]  32.168636322  -7.101741314 -19.38738823 #> [5398,]  31.509263992  -8.088195801 -20.07979202 #> [5399,]  30.798648834  -8.900473595 -20.84683800 #> [5400,]  30.049995422  -9.611978531 -21.59694481 #> [5401,]  29.290035248 -10.485527992 -22.22745705 #> [5402,]  28.766521454 -11.088323593 -22.66262436 #> [5403,]  28.165660858 -12.021902084 -22.94237328 #> [5404,]  27.345092773 -13.593465805 -23.04204941 #> [5405,]  26.554340363 -15.009963989 -23.10856819 #> [5406,]  25.507421494 -16.587999344 -23.19681740 #> [5407,]  24.495210648 -18.047012329 -23.23437119 #> [5408,]  24.128152847 -18.458627701 -23.32282448 #> [5409,]  23.605554581 -18.813106537 -23.58318329 #> [5410,]  22.781158447 -19.458513260 -23.86896324 #> [5411,]  22.212144852 -19.575714111 -24.30002785 #> [5412,]  20.865995407 -20.288156509 -24.95000267 #> [5413,]  22.141952515 -20.401838303 -23.60613251 #> [5414,]  23.639696121 -17.945251465 -24.11005974 #> [5415,]  19.226163864 -19.763317108 -26.44266510 #> [5416,]  16.201993942 -25.655130386 -23.51547241 #> [5417,]  15.811528206 -28.670936584 -19.95798683 #> [5418,]  14.930524826 -29.279064178 -19.58952522 #> [5419,]  14.553497314 -29.310497284 -19.91030312 #> [5420,]  13.651579857 -29.740413666 -19.90771675 #> [5421,]  11.569570541 -30.391895294 -20.17871284 #> [5422,]   9.818687439 -30.737731934 -20.60202980 #> [5423,]  10.125190735 -30.336345673 -21.04378128 #> [5424,]  11.411184311 -29.355186462 -21.76313400 #> [5425,]  11.931885719 -28.827800751 -22.22206497 #> [5426,]  12.728831291 -28.176471710 -22.59367180 #> [5427,]  14.249226570 -27.403100967 -22.68526840 #> [5428,]  14.384748459 -26.527200699 -23.66738510 #> [5429,]  16.226404190 -23.992910385 -24.95528793 #> [5430,]  19.074743271 -21.718772888 -25.22120094 #> [5431,]  19.913034439 -19.883836746 -25.96904755 #> [5432,]  22.265485764 -17.198266983 -25.99609375 #> [5433,]  23.542615891 -14.235110283 -26.75851059 #> [5434,]  25.293258667 -10.711272240 -26.62015343 #> [5435,]  26.302024841  -8.286668777 -26.68927383 #> [5436,]  27.267168045  -6.074642658 -26.08920670 #> [5437,]  29.326509476  -3.451116085 -24.41197205 #> [5438,]  28.562061310  -3.632461071 -25.34048271 #> [5439,]  29.432590485  -5.106631279 -24.04371262 #> [5440,]  31.372072220  -5.161148548 -21.54191208 #> [5441,]  31.925094604  -5.449309349 -20.56791496 #> [5442,]  31.712446213  -6.631066799 -20.56796646 #> [5443,]  31.466550827  -6.763644695 -20.97326279 #> [5444,]  31.610654831  -3.906405210 -21.29801559 #> [5445,]  31.905561447  -0.315439463 -21.34294891 #> [5446,]  31.339216232   2.752058983 -21.94889832 #> [5447,]  28.310079575   7.649891376 -24.44420242 #> [5448,]  23.908800125  11.524924278 -27.77731895 #> [5449,]  17.898014069  12.915272713 -31.05024338 #> [5450,]  11.541216850  14.303475380 -33.74489212 #> [5451,]  15.875785828  15.088207245 -31.28650856 #> [5452,]  28.827810287  13.730374336 -20.67475128 #> [5453,]  34.430858612  11.305581093 -13.40079308 #> [5454,]  33.484558105  11.552495956 -13.90512371 #> [5455,]  33.755508423  12.874176979 -12.54413986 #> [5456,]  34.993072510  10.227576256 -11.67344952 #> [5457,]  35.799911499   5.323231697 -12.53720379 #> [5458,]  35.764389038   2.121598959 -13.27553844 #> [5459,]  34.486110687   2.076267004 -17.32328415 #> [5460,]  28.021965027   4.708854675 -25.57516670 #> [5461,]  16.850204468   7.080717087 -33.80511093 #> [5462,]  18.128456116   7.165596485 -33.09657288 #> [5463,]  30.997220993   6.753581524 -20.98422432 #> [5464,]  37.190853119   5.367924213  -9.72375393 #> [5465,]  36.420307159   3.660527468 -10.52862453 #> [5466,]  34.087921143   5.175829887 -16.52538109 #> [5467,]  33.505039215   6.440962315 -17.91708374 #> [5468,]  29.853639603   7.694019794 -22.54351425 #> [5469,]  19.164634705  12.207942963 -30.74216461 #> [5470,]  13.569833755  15.840542793 -32.56078339 #> [5471,]  21.388839722  16.199337006 -26.68807030 #> [5472,]  30.600582123  15.095704079 -17.90494156 #> [5473,]  32.939990997  15.070767403 -12.23020554 #> [5474,]  34.419422150  13.505454063  -9.90479565 #> [5475,]  33.232856750  11.973644257 -13.92510128 #> [5476,]  29.645771027  12.376647949 -21.14263725 #> [5477,]  26.093954086  11.799740791 -25.68030548 #> [5478,]  16.161088943  13.483761787 -31.78714943 #> [5479,]  13.905339241  15.568020821 -32.39422226 #> [5480,]  26.630025864  13.463804245 -22.94708252 #> [5481,]  31.983442307  12.971611023 -17.89699745 #> [5482,]  31.783681870  13.160805702 -16.04221916 #> [5483,]  34.776508331   9.900641441 -12.66344833 #> [5484,]  35.422416687   6.237055779 -13.31916046 #> [5485,]  35.947414398   2.448839664 -12.90474510 #> [5486,]  35.263610840   0.820042372 -15.06366634 #> [5487,]  33.477283478   1.680286884 -18.92262650 #> [5488,]  33.937656403   3.840698957 -17.24134254 #> [5489,]  33.691810608   6.322480679 -17.55111122 #> [5490,]  27.242538452   9.780239105 -25.08923531 #> [5491,]  15.365517616  15.211212158 -31.63965416 #> [5492,]  12.618827820  18.592029572 -31.14432144 #> [5493,]  23.184301376  19.119083405 -23.12850952 #> [5494,]  30.508020401  19.098930359 -13.88437653 #> [5495,]  31.723608017  17.608379364 -11.60598373 #> [5496,]  32.064655304  15.223053932 -14.26390266 #> [5497,]  33.388107300  12.199550629 -14.23964882 #> [5498,]  33.408779144   9.836568832 -15.77810287 #> [5499,]  28.786523819   7.693930626 -24.44750023 #> [5500,]  18.600873947   5.485983849 -33.05280304 #> [5501,]  10.812611580   3.507042170 -37.07481003 #> [5502,]  21.128932953   1.431175828 -30.98405647 #> [5503,]  34.706279755   1.011178374 -17.80278015 #> [5504,]  37.316829681   0.057140969  -9.56110191 #> [5505,]  36.535926819  -0.554868698 -10.66186810 #> [5506,]  33.948657990   0.016025782 -18.28455925 #> [5507,]  28.853576660   0.351667792 -25.84301376 #> [5508,]  18.586050034   0.845643640 -33.37820816 #> [5509,]  15.863713264  -0.079896256 -35.27068329 #> [5510,]  28.062871933  -1.659275174 -25.40459824 #> [5511,]  35.558937073  -2.135846615 -16.16981888 #> [5512,]  35.999382019  -3.965307236 -12.15673447 #> [5513,]  35.940372467  -4.975174427 -12.51136208 #> [5514,]  34.528587341  -3.658859730 -16.60777473 #> [5515,]  34.902545929  -3.584875345 -15.70499229 #> [5516,]  33.762725830  -3.705162525 -17.90602875 #> [5517,]  26.415250778  -2.817313194 -29.36534119 #> [5518,]  18.449451447   1.814949036 -30.93212891 #> [5519,]  21.073787689  -1.206992149 -37.39749908 #>  #> $M$sampling #> [1] \"regular\" #>  #> $M$sampling_rate #> [1] 1 #>  #> $M$sampling_rate_unit #> [1] \"Hz\" #>  #> $M$depid #> [1] \"md13_134a\" #>  #> $M$creation_date #> [1] \"2023-07-05 14:58:20.258259\" #>  #> $M$history #> [1] \"sens_struct\" #>  #> $M$full_name #> [1] \"Magnetometer\" #>  #> $M$description #> [1] \"triaxial magnetometer\" #>  #> $M$unit #> [1] \"uT\" #>  #> $M$unit_name #> [1] \"micro Tesla\" #>  #> $M$unit_label #> [1] \"\\\\muT\" #>  #> $M$start_offset #> [1] 0 #>  #> $M$start_offset_units #> [1] \"second\" #>  #> $M$column_name #> [1] \"x,y,z\" #>  #> $M$frame #> [1] \"animal\" #>  #> $M$axes #> [1] \"FRU\" #>  #>  #> $P #> $P$data #>    [1]    1.4135423    1.4197869    1.2807966    1.0814660    1.0212787 #>    [6]    1.1113927    1.2331598    1.3153491    1.3595468    1.3590505 #>   [11]    1.3255761    1.2809347    1.1523192    1.0099028    1.0341179 #>   [16]    1.2067087    1.3179771    1.3860668    1.4787440    1.5187563 #>   [21]    1.4971472    1.4378839    1.3830459    1.2339686    1.0432341 #>   [26]    1.0151153    1.1479151    1.2947180    1.3780867    1.4471848 #>   [31]    1.4720643    1.4543337    1.3625919    1.1391841    1.0124886 #>   [36]    1.0883713    1.1903082    1.2692962    1.3487607    1.3698767 #>   [41]    1.3806431    1.3659441    1.1792563    1.0047519    1.0361882 #>   [46]    1.1637405    1.2736938    1.3521912    1.4052163    1.3922796 #>   [51]    1.2884077    1.1057620    0.9917358    1.0518968    1.1707290 #>   [56]    1.2489421    1.3316400    1.3781837    1.3640229    1.3013647 #>   [61]    1.1284021    0.9932787    1.0403073    1.2056563    1.3630196 #>   [66]    1.4273756    1.4921755    1.5546901    1.5422716    1.5141448 #>   [71]    1.4461664    1.2349020    1.0226876    1.0138096    1.1436138 #>   [76]    1.2965257    1.3973446    1.4398638    1.4237001    1.3780576 #>   [81]    1.2962271    1.1067123    0.9904432    1.0818648    1.2241527 #>   [86]    1.3088846    1.4069864    1.5127007    1.5418807    1.5935781 #>   [91]    1.6788251    1.7118268    1.7125518    1.6986597    1.6752356 #>   [96]    1.6172844    1.5180213    1.3355912    1.0935316    0.9974701 #>  [101]    1.1223446    1.2514180    1.2866399    1.3679564    1.4613419 #>  [106]    1.4583665    1.4147127    1.3038837    1.0821441    0.9871027 #>  [111]    1.1161249    1.3272847    1.4952929    1.5908097    1.6625690 #>  [116]    1.7258960    1.7540567    1.7134421    1.6235681    1.5237457 #>  [121]    1.3702732    1.1273415    0.9909424    1.0794866    1.2711933 #>  [126]    1.4219174    1.4767892    1.5633194    1.6719716    1.6861582 #>  [131]    1.6817616    1.7058463    1.6825681    1.6320144    1.5752405 #>  [136]    1.4885601    1.3624862    1.1427301    0.9883208    1.0643219 #>  [141]    1.2049749    1.2812768    1.3695159    1.4147723    1.4081653 #>  [146]    1.4187022    1.4159987    1.2921937    1.0766819    0.9903795 #>  [151]    1.0979304    1.2191271    1.2808547    1.4072950    1.4930106 #>  [156]    1.5004483    1.5684885    1.6285944    1.6270252    1.5911769 #>  [161]    1.5459853    1.4377539    1.2027923    1.0073254    1.0174921 #>  [166]    1.1646012    1.3077997    1.4750587    1.6444604    1.7554140 #>  [171]    1.7920231    1.7863789    1.7397991    1.6407861    1.4676369 #>  [176]    1.1288730    0.9474208    1.1975968    1.7622045    2.4006646 #>  [181]    3.0692503    3.8215797    4.6585488    5.5511389    6.4128609 #>  [186]    7.2273755    8.0449810    8.8685484    9.7130117   10.5889540 #>  [191]   11.4834251   12.3464403   13.2250032   14.1077719   14.9690742 #>  [196]   15.8076982   16.6659794   17.5355473   18.4164486   19.3200626 #>  [201]   20.2310410   21.1624775   22.0875092   23.0466442   23.9856644 #>  [206]   24.9565544   25.9606819   26.9636154   27.9923687   29.0266132 #>  [211]   30.1099472   31.1956463   32.3119965   33.4528656   34.5642700 #>  [216]   35.6946487   36.8446808   37.9788742   39.0984688   40.2171097 #>  [221]   41.3414078   42.4556885   43.5866241   44.7397270   45.8703308 #>  [226]   46.9932861   48.1081085   49.2323837   50.3745308   51.5072327 #>  [231]   52.6339760   53.7600136   54.8837585   56.0171432   57.1585579 #>  [236]   58.2946243   59.4316254   60.5870972   61.7643318   62.9609070 #>  [241]   64.1782837   65.4045944   66.6425858   67.8915787   69.1497574 #>  [246]   70.4197540   71.6972046   72.9809341   74.2776489   75.5769577 #>  [251]   76.8918686   78.2322617   79.5741653   80.9307251   82.2962799 #>  [256]   83.6680145   85.0517960   86.4463577   87.8565369   89.2699814 #>  [261]   90.6827011   92.1064453   93.5377274   94.9694519   96.4128647 #>  [266]   97.8702164   99.3325958  100.7975311  102.2722702  103.7669830 #>  [271]  105.2671127  106.7646103  108.2714844  109.7812729  111.2962112 #>  [276]  112.8020630  114.2827225  115.7942200  117.3363876  118.8884964 #>  [281]  120.4667206  122.0533371  123.6467361  125.2446594  126.8524857 #>  [286]  128.4766846  130.1033325  131.7326813  133.3668976  135.0106354 #>  [291]  136.6707916  138.3424530  140.0105591  141.6921234  143.3817444 #>  [296]  145.0679321  146.7634277  148.4652100  150.1702271  151.8863983 #>  [301]  153.6103058  155.3354645  157.0652618  158.8033295  160.5516663 #>  [306]  162.2985077  164.0574036  165.8284607  167.6145630  169.4026031 #>  [311]  171.1791534  172.9743805  174.7725372  176.5688629  178.3675537 #>  [316]  180.1684570  181.9743347  183.7829590  185.5988770  187.4201965 #>  [321]  189.2414551  191.0673523  192.9069977  194.7492065  196.5866089 #>  [326]  198.4297791  200.2773743  202.1200867  203.9589844  205.7941589 #>  [331]  207.6304321  209.4657745  211.3045807  213.1343842  214.9681854 #>  [336]  216.8197937  218.6619415  220.5040131  222.3464661  224.1781464 #>  [341]  226.0159760  227.8550873  229.6916656  231.5372162  233.3870087 #>  [346]  235.2360535  237.0756531  238.9151154  240.7776031  242.6345062 #>  [351]  244.4768829  246.3320618  248.1831512  250.0184326  251.8518219 #>  [356]  253.6634979  255.4641724  257.2823181  259.1104126  260.9508362 #>  [361]  262.7828674  264.5974121  266.5376892  268.6242981  270.7109985 #>  [366]  272.7838135  274.8666077  276.9562683  279.0360718  281.1102905 #>  [371]  283.1676025  285.2127380  287.2687683  289.3196411  291.3624573 #>  [376]  293.3989563  295.4388123  297.4606628  299.4894714  301.6518250 #>  [381]  303.8533020  306.0135498  308.1766968  310.3370667  312.4737854 #>  [386]  314.5892944  316.6932068  318.7741089  320.8355103  322.8789978 #>  [391]  324.9229126  326.8990173  328.7165833  330.5086975  332.3437805 #>  [396]  334.2313843  336.1552734  337.9616699  339.8170471  341.8214111 #>  [401]  343.8086243  345.7736206  347.7467651  349.7109375  351.6690674 #>  [406]  353.6172180  355.5608215  357.5197449  359.4641724  361.4049683 #>  [411]  363.3654480  365.3107910  367.2425537  369.1886902  371.1364746 #>  [416]  373.0805054  375.0211487  376.9703674  378.9196472  380.8518677 #>  [421]  382.7922668  384.7249756  386.6372986  388.5585938  390.4967957 #>  [426]  392.4368591  394.3821716  396.3356628  398.2758789  400.2037964 #>  [431]  402.1389160  404.0628357  405.9773865  407.9035034  409.8293762 #>  [436]  411.7529907  413.6769104  415.5866394  417.4974976  419.4074402 #>  [441]  421.3211975  423.2121582  425.0739441  426.9536133  428.8128967 #>  [446]  430.6574707  432.4869385  434.2916565  436.0909119  437.8780212 #>  [451]  439.6730347  441.4689026  443.2637024  445.0600891  446.8364258 #>  [456]  448.6036072  450.3724976  452.1457214  453.9218445  455.7067261 #>  [461]  457.4972534  459.2653503  461.0393677  462.8320007  464.6204529 #>  [466]  466.3974915  468.1498108  469.8940125  471.6408691  473.3621216 #>  [471]  475.0641785  476.7481384  478.4527893  480.1889954  481.8906860 #>  [476]  483.5289612  485.1047363  486.6195068  488.0777283  489.5148315 #>  [481]  490.9529419  492.3984375  493.8506775  495.3146973  496.8016052 #>  [486]  498.2911682  499.7917480  501.3059082  502.8123169  504.3216553 #>  [491]  505.8257751  507.3641357  508.9153137  510.4349670  511.9851379 #>  [496]  513.5543213  515.1123657  516.6758423  518.2250977  519.7745972 #>  [501]  521.3641968  522.9768677  524.5927734  526.1871948  527.7177734 #>  [506]  529.1916504  530.6129761  531.9458618  533.1802368  534.3414307 #>  [511]  535.4548340  536.4806519  537.3762207  538.1830444  538.9288940 #>  [516]  539.6245728  540.3078613  541.0237427  541.7526245  542.5132446 #>  [521]  543.3272095  544.1704102  545.0361328  545.9234009  546.8305054 #>  [526]  547.7100220  548.5375366  549.3488159  550.1207275  550.8674927 #>  [531]  551.6033325  552.3117065  553.0360718  553.8186035  554.6094971 #>  [536]  555.3475342  556.0831909  556.7821045  557.3865967  557.9642334 #>  [541]  558.4879150  558.9484253  559.4757690  560.0571289  560.6290283 #>  [546]  561.2507935  561.9025879  562.5585327  563.2443237  563.9869995 #>  [551]  564.7717896  565.5499878  566.2717896  566.9391479  567.5529785 #>  [556]  568.0566406  568.4802246  568.8836060  569.2791138  569.6337891 #>  [561]  570.0089722  570.4938965  570.9694214  571.3650513  571.6339111 #>  [566]  571.7674561  571.8986816  571.9968262  572.0093994  572.1231689 #>  [571]  572.2870483  572.3645020  572.4289551  572.4144897  572.3353271 #>  [576]  572.3303223  572.2908936  572.2263794  572.1352539  571.9580078 #>  [581]  571.8796997  571.9347534  572.0501099  572.2291870  572.4061890 #>  [586]  572.5894165  572.8825073  573.2319946  573.5576172  573.9083862 #>  [591]  574.2669678  574.6273193  575.0164185  575.3787231  575.6442871 #>  [596]  575.9360352  576.2682495  576.5100098  576.7801514  577.0723267 #>  [601]  577.3531494  577.6364746  577.9871826  578.3513184  578.7287598 #>  [606]  579.1433716  579.5957642  580.0494385  580.4841309  580.9063721 #>  [611]  581.3088989  581.7427979  582.1574097  582.5749512  582.9479980 #>  [616]  583.3537598  583.8292236  584.3021240  584.7320557  585.1235352 #>  [621]  585.4809570  585.8239746  586.1831055  586.4835205  586.7387695 #>  [626]  587.1448975  587.5742188  587.8611450  588.1748657  588.5914917 #>  [631]  589.0048218  589.4859009  590.0050049  590.3052979  590.4605103 #>  [636]  590.5233765  590.3589478  590.1102295  589.9752197  589.9012451 #>  [641]  589.7438965  589.6825562  589.7866821  589.8031616  589.8361206 #>  [646]  589.9282227  590.0067749  590.0567017  590.0620117  590.1089478 #>  [651]  590.1812134  590.3289795  590.4796143  590.6900024  590.9429321 #>  [656]  591.1832886  591.4065552  591.5975342  591.7902832  592.0045166 #>  [661]  592.2014771  592.3784790  592.6092529  592.8303833  593.0239868 #>  [666]  593.2516479  593.5013428  593.7408447  593.9975586  594.2846069 #>  [671]  594.5446777  594.8382568  595.1491089  595.4371338  595.6920776 #>  [676]  595.8432617  595.7434692  595.4335327  595.2030029  595.1368408 #>  [681]  595.1584473  595.2288818  595.2987061  595.4156494  595.6751099 #>  [686]  595.9584351  596.1373901  596.3102417  596.5233154  596.6685791 #>  [691]  596.6770020  596.7005005  596.6986694  596.6153564  596.5236816 #>  [696]  596.4140625  596.2419434  596.0037231  595.8073730  595.6610107 #>  [701]  595.5475464  595.4082642  595.3576050  595.3322754  595.2072144 #>  [706]  595.0705566  594.9944458  594.9450073  594.9335938  594.9791260 #>  [711]  595.0118408  595.0451050  595.0949707  595.1204224  595.1619873 #>  [716]  595.1931152  595.2528687  595.2825317  595.3461914  595.3762817 #>  [721]  595.4312134  595.5330811  595.5471191  595.5556030  595.5377197 #>  [726]  595.6082153  595.7662964  595.8525391  595.9898682  596.1647949 #>  [731]  596.3530273  596.6000977  596.8317261  597.0972290  597.4376831 #>  [736]  597.7116089  597.9717407  598.2929688  598.6223755  598.9653320 #>  [741]  599.3701782  599.9104004  600.4367065  600.9042358  601.4979858 #>  [746]  602.5363159  604.0866699  605.7770996  607.1519165  607.8850708 #>  [751]  608.1793213  608.4920654  609.0424194  609.6986084  610.3718872 #>  [756]  611.0178833  611.6007690  612.2023926  612.8186646  613.4741821 #>  [761]  614.2141113  615.0267944  615.8936157  616.8858032  618.0286865 #>  [766]  619.2274170  620.4468384  621.7028809  623.0361938  624.3574219 #>  [771]  625.5612793  626.7672729  628.0664673  629.3905640  630.7637329 #>  [776]  632.2190552  633.7034912  635.2318726  636.8020020  638.3832397 #>  [781]  639.9657593  641.4855957  642.9321899  644.3889160  645.9259644 #>  [786]  647.4762573  649.0025635  650.5726318  652.2160645  653.8929443 #>  [791]  655.5849609  657.3055420  659.0464478  660.8114014  662.5737915 #>  [796]  664.3734741  666.1783447  667.9494019  669.7816162  671.6254883 #>  [801]  673.4212646  675.2450562  677.1351929  679.0334473  680.8881836 #>  [806]  682.7399902  684.6304932  686.5434570  688.4686890  690.3889160 #>  [811]  692.2927856  694.2088623  696.1527710  698.1024780  700.0443726 #>  [816]  701.9862671  703.9284058  705.8560181  707.7041626  709.4792480 #>  [821]  711.2617798  713.0408325  714.8203125  716.5855103  718.2412109 #>  [826]  719.7337036  721.1081543  722.4290771  723.7718506  725.1506958 #>  [831]  726.4531860  727.6911621  728.9913940  730.3023682  731.5778198 #>  [836]  732.8623657  734.1785278  735.4667358  736.6961670  737.8926392 #>  [841]  739.1187134  740.4110718  741.7149658  743.1043701  744.5577393 #>  [846]  745.9990845  747.4779053  748.9385986  750.3714600  751.8546143 #>  [851]  753.3453369  754.8134155  756.3200684  757.8695679  759.4670410 #>  [856]  761.1073608  762.7556152  764.3829346  766.0446777  767.8023682 #>  [861]  769.5771484  771.3287354  773.1133423  774.8997192  776.6143799 #>  [866]  778.2280884  779.7446289  781.1491699  782.4607544  783.7351685 #>  [871]  784.9353638  786.0314331  787.0411377  787.9644775  788.7970581 #>  [876]  789.5968018  790.4167480  791.2993774  792.2434692  793.2443237 #>  [881]  794.2680664  795.2651978  796.2755737  797.2913818  798.3228760 #>  [886]  799.4042358  800.5423584  801.7138672  802.9304810  804.2300415 #>  [891]  805.5661621  806.9558716  808.3914795  809.8693237  811.4131470 #>  [896]  813.0107422  814.6389771  816.2975464  817.9771118  819.6711426 #>  [901]  821.4197388  823.1653442  824.8762207  826.5449829  828.1635742 #>  [906]  829.8066406  831.4978027  833.1652832  834.8262939  836.5388184 #>  [911]  838.2447510  839.9146729  841.5673828  843.1984863  844.8104248 #>  [916]  846.4222412  848.0075684  849.4592896  850.7951660  851.9081421 #>  [921]  852.8549194  853.8844604  855.0036621  856.1708374  857.4133911 #>  [926]  858.7687988  860.1667480  861.6326904  863.1940918  864.7825317 #>  [931]  866.4613037  868.1663818  869.8438110  871.5664062  873.2730103 #>  [936]  874.9476929  876.6460571  878.3439941  880.0202637  881.6982422 #>  [941]  883.4133301  885.1391602  886.8141479  888.5114746  890.2136230 #>  [946]  891.8847046  893.5857544  895.3125610  897.0399780  898.7722778 #>  [951]  900.5699463  902.3939209  904.2083130  906.0518799  907.8769531 #>  [956]  909.6972656  911.5344849  913.3085938  915.0426636  916.8253174 #>  [961]  918.6284180  920.3956909  922.1232300  923.7861938  925.3631592 #>  [966]  926.9113770  928.4443359  929.9668579  931.5375366  933.0625610 #>  [971]  934.5181274  935.9846191  937.4327393  938.9281006  940.4656982 #>  [976]  941.9149780  943.2811279  944.8497314  946.1669922  946.8916626 #>  [981]  947.8349609  949.1456299  950.5893555  952.1589355  953.7876587 #>  [986]  955.4302979  957.0220947  958.6661987  960.3073120  961.8015137 #>  [991]  963.2459106  964.7476196  966.3585205  968.0442505  969.7493896 #>  [996]  971.4906616  973.1859131  974.8566284  976.5521851  978.2316895 #> [1001]  979.9340210  981.5975342  983.1682129  984.7125854  986.2245483 #> [1006]  987.7086792  989.2235718  990.7739258  992.3357544  993.8923950 #> [1011]  995.3788452  996.7084351  997.9854126  999.3944092 1000.9313965 #> [1016] 1002.5292358 1004.0960083 1005.6634521 1007.2423096 1008.8167725 #> [1021] 1010.4843750 1012.1732788 1013.8050537 1015.4066162 1016.9773560 #> [1026] 1018.5618286 1020.2470093 1022.0292358 1023.7806396 1025.4394531 #> [1031] 1027.0917969 1028.7659912 1030.4265137 1032.0615234 1033.6604004 #> [1036] 1035.2375488 1036.7341309 1038.2186279 1039.6584473 1040.9171143 #> [1041] 1042.1090088 1043.0568848 1043.5941162 1043.8271484 1043.8109131 #> [1046] 1043.7159424 1043.5025635 1042.7957764 1041.6806641 1040.4279785 #> [1051] 1039.1672363 1038.4553223 1038.3410645 1038.1617432 1038.1209717 #> [1056] 1038.5112305 1039.2783203 1040.3286133 1041.2917480 1042.1329346 #> [1061] 1042.8983154 1043.5074463 1044.0239258 1044.4835205 1044.7947998 #> [1066] 1044.7651367 1044.6484375 1044.6171875 1044.4822998 1044.2225342 #> [1071] 1043.7502441 1043.1630859 1042.6213379 1042.1151123 1041.6309814 #> [1076] 1041.2547607 1041.1014404 1040.7263184 1039.9859619 1039.7727051 #> [1081] 1040.2093506 1040.6467285 1040.8236084 1040.6531982 1040.2814941 #> [1086] 1039.8624268 1039.5518799 1039.4188232 1039.2614746 1038.9714355 #> [1091] 1038.7288818 1038.8804932 1039.4832764 1040.4698486 1041.9700928 #> [1096] 1043.6990967 1045.3609619 1046.9312744 1048.4862061 1049.9129639 #> [1101] 1051.0244141 1052.2459717 1053.5855713 1054.8483887 1056.3444824 #> [1106] 1058.1313477 1059.6812744 1061.2116699 1063.4011230 1065.6926270 #> [1111] 1067.4362793 1069.6254883 1072.7617188 1074.3491211 1073.7745361 #> [1116] 1073.1846924 1072.9282227 1072.6330566 1072.3770752 1072.0854492 #> [1121] 1071.7309570 1071.3515625 1070.9509277 1070.5534668 1070.2451172 #> [1126] 1070.1047363 1070.0627441 1069.9290771 1069.7662354 1069.6464844 #> [1131] 1069.4005127 1069.0567627 1068.6815186 1068.2800293 1067.8780518 #> [1136] 1067.5330811 1067.2244873 1066.9710693 1066.7607422 1066.4536133 #> [1141] 1066.1223145 1065.6914062 1065.0131836 1064.1784668 1063.2200928 #> [1146] 1062.2189941 1061.2557373 1060.2761230 1059.2208252 1058.2437744 #> [1151] 1057.3563232 1056.4091797 1055.5657959 1054.7933350 1053.9807129 #> [1156] 1053.2111816 1052.3514404 1051.4527588 1050.5155029 1049.5252686 #> [1161] 1048.5317383 1047.4531250 1046.3726807 1045.2523193 1044.1513672 #> [1166] 1042.9567871 1041.7541504 1040.6043701 1039.3964844 1038.2137451 #> [1171] 1036.9571533 1035.7437744 1034.5471191 1033.4208984 1032.3511963 #> [1176] 1031.3306885 1030.4436035 1029.5523682 1028.7033691 1027.8995361 #> [1181] 1027.0494385 1026.0509033 1025.1545410 1024.3328857 1023.3344116 #> [1186] 1022.4275513 1021.5047607 1020.5479126 1019.7434082 1018.9874878 #> [1191] 1018.2947388 1017.5669556 1016.8930054 1016.1865845 1015.5479736 #> [1196] 1014.9564209 1014.2340088 1013.4614868 1012.5595703 1011.6236572 #> [1201] 1010.6445923 1009.5142212 1008.3510132 1007.2165527 1006.1281738 #> [1206] 1005.0089111 1003.9359131 1002.8362427 1001.7213135 1000.6091919 #> [1211]  999.5070190  998.4979858  997.4594116  996.4702759  995.5079346 #> [1216]  994.6266479  993.8339233  993.1514282  992.5704956  992.0511475 #> [1221]  991.5090942  990.9973755  990.4376831  989.9518433  990.3533325 #> [1226]  991.5675049  992.4616089  992.5239258  991.9658813  991.0427856 #> [1231]  989.9483032  988.8746948  987.7695312  986.7305908  985.8047485 #> [1236]  984.8532104  983.9433594  983.0283203  982.1758423  981.3858032 #> [1241]  980.7867432  980.3112183  979.7824097  979.3986816  979.0518799 #> [1246]  978.0791626  976.6312256  975.2570190  973.8999634  972.5742798 #> [1251]  971.3813477  970.2807617  969.3162842  968.3544922  967.4636841 #> [1256]  966.7634277  966.0095215  965.4100342  964.9016113  964.4558105 #> [1261]  964.1909790  963.8712769  963.6398926  963.4468994  963.0435791 #> [1266]  962.7028809  962.4730225  962.1655884  961.9882202  961.8951416 #> [1271]  961.9336548  962.1149902  962.3239746  962.5132446  962.7368164 #> [1276]  963.0319824  963.3668213  963.9356079  964.9136963  965.9094849 #> [1281]  966.5728760  967.0596924  967.3927612  967.5636597  967.6307983 #> [1286]  967.5618286  967.4140015  967.2937012  967.0939331  966.9004517 #> [1291]  966.9294434  967.0736694  967.4202881  967.9049683  968.3671265 #> [1296]  968.8691406  969.4569092  970.0144043  970.4689941  970.9467163 #> [1301]  971.5211182  972.1019897  972.6544189  973.3001099  974.0015259 #> [1306]  974.6690674  975.4016113  976.2075195  977.0567627  978.0222778 #> [1311]  979.0598755  980.0669556  981.0079956  981.8355103  982.6095581 #> [1316]  983.5095215  984.6336670  985.9124756  987.3324585  988.8470459 #> [1321]  990.3345337  991.7487183  992.9922485  994.1591797  995.3275757 #> [1326]  996.5428467  997.7571411  998.9606934 1000.2817993 1001.6483765 #> [1331] 1002.9990845 1004.4022827 1005.7534180 1006.5113525 1007.0981445 #> [1336] 1008.2387085 1009.6486206 1010.9701538 1012.2143555 1013.4712524 #> [1341] 1014.7381592 1015.9246826 1017.0210571 1018.1602173 1019.2926636 #> [1346] 1020.3265991 1021.3825684 1022.5950317 1023.8879395 1025.2025146 #> [1351] 1026.5626221 1027.9879150 1029.4792480 1030.9272461 1032.3616943 #> [1356] 1033.8015137 1035.2027588 1036.6108398 1038.0584717 1039.4895020 #> [1361] 1040.8905029 1042.2971191 1043.6890869 1045.0644531 1046.4190674 #> [1366] 1047.6965332 1049.0041504 1050.4671631 1052.0092773 1053.5416260 #> [1371] 1055.0301514 1056.4582520 1057.8742676 1059.3471680 1060.8266602 #> [1376] 1062.2528076 1063.6917725 1065.1522217 1066.5781250 1068.0338135 #> [1381] 1069.4821777 1070.9168701 1072.3508301 1073.7714844 1075.1798096 #> [1386] 1076.5543213 1077.9300537 1079.2513428 1080.4597168 1081.5631104 #> [1391] 1082.6170654 1083.6057129 1084.4162598 1085.0637207 1085.6267090 #> [1396] 1086.0197754 1086.2407227 1086.5174561 1086.8481445 1086.9927979 #> [1401] 1086.8433838 1086.4760742 1085.9300537 1085.0183105 1083.7946777 #> [1406] 1082.4160156 1080.7650146 1079.2852783 1078.0952148 1076.9338379 #> [1411] 1075.9477539 1074.9865723 1074.0427246 1073.2858887 1072.5102539 #> [1416] 1071.6557617 1070.8773193 1070.0966797 1069.1442871 1068.1217041 #> [1421] 1067.1175537 1066.0894775 1065.1536865 1064.1916504 1063.2346191 #> [1426] 1062.2402344 1061.2685547 1060.2941895 1059.3060303 1058.4908447 #> [1431] 1057.6705322 1056.9692383 1056.2974854 1055.7512207 1055.2651367 #> [1436] 1054.7105713 1054.4484863 1054.3161621 1054.1190186 1054.1333008 #> [1441] 1054.2520752 1054.2789307 1054.3363037 1054.4691162 1054.6606445 #> [1446] 1054.8828125 1055.1478271 1055.3468018 1055.4731445 1055.8516846 #> [1451] 1056.3439941 1056.9005127 1057.5356445 1058.2041016 1058.9178467 #> [1456] 1059.4904785 1060.1318359 1060.8850098 1061.7176514 1062.6198730 #> [1461] 1063.6330566 1065.0155029 1066.4416504 1067.0574951 1066.8205566 #> [1466] 1066.2563477 1065.4326172 1064.4829102 1063.5457764 1062.5080566 #> [1471] 1061.3736572 1060.1307373 1058.9724121 1057.8520508 1056.7239990 #> [1476] 1055.8170166 1055.0197754 1054.3045654 1053.6132812 1052.8448486 #> [1481] 1052.1348877 1051.3570557 1050.6240234 1049.8780518 1049.0257568 #> [1486] 1048.0802002 1047.0368652 1045.9752197 1044.9050293 1043.7255859 #> [1491] 1042.4377441 1041.3251953 1040.1490479 1038.8564453 1037.6549072 #> [1496] 1036.3691406 1035.0815430 1033.8394775 1032.6066895 1031.3105469 #> [1501] 1029.9113770 1028.4606934 1026.9761963 1025.3597412 1023.7015381 #> [1506] 1022.1558838 1020.6366577 1019.2435303 1017.8591919 1016.4868774 #> [1511] 1015.2246094 1013.9929810 1012.8009644 1011.6495361 1010.6373291 #> [1516] 1009.7051392 1008.8273926 1007.9567871 1007.2442017 1006.7339478 #> [1521] 1006.1808472 1005.4822998 1004.8975830 1004.3980103 1004.1182251 #> [1526] 1004.0806274 1003.9923706 1003.9012451 1003.7590942 1003.5925293 #> [1531] 1003.3993530 1003.0889893 1002.6887817 1002.2956543 1002.0797119 #> [1536] 1001.9183960 1001.7564087 1001.6444092 1001.4810791 1001.2778320 #> [1541] 1000.9456787 1000.6497803 1000.3853760 1000.0593262  999.8482666 #> [1546]  999.6289673  999.3883667  999.0505371  998.6630859  998.2271118 #> [1551]  997.7785645  997.3485718  996.8616943  996.5747070  996.2993164 #> [1556]  995.7091675  994.9218750  994.0243530  992.9904785  991.9889526 #> [1561]  990.9657593  989.8435669  988.7815552  987.7341309  986.6141357 #> [1566]  985.6928711  985.2800293  984.8051758  983.8580933  982.6234741 #> [1571]  981.2465210  979.7888794  978.2345581  976.6602173  975.0218506 #> [1576]  973.3632812  971.5364990  969.3045654  967.2929688  965.6719971 #> [1581]  964.0163574  962.3576050  960.7995605  959.3350830  957.9160156 #> [1586]  956.5488892  955.1016235  953.6099243  952.1389160  950.6572876 #> [1591]  949.1477051  947.6737671  946.2785034  944.8857422  943.4745483 #> [1596]  942.0664062  940.6483765  939.2285767  937.8030396  936.4256592 #> [1601]  935.0313110  933.6567993  932.2556152  930.8472900  929.6080933 #> [1606]  928.4185181  927.2683716  926.1359253  925.1351318  924.1412964 #> [1611]  923.1258545  922.2863770  921.4880371  920.7035522  919.9292603 #> [1616]  919.1870117  918.4501953  917.5432129  916.5338745  915.6151123 #> [1621]  914.6276855  913.6313477  912.6548462  911.7855225  910.9367676 #> [1626]  910.0014038  909.0894165  908.1661987  907.3071289  906.4651489 #> [1631]  905.6725464  904.9591064  904.3186035  903.6190796  902.9055176 #> [1636]  902.0467529  901.0256958  899.5934448  897.6967163  895.9453735 #> [1641]  894.4215698  893.0088501  891.7384644  890.5329590  889.4604492 #> [1646]  888.3930054  887.2726440  886.2102661  885.0648804  883.9761963 #> [1651]  882.9192505  881.9766235  881.1509399  880.3505249  879.6182251 #> [1656]  878.9784546  878.3936768  877.7665405  877.1668701  876.5651855 #> [1661]  875.9210815  875.3120728  874.7309570  873.9582520  873.0788574 #> [1666]  872.1355591  871.1547241  870.1243286  869.0628662  868.0033569 #> [1671]  866.9163818  865.8867798  865.0302124  864.2348633  863.3935547 #> [1676]  862.6771851  862.1002197  861.5054932  861.0510254  860.6645508 #> [1681]  860.2994385  860.1040039  859.8396606  859.6545410  859.5574341 #> [1686]  859.4453125  859.3784790  859.1509399  858.9808350  858.8997192 #> [1691]  858.6911011  858.6210938  858.6311035  858.7306519  859.0068970 #> [1696]  859.2150879  859.3560181  859.4028320  859.5533447  859.8658447 #> [1701]  860.0935059  860.3668213  860.6500854  860.8573608  861.0236816 #> [1706]  861.0281982  860.9077759  860.8595581  860.6264648  860.2165527 #> [1711]  860.2909546  860.7350464  861.0107422  861.0950928  860.8757935 #> [1716]  860.2339478  859.4674072  858.6525269  857.7915649  857.0411987 #> [1721]  856.2485352  855.4616089  854.7640991  854.2188110  853.7586060 #> [1726]  853.4496460  853.2095947  853.0426025  853.0791016  853.0364380 #> [1731]  853.1466064  853.6335449  854.1862793  854.8292847  855.6412354 #> [1736]  856.4297485  857.2242432  858.0874023  858.8985596  859.6798096 #> [1741]  860.4987183  861.2843628  861.9720459  862.4743652  862.8928223 #> [1746]  863.1914673  863.2568970  863.1665039  863.0236816  862.9840698 #> [1751]  862.9846191  863.0233765  863.1212769  863.3342896  863.9596558 #> [1756]  864.9637451  866.1350098  867.4537354  868.8698730  870.4511108 #> [1761]  872.2013550  874.0046997  875.8760986  877.8466187  879.8591309 #> [1766]  881.9332886  884.0446167  886.3091431  888.6552734  890.3041382 #> [1771]  890.8180542  890.3572998  889.2717285  887.9901733  886.6508789 #> [1776]  885.3339233  884.0119629  882.7501221  881.5266724  880.3157349 #> [1781]  879.1358643  877.9110107  876.7593384  875.6583252  874.5772095 #> [1786]  873.4232788  872.3441772  871.3012695  870.2384644  869.1729126 #> [1791]  868.2460938  867.4487915  866.6634521  866.0891113  865.6150513 #> [1796]  865.2357178  864.8692627  864.4664917  864.3040771  864.1583252 #> [1801]  863.9749146  864.0085449  863.9758301  863.9440918  863.9591064 #> [1806]  863.8899536  863.8904419  863.8517456  863.7929688  863.6852417 #> [1811]  863.4528198  863.1439819  862.8157349  862.5270996  862.0974121 #> [1816]  861.6740112  861.5578003  861.3952637  861.2687378  861.2396851 #> [1821]  861.1647949  861.1508789  860.9107666  860.5938721  860.4351807 #> [1826]  860.1582642  859.6604614  859.2179565  858.8668823  858.4082031 #> [1831]  858.0684814  857.8218384  857.5574341  857.4583130  857.4090576 #> [1836]  857.2673340  857.1487427  856.9938965  856.7799683  856.4028320 #> [1841]  856.0382690  855.7123413  855.2595825  854.9566650  854.6876831 #> [1846]  854.4041138  854.1992798  853.8630981  853.3822021  852.9433594 #> [1851]  852.4705200  851.9786377  851.5037842  851.0447998  850.6575928 #> [1856]  850.3706665  850.1107178  849.9356689  849.8201294  849.7131958 #> [1861]  849.5153809  849.4835815  850.0245361  850.5841064  850.8524170 #> [1866]  850.8618774  850.6140137  850.0634155  849.3594971  848.6967773 #> [1871]  847.9452515  847.2631836  846.6616211  846.0811157  845.5300903 #> [1876]  844.9938965  844.4966431  844.0761108  843.6998291  843.3743896 #> [1881]  843.1842041  843.0053101  842.9111938  842.8430176  842.7898560 #> [1886]  842.7353516  842.6279297  842.7247925  842.9908447  843.1992188 #> [1891]  843.3242798  843.2711792  843.1185913  842.8171997  842.3340454 #> [1896]  841.8806152  841.2864990  840.5662231  840.0266724  839.4577637 #> [1901]  838.9334106  838.5156250  838.1408691  837.7761230  837.3807373 #> [1906]  837.1325073  836.8625488  836.6907959  836.6154785  836.5713501 #> [1911]  836.5895996  836.4758301  836.3861084  836.2518921  836.0381470 #> [1916]  835.7814331  835.4895630  835.2746582  835.0389404  834.7493896 #> [1921]  834.3670044  833.9039917  833.2518921  832.5402222  831.8344116 #> [1926]  831.1545410  830.4573364  829.8443604  829.1860352  828.5231934 #> [1931]  828.0458984  827.4815063  826.9111938  826.3823242  825.9734497 #> [1936]  825.6287842  825.0808716  824.5456543  824.1006470  823.6677856 #> [1941]  823.3463745  823.0014038  822.5548706  822.0838013  821.5689697 #> [1946]  820.8858643  820.2462769  819.6403198  819.0301514  818.4562378 #> [1951]  817.9145508  817.3777466  816.9079590  816.3786011  815.8126831 #> [1956]  815.2150269  814.4846191  813.7719727  812.9627686  812.1667480 #> [1961]  811.4740601  810.8223877  810.1964111  809.6087646  808.9806519 #> [1966]  808.3551636  807.7104492  807.0728760  806.4270020  805.8385010 #> [1971]  805.2329102  804.6936646  804.1168823  803.3784790  802.8105469 #> [1976]  802.2456055  801.6804199  801.0908203  800.5045166  800.0184326 #> [1981]  799.4253540  798.8884888  798.3244629  797.7731934  797.2414551 #> [1986]  796.7320557  796.2811890  795.8656616  795.4542236  795.0557251 #> [1991]  794.7620850  794.4295654  794.0294189  793.6279907  793.1601562 #> [1996]  792.4639282  791.7410278  790.9257202  789.8309937  788.8565063 #> [2001]  787.9375610  786.9207764  785.9331665  784.8912964  783.9037476 #> [2006]  782.8801270  781.8732300  780.9050293  779.8699951  778.8900146 #> [2011]  777.8593750  776.8159180  775.7949829  774.7182007  773.6549072 #> [2016]  772.6049194  771.5865479  770.4985962  769.4739990  768.4525757 #> [2021]  767.4111328  766.4278564  765.4425049  764.5425415  763.5883179 #> [2026]  762.6191406  761.6229858  760.6096802  759.6027832  758.5419312 #> [2031]  757.4997559  756.4328613  755.4515991  754.4873657  753.4932251 #> [2036]  752.5372314  751.5348511  750.5803223  749.6403198  748.7416382 #> [2041]  747.7910767  746.9733887  746.2840576  745.3272095  744.3862915 #> [2046]  743.5617065  742.6505737  741.8236694  740.9287720  740.0074463 #> [2051]  739.1253052  738.1840820  737.3190308  736.4082031  735.5072021 #> [2056]  734.6091309  733.7017822  732.7905273  731.8565674  730.8961792 #> [2061]  729.9561768  729.1313477  728.2613525  727.4424438  726.6103516 #> [2066]  725.7687378  724.9258423  724.0546875  723.2040405  722.2802734 #> [2071]  721.4763794  720.6420288  719.7672729  718.9385376  718.0410767 #> [2076]  717.1815186  716.2645264  715.4281616  714.5645752  713.6809082 #> [2081]  712.8804321  711.9865112  711.1473389  710.2654419  709.3950806 #> [2086]  708.5291138  707.6873779  706.8422852  705.9022827  705.0582275 #> [2091]  704.2300415  703.3964233  702.5325928  701.7406616  700.8994141 #> [2096]  700.0854492  699.2902222  698.4197388  697.6845703  696.8521118 #> [2101]  696.0180664  695.1924438  694.2546997  693.3633423  692.3741455 #> [2106]  691.3870850  690.4528198  689.4796753  688.5552979  687.6030884 #> [2111]  686.6694336  685.7239380  684.5924072  683.4273071  682.4226685 #> [2116]  681.3671265  680.3540649  679.4310303  678.5545044  677.6807861 #> [2121]  676.7316895  675.9032593  675.0528564  674.2058716  673.3693848 #> [2126]  672.4739380  671.6694946  670.8128662  670.0068970  669.1771240 #> [2131]  668.3036499  667.6270752  666.8513794  665.9385376  665.2785645 #> [2136]  664.5290527  663.6921997  662.9694824  662.1206665  661.3822632 #> [2141]  660.5858154  659.7625122  659.0784302  658.2841797  657.5382080 #> [2146]  656.7460327  655.9721680  655.2487183  654.4736328  653.7709961 #> [2151]  652.9432983  652.2061768  651.5313721  650.7139893  650.0285034 #> [2156]  649.2900391  648.5465088  647.8378906  647.0327148  646.3245239 #> [2161]  645.5399780  644.7866821  644.0645752  643.2776489  642.6057739 #> [2166]  641.8104858  641.0886841  640.4366455  639.5842285  638.8594360 #> [2171]  638.1084595  637.3496094  636.6917725  635.9121094  635.2215576 #> [2176]  634.4688721  633.7156372  633.0263062  632.2368774  631.5588989 #> [2181]  630.7846069  630.0440063  629.3931274  628.5979004  627.9194336 #> [2186]  627.1914673  626.4379883  625.7337036  624.9279175  624.2703857 #> [2191]  623.5653687  622.8341064  622.1752930  621.4106445  620.7439575 #> [2196]  620.0102539  619.2691650  618.5932617  617.8278809  617.1669312 #> [2201]  616.4284058  615.6857300  615.0389404  614.2583008  613.5952759 #> [2206]  612.9349976  612.1636353  611.5107422  610.7484131  610.0471191 #> [2211]  609.3630981  608.5673218  607.9734497  607.2926025  606.5817871 #> [2216]  605.9910278  605.2477417  604.6075439  603.9959106  603.2405396 #> [2221]  602.6364136  601.9844971  601.2595215  600.6557617  599.9301147 #> [2226]  599.2733765  598.5928345  597.7691040  597.1793823  596.4895020 #> [2231]  595.7055664  595.0701294  594.3171387  593.6286011  592.9229126 #> [2236]  592.1362915  591.5068359  590.7650146  590.0206299  589.3688354 #> [2241]  588.5961914  587.8846436  587.1331177  586.3484497  585.7432251 #> [2246]  584.9923096  584.2009888  583.5814209  582.8350830  582.1370850 #> [2251]  581.4813843  580.7395020  580.0803223  579.2968140  578.5536499 #> [2256]  577.8779297  577.1004639  576.4489746  575.7265015  575.0211182 #> [2261]  574.3923340  573.6033325  572.9114380  572.2017212  571.4210815 #> [2266]  570.7662354  570.0189209  569.3251953  568.6368408  567.8396606 #> [2271]  567.2100220  566.4757080  565.7394409  565.1248779  564.3587036 #> [2276]  563.6644287  562.9640503  562.2229614  561.5864868  560.8213501 #> [2281]  560.1269531  559.4390259  558.6948242  558.0755615  557.3361206 #> [2286]  556.6738281  556.0112305  555.2839355  554.6871948  553.9556274 #> [2291]  553.2872925  552.7386475  552.0109863  551.4293823  550.8854370 #> [2296]  550.1443481  549.5456543  548.9076538  548.1847534  547.5964966 #> [2301]  546.8654175  546.2257690  545.6771851  544.9713135  544.4132690 #> [2306]  543.7846680  543.0671387  542.5305176  541.8585205  541.2113647 #> [2311]  540.6577148  539.9395752  539.4177246  538.8981323  538.2205811 #> [2316]  537.7165527  537.0932007  536.4618530  536.0015259  535.3547363 #> [2321]  534.8020630  534.3175659  533.6458130  533.1107788  532.5490112 #> [2326]  531.8653564  531.3887939  530.7846069  530.1107178  529.6490479 #> [2331]  529.0386353  528.4244385  527.9349976  527.2928467  526.7539673 #> [2336]  526.2240601  525.5690918  525.0965576  524.5156860  523.9014282 #> [2341]  523.4357300  522.7982178  522.2191162  521.6757202  521.0159302 #> [2346]  520.5578613  520.0373535  519.3980713  518.9783325  518.4706421 #> [2351]  517.8188477  517.3908081  516.8701782  516.2531738  515.8630371 #> [2356]  515.2992554  514.6541748  514.2525024  513.6965942  513.1199341 #> [2361]  512.7397461  512.1590576  511.5890808  511.1833801  510.6196899 #> [2366]  510.1208191  509.6874695  509.1026611  508.6477051  508.2003784 #> [2371]  507.6311340  507.2248535  506.7459412  506.1742249  505.6942444 #> [2376]  505.2200012  504.7087097  504.1306763  503.7050781  503.2970581 #> [2381]  502.7839661  502.4397888  502.0738525  501.4821167  501.0530396 #> [2386]  500.7341003  500.1868591  499.7868958  499.4622192  498.9065857 #> [2391]  498.4746704  498.1256104  497.6063232  497.2168884  496.9181824 #> [2396]  496.4158630  495.9592590  495.6779175  495.2019348  494.7228088 #> [2401]  494.3171997  493.7496338  493.2369385  492.7540894  492.2816772 #> [2406]  491.8996582  491.4152527  490.9247742  490.5043335  490.0013733 #> [2411]  489.5636902  489.1495056  488.6662903  488.0709534  487.5825500 #> [2416]  487.2005920  486.6712646  486.2331238  485.8091125  485.2402039 #> [2421]  484.8705444  484.4862366  483.9043884  483.5413208  483.1943359 #> [2426]  482.6638794  482.2660522  481.8438721  481.3326721  480.9249878 #> [2431]  480.5039062  479.9669800  479.4085388  479.0453186  478.6480713 #> [2436]  478.1443176  477.7712708  477.2889099  476.7772217  476.3745728 #> [2441]  475.9779663  475.4650879  474.9319153  474.6318970  474.2350159 #> [2446]  473.7213745  473.4168091  472.9918213  472.4992065  472.2333679 #> [2451]  471.8744507  471.3845520  471.0767517  470.7778320  470.3245544 #> [2456]  469.9981689  469.7566223  469.3086243  468.9174805  468.7229919 #> [2461]  468.3653870  468.0048828  467.8097839  467.5320435  467.1511841 #> [2466]  466.8888550  466.7304077  466.4181824  466.0661011  465.9361877 #> [2471]  465.7053833  465.3085632  465.1264648  464.9290161  464.5280457 #> [2476]  464.2873230  464.1460876  463.7543945  463.4034729  463.2584229 #> [2481]  462.9481506  462.4858704  462.2503662  462.0912781  461.7019043 #> [2486]  461.4266052  461.2263184  460.8587036  460.6000977  460.3802185 #> [2491]  459.9580078  459.6135254  459.4563293  459.0716553  458.6543884 #> [2496]  458.4878540  458.1502075  457.7703247  457.6010132  457.2466431 #> [2501]  456.8628540  456.7030029  456.4441528  456.0345459  455.8165894 #> [2506]  455.6748962  455.2989807  454.9286499  454.7597046  454.5108948 #> [2511]  454.1124573  453.8842163  453.7783508  453.4765930  453.2282715 #> [2516]  453.1434631  452.8866272  452.6309814  452.5869141  452.5054016 #> [2521]  452.3279724  452.1069946  451.9814453  452.0158081  452.0180359 #> [2526]  451.9856567  451.8790283  451.6887512  451.6765442  451.8363342 #> [2531]  451.9753113  452.1203308  452.2964172  452.4467163  452.6037292 #> [2536]  452.7690125  452.8920898  453.0085449  453.1238403  453.2532654 #> [2541]  453.3907166  453.4099426  453.4928589  453.6933594  453.7903442 #> [2546]  453.8439941  453.8291321  453.8862915  454.0609131  454.1427002 #> [2551]  454.1898499  454.1723328  454.1944885  454.3288269  454.4255981 #> [2556]  454.4867554  454.5112000  454.5527954  454.6119080  454.5812988 #> [2561]  454.6361694  454.8138123  454.9269714  455.0255737  455.1511230 #> [2566]  455.2566223  455.3704834  455.4870605  455.5181885  455.6358032 #> [2571]  455.8817139  456.0807495  456.3121948  456.5586548  456.7499390 #> [2576]  456.9463806  457.1255493  457.2504272  457.3601990  457.5110168 #> [2581]  457.6644287  457.7896423  457.9042053  457.9981689  458.0409546 #> [2586]  458.0351562  458.1334229  458.2504578  458.2962646  458.2304993 #> [2591]  458.1155701  458.1937561  458.3166504  458.3853455  458.4965820 #> [2596]  458.6327515  458.7415466  458.7178955  458.6578674  458.7500305 #> [2601]  458.8515625  458.9045105  458.8424683  458.7020569  458.7210693 #> [2606]  458.7572632  458.7295227  458.6023865  458.4629517  458.4534912 #> [2611]  458.3982239  458.2217407  457.9752502  457.8703613  457.7625122 #> [2616]  457.4779663  457.3713684  457.2713318  456.9344788  456.7550049 #> [2621]  456.6000977  456.2268066  456.0134277  455.8843689  455.5518188 #> [2626]  455.2776489  455.1561279  454.8788147  454.5462952  454.3570251 #> [2631]  454.0430908  453.7445374  453.5635681  453.3135681  452.9740906 #> [2636]  452.6452026  452.4248352  452.0964355  451.7883911  451.6158447 #> [2641]  451.2980652  450.8936768  450.5899353  450.3556824  450.0865784 #> [2646]  449.7969360  449.5385742  449.2813721  448.9600525  448.5616760 #> [2651]  448.2987976  448.0015564  447.6183777  447.4049377  447.2038269 #> [2656]  446.9731445  446.7731628  446.6170044  446.4643555  446.2889709 #> [2661]  446.0466309  445.7986145  445.6637573  445.4452209  445.2265015 #> [2666]  445.0932922  444.9205933  444.7387085  444.5781860  444.3687439 #> [2671]  444.0941772  443.9031677  443.6987915  443.4701538  443.3491821 #> [2676]  443.2032166  443.0184326  442.8417664  442.6637268  442.4784241 #> [2681]  442.1605225  441.8279419  441.6189270  441.3320923  440.9973145 #> [2686]  440.6310730  440.2882080  439.9813843  439.6955566  439.3735657 #> [2691]  438.9508667  438.6683960  438.4452209  438.0692139  437.7640381 #> [2696]  437.4546204  437.0877075  436.8043823  436.4754028  436.1711731 #> [2701]  435.8459167  435.3765564  435.0121765  434.7094727  434.3314819 #> [2706]  433.8884583  433.4502869  433.1091919  432.7516785  432.3990173 #> [2711]  432.0203857  431.5452576  431.2078552  431.0042725  430.6610107 #> [2716]  430.3300171  430.1712036  429.9030762  429.5176697  429.3209229 #> [2721]  429.1328430  428.7324829  428.4463806  428.3247681  427.9974060 #> [2726]  427.6499329  427.3926086  427.0405273  426.6716919  426.2849426 #> [2731]  425.9440002  425.6336975  425.3009644  424.9150085  424.5156860 #> [2736]  424.1950684  423.8173828  423.4006042  422.9346008  422.4867554 #> [2741]  422.1238403  421.7878418  421.4240417  420.9014282  420.5083008 #> [2746]  420.2206116  419.7766418  419.4902039  419.2662659  418.8470764 #> [2751]  418.4964294  418.1574707  417.7518005  417.4817505  417.1983948 #> [2756]  416.8359070  416.3780212  416.0041199  415.7938232  415.4226379 #> [2761]  415.0390015  414.8293762  414.5466919  414.1419983  413.8479004 #> [2766]  413.5681152  413.2476807  412.9938049  412.6930237  412.3883057 #> [2771]  412.0800781  411.6819458  411.3864441  411.0869751  410.7112732 #> [2776]  410.4525146  410.1657410  409.8607483  409.5924683  409.2205505 #> [2781]  408.8607483  408.5755005  408.2072144  407.9370728  407.7062988 #> [2786]  407.4203796  407.0692749  406.7071838  406.4599304  406.1405334 #> [2791]  405.8547058  405.6034851  405.3093567  405.0732422  404.7320862 #> [2796]  404.4158020  404.1783752  403.8605957  403.5433655  403.1799316 #> [2801]  402.8542480  402.6002502  402.3260498  401.9307556  401.5795898 #> [2806]  401.3211365  400.9677734  400.7282410  400.5334473  400.2427063 #> [2811]  399.9928284  399.7177734  399.3388367  399.0734253  398.8280640 #> [2816]  398.5304871  398.3281555  398.1072998  397.8828735  397.6382141 #> [2821]  397.2653198  396.9824219  396.7556763  396.4626770  396.2605591 #> [2826]  396.0309753  395.7835693  395.5119629  395.1307068  394.8994446 #> [2831]  394.7013245  394.3308105  394.0810547  393.7979431  393.4944153 #> [2836]  393.2989807  393.0520630  392.8122559  392.5896912  392.3037415 #> [2841]  391.9534912  391.7179260  391.4880981  391.1722107  390.8266296 #> [2846]  390.4936523  390.2483521  390.0387573  389.7911377  389.5373840 #> [2851]  389.2643433  388.9090576  388.6641846  388.4572754  388.1703491 #> [2856]  387.8159790  387.4053345  387.1227112  386.8778687  386.6058655 #> [2861]  386.4064331  386.1439514  385.8285522  385.5876770  385.3099670 #> [2866]  385.0196838  384.6675415  384.3134766  384.0340881  383.8045959 #> [2871]  383.5825806  383.2440796  382.9253845  382.6661377  382.3424988 #> [2876]  382.0182800  381.6464233  381.3174438  381.0421143  380.7594299 #> [2881]  380.3866882  379.9945068  379.7033691  379.3995056  379.0705566 #> [2886]  378.6656494  378.3180847  378.0658264  377.8298950  377.5471191 #> [2891]  377.1670532  376.9052124  376.7656555  376.4747620  376.1343689 #> [2896]  375.9402161  375.7024231  375.4307556  375.1157837  374.7972412 #> [2901]  374.5972290  374.4106445  374.1946716  374.0093689  373.7630615 #> [2906]  373.3966064  373.1320801  372.8821411  372.5636597  372.2296448 #> [2911]  371.8837891  371.5995789  371.3262634  371.0817566  370.8421936 #> [2916]  370.5946350  370.3035889  369.9950867  369.7889404  369.5622559 #> [2921]  369.2622986  368.9062805  368.6095886  368.4188232  368.2356262 #> [2926]  368.0582275  367.8646545  367.6470947  367.4062195  367.1289368 #> [2931]  366.9274292  366.8793335  366.8349915  366.7336121  366.7815857 #> [2936]  366.9056702  366.9733276  367.0735779  367.2246399  367.4033203 #> [2941]  367.5808716  367.7400818  367.8775024  367.9711609  368.0636902 #> [2946]  368.1871948  368.2959900  368.3472290  368.4042053  368.4894409 #> [2951]  368.5596619  368.6555786  368.7872009  368.9016724  369.0368652 #> [2956]  369.1986084  369.3460999  369.5048828  369.7041016  369.9006958 #> [2961]  370.1144104  370.3166199  370.4725647  370.7319946  371.0376587 #> [2966]  371.2663574  371.4765625  371.6865234  371.8834229  372.0415039 #> [2971]  372.1820984  372.3268738  372.4920959  372.6254883  372.6729736 #> [2976]  372.8219299  373.0514221  373.2218018  373.3363037  373.4677734 #> [2981]  373.6258240  373.7364197  373.8222656  373.9198914  374.0126953 #> [2986]  374.1017151  374.2087402  374.3055725  374.3997498  374.5185852 #> [2991]  374.6571045  374.8023682  374.9425964  375.0590820  375.1959534 #> [2996]  375.3900757  375.5836487  375.7558289  375.9247742  376.0986328 #> [3001]  376.2861023  376.4787292  376.6902161  376.9209290  377.1452637 #> [3006]  377.3501587  377.5498352  377.7942810  378.0264587  378.2127991 #> [3011]  378.4344482  378.6628113  378.8730774  379.0974121  379.3093262 #> [3016]  379.5217285  379.7404480  379.9617615  380.1838684  380.3881836 #> [3021]  380.6041870  380.8294678  381.0307922  381.2123108  381.4111023 #> [3026]  381.6218872  381.8152771  382.0247498  382.2257080  382.4052734 #> [3031]  382.6256409  382.8355713  383.0177307  383.2155762  383.4086304 #> [3036]  383.6051941  383.8136597  384.0093079  384.2090454  384.4240112 #> [3041]  384.6410828  384.8494263  385.0517273  385.2530518  385.4564819 #> [3046]  385.6720581  385.8821716  386.0672302  386.2642517  386.4829102 #> [3051]  386.6815491  386.8634338  387.0430298  387.2367249  387.4567566 #> [3056]  387.5900879  387.7052002  387.9453125  388.1752319  388.3787231 #> [3061]  388.5743103  388.7474670  388.9195557  389.0611572  389.2001953 #> [3066]  389.3609009  389.4996338  389.6294556  389.7701111  389.8796387 #> [3071]  390.0005798  390.1111145  390.2058411  390.2685242  390.2497253 #> [3076]  390.3041382  390.3973694  390.4200134  390.4460754  390.4164124 #> [3081]  390.2749023  390.2098999  390.1869507  390.1292419  389.9817810 #> [3086]  389.7479248  389.5924377  389.4422607  389.2351685  388.9309692 #> [3091]  388.6517944  388.3895874  388.0002136  387.6683960  387.3422546 #> [3096]  387.0138855  386.6654968  386.2210083  385.8908386  385.5212708 #> [3101]  385.0394287  384.6508179  384.2679749  383.8215027  383.3721313 #> [3106]  383.0248108  382.5973511  382.1450806  381.7593689  381.3273315 #> [3111]  380.8931274  380.3964539  380.0045471  379.6192932  379.1147156 #> [3116]  378.6867371  378.2602234  377.8388367  377.3473206  376.8837280 #> [3121]  376.5142517  376.0251770  375.5543823  375.1254272  374.6933594 #> [3126]  374.2011414  373.7511902  373.3792114  372.8877563  372.3718567 #> [3131]  371.8099976  371.2639465  370.8031311  370.3543091  369.8484802 #> [3136]  369.3773499  368.9684448  368.4952393  367.9964600  367.4798584 #> [3141]  367.0166626  366.6112671  366.0910034  365.6442261  365.3086243 #> [3146]  364.8531189  364.3430481  363.8288879  363.3675232  362.9877625 #> [3151]  362.6176147  362.1368408  361.7492981  361.4425049  361.0140686 #> [3156]  360.5424805  360.0509033  359.6328430  359.2656555  358.9197388 #> [3161]  358.5465393  358.0637512  357.6825562  357.3305664  356.8796082 #> [3166]  356.3914795  355.8932495  355.5054932  355.1432800  354.7825928 #> [3171]  354.3563538  353.9016724  353.5823975  353.2068481  352.7489319 #> [3176]  352.2754517  351.8221130  351.4759827  351.1375122  350.6678772 #> [3181]  350.2937622  349.9755859  349.5742188  349.1945190  348.8245544 #> [3186]  348.4960327  348.1938477  347.8831482  347.5134888  347.2018738 #> [3191]  346.9123230  346.5638428  346.1501160  345.7162476  345.3946228 #> [3196]  345.1044922  344.8263855  344.5367432  344.1679382  343.8860168 #> [3201]  343.6251221  343.3021545  342.9460144  342.5639648  342.2648010 #> [3206]  342.0325623  341.7886047  341.4121704  341.0726624  340.8201294 #> [3211]  340.5198059  340.2052917  339.8494873  339.5509338  339.3016663 #> [3216]  339.0498657  338.8179321  338.4859314  338.1121521  337.7819519 #> [3221]  337.4009094  337.0600586  336.7984619  336.5623474  336.2419739 #> [3226]  335.8554688  335.5880737  335.3060913  334.9452209  334.5404358 #> [3231]  334.1781616  333.8912048  333.6268005  333.4059753  333.1000977 #> [3236]  332.7230530  332.4731140  332.2177429  331.8877869  331.5111694 #> [3241]  331.1416016  330.8527832  330.6192932  330.4176025  330.2177429 #> [3246]  330.0409546  329.8277283  329.4967041  329.1890869  328.8632812 #> [3251]  328.4419556  328.1170959  327.8746643  327.6195679  327.3438110 #> [3256]  326.9703979  326.5654907  326.3050842  326.0020142  325.6288757 #> [3261]  325.2011108  324.7770081  324.4850159  324.1893005  323.8820496 #> [3266]  323.6024475  323.2332764  322.9072266  322.6124573  322.2710571 #> [3271]  321.8718262  321.4229126  321.1323853  320.9096680  320.6668396 #> [3276]  320.4686890  320.2607727  319.9541626  319.6488953  319.4219360 #> [3281]  319.1432800  318.8216858  318.4010925  318.0083618  317.7549133 #> [3286]  317.5021667  317.2412109  317.0177917  316.7340393  316.3875732 #> [3291]  316.1405029  315.8715820  315.5713501  315.2204895  314.8621216 #> [3296]  314.6141052  314.4146423  314.1996765  313.9447021  313.6900940 #> [3301]  313.4562683  313.1245117  312.7353516  312.3212280  311.8542175 #> [3306]  311.5012207  311.2178650  310.9400330  310.6520691  310.3423462 #> [3311]  310.1288452  309.8932190  309.6115723  309.2930603  308.9795227 #> [3316]  308.8037720  308.6596069  308.5308838  308.4102783  308.2761536 #> [3321]  308.1072388  307.8117371  307.5668945  307.4186401  307.1744385 #> [3326]  306.9022522  306.6148376  306.4107056  306.3353577  306.3121948 #> [3331]  306.3164673  306.3200989  306.3177795  306.2529907  306.1313171 #> [3336]  305.9578247  305.7269897  305.5899353  305.4364319  305.2192993 #> [3341]  304.9871826  304.7777710  304.6734924  304.6301270  304.6152039 #> [3346]  304.5968323  304.5501709  304.4745789  304.4126282  304.2836304 #> [3351]  304.0660400  303.9511414  303.8479919  303.7098389  303.5861206 #> [3356]  303.5086060  303.5205383  303.5649719  303.6358948  303.7276611 #> [3361]  303.8046265  303.8519592  303.8852234  303.8863525  303.7733154 #> [3366]  303.6475525  303.5535889  303.3919373  303.1555786  302.8558960 #> [3371]  302.6379089  302.5025940  302.3865967  302.2806091  302.1732178 #> [3376]  302.0287170  301.8362732  301.6438293  301.3713684  301.1313171 #> [3381]  300.9437561  300.7018127  300.4259644  300.0951843  299.8712158 #> [3386]  299.7241211  299.5670166  299.4567871  299.2951660  299.0838318 #> [3391]  298.9838562  298.8587646  298.7114868  298.5330505  298.3377686 #> [3396]  298.2370605  298.1249084  297.9779663  297.8049622  297.6368713 #> [3401]  297.3959351  297.0804749  296.8855286  296.6577148  296.3652954 #> [3406]  296.0538330  295.7218933  295.5245972  295.4369202  295.3619080 #> [3411]  295.2847290  295.2030945  295.1234131  294.9635620  294.7218018 #> [3416]  294.5394592  294.3287659  294.0501709  293.6973572  293.4216919 #> [3421]  293.2800903  293.1686707  293.0698547  292.9482727  292.7493591 #> [3426]  292.4767151  292.2689514  292.0229492  291.7353210  291.4142761 #> [3431]  291.1051941  290.9427795  290.8429565  290.7575073  290.6552734 #> [3436]  290.5461121  290.3563538  290.0758667  289.8576965  289.6030579 #> [3441]  289.2894897  288.9097595  288.5589905  288.3189697  288.0791626 #> [3446]  287.8706055  287.6365356  287.3174438  287.0678101  286.8103638 #> [3451]  286.4938660  286.1424255  285.7734375  285.5235901  285.3605042 #> [3456]  285.1928101  284.9699402  284.6424255  284.3463440  284.0620728 #> [3461]  283.6826477  283.2680359  282.8027039  282.4107666  282.1282654 #> [3466]  281.8879395  281.6399841  281.3073425  281.0346985  280.8180237 #> [3471]  280.5122375  280.2024231  279.8955078  279.6599731  279.4985657 #> [3476]  279.3741455  279.2763367  279.1737366  279.0739746  278.9157715 #> [3481]  278.6204529  278.3433533  278.0499573  277.6581116  277.2088318 #> [3486]  276.7383728  276.3651123  276.0380859  275.7467651  275.4351196 #> [3491]  274.9938049  274.5721741  274.1463013  273.6919250  273.3597717 #> [3496]  273.0969543  272.8545837  272.5946960  272.3139038  271.9423218 #> [3501]  271.5805054  271.2694702  270.8770142  270.4288025  269.9290466 #> [3506]  269.5277405  269.1904297  268.8522034  268.4909363  268.0207214 #> [3511]  267.5332031  266.9953003  266.4891052  266.0731812  265.6802063 #> [3516]  265.2753601  264.7954407  264.3880310  264.0065308  263.5473022 #> [3521]  263.0352173  262.5741272  262.2117004  261.8640747  261.4500427 #> [3526]  261.0083008  260.6414185  260.2376099  259.7644958  259.2289429 #> [3531]  258.7354431  258.3268738  257.9564819  257.5115967  257.0132446 #> [3536]  256.5666809  256.0739441  255.6114044  255.2454529  254.8912964 #> [3541]  254.4116058  253.8908691  253.3893127  252.8276672  252.3180542 #> [3546]  251.8745880  251.3650055  250.8914642  250.4590454  249.9467621 #> [3551]  249.3935242  248.8357239  248.3686676  247.9597931  247.4705200 #> [3556]  246.9541626  246.5084229  246.0007019  245.4338684  244.8424377 #> [3561]  244.3076477  243.8623199  243.4050598  242.8414764  242.2638245 #> [3566]  241.6669312  241.0305328  240.5161591  240.0715637  239.5458221 #> [3571]  238.9372864  238.3228912  237.6623688  237.0681458  236.5843048 #> [3576]  236.1491089  235.6333618  235.0951843  234.6339874  234.0963287 #> [3581]  233.6442108  233.2680206  232.8989716  232.5373688  232.0553131 #> [3586]  231.5778351  231.0729218  230.5543365  230.1601105  229.7571411 #> [3591]  229.2354736  228.7545624  228.2975769  227.7935486  227.2405853 #> [3596]  226.6539307  226.1528473  225.7027435  225.2592163  224.7335358 #> [3601]  224.1316986  223.5274658  222.8587952  222.2333679  221.6978607 #> [3606]  221.1184845  220.5316162  220.0382233  219.4901123  218.8476562 #> [3611]  218.1881714  217.6049042  217.0429230  216.4187469  215.8929443 #> [3616]  215.3915405  214.7914124  214.1397247  213.5078278  212.9397430 #> [3621]  212.4125671  211.9576721  211.3872528  210.7401123  210.1079559 #> [3626]  209.4403381  208.8796234  208.3852081  207.8330383  207.3068085 #> [3631]  206.8252411  206.2758484  205.6781311  205.0218048  204.4429779 #> [3636]  203.9631042  203.3924255  202.8278656  202.3380432  201.7920532 #> [3641]  201.2276611  200.6304626  200.1031036  199.6699829  199.1595612 #> [3646]  198.6682281  198.1957550  197.6451263  197.0773773  196.4851074 #> [3651]  195.9663849  195.4987183  195.0121613  194.4670410  193.9101410 #> [3656]  193.3356323  192.7617645  192.3038330  191.8626709  191.2964935 #> [3661]  190.7663422  190.3027191  189.7655945  189.1848755  188.6104736 #> [3666]  188.1197205  187.6372681  187.0536957  186.5213623  186.0050812 #> [3671]  185.4300995  184.8580780  184.2919464  183.8036041  183.3947906 #> [3676]  182.9330750  182.3349152  181.7404938  181.1007996  180.4795837 #> [3681]  179.9922791  179.4545135  178.9247284  178.4833679  177.9570923 #> [3686]  177.3670807  176.7852478  176.2387543  175.7484741  175.2297363 #> [3691]  174.6022491  173.9447021  173.2350006  172.5835419  172.0385132 #> [3696]  171.4314880  170.8618011  170.3408203  169.7361603  169.1298523 #> [3701]  168.5123291  167.9501801  167.4777374  166.9285736  166.2688751 #> [3706]  165.5722961  164.8137512  164.1389008  163.5979919  162.9971008 #> [3711]  162.2983856  161.6004181  160.8442841  160.1323700  159.5305939 #> [3716]  158.8778381  158.2647247  157.6907501  157.0348969  156.3178864 #> [3721]  155.6031189  155.0083466  154.3858185  153.7375183  153.1960449 #> [3726]  152.5751495  151.8637238  151.1554413  150.4994812  149.9075775 #> [3731]  149.3659668  148.8007202  148.1836090  147.6210785  147.0241852 #> [3736]  146.4090271  145.7333527  145.0365448  144.4904327  143.8833008 #> [3741]  143.1506500  142.3752747  141.5808868  140.9037170  140.3174286 #> [3746]  139.6291962  138.8655396  138.0683594  137.2120514  136.4210052 #> [3751]  135.7254944  135.1141052  134.5372620  134.0535736  133.6693573 #> [3756]  133.2169342  132.6833954  132.1497955  131.5296783  130.8706512 #> [3761]  130.3007965  129.6521606  128.8815765  128.0479126  127.2827988 #> [3766]  126.6447983  126.0817871  125.4676361  124.7715988  124.0073624 #> [3771]  123.2280273  122.5755386  121.9697418  121.2423630  120.4484100 #> [3776]  119.6635056  118.8248749  118.0715027  117.4408340  116.7233276 #> [3781]  115.9932632  115.3471451  114.6118164  113.8173065  112.9949951 #> [3786]  112.2551270  111.5653915  110.8035660  110.1390762  109.4478912 #> [3791]  108.6263351  107.7733994  106.9297333  106.1651993  105.3858032 #> [3796]  104.6595764  104.0591202  103.3289795  102.5762863  102.0150986 #> [3801]  101.3921661  100.7317810  100.1400223   99.4037018   98.5419388 #> [3806]   97.6638260   96.8577957   96.0623779   95.2101440   94.4382248 #> [3811]   93.6140366   92.6493759   91.6991348   90.8164673   90.0319443 #> [3816]   89.3771133   88.6852646   87.8565445   87.0068359   86.1393433 #> [3821]   85.3587265   84.6196671   83.7445984   82.7680511   81.8286972 #> [3826]   80.9790878   80.1862335   79.3775635   78.4380188   77.4109955 #> [3831]   76.3135681   75.2744904   74.3512421   73.3892517   72.2914429 #> [3836]   71.0502167   69.7086487   68.3388596   67.0425415   65.8583069 #> [3841]   64.7690353   63.6628380   62.3978157   60.9973145   59.5226593 #> [3846]   58.0429726   56.6625977   55.4212227   54.2380829   52.8789291 #> [3851]   51.4219437   50.1318626   48.8535805   47.5386200   46.2723465 #> [3856]   45.0034409   43.8423576   42.8434944   41.8348465   40.6836014 #> [3861]   39.4026718   38.0451012   36.7264366   35.4114876   34.1114426 #> [3866]   33.1648712   32.4081001   31.5958252   30.8387184   30.1489868 #> [3871]   29.5247593   28.9563046   28.3709602   27.7685566   27.1005116 #> [3876]   26.2802715   25.4645672   24.6883049   23.9285622   23.2802868 #> [3881]   22.7141552   22.1589890   21.7162991   21.4849129   21.1269379 #> [3886]   20.5752563   20.0165997   19.3725224   18.6046162   17.7653732 #> [3891]   16.9756336   16.2322903   15.4790668   14.7589350   14.0697088 #> [3896]   13.3726273   12.6778326   11.9887209   11.3159475   10.7239943 #> [3901]   10.1335974    9.4693098    8.8506460    8.3038406    7.7533145 #> [3906]    7.1451859    6.5889378    6.1152682    5.6562605    5.2136879 #> [3911]    4.7840347    4.3702679    4.0095196    3.7081313    3.3984289 #> [3916]    3.0004466    2.6567190    2.4687366    2.2451961    1.9575317 #> [3921]    1.8487399    1.6837842    1.2618077    1.0286938    1.0633980 #> [3926]    1.1409483    1.2277848    1.3357668    1.3071218    1.2555978 #> [3931]    1.2863545    1.2106880    1.1280248    1.0915178    1.0625194 #> [3936]    1.0782697    0.9523236    0.6627325    0.5029427    0.5638973 #> [3941]    0.7666855    0.9210220    0.9781464    0.9810494    0.9615104 #> [3946]    0.9693088    0.9660049    0.9755595    0.8408422    0.5585560 #> [3951]    0.4453592    0.5690671    0.7082967    0.7515234    0.7994086 #> [3956]    0.8298296    0.9050095    0.9689759    0.9438081    0.9261180 #> [3961]    0.8921167    0.8571512    0.8291519    0.6783110    0.4696882 #> [3966]    0.4601596    0.6247558    0.7609875    0.8386811    0.8813542 #> [3971]    0.9013037    0.8855121    0.8136691    0.6026917    0.3962253 #> [3976]    0.4282945    0.5869291    0.6846943    0.7502854    0.8114046 #> [3981]    0.8299909    0.8468949    0.9240347    1.0902113    1.2743466 #> [3986]    1.4630312    1.7194731    2.0152941    2.2949939    2.5769191 #> [3991]    2.8593638    3.1556332    3.4407768    3.7170684    3.9724848 #> [3996]    4.2026563    4.3910990    4.5694199    4.7125039    4.8387814 #> [4001]    4.9809270    5.1234069    5.2397294    5.3384905    5.4958844 #> [4006]    5.6784163    5.8367891    6.0050302    6.1087861    6.1516504 #> [4011]    6.1972370    6.2121501    6.1898055    6.1441321    6.1092720 #> [4016]    6.0936413    6.0543833    5.9868870    5.9055176    5.8046646 #> [4021]    5.6664433    5.5024772    5.3179765    5.1175575    4.9165969 #> [4026]    4.6922970    4.4538341    4.2326732    4.0118551    3.7667859 #> [4031]    3.5436196    3.3513238    3.1283529    2.8964839    2.6909516 #> [4036]    2.4942658    2.2964935    2.1238906    1.9704492    1.8297011 #> [4041]    1.7029932    1.5617605    1.3840817    1.2093709    1.1142175 #> [4046]    1.0384825    0.9527000    0.8971812    0.6757476    0.3143347 #> [4051]    0.1507893    0.2234728    0.3604793    0.5046621    0.5869208 #> [4056]    0.6142390    0.6548724    0.6692577    0.6314725    0.4474422 #> [4061]    0.1756892    0.1239731    0.3322652    0.5092028    0.6047240 #> [4066]    0.6708695    0.6995603    0.6079889    0.3422899    0.1862257 #> [4071]    0.2674685    0.3884927    0.4907590    0.5878159    0.6366628 #> [4076]    0.5173691    0.2565964    0.1579298    0.2744058    0.4238234 #> [4081]    0.5076878    0.5818294    0.6025331    0.5701813    0.5395632 #> [4086]    0.4030411    0.2190579    0.2603916    0.4497169    0.5884849 #> [4091]    0.6893068    0.6927623    0.6658777    0.6493999    0.4759852 #> [4096]    0.2492905    0.2503514    0.4315286    0.5858978    0.7034277 #> [4101]    0.7617447    0.7874284    0.8435187    0.8408164    0.7818520 #> [4106]    0.7560123    0.5904384    0.2944931    0.2442658    0.4416943 #> [4111]    0.6194608    0.7079033    0.7662231    0.8020521    0.7230523 #> [4116]    0.4526594    0.2841555    0.3729663    0.5054646    0.5799189 #> [4121]    0.6516089    0.7168552    0.7744735    0.8204495    0.8582864 #> [4126]    0.9169077    0.9590665    0.9189877    0.7694918    0.4823086 #> [4131]    0.3257348    0.4667222    0.6332297    0.7157972    0.7926391 #> [4136]    0.8911510    0.9292102    0.8841314    0.8041489    0.5848811 #> [4141]    0.3340237    0.3470165    0.5039773    0.5818451    0.5988684 #> [4146]    0.6439244    0.7275326    0.8351958    0.9330350    1.0197581 #> [4151]    1.1313370    1.2051975    1.2245749    1.2325805    1.2206559 #> [4156]    1.1601280    1.0748136    0.9753738    0.7208953    0.4039997 #> [4161]    0.3387492    0.4677912    0.6239694    0.7408838    0.8388377 #> [4166]    0.9074201    0.9102151    0.9030382    0.9115759    0.8969616 #> [4171]    0.8576460    0.7647212    0.5124993    0.3241328    0.3600092 #> [4176]    0.5152199    0.6493685    0.7120126    0.7355597    0.7914655 #> [4181]    0.8316432    0.7910424    0.7755725    0.7036808    0.4585839 #> [4186]    0.3462883    0.4962724    0.6355249    0.7297592    0.7858089 #> [4191]    0.8174298    0.8527895    0.8381318    0.8713872    0.9298961 #> [4196]    0.9320500    0.9271901    0.8441598    0.5830318    0.3828898 #> [4201]    0.4390469    0.5936399    0.6851756    0.7032992    0.7513497 #> [4206]    0.7986070    0.7970737    0.8006605    0.8061579    0.7941210 #> [4211]    0.7719555    0.7751427    0.6766931    0.4526042    0.3811842 #> [4216]    0.5203262    0.6697161    0.7660292    0.8450844    0.8707718 #> [4221]    0.8722712    0.8679260    0.8814973    0.8948522    0.9047040 #> [4226]    0.8293471    0.5876674    0.4014482    0.4395461    0.6233515 #> [4231]    0.7767926    0.8569107    0.8584709    0.6205726    0.3942188 #> [4236]    0.4569843    0.5950710    0.6759620    0.7358662    0.7860042 #> [4241]    0.8750917    1.0551294    1.2933544    1.5916874    1.9523714 #> [4246]    2.3962786    2.9683235    3.6379406    4.3973155    5.2229271 #> [4251]    6.0887651    6.9949841    7.9005408    8.7915525    9.6359472 #> [4256]   10.4728050   11.3097019   12.1426773   12.9785385   13.8216105 #> [4261]   14.6448603   15.4504137   16.2566719   17.0370941   17.8279743 #> [4266]   18.6370029   19.4577961   20.2641792   21.0796032   21.8714256 #> [4271]   22.6952190   23.5084457   24.3291950   25.1709919   26.0217419 #> [4276]   26.8488369   27.6580677   28.5099697   29.3302345   30.1618690 #> [4281]   31.0382233   31.8701000   32.6923943   33.5603943   34.4398193 #> [4286]   35.3567619   36.2331810   37.1090317   38.0075722   38.8946037 #> [4291]   39.7865524   40.6664429   41.5409203   42.4105339   43.2839546 #> [4296]   44.1188965   44.9643517   45.8753357   46.7777634   47.7305603 #> [4301]   48.6807938   49.5910797   50.5414276   51.5205040   52.4909668 #> [4306]   53.4545441   54.4318237   55.3800888   56.3009720   57.2432976 #> [4311]   58.1742859   59.0942955   60.0219803   60.9374352   61.8479996 #> [4316]   62.7532425   63.6516876   64.5451508   65.4262924   66.3072891 #> [4321]   67.1851807   68.0142441   68.7837296   69.5474472   70.3228455 #> [4326]   71.0894012   71.8513565   72.6239243   73.3955078   74.1660080 #> [4331]   74.9343796   75.6867447   76.4278336   77.1670074   77.9110336 #> [4336]   78.6459198   79.3653412   80.0770035   80.7907562   81.4972534 #> [4341]   82.1869125   82.8922348   83.6192093   84.3422928   85.0601883 #> [4346]   85.7844162   86.5122452   87.2437057   87.9894485   88.7329102 #> [4351]   89.4734726   90.2128906   90.9276199   91.6249695   92.3232727 #> [4356]   93.0109253   93.6890717   94.3564758   95.0298691   95.7123642 #> [4361]   96.3765182   97.0427475   97.7084122   98.3610611   99.0100632 #> [4366]   99.6454010  100.2646027  100.8658447  101.4637222  102.0530472 #> [4371]  102.6187515  103.1947479  103.7819061  104.3472900  104.9077377 #> [4376]  105.4745483  106.0277939  106.5701828  107.1206055  107.6857452 #> [4381]  108.2526779  108.8336105  109.4358749  110.0443649  110.6575089 #> [4386]  111.2678833  111.8828964  112.5105133  113.1290894  113.7529907 #> [4391]  114.3982239  115.0333405  115.6643066  116.3066483  116.9573212 #> [4396]  117.5979691  118.2154922  118.8274841  119.4440308  120.0515823 #> [4401]  120.6631165  121.2896500  121.9203110  122.5505524  123.1751404 #> [4406]  123.8022766  124.4482727  125.1225204  125.7960434  126.4448547 #> [4411]  127.0915298  127.7496033  128.4089203  129.0673218  129.7257080 #> [4416]  130.3359070  130.8894348  131.4774628  132.1280823  132.8222809 #> [4421]  133.5245056  134.2014923  134.8726807  135.5493927  136.2177124 #> [4426]  136.8901520  137.5795288  138.2700806  138.9513550  139.6410522 #> [4431]  140.3266602  141.0058136  141.6966095  142.3758392  143.0357666 #> [4436]  143.7040710  144.3688049  145.0151215  145.6441193  146.2648468 #> [4441]  146.8981018  147.5384521  148.1805420  148.8215332  149.4669037 #> [4446]  150.1310120  150.7954712  151.4632416  152.1439362  152.8157654 #> [4451]  153.4806213  154.1555939  154.8178864  155.4514008  156.0584564 #> [4456]  156.6649933  157.2794189  157.8895416  158.5083313  159.1269684 #> [4461]  159.7239990  160.3320312  160.9552917  161.5718994  162.1842499 #> [4466]  162.7925873  163.4114532  164.0305786  164.6481628  165.2705994 #> [4471]  165.8895264  166.5073853  167.1224670  167.7303314  168.3174438 #> [4476]  168.8973389  169.4753113  170.0513306  170.6375732  171.2290039 #> [4481]  171.8093567  172.3804016  172.9362183  173.4706268  174.0104675 #> [4486]  174.5527802  175.0816040  175.6087036  176.1389923  176.6701813 #> [4491]  177.2012024  177.7236023  178.2516632  178.7874603  179.3132019 #> [4496]  179.8300629  180.3298187  180.8307953  181.3343201  181.8259735 #> [4501]  182.3160400  182.8044128  183.2695618  183.7117004  184.1669922 #> [4506]  184.6291962  185.0672455  185.5108337  185.9682465  186.4153290 #> [4511]  186.8610077  187.3185425  187.7890472  188.2603149  188.7341919 #> [4516]  189.2065582  189.6764374  190.1614532  190.6601105  191.1636963 #> [4521]  191.6715698  192.1667786  192.6540375  193.1457977  193.6230621 #> [4526]  194.1039276  194.5956421  195.0696411  195.5444489  196.0263214 #> [4531]  196.4971771  196.9631805  197.4117126  197.8444366  198.2770538 #> [4536]  198.6996002  199.1287537  199.5690918  200.0150604  200.4336243 #> [4541]  200.7886505  201.1432190  201.5324554  201.9335632  202.3379822 #> [4546]  202.7624664  203.1952972  203.6105042  204.0065765  204.3773651 #> [4551]  204.7519989  205.1269531  205.4886932  205.8548431  206.2325592 #> [4556]  206.6129456  207.0026703  207.4110260  207.8217010  208.2318115 #> [4561]  208.6399078  209.0396118  209.4439240  209.8576508  210.2642670 #> [4566]  210.6461334  211.0205841  211.3995361  211.7731476  212.1487274 #> [4571]  212.5336151  212.9234467  213.2951813  213.6327667  214.0198059 #> [4576]  214.4986877  214.9857025  215.4519348  215.9083099  216.3463745 #> [4581]  216.7887268  217.2336426  217.6612549  218.0825500  218.4918365 #> [4586]  218.8776398  219.2453918  219.6022949  219.9538116  220.2833252 #> [4591]  220.6241608  220.9649658  221.2760315  221.6030426  221.9347992 #> [4596]  222.2781525  222.6405792  222.9943542  223.3417206  223.6947021 #> [4601]  224.0510406  224.3516693  224.7311401  225.1870728  225.5371552 #> [4606]  225.9707489  226.4413452  226.8031006  227.1272278  227.4394531 #> [4611]  227.7238159  227.9394379  228.2514801  228.6274261  228.9038849 #> [4616]  229.2055817  229.5620880  229.9169159  230.2598724  230.5238342 #> [4621]  230.7156372  231.0184479  231.3978424  231.6679993  231.7986450 #> [4626]  232.0075989  232.3019104  232.5142517  232.8358307  233.1515503 #> [4631]  233.3255768  233.5521393  233.8552856  234.1019135  234.2352142 #> [4636]  234.4455414  234.7538605  234.8897552  234.9934845  235.2497406 #> [4641]  235.3995972  235.5503693  235.8382263  235.9726410  236.0542297 #> [4646]  236.3110352  236.4549255  236.4528046  236.6331482  236.7668762 #> [4651]  236.7323914  236.8621216  236.9764404  236.9497223  237.0692444 #> [4656]  237.1337585  237.0659332  237.1521606  237.1784515  237.1200104 #> [4661]  237.2319336  237.2501984  237.1638794  237.2422485  237.2549744 #> [4666]  237.2131348  237.3423309  237.4044189  237.3189850  237.3841095 #> [4671]  237.4683533  237.4145660  237.5005035  237.6565552  237.6399841 #> [4676]  237.6259613  237.7823944  237.8380432  237.8175507  237.9620209 #> [4681]  238.1230621  238.1599579  238.1875610  238.3566742  238.5263977 #> [4686]  238.5134125  238.4935455  238.6407013  238.6679993  238.6429291 #> [4691]  238.8098755  238.8488464  238.7478027  238.8194122  238.8298187 #> [4696]  238.7498779  238.8431549  238.8129120  238.7193909  238.7824554 #> [4701]  238.7005463  238.6509247  238.7043762  238.5411987  238.4297333 #> [4706]  238.4639282  238.2844391  238.0996704  238.0692291  237.9382324 #> [4711]  237.8545685  237.7667236  237.6464386  237.6738892  237.5671082 #> [4716]  237.4093170  237.3723755  237.2367554  237.1730957  237.0879974 #> [4721]  236.9276123  236.9061890  236.7514801  236.6063232  236.5477905 #> [4726]  236.3643494  236.2742462  236.1242981  235.9622955  235.8909607 #> [4731]  235.7036438  235.6165161  235.5253754  235.3130951  235.2605896 #> [4736]  235.2248688  235.0399017  234.9960938  235.0002136  234.8642883 #> [4741]  234.8355865  234.7674103  234.6582336  234.6808929  234.5742340 #> [4746]  234.5221863  234.5083160  234.3700867  234.3942108  234.3585815 #> [4751]  234.2459869  234.3129425  234.2627563  234.1426849  234.1856079 #> [4756]  234.1110840  234.0084991  234.0452118  233.9498291  233.9111633 #> [4761]  233.9500580  233.7820129  233.7332458  233.7303772  233.5509491 #> [4766]  233.5068054  233.3915253  233.2307739  233.2125397  233.0194092 #> [4771]  232.8617401  232.7844086  232.5719604  232.4827881  232.3390503 #> [4776]  232.1652679  232.0827179  231.8997345  231.8397369  231.7266998 #> [4781]  231.4972992  231.4588928  231.3764191  231.0839081  230.9092255 #> [4786]  230.7800446  230.5143890  230.3900604  230.1871033  229.8979645 #> [4791]  229.7387543  229.4615631  229.2459259  229.0576630  228.7427216 #> [4796]  228.5421143  228.2727814  228.0068512  227.8653870  227.5435944 #> [4801]  227.2455750  227.0798492  226.7562714  226.5176544  226.3089905 #> [4806]  225.9580231  225.7640076  225.4735565  225.1071472  224.8908844 #> [4811]  224.5417175  224.2437134  223.9555054  223.6051483  223.3502655 #> [4816]  222.9673157  222.6412354  222.3115997  221.9282684  221.6539154 #> [4821]  221.2598267  220.9539948  220.7561493  220.3616791  220.0428467 #> [4826]  219.7677917  219.4167480  219.1796875  218.8237152  218.5149384 #> [4831]  218.2872925  217.8767242  217.5848236  217.2969360  216.9400482 #> [4836]  216.6917877  216.3251038  216.0330048  215.7560730  215.4144440 #> [4841]  215.2089844  214.8712006  214.5860748  214.3362427  213.9666443 #> [4846]  213.7386169  213.3958588  212.9772644  212.7248840  212.3323059 #> [4851]  211.9253387  211.6141968  211.1590576  210.7933960  210.4206848 #> [4856]  209.9210205  209.5900421  209.2088470  208.7072601  208.3730469 #> [4861]  207.9593201  207.4585571  207.0720673  206.5960693  206.1888123 #> [4866]  205.7801971  205.3102264  204.9204865  204.3891449  203.9452515 #> [4871]  203.4887238  202.8913879  202.4655762  201.9413910  201.3867493 #> [4876]  200.9110107  200.3245239  199.8021393  199.2192993  198.6449585 #> [4881]  198.1203613  197.5471344  196.9635468  196.3528900  195.7771759 #> [4886]  195.1543884  194.5727234  193.9545135  193.3937378  192.8618622 #> [4891]  192.2284851  191.7270355  191.1597290  190.5958405  190.1242828 #> [4896]  189.5414886  189.0310974  188.4771881  187.9516449  187.4737549 #> [4901]  186.8659058  186.3582001  185.8844147  185.3094330  184.7148438 #> [4906]  184.1705933  183.6429138  183.1049042  182.6029510  182.1561890 #> [4911]  181.7660065  181.4523010  181.1717529  180.9253845  180.7904968 #> [4916]  180.7034149  180.6171875  180.5752716  180.5795593  180.6352386 #> [4921]  180.7292480  180.8497009  181.0051727  181.1890869  181.3993835 #> [4926]  181.6308441  181.8623352  182.1060638  182.3393250  182.5502930 #> [4931]  182.7686462  182.9621124  183.1388245  183.3227997  183.4887695 #> [4936]  183.6569824  183.8133392  183.9165497  183.9902344  184.0051422 #> [4941]  183.9693604  183.9327698  183.8322601  183.7103271  183.5641632 #> [4946]  183.3302307  183.1204834  182.8441467  182.5242004  182.3264313 #> [4951]  182.1250763  181.9218445  181.7635498  181.6393738  181.5745850 #> [4956]  181.4217834  181.2647552  181.2506714  181.1491089  181.0210266 #> [4961]  181.0328674  181.0285187  180.9668274  180.8284912  180.7254791 #> [4966]  180.7059937  180.5630951  180.4142914  180.2582703  179.9714203 #> [4971]  179.7001953  179.3524323  178.9164276  178.4796600  177.9491272 #> [4976]  177.4486084  176.9131470  176.3083801  175.7386475  175.0802765 #> [4981]  174.4715576  173.8481750  173.1705475  172.5814056  171.9053802 #> [4986]  171.2884216  170.6991119  169.9858856  169.3947601  168.7684784 #> [4991]  168.0809784  167.4864807  166.7866974  166.1411591  165.5011292 #> [4996]  164.7757111  164.1828766  163.5122528  162.7971191  162.1491547 #> [5001]  161.3945312  160.6908722  159.9744720  159.2407684  158.5376892 #> [5006]  157.7537537  157.0491028  156.2857666  155.5229645  154.7933960 #> [5011]  153.9954376  153.2903748  152.5042267  151.7394714  150.9932556 #> [5016]  150.1776886  149.4705505  148.6842041  147.9125519  147.1549072 #> [5021]  146.3451233  145.6058502  144.8014221  144.0525055  143.2707520 #> [5026]  142.4510345  141.6929932  140.8684235  140.1097870  139.2846527 #> [5031]  138.4537354  137.6796112  136.8259888  136.0120239  135.1507111 #> [5036]  134.3247833  133.4962463  132.6539459  131.8632965  131.0065765 #> [5041]  130.2130432  129.3763428  128.5648804  127.8017883  126.9480667 #> [5046]  126.2092514  125.4203644  124.6082153  123.8478317  123.0095215 #> [5051]  122.2722092  121.5156631  120.7906265  120.1026001  119.3213806 #> [5056]  118.6285629  117.8922501  117.1561432  116.4487457  115.6706009 #> [5061]  114.9643707  114.1883011  113.4403610  112.7341309  111.9514999 #> [5066]  111.2706070  110.5231781  109.7811432  109.0974884  108.3144150 #> [5071]  107.6217041  106.8718719  106.1042786  105.3860092  104.5779266 #> [5076]  103.8594513  103.0961609  102.3423843  101.6615677  100.8956070 #> [5081]  100.2563705   99.6139526   98.9191437   98.3382111   97.6855392 #> [5086]   97.1029816   96.5721054   95.9550400   95.4701157   94.9555664 #> [5091]   94.4147339   93.9284210   93.3220978   92.7492218   92.1627426 #> [5096]   91.4570084   90.7492294   90.1231689   89.6191635   89.2793121 #> [5101]   89.0992355   89.0056076   89.0004272   89.0908890   89.2648468 #> [5106]   89.5153503   89.8229370   90.1703491   90.5412521   90.9134064 #> [5111]   91.2808075   91.6450272   91.9980316   92.3324432   92.6167908 #> [5116]   92.8287659   92.9719772   93.1082993   93.2310333   93.2289352 #> [5121]   93.2250519   93.1695862   93.0611267   93.0519485   92.9301529 #> [5126]   92.7962570   92.7840652   92.7265167   92.6418533   92.5805130 #> [5131]   92.4654617   92.3463058   92.3191986   92.2786636   92.2281418 #> [5136]   92.1198044   91.9736786   91.9475937   91.8878021   91.8218460 #> [5141]   91.8445892   91.8297119   91.8286362   91.8436966   91.7670670 #> [5146]   91.7403259   91.8252335   91.8619308   91.8714523   91.8644562 #> [5151]   91.7500992   91.6653976   91.7188797   91.6671600   91.5805435 #> [5156]   91.6220703   91.5764847   91.5054016   91.5247421   91.5128555 #> [5161]   91.3999786   91.2124863   91.0321198   90.7698135   90.4500198 #> [5166]   90.0807724   89.6522827   89.2305908   88.7258987   88.2499695 #> [5171]   87.7452698   87.1536713   86.5829544   85.9187851   85.2589264 #> [5176]   84.5598373   83.8046265   83.1176147   82.3752441   81.6739273 #> [5181]   80.9452209   80.2105484   79.5044174   78.7413177   78.0179672 #> [5186]   77.2139511   76.4441223   75.6779480   74.8565750   74.0930176 #> [5191]   73.2501678   72.4168625   71.5484772   70.6814880   69.8202362 #> [5196]   68.9056625   68.0492630   67.1340790   66.2472687   65.3320694 #> [5201]   64.4036102   63.4851952   62.5154381   61.5920334   60.6266899 #> [5206]   59.6787605   58.7159271   57.7579269   56.8033752   55.8569221 #> [5211]   54.9089584   53.8966103   53.1275635   52.5026627   51.7301064 #> [5216]   50.8186150   49.8968849   48.9545784   47.9903374   47.0620193 #> [5221]   46.1214523   45.1787949   44.2159843   43.2784195   42.3091507 #> [5226]   41.3452148   40.3840408   39.4128723   38.4693604   37.5286522 #> [5231]   36.5992279   35.6783180   34.7603226   33.8217697   32.8974915 #> [5236]   31.9514313   31.0434265   30.1084995   29.1845284   28.3289204 #> [5241]   27.4255638   26.5789814   25.7366066   24.9051571   24.1046925 #> [5246]   23.2642612   22.5185337   21.7962837   21.1762028   20.9394360 #> [5251]   20.7615662   20.3321095   19.7394867   19.0978069   18.4968071 #> [5256]   17.8423653   17.2090530   16.6383705   15.9984674   15.3826685 #> [5261]   14.8417244   14.2594595   13.6802626   13.1489592   12.6478815 #> [5266]   12.1491108   11.6271029   11.1556129   10.6657772   10.1477118 #> [5271]    9.7049828    9.2142859    8.6686792    8.1614799    7.6622219 #> [5276]    7.1993852    6.7673812    6.3299046    5.9307194    5.5534673 #> [5281]    5.1520209    4.7427354    4.3535981    4.0182142    3.6861558 #> [5286]    3.4687343    3.3875995    3.1658361    2.8542492    2.5771184 #> [5291]    2.1411417    1.7215126    1.5989496    1.6486819    1.6836555 #> [5296]    1.7111281    1.6597309    1.3699334    1.1181684    1.1503828 #> [5301]    1.3104764    1.3746022    1.3692580    1.4109025    1.4456251 #> [5306]    1.4051403    1.2124120    0.9634954    0.8829142    1.0200684 #> [5311]    1.1709366    1.2201636    1.2943571    1.2319195    0.9567015 #> [5316]    0.7886297    0.7972670    0.9345050    1.0986017    1.1763067 #> [5321]    1.2415891    1.2651842    1.2083244    0.9690533    0.7128768 #> [5326]    0.7151454    0.8677523    0.9858996    1.0763537    1.1163496 #> [5331]    1.1070774    1.1218634    1.1037745    0.8944395    0.6535918 #> [5336]    0.6520891    0.8124925    0.9811509    1.0751746    1.0764601 #> [5341]    0.9050651    0.6605315    0.6271459    0.7389899    0.8421899 #> [5346]    0.9358706    0.9789296    1.0168020    0.9258305    0.6527171 #> [5351]    0.5019424    0.5796052    0.7328363    0.8509947    0.9348637 #> [5356]    0.9731267    0.9966565    0.8843272    0.6044691    0.4630061 #> [5361]    0.5571544    0.6992813    0.8181873    0.8978878    0.7798709 #> [5366]    0.5158903    0.4553737    0.5915571    0.7074410    0.8008223 #> [5371]    0.8981227    0.9209641    0.8878931    0.9041045    0.8755490 #> [5376]    0.8064637    0.9220726    1.0932679    0.9676793    0.7446961 #> [5381]    0.7039635    0.8592704    1.1963216    1.5453883    1.8479543 #> [5386]    2.1423347    2.4283845    2.6958766    2.9362431    3.1592155 #> [5391]    3.3527927    3.5142622    3.6649497    3.8019569    3.9298632 #> [5396]    4.0366411    4.1069465    4.1536641    4.1801219    4.1974096 #> [5401]    4.1933832    4.1681056    4.1349726    4.0833187    4.0315981 #> [5406]    3.9950027    3.9370556    3.8660438    3.7927537    3.7017450 #> [5411]    3.6087651    3.5078306    3.3493400    3.2078898    3.1590631 #> [5416]    3.1596591    3.2181029    3.3232164    3.4278264    3.5209916 #> [5421]    3.6152997    3.6933990    3.7337160    3.7321913    3.6980340 #> [5426]    3.6297951    3.5605559    3.4898558    3.3327019    3.1731508 #> [5431]    3.0014069    2.7999408    2.6287880    2.4179502    2.2320302 #> [5436]    2.0239155    1.8385023    1.7243830    1.6005406    1.5041195 #> [5441]    1.4504321    1.4405426    1.4441894    1.4087187    1.3530698 #> [5446]    1.2966230    1.2288646    1.1090714    0.9617278    0.7009221 #> [5451]    0.3724729    0.3011861    0.4738714    0.6145840    0.6958508 #> [5456]    0.7744514    0.7948287    0.7999675    0.7983980    0.7863680 #> [5461]    0.6478454    0.3944709    0.3021191    0.4216665    0.6138057 #> [5466]    0.7243882    0.7412114    0.7852795    0.7390686    0.4815390 #> [5471]    0.2965365    0.3606782    0.5263896    0.6687995    0.7976744 #> [5476]    0.8394239    0.8341776    0.7702939    0.4993112    0.3229404 #> [5481]    0.4384906    0.5860108    0.6891854    0.7844534    0.8568397 #> [5486]    0.9143896    0.9088022    0.8729833    0.8553938    0.8366945 #> [5491]    0.7301731    0.4958828    0.3339262    0.4028660    0.6299398 #> [5496]    0.8033816    0.8701530    0.9340066    0.9628162    0.9110317 #> [5501]    0.6829886    0.3990300    0.3452478    0.4972160    0.6796435 #> [5506]    0.7850353    0.8438123    0.7762827    0.5074239    0.3472847 #> [5511]    0.4344113    0.5638761    0.6976129    0.7866859    0.7855434 #> [5516]    0.8091344    0.8304415    0.6481225    0.4152643 #>  #> $P$sampling #> [1] \"regular\" #>  #> $P$sampling_rate #> [1] 1 #>  #> $P$sampling_rate_unit #> [1] \"Hz\" #>  #> $P$depid #> [1] \"md13_134a\" #>  #> $P$creation_date #> [1] \"2023-07-05 14:58:20.27712\" #>  #> $P$history #> [1] \"sens_struct\" #>  #> $P$full_name #> [1] \"Pressure\" #>  #> $P$description #> [1] \"dive depth\" #>  #> $P$unit #> [1] \"m H2O\" #>  #> $P$unit_name #> [1] \"meters H2O (salt)\" #>  #> $P$unit_label #> [1] \"meters\" #>  #> $P$start_offset #> [1] 0 #>  #> $P$start_offset_units #> [1] \"second\" #>  #> $P$axes #> [1] \"D\" #>  #>  #> $Jerk #> $Jerk$data #>    [1] 0.2854172885 0.3314727843 0.1215937883 0.4717704654 0.2641828954 #>    [6] 0.0908056200 0.1421409249 0.0865168646 0.0656049177 0.1448089182 #>   [11] 0.2182499468 0.2691599131 0.1933819056 0.4169942439 0.1879371405 #>   [16] 0.0833556205 0.0666225702 0.0730392635 0.1670893729 0.0493613519 #>   [21] 0.0453658290 0.1885123104 0.2591838837 0.1287804395 0.3848285079 #>   [26] 0.2231798023 0.0329360962 0.0419611074 0.0416975357 0.2212956101 #>   [31] 0.1836560518 0.2665861249 0.1488598436 0.3828326166 0.2771329284 #>   [36] 0.1598066539 0.0967852399 0.1416240633 0.1226844266 0.1146759540 #>   [41] 0.2849989235 0.1936860681 0.2755412757 0.3663054407 0.1316324472 #>   [46] 0.1538492888 0.1549136043 0.2636187077 0.1367903501 0.2468307912 #>   [51] 0.1715148687 0.3402775824 0.3192956746 0.0186003763 0.1583831459 #>   [56] 0.0253340285 0.1884028316 0.1974970698 0.2299088985 0.1497789770 #>   [61] 0.2906970978 0.3609177172 0.1089786366 0.0718648434 0.0170475990 #>   [66] 0.0285373759 0.1279296577 0.1140099019 0.1600754559 0.2648932040 #>   [71] 0.2082098126 0.2328069657 0.4167024493 0.1953852922 0.1295127273 #>   [76] 0.1618139297 0.2011560053 0.1291537881 0.0798529014 0.2786051929 #>   [81] 0.1103119552 0.4376089275 0.2703382969 0.0429793820 0.1143005863 #>   [86] 0.1294961125 0.1866833419 0.0313991718 0.1833185554 0.1527376026 #>   [91] 0.1614162773 0.0668849349 0.0846944004 0.1182703823 0.1703587174 #>   [96] 0.1531544030 0.1661720276 0.1414160430 0.3753129840 0.2829324901 #>  [101] 0.0660125464 0.1612293273 0.1193475276 0.2674030066 0.1999709308 #>  [106] 0.1300920099 0.2886463702 0.0744156316 0.4265662134 0.3093529940 #>  [111] 0.0320952125 0.0606804714 0.0347737372 0.0684429556 0.0854384005 #>  [116] 0.1221441478 0.1182191446 0.1171413288 0.0935323611 0.2104717195 #>  [121] 0.1747373641 0.3666791916 0.3870778382 0.0408664122 0.0437127873 #>  [126] 0.1202327460 0.0768832639 0.1348847598 0.0681154206 0.0462087281 #>  [131] 0.0808918998 0.1164816096 0.0566890165 0.0849333107 0.1260537505 #>  [136] 0.2657451928 0.2129274160 0.3642086685 0.3279680014 0.0298572481 #>  [141] 0.1107687503 0.0950244963 0.1507054716 0.0987316668 0.1137105450 #>  [146] 0.2310622782 0.2775813639 0.1230658740 0.3888653517 0.2250967920 #>  [151] 0.0273221936 0.1173068807 0.0284884088 0.1326771230 0.1244430318 #>  [156] 0.0635257289 0.2082288563 0.1269299984 0.0292242412 0.1082387716 #>  [161] 0.2698002160 0.2253258228 0.2584728599 0.4174124599 0.1789751500 #>  [166] 0.1940272450 0.0933985636 0.1143316254 0.1772181988 0.1687739342 #>  [171] 0.1208854243 0.1388606429 0.1081956849 0.3291587532 0.0779347867 #>  [176] 0.6430417895 0.6149029732 0.1803653985 0.0993225724 0.1172330379 #>  [181] 0.0569511056 0.0408461019 0.0377661474 0.0373560935 0.0398698486 #>  [186] 0.0056767995 0.0125788460 0.0327803046 0.0327552184 0.0201801322 #>  [191] 0.0131290453 0.0171368569 0.0260052383 0.0153309787 0.0279129371 #>  [196] 0.0349667445 0.0258078519 0.0411919281 0.0237271693 0.0358643755 #>  [201] 0.0216948166 0.0077024647 0.0262765456 0.0299188625 0.0375289917 #>  [206] 0.0378796458 0.0459187515 0.0245967899 0.0204348005 0.0176756475 #>  [211] 0.0169062577 0.0744550824 0.0709801838 0.0225349404 0.0514329895 #>  [216] 0.0234877728 0.0290886145 0.0115492381 0.0064075482 0.0154727586 #>  [221] 0.0102182319 0.0007636468 0.0101975203 0.0152252959 0.0139105516 #>  [226] 0.0031008027 0.0036777146 0.0034905693 0.0067482768 0.0102687841 #>  [231] 0.0115203988 0.0069406093 0.0053222207 0.0078821136 0.0093620205 #>  [236] 0.0130281150 0.0051577301 0.0082507515 0.0183376763 0.0168278143 #>  [241] 0.0040659467 0.0066869194 0.0007868388 0.0037999365 0.0070818183 #>  [246] 0.0121265976 0.0092818374 0.0043957960 0.0133643681 0.0087888464 #>  [251] 0.0043218979 0.0049456269 0.0027580783 0.0072576767 0.0139168752 #>  [256] 0.0071329884 0.0101747494 0.0081855049 0.0083283242 0.0019162697 #>  [261] 0.0032509218 0.0104042497 0.0045009661 0.0083136065 0.0105653582 #>  [266] 0.0075149075 0.0090003479 0.0055857003 0.0031505539 0.0046411376 #>  [271] 0.0085007241 0.0145344362 0.0155834546 0.0086636646 0.0097132185 #>  [276] 0.0037012757 0.0054712598 0.0095332144 0.0087886089 0.0039873351 #>  [281] 0.0038485106 0.0022927672 0.0041130846 0.0060209953 0.0135122258 #>  [286] 0.0064244145 0.0079906546 0.0123456474 0.0175672080 0.0152504928 #>  [291] 0.0140953166 0.0102519235 0.0019434652 0.0104304953 0.0075554331 #>  [296] 0.0072199884 0.0083380770 0.0110295294 0.0052041756 0.0115426900 #>  [301] 0.0115434472 0.0159073919 0.0080656018 0.0117445532 0.0282403529 #>  [306] 0.0291065406 0.0255815256 0.0229913741 0.0114042731 0.0094943782 #>  [311] 0.0083727278 0.0019536035 0.0043270290 0.0015190183 0.0098858587 #>  [316] 0.0051997327 0.0162360240 0.0140789570 0.0033546076 0.0148886032 #>  [321] 0.0140263177 0.0142624108 0.0098441718 0.0101524740 0.0052407659 #>  [326] 0.0138277868 0.0110464981 0.0123562180 0.0080946879 0.0073130499 #>  [331] 0.0030483641 0.0032139367 0.0100979088 0.0041652527 0.0115304049 #>  [336] 0.0041180472 0.0068685552 0.0045352848 0.0068587949 0.0070970650 #>  [341] 0.0048316671 0.0069595701 0.0043794122 0.0102394838 0.0164377429 #>  [346] 0.0091541586 0.0034851364 0.0029312165 0.0054439153 0.0101747103 #>  [351] 0.0210762434 0.0290623493 0.0240430310 0.0302166101 0.0121987471 #>  [356] 0.0174944997 0.0138489697 0.0189253632 0.0330783464 0.0746833682 #>  [361] 0.1897419393 0.2442221195 0.1205124483 0.0809608176 0.0527356304 #>  [366] 0.0422155894 0.0407055132 0.0266592298 0.0132550076 0.0319705829 #>  [371] 0.0247906260 0.0172800943 0.0269289389 0.0056311721 0.0072830808 #>  [376] 0.0384317599 0.0868026465 0.0330201276 0.1003177315 0.0642746240 #>  [381] 0.0312840603 0.0288754236 0.0134174405 0.0197346229 0.0062892325 #>  [386] 0.0265773516 0.0384883806 0.0187563412 0.0066444981 0.0167328455 #>  [391] 0.0100253280 0.0226431042 0.0333681181 0.0231278390 0.0496433638 #>  [396] 0.0652446970 0.0469839908 0.0256226901 0.0302685592 0.0151370242 #>  [401] 0.0154460883 0.0267727505 0.0228489451 0.0176515728 0.0079269214 #>  [406] 0.0035703287 0.0166175514 0.0176303908 0.0191323496 0.0291910004 #>  [411] 0.0214006267 0.0171809215 0.0277840607 0.0248389449 0.0265300684 #>  [416] 0.0350065120 0.0302351844 0.0128075955 0.0274628866 0.0268038176 #>  [421] 0.0203474835 0.0485445373 0.0178539753 0.0195963718 0.0221466888 #>  [426] 0.0192623343 0.0091501568 0.0066510616 0.0039866585 0.0129867485 #>  [431] 0.0052848062 0.0041696108 0.0107717998 0.0207167454 0.0222562607 #>  [436] 0.0310822632 0.0338244811 0.0074821478 0.0130348131 0.0145934122 #>  [441] 0.0366619527 0.0409552194 0.0114185344 0.0307869054 0.0228690524 #>  [446] 0.0285324566 0.0147269377 0.0152335847 0.0607813597 0.0536697023 #>  [451] 0.0676235631 0.1106393784 0.1101660207 0.0908306092 0.0449984223 #>  [456] 0.0046006758 0.0153044835 0.0151660917 0.0015795934 0.0031110272 #>  [461] 0.0287888031 0.0290662088 0.0192332491 0.0255477652 0.0205161534 #>  [466] 0.0291213095 0.0157713890 0.0040981174 0.0256001838 0.0457161441 #>  [471] 0.0764595792 0.2186367512 0.2003388852 0.1409109980 0.1049245968 #>  [476] 0.0667506456 0.0336093009 0.0607521273 0.0836670175 0.0770914331 #>  [481] 0.0675181150 0.0522854291 0.0291921850 0.0129921278 0.0098977862 #>  [486] 0.0175834037 0.0304063484 0.0140244169 0.0106342109 0.0104354965 #>  [491] 0.0211320687 0.0144270714 0.0111407870 0.0163114090 0.0148865795 #>  [496] 0.0095762871 0.0128478725 0.0177507531 0.0165661220 0.0113935238 #>  [501] 0.0072014616 0.0251817629 0.0615254901 0.0408501178 0.1048181653 #>  [506] 0.1371387541 0.1279314756 0.1134807616 0.1772000045 0.2843627036 #>  [511] 0.2237606347 0.1002176851 0.0570029877 0.0506354198 0.0811330453 #>  [516] 0.0871931016 0.0960382000 0.1042001471 0.1214419976 0.1302115321 #>  [521] 0.1196525916 0.1417654008 0.2160493582 0.1992612779 0.1021998376 #>  [526] 0.0761348009 0.0795241594 0.0600479916 0.0240000691 0.1004653126 #>  [531] 0.2517728209 0.3178550303 0.2912248671 0.2384293526 0.2013881356 #>  [536] 0.1488046348 0.0592892021 0.0477536693 0.0419813916 0.0725708008 #>  [541] 0.1201626956 0.0604623109 0.0611114055 0.1506596208 0.1775056422 #>  [546] 0.1634700298 0.1474405676 0.1341221780 0.1184390411 0.0606930703 #>  [551] 0.0786401406 0.1809235513 0.2707575560 0.1723063886 0.0546045937 #>  [556] 0.0781271905 0.2014194727 0.2808817923 0.2800140977 0.2760842443 #>  [561] 0.3003142178 0.3328843117 0.3087906241 0.1367210299 0.0142561812 #>  [566] 0.0907248780 0.2411917746 0.3122012019 0.2744945586 0.2116499841 #>  [571] 0.2484903485 0.1773257554 0.1491368264 0.1727183610 0.0245993193 #>  [576] 0.0711644888 0.0604500249 0.1568939090 0.2395334095 0.2806256115 #>  [581] 0.2305828184 0.1781770140 0.1272083223 0.0847062990 0.0567937531 #>  [586] 0.0696605444 0.1296729445 0.1251218617 0.0724990666 0.0268437881 #>  [591] 0.0565702617 0.0387503468 0.1084536836 0.2336802483 0.2056200653 #>  [596] 0.0583835281 0.0574081764 0.0139072603 0.1221427470 0.1095235571 #>  [601] 0.1665554345 0.1555734575 0.1152347252 0.1024603024 0.0725481734 #>  [606] 0.0756531432 0.0610576086 0.0555543490 0.0305140540 0.0162761379 #>  [611] 0.0195043422 0.0409701429 0.0685301423 0.0499393083 0.1088687107 #>  [616] 0.0548816919 0.0527592823 0.0383512005 0.0400932096 0.0549173951 #>  [621] 0.0395994745 0.0195370074 0.0428491421 0.1159635559 0.1326185465 #>  [626] 0.1351694316 0.0696630478 0.1224243492 0.0709007755 0.1971309334 #>  [631] 0.2623929679 0.1792165935 0.2600631118 0.2442552596 0.0909950733 #>  [636] 0.1370798945 0.0924204960 0.1246007532 0.2098519653 0.2960481048 #>  [641] 0.2908188999 0.1689715534 0.2701522410 0.1970109046 0.0434987545 #>  [646] 0.0818339139 0.0635068268 0.0181263275 0.0843036249 0.1268496513 #>  [651] 0.0740643665 0.0255154800 0.0706177652 0.1229612529 0.1006946266 #>  [656] 0.1009298265 0.0829196274 0.0947122797 0.0810735598 0.0365211219 #>  [661] 0.0389626063 0.0416946113 0.0110032568 0.0243137926 0.0279227700 #>  [666] 0.0286154654 0.0243209321 0.0268360581 0.0365936309 0.0450280122 #>  [671] 0.0410379320 0.0457723550 0.0525442734 0.0878148004 0.1755359918 #>  [676] 0.1315496862 0.1219191626 0.1258421093 0.0901167467 0.0583897009 #>  [681] 0.0478688851 0.0484418869 0.0882218331 0.1718162000 0.2040308416 #>  [686] 0.2175272852 0.0918946788 0.0938119665 0.1380833387 0.1887930930 #>  [691] 0.0649955422 0.0561090261 0.0098329959 0.0757685825 0.0638995171 #>  [696] 0.1269351244 0.1297207773 0.0905801058 0.0810666978 0.0879300013 #>  [701] 0.0692481399 0.0619625635 0.1303406358 0.0403560102 0.0849367082 #>  [706] 0.0388359278 0.0225707013 0.0407640822 0.0266913809 0.0136984261 #>  [711] 0.0123969549 0.0207890589 0.0321962386 0.0431319401 0.0164746698 #>  [716] 0.0192194041 0.0388109349 0.0201204736 0.0521922223 0.0594569556 #>  [721] 0.1556346267 0.0945015624 0.0379464030 0.0672830939 0.1165169850 #>  [726] 0.0759158954 0.0205515027 0.0927462131 0.0229203478 0.0539245792 #>  [731] 0.0914307982 0.1293734908 0.1880959868 0.0492210276 0.1855493635 #>  [736] 0.0930407047 0.0730930641 0.0189799462 0.0190348811 0.1256621182 #>  [741] 0.0446504243 0.1346199363 0.1584043354 0.1983850300 0.5283571482 #>  [746] 0.3500344157 0.3311980367 0.2960319221 0.3460907638 0.2350499183 #>  [751] 0.4724381566 0.5147007108 0.3743324280 0.2079627365 0.0790042654 #>  [756] 0.0303316340 0.0295766089 0.0109388623 0.0689866021 0.1055736467 #>  [761] 0.1157157570 0.1061775610 0.0915380642 0.1264691651 0.0555301271 #>  [766] 0.0395904295 0.0543127917 0.1862703264 0.1502327621 0.0625038743 #>  [771] 0.1037497669 0.0879440457 0.0271753911 0.0654001832 0.1044986174 #>  [776] 0.0684885904 0.0695647448 0.0970866010 0.0981008559 0.1199577153 #>  [781] 0.1223065630 0.0639059320 0.0329870135 0.0583426617 0.0535522550 #>  [786] 0.0418092050 0.0464429185 0.0432602428 0.0457518101 0.0430185646 #>  [791] 0.0214543305 0.0151283517 0.0214569382 0.0119344173 0.0149057582 #>  [796] 0.0054287803 0.0273543335 0.0027861884 0.0091047678 0.0109421527 #>  [801] 0.0136456471 0.0190782901 0.0187435392 0.0160417501 0.0071255746 #>  [806] 0.0250566788 0.0352879502 0.0129766045 0.0062859966 0.0035158743 #>  [811] 0.0029867189 0.0133560933 0.0218533482 0.0097778169 0.0559198335 #>  [816] 0.0596838444 0.0755769238 0.0790193826 0.0840936080 0.0980586484 #>  [821] 0.1484297961 0.2168836445 0.2552287579 0.1983843446 0.0800886601 #>  [826] 0.0399781168 0.0732308999 0.1125968024 0.1570539474 0.2423358113 #>  [831] 0.2292614430 0.0807036087 0.0866681337 0.1129006147 0.1114818230 #>  [836] 0.1814897507 0.1286660880 0.0585539080 0.1741149724 0.1208198369 #>  [841] 0.0610098541 0.0413789339 0.0793036819 0.0466560461 0.1061728299 #>  [846] 0.0500800498 0.0080970228 0.0108479727 0.0071182065 0.0139976004 #>  [851] 0.0189400651 0.0457264893 0.0616535842 0.0280605983 0.0193202421 #>  [856] 0.0352965407 0.0503461547 0.0405243970 0.0520431139 0.0509372801 #>  [861] 0.0306648631 0.0830140486 0.0840788037 0.1044042110 0.1306293458 #>  [866] 0.0945553184 0.0406140462 0.0538896807 0.0539072901 0.0506805964 #>  [871] 0.0526839197 0.0905220658 0.1169506013 0.1493184268 0.1818176806 #>  [876] 0.1679319590 0.1548023820 0.0900629014 0.0176497698 0.0491948314 #>  [881] 0.1180319041 0.1021237001 0.0535201505 0.0650663599 0.1215883270 #>  [886] 0.0936350599 0.0671161264 0.0651736930 0.0847171396 0.0883717015 #>  [891] 0.0796964243 0.0526314676 0.0589385554 0.0771416575 0.0872695148 #>  [896] 0.0717671067 0.0277418718 0.0176725425 0.0113714887 0.0310930740 #>  [901] 0.0314835384 0.0610109940 0.0734545439 0.0547189116 0.1001740694 #>  [906] 0.1044442579 0.0731158555 0.0431135558 0.0462991334 0.0467309542 #>  [911] 0.1029257402 0.0877112970 0.0357902795 0.0214099810 0.0351204723 #>  [916] 0.0958105773 0.0955728814 0.1220777184 0.1209249422 0.1538045704 #>  [921] 0.2380515933 0.1661169231 0.1327183545 0.1029154137 0.0688046291 #>  [926] 0.0319273919 0.0522788800 0.0980730280 0.0904437378 0.0326727852 #>  [931] 0.0317080170 0.0670722499 0.0831488371 0.0496376492 0.0356440172 #>  [936] 0.0287718140 0.0222920440 0.0474829413 0.0074067311 0.0503577888 #>  [941] 0.0443926193 0.0314556584 0.0235192291 0.0238247477 0.0129030328 #>  [946] 0.0092553794 0.0161449108 0.0398669057 0.0554281697 0.0191613548 #>  [951] 0.0268531907 0.0176136233 0.0044757193 0.0124858618 0.0286173038 #>  [956] 0.0556576848 0.0631521791 0.1151524559 0.1029933244 0.0948923007 #>  [961] 0.1314801723 0.1316948980 0.0414825678 0.0601161905 0.0432752110 #>  [966] 0.0853747129 0.1013670415 0.0639496073 0.1297430545 0.0737072527 #>  [971] 0.0369279161 0.0789639056 0.0212133043 0.0656400993 0.1316538751 #>  [976] 0.1059781611 0.0880407691 0.4121043384 0.3842740357 0.4114219844 #>  [981] 0.2170060724 0.1342205107 0.1174816862 0.0807266757 0.0117702000 #>  [986] 0.0301267654 0.0503016077 0.1308168769 0.0587276295 0.1011762992 #>  [991] 0.0714375153 0.0858561173 0.1195535585 0.0413009450 0.0798520595 #>  [996] 0.0370233096 0.0371803679 0.0927155688 0.1020212695 0.1003061906 #> [1001] 0.0234255642 0.0245010369 0.0216421336 0.0731535628 0.0631623864 #> [1006] 0.0581456758 0.0567037612 0.0465345196 0.0682062432 0.1447313875 #> [1011] 0.1590026915 0.1035628244 0.1307946444 0.0658773184 0.0938203260 #> [1016] 0.0679743141 0.0408860520 0.0306301247 0.0423741527 0.0572355650 #> [1021] 0.1036615223 0.1024096161 0.0466966592 0.1332047433 0.1098364070 #> [1026] 0.1937033087 0.1086527407 0.0686612427 0.0531821847 0.0277962107 #> [1031] 0.0112462817 0.0131890438 0.1029248089 0.0753906891 0.0652251318 #> [1036] 0.1186062247 0.1246128008 0.0770083442 0.1379555017 0.1832702011 #> [1041] 0.3245232701 0.4254061282 0.3825773895 0.3229854703 0.3722718358 #> [1046] 0.2898636758 0.0906548575 0.1103925481 0.0904833972 0.4409379959 #> [1051] 0.6605655551 0.8968333602 0.6149687171 0.5745067596 0.2326349467 #> [1056] 0.2098317146 0.2751151323 0.3018023372 0.6730175614 0.6628956795 #> [1061] 0.5303667188 0.3391241133 0.3377876878 0.3382983506 0.2082029730 #> [1066] 0.3803748190 0.3054890335 0.2110813856 0.2149626464 0.1326006949 #> [1071] 0.0567647219 0.1725740582 0.1281815022 0.1420613378 0.1902947873 #> [1076] 0.2777331471 0.5338345170 0.9235289097 1.1012482643 0.6150453687 #> [1081] 0.5330970287 0.2374735624 0.2217849642 0.1793452650 0.1395349801 #> [1086] 0.2649817765 0.3206850290 0.2923012376 0.3520902097 0.5069472194 #> [1091] 0.6432986259 0.2575120032 0.2394819558 0.1000764817 0.2594559193 #> [1096] 0.1344223469 0.1806507409 0.3391052186 0.8266431093 0.9080389738 #> [1101] 1.0399339199 1.0421922207 0.5739264488 0.2313811779 0.1614480019 #> [1106] 0.5349500179 0.4675980508 0.5581263900 0.4116497338 0.6502889395 #> [1111] 0.7795227170 1.3824981451 1.1829606295 1.4400981665 0.5644205213 #> [1116] 0.0724556074 0.1682794243 0.1965961307 0.1984461695 0.1054545119 #> [1121] 0.1216274053 0.1219253466 0.1166466251 0.0513977222 0.0264459029 #> [1126] 0.1260671318 0.1373162568 0.3021984100 0.1268220991 0.3027326465 #> [1131] 0.2684077322 0.0384617075 0.1489485502 0.1700875759 0.1478445977 #> [1136] 0.0987925977 0.0595783815 0.1548688710 0.1006138027 0.0579250157 #> [1141] 0.1055446491 0.0425462686 0.0162017047 0.0335753411 0.0437599868 #> [1146] 0.0355210938 0.0306546222 0.0468580946 0.0808047578 0.0436977595 #> [1151] 0.0722957030 0.0273464639 0.0349131189 0.1085697636 0.0639281720 #> [1156] 0.0178269185 0.0667596385 0.0593390651 0.0487964153 0.0435237288 #> [1161] 0.0348859839 0.0506502427 0.0301743280 0.0367345810 0.0352781117 #> [1166] 0.0381117240 0.0235302020 0.0304657370 0.0421535000 0.0285819229 #> [1171] 0.1203894988 0.0733367503 0.0594965816 0.0381226577 0.1316151023 #> [1176] 0.0839349329 0.0423756577 0.0361492485 0.0872437209 0.0345309116 #> [1181] 0.0327502824 0.0746676475 0.1900020242 0.0412877351 0.1631383002 #> [1186] 0.0578200258 0.0836323574 0.0799318478 0.0888435468 0.0732083693 #> [1191] 0.1696729660 0.1210968122 0.0307082273 0.0567994975 0.1432116181 #> [1196] 0.1508095115 0.1060485095 0.1255693287 0.1431563199 0.2047746032 #> [1201] 0.0875578895 0.1294863522 0.0833602697 0.0668761656 0.0392939635 #> [1206] 0.0469610654 0.0461682454 0.1049885824 0.0529123433 0.0576752424 #> [1211] 0.0368986279 0.0653557554 0.0866658017 0.0833716094 0.0863808915 #> [1216] 0.1107987016 0.1079109311 0.0884821638 0.0295905340 0.0458484739 #> [1221] 0.1004873440 0.0926081985 0.5874388218 0.7419493794 0.2777239680 #> [1226] 0.6237058043 0.4209456444 0.3689679801 0.2559196651 0.1960227489 #> [1231] 0.1731162369 0.1434874386 0.2673328519 0.1211419776 0.1202593893 #> [1236] 0.0767694041 0.0588864759 0.1396415234 0.1292105615 0.1315120608 #> [1241] 0.1011824831 0.0436555706 0.0969294459 0.6472977400 0.6203532815 #> [1246] 0.1199378818 0.1178013533 0.0869532228 0.2768846452 0.2000786215 #> [1251] 0.0963281468 0.1478486657 0.1063538864 0.1571259201 0.1191207021 #> [1256] 0.1174994111 0.1247453764 0.0937038139 0.1699225157 0.0640860200 #> [1261] 0.0240474604 0.0813391805 0.2089259923 0.1491368562 0.2102271020 #> [1266] 0.0390756167 0.0949626192 0.1357992738 0.0847229883 0.1046775430 #> [1271] 0.0824073851 0.0824049264 0.1108008102 0.0597699545 0.0595178828 #> [1276] 0.1156513393 0.2501069009 0.2574637532 0.2156045586 0.2391317040 #> [1281] 0.1439321637 0.1006319448 0.0442481227 0.2157309800 0.3781290054 #> [1286] 0.2785458267 0.1995438933 0.2245149463 0.2005980462 0.1647580415 #> [1291] 0.0951724797 0.4068013430 0.3850897849 0.0806721374 0.0504511110 #> [1296] 0.0255112760 0.0883185640 0.0443739444 0.0585500300 0.0558884107 #> [1301] 0.0479316190 0.0587849356 0.0818568021 0.0875688642 0.0794488862 #> [1306] 0.0696042255 0.0969215930 0.1021484807 0.1725162715 0.1791365296 #> [1311] 0.1784827411 0.1106855050 0.0908561498 0.1183750406 0.1375729144 #> [1316] 0.2094703168 0.1967593580 0.1527041048 0.1091863960 0.1911639571 #> [1321] 0.2283957005 0.1250001937 0.0966353342 0.1410705894 0.0509714745 #> [1326] 0.0782876983 0.0558182150 0.0258187167 0.0536257066 0.0536523946 #> [1331] 0.0406588763 0.5713742375 0.1670689434 0.6579375267 0.5381323695 #> [1336] 0.3283026814 0.1617913693 0.0496787950 0.0696100369 0.0741786510 #> [1341] 0.0640746877 0.0127554582 0.0177455284 0.0622268021 0.0499885567 #> [1346] 0.1180862933 0.1169687063 0.1126980707 0.1082519740 0.0537643395 #> [1351] 0.0433614254 0.0623679832 0.0817181170 0.0646237284 0.0699830800 #> [1356] 0.0595269650 0.0481285341 0.0909969360 0.1287372708 0.0658007413 #> [1361] 0.0107663106 0.0212300830 0.0214826949 0.0243448429 0.0372461490 #> [1366] 0.0640133172 0.0905337036 0.0431494303 0.0263559408 0.0534319952 #> [1371] 0.0434158370 0.0332583487 0.0354061499 0.0508807115 0.0424844660 #> [1376] 0.0416016355 0.0235585850 0.0185515117 0.0435202345 0.0613630638 #> [1381] 0.0346328244 0.0299728885 0.0368255898 0.0107597336 0.0328587033 #> [1386] 0.0619464144 0.0809132978 0.1124576107 0.0706729963 0.0355831534 #> [1391] 0.0816899911 0.1417523921 0.1236516163 0.0828601792 0.1202788576 #> [1396] 0.0866850019 0.1094541848 0.2602827847 0.3446148634 0.1414234936 #> [1401] 0.1293985546 0.1807804704 0.1716172099 0.1903376281 0.2293060273 #> [1406] 0.2458481044 0.2005470246 0.0466747321 0.1479198337 0.1544656008 #> [1411] 0.1304513961 0.1446474046 0.0425797626 0.1528665721 0.1079469621 #> [1416] 0.1652139276 0.2250134349 0.0915888771 0.2004779577 0.0788028017 #> [1421] 0.0346699394 0.0692630038 0.0249758773 0.0419730321 0.0267208461 #> [1426] 0.0780326054 0.0376112424 0.0892985985 0.0989896953 0.0825993940 #> [1431] 0.0744309947 0.0712545961 0.1244198158 0.0552833043 0.2112939358 #> [1436] 0.2199923545 0.1415779740 0.1040687114 0.1397389174 0.1441341192 #> [1441] 0.0408010967 0.0422248580 0.0542782955 0.0526709110 0.0363987200 #> [1446] 0.0336251371 0.0427371599 0.1032251790 0.1273722351 0.0490259975 #> [1451] 0.0688051656 0.0954247490 0.1735005230 0.0982707813 0.0763419643 #> [1456] 0.1471167356 0.1167597696 0.0854247659 0.0480897650 0.3080596924 #> [1461] 0.0974016190 0.7495489717 0.6115729809 0.2948530316 0.2382341176 #> [1466] 0.1847213805 0.0968915224 0.1139605120 0.0647156462 0.0961002931 #> [1471] 0.0690778643 0.1239300147 0.0942285061 0.1913839877 0.1541409940 #> [1476] 0.0985710025 0.1161409616 0.1267458647 0.1286033392 0.0530927591 #> [1481] 0.0630212277 0.0423540622 0.0822492242 0.1142455190 0.1000334993 #> [1486] 0.0228128806 0.0706826672 0.0317582712 0.1091916785 0.0815997720 #> [1491] 0.0783232301 0.1738317907 0.1020044535 0.0426983461 0.0349036716 #> [1496] 0.0575024076 0.0277371425 0.0468510576 0.0138889430 0.0511028767 #> [1501] 0.0749643296 0.3246618211 0.2570304871 0.2007616311 0.1403256953 #> [1506] 0.1244184151 0.1337500066 0.0178085361 0.1230293289 0.0730101168 #> [1511] 0.1430738866 0.0999432057 0.0853023902 0.1077996343 0.0838584900 #> [1516] 0.0497758128 0.0939177573 0.1288152933 0.0427927263 0.0594393052 #> [1521] 0.1484345645 0.0417444371 0.2878220975 0.2674542964 0.0277364124 #> [1526] 0.0543400533 0.0243254248 0.0679679513 0.0659668818 0.0877299011 #> [1531] 0.0712457523 0.0549955666 0.1210312545 0.1282299310 0.1128504276 #> [1536] 0.1862318814 0.0651751906 0.1805805862 0.1466262490 0.1186958775 #> [1541] 0.1505114436 0.1197045520 0.1124046445 0.1249363348 0.1203069091 #> [1546] 0.0549703129 0.0534854718 0.1262446642 0.1524112970 0.0679556131 #> [1551] 0.1103049815 0.3535667956 0.4387135506 0.3394165039 0.3009642065 #> [1556] 0.0901384577 0.1264878064 0.1989196539 0.1915335506 0.1795172095 #> [1561] 0.2101578861 0.1478512734 0.1446213573 0.1332401335 0.3341519237 #> [1566] 0.3662908971 0.7451496124 0.3830716014 0.2948254645 0.1176594719 #> [1571] 0.1276781410 0.1296640188 0.0533915311 0.0136698624 0.0297884438 #> [1576] 0.0912395045 0.1805892587 0.3112912774 0.1476819664 0.1367623657 #> [1581] 0.0559582040 0.0220560599 0.0467136540 0.0235035829 0.0110199181 #> [1586] 0.0141860060 0.0063525164 0.0111755617 0.0067725005 0.0127628781 #> [1591] 0.0157599021 0.0056866109 0.0031526037 0.0224332474 0.0781087950 #> [1596] 0.0400389396 0.0491408855 0.0312835611 0.0228492003 0.0396220945 #> [1601] 0.1039697975 0.0475815795 0.1356997788 0.1067416593 0.0288015641 #> [1606] 0.0480222665 0.0426373705 0.0874411464 0.0594593585 0.1036061943 #> [1611] 0.0523483753 0.1063740999 0.0360494219 0.0845247731 0.0478206985 #> [1616] 0.2312172800 0.1409539729 0.1141664386 0.0586127639 0.0305866189 #> [1621] 0.0762115866 0.0380244665 0.0488408133 0.0878360346 0.0499922782 #> [1626] 0.0343254842 0.0719347522 0.0750852972 0.0708793998 0.0892778859 #> [1631] 0.0682585314 0.1076190993 0.1344473660 0.0545320921 0.0629311129 #> [1636] 0.2169729173 0.4067984223 0.0752984732 0.1696121246 0.0429034866 #> [1641] 0.1303747594 0.0457665958 0.0317216441 0.0258257613 0.0817620009 #> [1646] 0.0783504322 0.0533582233 0.0715106428 0.1235477105 0.0867707133 #> [1651] 0.1025031954 0.0955420136 0.1018164754 0.1197419763 0.1225156114 #> [1656] 0.1134864762 0.1002312973 0.0415049009 0.0115350997 0.0549187846 #> [1661] 0.0665766448 0.1104453951 0.1240792349 0.0348856486 0.0742310509 #> [1666] 0.0940531567 0.1010009125 0.1158842966 0.0684507191 0.1130238920 #> [1671] 0.1165736169 0.0754199624 0.0841178447 0.0284596346 0.1355812997 #> [1676] 0.0493539721 0.0518828593 0.1065580845 0.0417479761 0.1135923266 #> [1681] 0.0356892608 0.0570410863 0.0940254703 0.1712731719 0.2041006684 #> [1686] 0.0754856691 0.1558364630 0.1267094314 0.1952514201 0.1124024689 #> [1691] 0.1577743590 0.1342915446 0.1203967854 0.1012001038 0.2355436683 #> [1696] 0.2354587764 0.1573719531 0.1105914786 0.0728746876 0.0661848858 #> [1701] 0.0204405393 0.1630284041 0.1118739247 0.1749292761 0.1130858287 #> [1706] 0.1640536934 0.1126592457 0.1628082991 0.2922579646 0.4593909383 #> [1711] 0.4182276130 0.5748504400 0.4816036820 0.2159737051 0.2456922680 #> [1716] 0.0918124691 0.1312843710 0.1808101237 0.1338692307 0.0741481408 #> [1721] 0.1369881779 0.1284694970 0.1224917695 0.1297176480 0.1716561615 #> [1726] 0.1256251633 0.1567750126 0.1266782433 0.0895485505 0.3803250492 #> [1731] 0.1749624312 0.0419116318 0.0983748063 0.0328461640 0.0378621034 #> [1736] 0.0101353498 0.0299194027 0.0523183160 0.0440848880 0.0373470001 #> [1741] 0.0700668246 0.1791042387 0.2677263319 0.3591649234 0.2567684352 #> [1746] 0.1605704427 0.0818294063 0.2397505045 0.1624770761 0.1313980073 #> [1751] 0.0967116132 0.0539371334 0.3218153119 0.4362243414 0.1490705311 #> [1756] 0.0948019773 0.0564594790 0.0453919396 0.0972471833 0.0948751643 #> [1761] 0.0228584930 0.0048030610 0.0613261126 0.0625004470 0.0352947637 #> [1766] 0.2360146493 0.2897316813 0.7573249936 0.7483994961 0.6821266413 #> [1771] 0.6271755695 0.4698556662 0.3470868170 0.2338846326 0.2094976753 #> [1776] 0.1254085749 0.1438975930 0.0498741791 0.0234629903 0.0383714251 #> [1781] 0.0411970653 0.0203768052 0.0361748263 0.0174240749 0.0163902249 #> [1786] 0.0720583498 0.0160272811 0.0449685007 0.0863329023 0.1316115111 #> [1791] 0.0507923588 0.1404441297 0.0857172459 0.1002935097 0.1350022554 #> [1796] 0.0719465837 0.1756306142 0.1760476530 0.1159612834 0.1951749921 #> [1801] 0.0404663868 0.0908953771 0.0747157633 0.0694891661 0.1398837715 #> [1806] 0.0222895332 0.1335879713 0.0730317831 0.0940569937 0.0501092188 #> [1811] 0.1988251954 0.1596672684 0.1539916545 0.1779610515 0.2091606259 #> [1816] 0.1124673039 0.0255405866 0.0904085264 0.0843818411 0.0999198630 #> [1821] 0.1086140946 0.1749136299 0.1467884034 0.0803670585 0.2220115811 #> [1826] 0.0963199064 0.2171640694 0.0947583541 0.1511103958 0.1433278322 #> [1831] 0.1261973977 0.2169876546 0.0600012839 0.2550320327 0.4122861326 #> [1836] 0.2710799575 0.2045672536 0.0885915309 0.1500333399 0.1433126479 #> [1841] 0.1443534046 0.2512716353 0.2217306197 0.2527845204 0.1859780699 #> [1846] 0.1126477048 0.1449615955 0.0839875862 0.0295833033 0.0447900183 #> [1851] 0.0537236258 0.0321302414 0.1040182561 0.0883658305 0.0421344191 #> [1856] 0.0790728852 0.1149471477 0.1298591197 0.1814245880 0.1498849839 #> [1861] 0.4692614079 0.2446892411 0.5608710647 0.5019389987 0.2179811895 #> [1866] 0.1704995036 0.1384580731 0.1404232383 0.1748600900 0.2188246995 #> [1871] 0.2048734277 0.1468569338 0.1505161226 0.0346712247 0.0344106629 #> [1876] 0.0200701356 0.0756645724 0.0808669031 0.1092505008 0.0520875119 #> [1881] 0.0655182973 0.0603047349 0.0883770138 0.0311414171 0.0898379982 #> [1886] 0.1069716662 0.1916746050 0.3099321425 0.4840646684 0.1977405548 #> [1891] 0.1269018650 0.0709653422 0.1197638884 0.0808288008 0.2139518559 #> [1896] 0.1769135445 0.2201006413 0.2549075484 0.1399991065 0.1552025676 #> [1901] 0.1257374138 0.0919229612 0.0573593155 0.0841172934 0.0485916957 #> [1906] 0.1054972708 0.1023958102 0.1605177522 0.2488353848 0.1432480067 #> [1911] 0.2473829687 0.1020598039 0.0982523710 0.0268550012 0.0947355554 #> [1916] 0.1138704717 0.1044875011 0.1287719160 0.1424616724 0.0546165407 #> [1921] 0.0743643865 0.0523766838 0.0256475508 0.1087883860 0.0433588512 #> [1926] 0.0381327905 0.0457198955 0.1577769220 0.2353615016 0.1538514346 #> [1931] 0.1432944983 0.0501646772 0.0830263048 0.1145163253 0.2108373940 #> [1936] 0.1565144956 0.1760112345 0.1118387580 0.1755504459 0.1404709220 #> [1941] 0.1471342742 0.0805671737 0.0522469245 0.1197661832 0.1585073024 #> [1946] 0.1975156367 0.1464054585 0.1410088986 0.1285915226 0.1044508442 #> [1951] 0.1056157127 0.1044610590 0.1198305711 0.0566939227 0.1555769891 #> [1956] 0.1076485813 0.0783213824 0.1188561469 0.1001961380 0.0853288919 #> [1961] 0.0912641138 0.1010716781 0.0500710011 0.0199600551 0.0095036505 #> [1966] 0.0039456715 0.0279411040 0.0614033751 0.0554117188 0.0122653348 #> [1971] 0.0393835641 0.1522016972 0.0615524016 0.0779836401 0.0589356050 #> [1976] 0.0752145126 0.0927729756 0.0933892801 0.0570335202 0.0336849801 #> [1981] 0.0549079478 0.0473422967 0.0420688950 0.0590859018 0.1150319502 #> [1986] 0.0510841608 0.0429655537 0.0295650102 0.0494446121 0.0361714028 #> [1991] 0.1182885841 0.1038873941 0.1201714724 0.4059635103 0.2718683183 #> [1996] 0.6457464695 0.1795724481 0.4824625850 0.2163640261 0.1438414007 #> [2001] 0.0225998238 0.0255611632 0.0457766987 0.0317972712 0.0331025086 #> [2006] 0.0164452642 0.1184036061 0.0394040719 0.0606086291 0.1306043863 #> [2011] 0.0683286339 0.0277753994 0.0473627523 0.0509378165 0.0282597449 #> [2016] 0.0405155122 0.0199176036 0.0663473383 0.0546000488 0.0598327480 #> [2021] 0.0389480963 0.0450776443 0.0682098418 0.1535627693 0.0606411137 #> [2026] 0.1058585122 0.0215406269 0.0277982913 0.0732491836 0.0315859504 #> [2031] 0.0157353207 0.0752221942 0.0316355750 0.0875161961 0.0294340514 #> [2036] 0.0711689144 0.0406753086 0.0306339562 0.0392910466 0.0099671269 #> [2041] 0.0423549227 0.1684961021 0.0493704341 0.1239905134 0.0678431913 #> [2046] 0.0620728768 0.0348522961 0.0839689896 0.1073774546 0.0502351522 #> [2051] 0.0287036020 0.0182137880 0.0171182305 0.0344462991 0.0296473950 #> [2056] 0.0726133361 0.0339343995 0.0441928171 0.0176851209 0.0439819209 #> [2061] 0.0498737805 0.0438984595 0.0284435935 0.1077158377 0.0590794757 #> [2066] 0.0341127478 0.0485561751 0.0354003534 0.0284489989 0.0454093106 #> [2071] 0.0732346773 0.0719990432 0.0616025701 0.0271562319 0.0418347195 #> [2076] 0.0236281529 0.0323794931 0.0561381951 0.0703481361 0.0467726178 #> [2081] 0.0364809036 0.0476822183 0.0159761701 0.0355266482 0.0177176334 #> [2086] 0.0296449419 0.0315991230 0.0469105728 0.0414659753 0.0272624660 #> [2091] 0.0202427730 0.0136666633 0.0448599234 0.0340767764 0.0211856384 #> [2096] 0.0892916545 0.0600961223 0.0451940633 0.2171154469 0.1054827943 #> [2101] 0.1505088210 0.0922702849 0.0521560498 0.0691720396 0.1259431243 #> [2106] 0.0364986472 0.0896954387 0.0509362929 0.0375817828 0.0672074482 #> [2111] 0.0262916069 0.0198725928 0.0516321585 0.0254957099 0.0256874561 #> [2116] 0.0590184703 0.0564371273 0.0656123757 0.0308784470 0.0233585518 #> [2121] 0.0408426151 0.0368622392 0.0576481745 0.0531116948 0.0535761714 #> [2126] 0.0371146053 0.0341342539 0.0605408251 0.0576861016 0.0892049670 #> [2131] 0.0676087365 0.1527904868 0.1261528879 0.0367977619 0.0850198418 #> [2136] 0.1068976894 0.0535215847 0.0400743149 0.0262504891 0.0867658406 #> [2141] 0.1013873294 0.0489173271 0.0399073102 0.0402734354 0.0540436544 #> [2146] 0.0676370561 0.0547100455 0.0600100271 0.0351215117 0.0466453284 #> [2151] 0.0820538178 0.1216387153 0.0608644746 0.0587327778 0.0500806421 #> [2156] 0.0722299069 0.0861054584 0.0446060337 0.0291171633 0.0407816283 #> [2161] 0.0640031695 0.0630401745 0.0567793511 0.0633648187 0.0459311642 #> [2166] 0.1009075418 0.1021329388 0.0643285215 0.0369436704 0.0915979594 #> [2171] 0.0988038406 0.0511256158 0.0407466590 0.0231601708 0.0624857172 #> [2176] 0.0971136019 0.0529759414 0.0421173014 0.0248393472 0.0521241240 #> [2181] 0.0894879475 0.0951763093 0.0494720973 0.0407937765 0.0476618148 #> [2186] 0.0694091544 0.0885268003 0.0606659874 0.0350704528 0.0646616369 #> [2191] 0.0888427049 0.0845492557 0.0447917394 0.0411358736 0.0535984822 #> [2196] 0.0720674992 0.0894402117 0.0537298955 0.0433489569 0.0466022380 #> [2201] 0.0907085687 0.1273356974 0.0395003408 0.1094387099 0.0974965245 #> [2206] 0.0735428929 0.0436158739 0.0498220474 0.1099763215 0.0886993855 #> [2211] 0.0623414293 0.0372876748 0.0836554393 0.1161435843 0.1058745757 #> [2216] 0.0488800593 0.1219453290 0.1199644729 0.0639615431 0.0593614466 #> [2221] 0.1212490723 0.1081047580 0.0473854430 0.0488967672 0.0715292990 #> [2226] 0.0846212432 0.0905183405 0.0507051125 0.1288578212 0.1327315271 #> [2231] 0.0509503856 0.0384762026 0.0637293905 0.1000171155 0.0980656743 #> [2236] 0.0409786105 0.0616134852 0.1034311950 0.1199247316 0.0475628339 #> [2241] 0.0761780515 0.0942304283 0.0903645158 0.0716750845 0.0880492330 #> [2246] 0.1436938047 0.0922663137 0.0483174026 0.1024697348 0.0964970067 #> [2251] 0.0831482634 0.0381895900 0.0687844008 0.0995558128 0.0641357824 #> [2256] 0.0505557805 0.0392899513 0.0611183718 0.1056942865 0.1024571508 #> [2261] 0.0543560609 0.0724455863 0.1067033485 0.0995139033 0.0483474359 #> [2266] 0.0612267964 0.0876675770 0.0871594846 0.0649825931 0.0424977466 #> [2271] 0.0571085438 0.0987730175 0.0977295786 0.0580229126 0.0640099049 #> [2276] 0.1044498980 0.1070750281 0.0631883368 0.0340960249 0.0987220705 #> [2281] 0.0852179900 0.0592876114 0.0346383266 0.0243271049 0.0405134708 #> [2286] 0.0504366532 0.0905551091 0.0932314545 0.0434541516 0.1269591153 #> [2291] 0.1319246143 0.0557417534 0.0977813080 0.1481797546 0.0771495625 #> [2296] 0.0537727736 0.1320807338 0.1224620789 0.0449006446 0.0519967861 #> [2301] 0.0924635977 0.0787911490 0.0679528117 0.0363451801 0.0998488218 #> [2306] 0.1477882266 0.0834556818 0.0529646985 0.1362974644 0.1139364988 #> [2311] 0.0506978668 0.0833631903 0.1443692893 0.0978834108 0.0460363030 #> [2316] 0.1007263884 0.1281853616 0.0818199292 0.0672356710 0.1293568313 #> [2321] 0.1100918874 0.0523777939 0.0592660457 0.1295319945 0.1228068620 #> [2326] 0.0456046090 0.0932663456 0.1386672109 0.0950528756 0.0580628663 #> [2331] 0.1473426670 0.1213751733 0.0413135923 0.0924524292 0.1203917190 #> [2336] 0.0994782373 0.0442746095 0.0912080705 0.1269270778 0.1052366272 #> [2341] 0.0557503961 0.1352305561 0.0953072309 0.0717147663 0.0429496355 #> [2346] 0.1406213045 0.1320744455 0.0457730554 0.1488588750 0.1367399991 #> [2351] 0.0489136241 0.1102783084 0.1351408362 0.0795262679 0.1239582151 #> [2356] 0.1735692471 0.0527059473 0.0835563242 0.1424016356 0.1134562790 #> [2361] 0.0728911161 0.1680901796 0.0979915932 0.0468292981 0.1167450100 #> [2366] 0.1305528283 0.0679474473 0.0957878903 0.1510231048 0.0840014890 #> [2371] 0.0682314485 0.0530983955 0.1036385074 0.0574215017 0.0968133062 #> [2376] 0.0354945473 0.0965039432 0.0931137055 0.1109826863 0.0773449093 #> [2381] 0.0468453318 0.1847951859 0.0881231427 0.1267471164 0.1435596496 #> [2386] 0.0627610162 0.1048211381 0.1779574454 0.0682261810 0.1423808932 #> [2391] 0.1426967978 0.0518951304 0.1086863279 0.1601665169 0.0457474776 #> [2396] 0.1512335390 0.1373913288 0.0744814724 0.1278373152 0.0419457220 #> [2401] 0.0726459473 0.0491580851 0.0683204681 0.0151975919 0.0773932785 #> [2406] 0.0375016741 0.1071993932 0.0322807580 0.0577015094 0.0431343317 #> [2411] 0.1064293832 0.0787463039 0.0526471175 0.1178534850 0.1186567917 #> [2416] 0.0430145487 0.1163692251 0.1152698025 0.0776848197 0.0585337169 #> [2421] 0.1571265757 0.1127639562 0.0823054612 0.1732164621 0.0793237910 #> [2426] 0.0868427604 0.0647944286 0.0902037546 0.0488095954 0.1185325086 #> [2431] 0.0505190156 0.1100173518 0.0878782272 0.1206103191 0.0788085759 #> [2436] 0.0428343266 0.0262238774 0.0993509367 0.0789753422 0.1035894901 #> [2441] 0.0382867046 0.1410408467 0.0545681864 0.1363497227 0.1512898654 #> [2446] 0.0547241941 0.1091863513 0.1585625708 0.0531432778 0.1411585212 #> [2451] 0.1526060253 0.0694372356 0.1705435365 0.0854786783 0.1380809993 #> [2456] 0.1549311578 0.0555510297 0.1743958741 0.1020609215 0.0760536939 #> [2461] 0.1769305617 0.0741310716 0.1510702521 0.1322782189 0.1095445454 #> [2466] 0.1487885565 0.0730960593 0.1573955417 0.0389978252 0.1528111994 #> [2471] 0.1574570984 0.0845993534 0.2029554397 0.0872783661 0.1295862347 #> [2476] 0.1711759120 0.0640293211 0.1683298796 0.0889684707 0.1567943096 #> [2481] 0.1255111545 0.1063680723 0.1563684493 0.0613149144 0.1086607054 #> [2486] 0.1375507712 0.0792335719 0.0806705579 0.1752669960 0.0558383316 #> [2491] 0.1726325005 0.1155457795 0.0941017792 0.1839911342 0.0704256371 #> [2496] 0.0808334276 0.1521088928 0.1032536253 0.0739247277 0.1594164521 #> [2501] 0.0866079479 0.1418643892 0.1264657676 0.1013865396 0.1659802794 #> [2506] 0.0584080443 0.1726446748 0.0525780879 0.1518553793 0.0914358273 #> [2511] 0.1498407274 0.1270827502 0.0337249339 0.1616026908 0.1109571829 #> [2516] 0.0602341965 0.1887801141 0.0316191502 0.1003608778 0.0226616543 #> [2521] 0.0323564894 0.1541157067 0.0300837196 0.1064977869 0.0182596445 #> [2526] 0.0178599823 0.1333363503 0.1915144920 0.0390356034 0.0325705186 #> [2531] 0.0438548177 0.0275972858 0.0215568915 0.0132146124 0.0179056935 #> [2536] 0.0324834362 0.0374088399 0.0273145828 0.0161459595 0.0561687052 #> [2541] 0.0324806422 0.1302348375 0.0605018027 0.1133308560 0.0394728854 #> [2546] 0.0676214471 0.1244983152 0.0717468187 0.0859371126 0.0297718570 #> [2551] 0.0508929230 0.1377072334 0.0453282893 0.0866863877 0.0114724375 #> [2556] 0.0133862114 0.0139042726 0.0281783342 0.0504098497 0.1399689317 #> [2561] 0.0455694646 0.0731256902 0.0151502369 0.0228252336 0.0307087749 #> [2566] 0.0144165298 0.0381692238 0.0768626556 0.1586784869 0.0251360703 #> [2571] 0.0553414337 0.0325490199 0.0322344638 0.0379898362 0.0325338244 #> [2576] 0.0224107560 0.0112121431 0.0156607162 0.0338564999 0.0573757477 #> [2581] 0.0461368114 0.0398749560 0.0495960712 0.0704106390 0.1019060016 #> [2586] 0.0999899060 0.1106997505 0.1036167592 0.0321326740 0.1646875739 #> [2591] 0.1232316196 0.0610716715 0.0300852284 0.0335752778 0.0481804684 #> [2596] 0.0710956678 0.0391693451 0.1339530498 0.0341120474 0.1231145635 #> [2601] 0.0534790903 0.0423936844 0.1111329347 0.0769815221 0.1213766783 #> [2606] 0.0907525420 0.0255394746 0.1212349832 0.0430961773 0.1432404816 #> [2611] 0.0630349666 0.0889361277 0.0869771615 0.1241824180 0.0617540292 #> [2616] 0.0700440854 0.1700149328 0.0731596723 0.1031043157 0.1448584497 #> [2621] 0.0701414049 0.0920783505 0.1664567590 0.0404752009 0.1385688037 #> [2626] 0.1257633418 0.1106775254 0.1331492066 0.0359090231 0.0189912412 #> [2631] 0.0909659937 0.0801528469 0.0943734497 0.0379451625 0.1254989356 #> [2636] 0.0510961637 0.0611441620 0.1090281606 0.1141109914 0.1031768993 #> [2641] 0.1398226917 0.1229044050 0.0427132882 0.0678256899 0.0333377831 #> [2646] 0.0111747123 0.0547273532 0.0693203807 0.0775689334 0.0739765316 #> [2651] 0.0733446926 0.1199313328 0.0645391867 0.0497942977 0.0256008450 #> [2656] 0.0143621359 0.0299710892 0.0212118570 0.0415310971 0.0311162714 #> [2661] 0.0992431715 0.0402736664 0.0256633721 0.0982776284 0.0538520552 #> [2666] 0.0373537280 0.0122995423 0.0336249173 0.0510025956 0.0705999136 #> [2671] 0.0574968606 0.0437188707 0.1062726527 0.0225574877 0.0537341647 #> [2676] 0.0208284631 0.0621002950 0.0532190315 0.0663536638 0.0372593142 #> [2681] 0.1014050990 0.0322554223 0.0312707387 0.0132827768 0.0321721286 #> [2686] 0.0272615645 0.0271805599 0.0542004183 0.0574458092 0.1078127623 #> [2691] 0.0710097998 0.1652310789 0.0483354591 0.0914113820 0.0419581346 #> [2696] 0.1038370728 0.0261323042 0.0943666771 0.0420518480 0.0696956590 #> [2701] 0.0917018354 0.0759688467 0.0617023706 0.0470087379 0.0159055218 #> [2706] 0.0163954161 0.0180268493 0.0509503596 0.0431969874 0.0566280670 #> [2711] 0.1063352600 0.1147783026 0.1221429259 0.0359845869 0.1545679420 #> [2716] 0.0679519102 0.1477231234 0.1419696212 0.0703489482 0.1748662293 #> [2721] 0.0563335381 0.1459292322 0.1409008354 0.0817640275 0.1381694824 #> [2726] 0.0276850071 0.0142009249 0.0172931962 0.0114581138 0.0126678701 #> [2731] 0.0423027724 0.0652732700 0.0495419279 0.1055311784 0.0397338904 #> [2736] 0.0351229161 0.0221826602 0.0087174745 0.0387954153 0.0290283412 #> [2741] 0.0592697039 0.0866616517 0.0613609999 0.1046413183 0.0989067554 #> [2746] 0.0763709694 0.0883150548 0.1712706238 0.0690125972 0.1135408729 #> [2751] 0.0558558293 0.0831520185 0.0397235863 0.1233916655 0.0558584556 #> [2756] 0.0745153278 0.1451565921 0.1019109637 0.0664243028 0.1524837464 #> [2761] 0.0801791698 0.1594192535 0.1130405143 0.0953527763 0.0505160429 #> [2766] 0.0992315114 0.0517652854 0.0984759331 0.0311964247 0.0770749897 #> [2771] 0.0814811364 0.0931960344 0.0681722835 0.1075894609 0.0396916717 #> [2776] 0.1047279015 0.0316650271 0.0723600611 0.0401740000 0.1194356978 #> [2781] 0.0549948029 0.0682559311 0.0611965023 0.1048125252 0.0647562742 #> [2786] 0.0313309729 0.1142209917 0.0386627689 0.0247091185 0.1046647951 #> [2791] 0.0841765031 0.0583454184 0.0581826046 0.0340767466 0.1220014170 #> [2796] 0.0325813815 0.0120174410 0.0229258966 0.0132126072 0.0144439153 #> [2801] 0.0386604071 0.0710695833 0.0233311243 0.1176897064 0.0633814707 #> [2806] 0.0575038567 0.0812833831 0.0900326669 0.0498335399 0.0409384258 #> [2811] 0.0734130815 0.0988121182 0.0724672675 0.0407515243 0.1053522825 #> [2816] 0.0378006846 0.0819951445 0.0331814773 0.0864552259 0.0795501173 #> [2821] 0.0922296867 0.0693705529 0.1040137559 0.0444820561 0.1092363372 #> [2826] 0.0398408994 0.0651088953 0.1081556678 0.0881709233 0.1514059454 #> [2831] 0.0665525422 0.0663136318 0.0372463278 0.1112985611 0.0499486960 #> [2836] 0.0672350898 0.0306373090 0.0329871774 0.0661898851 0.0716198459 #> [2841] 0.0598975159 0.0466305427 0.0377710275 0.0057561640 0.0501431674 #> [2846] 0.0383962728 0.0279756095 0.0394921713 0.0459932759 0.0714093074 #> [2851] 0.0175682642 0.0845255479 0.0391714051 0.0123093296 0.0350973867 #> [2856] 0.0245313067 0.0403097384 0.0340522006 0.0311253984 0.0559721738 #> [2861] 0.0541430339 0.1009462252 0.0323073640 0.0328064449 0.0230695810 #> [2866] 0.0137250349 0.0566004440 0.0271040741 0.0430345722 0.0785261840 #> [2871] 0.0341910645 0.0988367796 0.0327538326 0.0262643043 0.0347675681 #> [2876] 0.0184782986 0.0223414861 0.0312527604 0.0753511563 0.0408450104 #> [2881] 0.1041142717 0.0356242582 0.0249066278 0.0264579561 0.0165734626 #> [2886] 0.0638110191 0.0266599283 0.0607769340 0.0767723024 0.0693488047 #> [2891] 0.1175124124 0.1162925214 0.0931212530 0.1353174150 0.0284250341 #> [2896] 0.0191751644 0.0281740744 0.0096215047 0.0638727099 0.0256410781 #> [2901] 0.0316543616 0.0262509454 0.0512105748 0.0880917311 0.0432516895 #> [2906] 0.0605883375 0.0517707281 0.0321390741 0.0236640051 0.0370498076 #> [2911] 0.0448701531 0.0212766770 0.0257125497 0.0257765092 0.0395229608 #> [2916] 0.0311705619 0.0740144551 0.0436260253 0.0325782150 0.0181078631 #> [2921] 0.0249528084 0.0835570171 0.0179411098 0.0204507187 0.0240365826 #> [2926] 0.0259886682 0.0328214318 0.0407005735 0.0841791555 0.1481983662 #> [2931] 0.0359143466 0.0373234637 0.1333761364 0.0868254751 0.0838109180 #> [2936] 0.0597137660 0.0587954856 0.0266524702 0.0242449734 0.0241614841 #> [2941] 0.0302207656 0.0291747916 0.0239917431 0.0268162563 0.0213101003 #> [2946] 0.0178481694 0.0189541616 0.0184438489 0.0142668886 0.0102728149 #> [2951] 0.0134750735 0.0134322857 0.0185996443 0.0210740902 0.0191753786 #> [2956] 0.0166908540 0.0106119253 0.0045518731 0.0043075718 0.0035837023 #> [2961] 0.0168508142 0.0948786959 0.0991124436 0.1021864712 0.0751825497 #> [2966] 0.0030095868 0.0247938465 0.0246134158 0.0180122964 0.0155681018 #> [2971] 0.0116393836 0.0189285651 0.0383193009 0.0919923559 0.1133279949 #> [2976] 0.0725711808 0.0620634221 0.0056671943 0.0238765925 0.0159532968 #> [2981] 0.0086677996 0.0099781612 0.0017064427 0.0008894508 0.0100754285 #> [2986] 0.0093192169 0.0069389902 0.0097279130 0.0147112859 0.0129276551 #> [2991] 0.0110490099 0.0117694000 0.0105447434 0.0127001265 0.0108320005 #> [2996] 0.0082982769 0.0077169645 0.0074295434 0.0150481677 0.0218726378 #> [3001] 0.0103554800 0.0019930771 0.0034192842 0.0076593612 0.0044619213 #> [3006] 0.0027160929 0.0053923787 0.0045998073 0.0035653634 0.0014786966 #> [3011] 0.0033459759 0.0060006855 0.0045828158 0.0060818074 0.0045723883 #> [3016] 0.0052145938 0.0092144553 0.0146133807 0.0089688255 0.0023172353 #> [3021] 0.0051581492 0.0050265007 0.0096470742 0.0013669577 0.0127229271 #> [3026] 0.0065307315 0.0103921779 0.0113966763 0.0041983663 0.0007544366 #> [3031] 0.0084208241 0.0130996518 0.0015536498 0.0005746327 0.0063827094 #> [3036] 0.0029313108 0.0120677734 0.0072061378 0.0053693387 0.0085951006 #> [3041] 0.0120267887 0.0185165927 0.0029943811 0.0108424295 0.0069390992 #> [3046] 0.0181597229 0.0147851352 0.0057719881 0.0064039463 0.0115939965 #> [3051] 0.0057769143 0.0018928797 0.0165516920 0.0450109616 0.0302523319 #> [3056] 0.1400296390 0.0416437648 0.0943533257 0.0259931944 0.0112511199 #> [3061] 0.0238169786 0.0064435494 0.0181924980 0.0105792787 0.0182564147 #> [3066] 0.0254021864 0.0127828466 0.0296310857 0.0433438756 0.0492811613 #> [3071] 0.0333437808 0.0448219925 0.0617011674 0.1149848253 0.1055211946 #> [3076] 0.1136719510 0.0743745118 0.0571236797 0.0870829597 0.1265492886 #> [3081] 0.0929226130 0.1389741153 0.1151156053 0.0696484372 0.1015589461 #> [3086] 0.0817790329 0.1338304132 0.1124010831 0.0296876803 0.1017854735 #> [3091] 0.0609010793 0.0557675920 0.0624449067 0.0969022512 0.0428706296 #> [3096] 0.0584993362 0.0642793849 0.0553236641 0.0633850694 0.0831298232 #> [3101] 0.0382302627 0.0957465842 0.0279103201 0.0783863962 0.0452960730 #> [3106] 0.0394224040 0.0995798558 0.0452233106 0.0934942514 0.0409416072 #> [3111] 0.0611447133 0.0678513870 0.0435580313 0.1016156152 0.0325017385 #> [3116] 0.1068993509 0.0536052361 0.0206111334 0.1148057655 0.0348897539 #> [3121] 0.0485484675 0.0690122172 0.1039158553 0.0719651654 0.0228799656 #> [3126] 0.1063041538 0.0265830476 0.0239238776 0.0310061704 0.0301148463 #> [3131] 0.0311928075 0.0286317207 0.0788582265 0.0583930947 0.0901534706 #> [3136] 0.0332903191 0.0512644425 0.0471179485 0.0275169462 0.0210867655 #> [3141] 0.0807081163 0.0598847792 0.0931390822 0.0580223128 0.0295711122 #> [3146] 0.0284849461 0.0231427029 0.0332484841 0.0286012236 0.0781397298 #> [3151] 0.0342352949 0.0845391378 0.0447862186 0.0286418945 0.0402140431 #> [3156] 0.0158914980 0.0272921696 0.0451187007 0.0514455140 0.0743818507 #> [3161] 0.0686024055 0.0701023489 0.0450074673 0.0612048097 0.0398434214 #> [3166] 0.0276509468 0.0175797641 0.0402535424 0.0646182075 0.0458619818 #> [3171] 0.0967573822 0.0263986196 0.0112283109 0.0336858295 0.0145136956 #> [3176] 0.0450417846 0.0261284430 0.0886749253 0.0533451065 0.0668336824 #> [3181] 0.0411071554 0.0616041645 0.0232324880 0.0456448495 0.0332008451 #> [3186] 0.0570539013 0.0866192728 0.0453461334 0.0705312267 0.0409399606 #> [3191] 0.0067388536 0.0034307078 0.0558483340 0.0468223579 0.0468348712 #> [3196] 0.0465097949 0.0808053687 0.0626106486 0.0734060779 0.0311223548 #> [3201] 0.0233754292 0.0093387952 0.0472136065 0.0261430498 0.0424055345 #> [3206] 0.0835413039 0.0376533642 0.0902853310 0.0276341699 0.0138957081 #> [3211] 0.0216229074 0.0234297980 0.0492482111 0.0421840176 0.0391434431 #> [3216] 0.0734517127 0.0307780933 0.0996738970 0.0321674049 0.0318149999 #> [3221] 0.0391613953 0.0352990143 0.0595787689 0.0721033737 0.0859925598 #> [3226] 0.0456165671 0.0399941839 0.0234532747 0.0158367846 0.0626858845 #> [3231] 0.0146415047 0.0385183506 0.0515468754 0.0627754107 0.0833804458 #> [3236] 0.0433369763 0.0436072163 0.0244462490 0.0127453096 0.0602424145 #> [3241] 0.0345887057 0.0145481974 0.0238837898 0.0295195039 0.0546216369 #> [3246] 0.1073201150 0.0563227497 0.1011801958 0.0671089292 0.0424331091 #> [3251] 0.0684894249 0.0369547233 0.0287707560 0.0541039854 0.0506769083 #> [3256] 0.0884766281 0.0312008467 0.0419518948 0.0222741794 0.0126391491 #> [3261] 0.0811064616 0.0405303836 0.0390883870 0.0455229022 0.0796043277 #> [3266] 0.0835478157 0.0630796552 0.0652708486 0.0502534620 0.0295959357 #> [3271] 0.0573147014 0.0759732351 0.0188192856 0.0182810053 0.0377979316 #> [3276] 0.0590547882 0.0697424859 0.0784792975 0.0276120361 0.0662068203 #> [3281] 0.0220002476 0.0113672372 0.0689586997 0.0256842449 0.0498920567 #> [3286] 0.0396051705 0.0663494840 0.0637496710 0.0910117999 0.0310021508 #> [3291] 0.0253482331 0.0217073094 0.0102141518 0.0748158693 0.0403703712 #> [3296] 0.0205620155 0.0265369937 0.0503429212 0.0483555831 0.0826794580 #> [3301] 0.0606880710 0.0719302669 0.0360080302 0.0541078374 0.0912744552 #> [3306] 0.0745454133 0.0277498234 0.0673026070 0.0690135211 0.0427975878 #> [3311] 0.0386637077 0.0582853742 0.0147809545 0.0752289072 0.0692842901 #> [3316] 0.0471352264 0.0361269265 0.0440739878 0.0466915779 0.0802223757 #> [3321] 0.0557209626 0.0721351057 0.0348000564 0.0350081958 0.0943694636 #> [3326] 0.0669110343 0.0961123109 0.0428470820 0.0342083275 0.0310365409 #> [3331] 0.0367464349 0.0473790802 0.0802683905 0.0828677565 0.0806714296 #> [3336] 0.0905473381 0.0324056521 0.0486201160 0.0518444739 0.0225436874 #> [3341] 0.0684960037 0.0579395294 0.0263893455 0.0191792101 0.0274953600 #> [3346] 0.0348267592 0.0273279436 0.0518544018 0.0802505761 0.0604586899 #> [3351] 0.0534361750 0.0436561331 0.0646612123 0.0457333140 0.0804612264 #> [3356] 0.0656487048 0.0303949043 0.0129306400 0.0146156196 0.0421621017 #> [3361] 0.0649109781 0.0583700426 0.0878380835 0.0963547230 0.1062295586 #> [3366] 0.0503995121 0.0292628855 0.0671630427 0.0680421889 0.0916144699 #> [3371] 0.0780815035 0.0629436970 0.0471131578 0.0707051381 0.0675248578 #> [3376] 0.0333811790 0.0825480595 0.0561243370 0.0848893896 0.0384894684 #> [3381] 0.0262555517 0.0418068729 0.0560372658 0.0851645991 0.0206773505 #> [3386] 0.0254021659 0.0371998288 0.0629330277 0.0722146258 0.0591238663 #> [3391] 0.0602930412 0.0404933132 0.0459495522 0.0899105221 0.0513420217 #> [3396] 0.0315411165 0.0268179663 0.0358231217 0.0554603599 0.0929013565 #> [3401] 0.0506174080 0.0625995696 0.0812773034 0.0527568161 0.0335741565 #> [3406] 0.0858932361 0.0708466023 0.0458197333 0.0087064551 0.0342579037 #> [3411] 0.0328414515 0.0836491063 0.0937806889 0.0694854334 0.0201345123 #> [3416] 0.0363823250 0.0191837605 0.0292403940 0.0945218951 0.0473113917 #> [3421] 0.0170357116 0.0286213905 0.0752206743 0.0880625769 0.0494157597 #> [3426] 0.0288834125 0.0529354215 0.0176310316 0.0183749553 0.0908421874 #> [3431] 0.0648686439 0.0314400233 0.0139734074 0.0280840397 0.0695247501 #> [3436] 0.1133507788 0.0757558271 0.0130844377 0.0614729337 0.0584661700 #> [3441] 0.0472687297 0.0770773962 0.0658090115 0.0577737652 0.0354639515 #> [3446] 0.0771495327 0.0409973487 0.0452379659 0.0447161607 0.0298105925 #> [3451] 0.0138463322 0.0769373849 0.0708799064 0.0575974546 0.0547948219 #> [3456] 0.0994658992 0.1056721732 0.0936693847 0.0589172319 0.0257535167 #> [3461] 0.0429223776 0.0677528977 0.0807434320 0.0469892621 0.0481167771 #> [3466] 0.0708763897 0.0381302051 0.0576923750 0.0681396350 0.0151220327 #> [3471] 0.0204939004 0.0493941493 0.0926685780 0.0438473821 0.0544603206 #> [3476] 0.0697121397 0.0610045828 0.0661354735 0.1290429533 0.1096396446 #> [3481] 0.0693925992 0.0600049235 0.0365247317 0.0332646035 0.0619054511 #> [3486] 0.0787993371 0.0968026146 0.0744905844 0.1160671338 0.0392271541 #> [3491] 0.0990479216 0.0290066767 0.0584165677 0.0695695728 0.0378768295 #> [3496] 0.0390248857 0.0484849326 0.0910014510 0.0439349823 0.0582764894 #> [3501] 0.0461543910 0.0091961576 0.0117663248 0.0437797755 0.0637893006 #> [3506] 0.0684518442 0.0722109154 0.1083124131 0.0564798266 0.0739490017 #> [3511] 0.0330475494 0.0624923557 0.0465985946 0.0724564716 0.0899071470 #> [3516] 0.0457812175 0.0462537743 0.0319288746 0.0494491011 0.0325468183 #> [3521] 0.0706278682 0.0806462020 0.0906729549 0.0820908770 0.0886566117 #> [3526] 0.0284384731 0.0408944711 0.0389494970 0.0542516857 0.0892400667 #> [3531] 0.0856373161 0.0902007967 0.0698525384 0.0827482417 0.0441049486 #> [3536] 0.0287401974 0.0246868506 0.0461345427 0.0964257419 0.0441972204 #> [3541] 0.1046982184 0.0388692059 0.0326451734 0.0477820374 0.0782353356 #> [3546] 0.0335710943 0.0593031682 0.0689069107 0.0276277382 0.0249152873 #> [3551] 0.0278006885 0.0445052311 0.0896238834 0.0840097293 0.0834074691 #> [3556] 0.0387820788 0.0411390066 0.0564714074 0.0740559176 0.0400697216 #> [3561] 0.0365996137 0.0968601480 0.0454184040 0.0965978876 0.0430126972 #> [3566] 0.0438743904 0.0770211816 0.0922462419 0.1093469560 0.0682988837 #> [3571] 0.1123835891 0.0925725102 0.0706245080 0.0609693304 0.0712005198 #> [3576] 0.0541140586 0.0758109093 0.0522899553 0.0630377084 0.1244482920 #> [3581] 0.0566205904 0.0511876456 0.0980348065 0.0307486970 0.0840875879 #> [3586] 0.0202567242 0.0794815421 0.0381872319 0.0996025950 0.0384225175 #> [3591] 0.0626887158 0.0295611154 0.0465458632 0.0719074160 0.0427585281 #> [3596] 0.0369853564 0.0502060503 0.0832634419 0.0708206519 0.0765019506 #> [3601] 0.0785208121 0.0596259534 0.0368928798 0.0593664236 0.0524609424 #> [3606] 0.0859501287 0.0243242942 0.0241001043 0.0188053567 0.0764063224 #> [3611] 0.1083834842 0.0732468814 0.0378408805 0.0691120103 0.0651456043 #> [3616] 0.0365413055 0.0084446389 0.0496684425 0.0401449949 0.0859852508 #> [3621] 0.1115564704 0.0445335172 0.0877060965 0.0477432273 0.0332786888 #> [3626] 0.0543397963 0.0930311978 0.1060158014 0.0949063301 0.0285369530 #> [3631] 0.0192458741 0.0567155704 0.0256353281 0.0638803691 0.1062825173 #> [3636] 0.0631008446 0.0648986176 0.0208319444 0.0181084350 0.0398558639 #> [3641] 0.0305924695 0.0659562647 0.0631928742 0.0582556278 0.0749620944 #> [3646] 0.0630718246 0.0421916731 0.0330274105 0.0211704373 0.0641213953 #> [3651] 0.0680747852 0.0965189263 0.0224604085 0.0664761141 0.0266441293 #> [3656] 0.0412407964 0.0132962773 0.1004834175 0.0217958484 0.0559742153 #> [3661] 0.0179009791 0.0404236615 0.0830768943 0.0594542250 0.0228717308 #> [3666] 0.0977016091 0.0348062627 0.0650000721 0.0370083563 0.0999007076 #> [3671] 0.1597565711 0.0565549731 0.0738708079 0.0716894865 0.1138035581 #> [3676] 0.0667330399 0.0706469864 0.0202022679 0.0708905309 0.0333930887 #> [3681] 0.0372255556 0.0634109899 0.0283546057 0.0043002404 0.0272885319 #> [3686] 0.0130112777 0.0316553488 0.0691394135 0.1046871617 0.0671215430 #> [3691] 0.0442077927 0.0248360094 0.0603346936 0.0588481128 0.0340962894 #> [3696] 0.0570342652 0.0549804009 0.0429138653 0.0249174777 0.0278440248 #> [3701] 0.0454273038 0.0958833545 0.1184759066 0.0814836696 0.0399473347 #> [3706] 0.0283408388 0.0793743879 0.0407548882 0.1034048721 0.0526074618 #> [3711] 0.1112246141 0.0928525552 0.0783363283 0.0674736276 0.0234618485 #> [3716] 0.0532012768 0.0699587539 0.0227787402 0.0076592341 0.0752707720 #> [3721] 0.0763765126 0.0945804045 0.1056563109 0.0271758512 0.0267753936 #> [3726] 0.0391753204 0.0304117277 0.0449982993 0.0806212425 0.1119349897 #> [3731] 0.1022673100 0.0475734882 0.0439455286 0.0352661759 0.0095477039 #> [3736] 0.0347933918 0.0854025930 0.0939338356 0.1302283704 0.0673981905 #> [3741] 0.0214823019 0.0356383771 0.0616088547 0.1112029329 0.0799309537 #> [3746] 0.0619949512 0.0145341018 0.0112457704 0.0713716522 0.1070336029 #> [3751] 0.0301939026 0.0237725414 0.0536963753 0.1118031889 0.1579948068 #> [3756] 0.1083987802 0.1184718758 0.0600204356 0.1459107846 0.0578755215 #> [3761] 0.0286706630 0.0446411744 0.0351809748 0.0720773637 0.0474982113 #> [3766] 0.0650150776 0.0766440406 0.0428542607 0.0131749623 0.0353847370 #> [3771] 0.0596002080 0.1136748642 0.0663007200 0.0977148339 0.0405334756 #> [3776] 0.0242073610 0.0484682508 0.0874698386 0.0599731728 0.0849197209 #> [3781] 0.0433848388 0.0329468325 0.0277779046 0.0290031563 0.0277466513 #> [3786] 0.0745340064 0.0454500429 0.0315070674 0.0240375753 0.0267489143 #> [3791] 0.0203843787 0.0237308145 0.0616011322 0.0327435173 0.0909372792 #> [3796] 0.1034742445 0.0846031755 0.1395536512 0.0595619343 0.1001076698 #> [3801] 0.0807977766 0.0309007093 0.0034628389 0.0229310337 0.0170712341 #> [3806] 0.0270874407 0.1005130857 0.1042399257 0.0352381654 0.0388894416 #> [3811] 0.0686499104 0.0450343750 0.0371945351 0.0479328744 0.0622147992 #> [3816] 0.0606741607 0.0555513576 0.0161421392 0.0558156557 0.0224360805 #> [3821] 0.0941488743 0.0325183868 0.0540159196 0.0152690466 0.0314308628 #> [3826] 0.0592409894 0.1160974056 0.0356005728 0.0431715287 0.0225471631 #> [3831] 0.0525640994 0.0632710531 0.1041937023 0.0367973335 0.0600855909 #> [3836] 0.0208172984 0.0454778969 0.0646354482 0.0235114004 0.0500289313 #> [3841] 0.0921221673 0.0323430449 0.0533074811 0.0417373776 0.0215790048 #> [3846] 0.0380629674 0.0102727870 0.1136990264 0.0284106694 0.1191208959 #> [3851] 0.0934192613 0.0868885443 0.0437502451 0.0154374577 0.0349344164 #> [3856] 0.0577234961 0.0282917507 0.0815313086 0.0155813163 0.0573450141 #> [3861] 0.0825440437 0.0750318766 0.0239693690 0.2973983288 0.1801843345 #> [3866] 0.1244824901 0.0301233213 0.0227108281 0.0234875455 0.0224379860 #> [3871] 0.0338059962 0.0199919380 0.1156309023 0.1307010949 0.1073763743 #> [3876] 0.1138935164 0.0728878900 0.0750537664 0.0372557268 0.0324522853 #> [3881] 0.0654897839 0.0179598574 0.0392841771 0.0315479785 0.0185394287 #> [3886] 0.0342171602 0.0282033179 0.0534773692 0.0097434688 0.0391356871 #> [3891] 0.0173440594 0.0153345065 0.0388384163 0.0180168152 0.0578935407 #> [3896] 0.0558825657 0.0142721524 0.0340724699 0.0579085797 0.0144086247 #> [3901] 0.0412633084 0.0543750301 0.0522741750 0.0261698700 0.0161819011 #> [3906] 0.0348297693 0.0577380657 0.0268806722 0.0148034496 0.0663516074 #> [3911] 0.0723941699 0.0488437563 0.0818330944 0.0956036150 0.0386703648 #> [3916] 0.0679822788 0.0169530381 0.0376393236 0.0401484594 0.1437739879 #> [3921] 0.2715269625 0.1564792544 0.5477979779 0.2521711290 0.0962045118 #> [3926] 0.0329458117 0.1576529294 0.0864356533 0.0961180329 0.1697650254 #> [3931] 0.1334440112 0.1784112602 0.0769047812 0.1346308738 0.3124448061 #> [3936] 0.4585876763 0.1082619280 0.5152018070 0.3563354015 0.0421162546 #> [3941] 0.1531333625 0.0103923837 0.0416082963 0.1506911218 0.1224682555 #> [3946] 0.2835982144 0.4214592278 0.3949821889 0.1544909030 0.5437842011 #> [3951] 0.2418907285 0.1655256450 0.2400573790 0.0914729685 0.1447579712 #> [3956] 0.0660243258 0.2271619439 0.0802006647 0.0741267577 0.1297355890 #> [3961] 0.0556800328 0.3582700491 0.2916236520 0.1783273369 0.3969081938 #> [3966] 0.2078727037 0.1315305382 0.1740189344 0.0628804341 0.0775212646 #> [3971] 0.2398343980 0.4296414256 0.1786203533 0.4722588658 0.4114233553 #> [3976] 0.1046104729 0.1462509185 0.1229495257 0.1388023049 0.1122156233 #> [3981] 0.0947163105 0.1158777475 0.0635700449 0.0126359174 0.0529957414 #> [3986] 0.0256032832 0.0710304826 0.0204765536 0.0463827886 0.0366034620 #> [3991] 0.0434834026 0.0377868228 0.0436347537 0.0216991361 0.0490731560 #> [3996] 0.0165121481 0.0206703544 0.0359257609 0.0197431576 0.0105624609 #> [4001] 0.0155795347 0.0219010469 0.0185344387 0.0384675972 0.0243666563 #> [4006] 0.0240498316 0.0684245899 0.0807085633 0.0167198312 0.0449440330 #> [4011] 0.0499147624 0.0196955707 0.0496251211 0.0587740578 0.0174094252 #> [4016] 0.0431372151 0.0397894047 0.0313772112 0.0279189833 0.0269583892 #> [4021] 0.0237645358 0.0087312171 0.0370539650 0.0053936532 0.0399214476 #> [4026] 0.0105952155 0.0071407082 0.0040678545 0.0225066040 0.0369658060 #> [4031] 0.0163826253 0.0371472314 0.0234203991 0.0509421937 0.0182252582 #> [4036] 0.0574016236 0.0484765396 0.0562421456 0.0276608672 0.0405517593 #> [4041] 0.0272515845 0.0281277411 0.0962835476 0.1277144998 0.0378131531 #> [4046] 0.2415177226 0.3410028815 0.1956389099 0.1241349280 0.4394340813 #> [4051] 0.3595747054 0.0322174095 0.0747083053 0.0753412917 0.0852935910 #> [4056] 0.0973981991 0.1978499293 0.3063786030 0.3031744659 0.1918340772 #> [4061] 0.5163881183 0.2189952880 0.1143567115 0.0739355385 0.0880174637 #> [4066] 0.2510054410 0.3034770489 0.1422796696 0.3505845070 0.4163229465 #> [4071] 0.1035163328 0.0737873241 0.1212971136 0.3503069282 0.3774778247 #> [4076] 0.1073716730 0.4757491350 0.2752410769 0.0845084190 0.0606782287 #> [4081] 0.0494881608 0.1168606207 0.1372342855 0.3671056032 0.3130961359 #> [4086] 0.2419253886 0.4569360614 0.1794394553 0.0862903297 0.1115769818 #> [4091] 0.0991736576 0.1017784551 0.3135802448 0.2981596589 0.2022585869 #> [4096] 0.4775755405 0.1358370185 0.0622500814 0.0802047253 0.0585167892 #> [4101] 0.1185598522 0.1191761866 0.0608786494 0.0836657584 0.3846938014 #> [4106] 0.2837305963 0.1533974111 0.4890770316 0.3297394514 0.1853338927 #> [4111] 0.1091903970 0.0864870027 0.3279859424 0.3989842534 0.0766094849 #> [4116] 0.4392699003 0.3208711445 0.1182359010 0.0835987478 0.0671093985 #> [4121] 0.0521646254 0.0753007010 0.0904200748 0.1128526032 0.1528948247 #> [4126] 0.1573659331 0.1527668089 0.2785975635 0.1001666039 0.5014994740 #> [4131] 0.3821918368 0.0541501790 0.1985889971 0.0986497253 0.1274168640 #> [4136] 0.1886114776 0.2822940350 0.2986007929 0.2116857618 0.3758019805 #> [4141] 0.4093510807 0.1344294101 0.0865876302 0.0921474695 0.0779865235 #> [4146] 0.0522027873 0.0784373805 0.0970286503 0.0305543337 0.0761871040 #> [4151] 0.0786964074 0.0555943325 0.0622718856 0.0642126277 0.0633676052 #> [4156] 0.1845071316 0.2484520823 0.1833267659 0.2176047266 0.4698456526 #> [4161] 0.1570982486 0.1371575296 0.1598340869 0.0922587439 0.1080946103 #> [4166] 0.0717907026 0.0636062548 0.0539728887 0.0752977058 0.2610182464 #> [4171] 0.3176484108 0.1342135221 0.2991040647 0.4114117026 0.1144573539 #> [4176] 0.0827080756 0.0889393017 0.0858116448 0.0605553314 0.1676762700 #> [4181] 0.1093657687 0.1726994663 0.3344286978 0.0939178020 0.5174222589 #> [4186] 0.3005094528 0.1095933020 0.1269993782 0.1130760089 0.0638520494 #> [4191] 0.0600284114 0.0598289669 0.1541997641 0.1244708374 0.1641758978 #> [4196] 0.2207797617 0.2668490708 0.1585978270 0.3030847311 0.3610071242 #> [4201] 0.0895048231 0.2489609420 0.0359117538 0.1452051699 0.0801443830 #> [4206] 0.0687682182 0.0267151687 0.0765363052 0.0421924442 0.1391191781 #> [4211] 0.2096144557 0.3123775125 0.1176565439 0.4902155995 0.2764274478 #> [4216] 0.1026954204 0.0965173244 0.1569084376 0.0462642461 0.0643873438 #> [4221] 0.0602764711 0.0542661175 0.1320177615 0.2373554856 0.3253806233 #> [4226] 0.1802582294 0.3355638981 0.4800580144 0.1192160696 0.1869399250 #> [4231] 0.2669288218 0.4194442034 0.1843276322 0.4434758425 0.4558266699 #> [4236] 0.1034891903 0.1501029581 0.0557214171 0.0993584543 0.0835404545 #> [4241] 0.1445410699 0.0628380403 0.0229461137 0.0320065431 0.0788736343 #> [4246] 0.0415830910 0.0521694757 0.0820116475 0.0355904400 0.0929804519 #> [4251] 0.0401231833 0.0385852344 0.0287402403 0.0449954234 0.0627194494 #> [4256] 0.0177566241 0.0054096486 0.0222787913 0.0238198340 0.0309969336 #> [4261] 0.0160373803 0.0334896669 0.0277831517 0.0146182869 0.0219974481 #> [4266] 0.0140824132 0.0135088107 0.0407194197 0.0134505248 0.0156901274 #> [4271] 0.0256191716 0.0179122183 0.0277035441 0.0201340765 0.0592849739 #> [4276] 0.0755384937 0.0260363575 0.0395072661 0.0658161566 0.0211742241 #> [4281] 0.0690918863 0.0333628953 0.0181987565 0.0195642319 0.0348903388 #> [4286] 0.0299550872 0.0526190400 0.0068180962 0.0051616598 0.0085139535 #> [4291] 0.0065429406 0.0137600517 0.0268631596 0.0336571671 0.0261692498 #> [4296] 0.0672271401 0.0253627263 0.0265660286 0.0446207002 0.0474543683 #> [4301] 0.0181712881 0.0432844460 0.0557468422 0.0371838845 0.0154398372 #> [4306] 0.0362310261 0.0284430180 0.0107675791 0.0136378091 0.0098066926 #> [4311] 0.0057475842 0.0093875686 0.0030831916 0.0119167967 0.0452669710 #> [4316] 0.0097996611 0.0347282290 0.0352424309 0.0351982377 0.0155388694 #> [4321] 0.0193905104 0.0385583267 0.0256881192 0.0070206625 0.0093889581 #> [4326] 0.0195408147 0.0240877941 0.0157643482 0.0143021820 0.0057995506 #> [4331] 0.0047399113 0.0015707132 0.0066090287 0.0128727593 0.0302390419 #> [4336] 0.0272184145 0.0341271013 0.0297683328 0.0202878471 0.0224186778 #> [4341] 0.0254575405 0.0145493243 0.0035781555 0.0124734351 0.0083364947 #> [4346] 0.0125996685 0.0213038959 0.0072452324 0.0258811545 0.0230623353 #> [4351] 0.0144871864 0.0152663989 0.0131533034 0.0181217380 0.0127387485 #> [4356] 0.0015990583 0.0027054581 0.0090301167 0.0090693869 0.0021886935 #> [4361] 0.0291584656 0.0239946023 0.0118870782 0.0117057310 0.0166056175 #> [4366] 0.0167161562 0.0228460338 0.0092797522 0.0103193233 0.0134515529 #> [4371] 0.0047247154 0.0080257449 0.0133700371 0.0136804637 0.0131963957 #> [4376] 0.0162446853 0.0182495899 0.0143381665 0.0179923326 0.0122680021 #> [4381] 0.0075701545 0.0063984790 0.0081897285 0.0127063692 0.0048850109 #> [4386] 0.0047731069 0.0058483351 0.0056512076 0.0080599906 0.0036131195 #> [4391] 0.0027387645 0.0034149752 0.0051171095 0.0036077453 0.0053411475 #> [4396] 0.0086594457 0.0113486694 0.0112644462 0.0128481742 0.0107702445 #> [4401] 0.0114956945 0.0188764147 0.0048719230 0.0074971830 0.0110450154 #> [4406] 0.0069806208 0.0057317489 0.0045049842 0.0106148887 0.0057690763 #> [4411] 0.0143884998 0.0138731729 0.0164334420 0.0052896021 0.0208079349 #> [4416] 0.0169852972 0.0144301131 0.0194394942 0.0102894949 0.0050283098 #> [4421] 0.0095372451 0.0100013269 0.0266961642 0.0338669680 0.0168401226 #> [4426] 0.0086295120 0.0090587838 0.0144137554 0.0040656095 0.0053430935 #> [4431] 0.0051375660 0.0040091183 0.0029926898 0.0048788236 0.0041754297 #> [4436] 0.0115719037 0.0061172335 0.0106041180 0.0077625881 0.0042607342 #> [4441] 0.0076750061 0.0038343316 0.0087012909 0.0021381220 0.0033790048 #> [4446] 0.0141389696 0.0160204824 0.0081156623 0.0090563446 0.0096645569 #> [4451] 0.0274003316 0.0139022926 0.0226324257 0.0284986105 0.0140427984 #> [4456] 0.0138812326 0.0137186814 0.0127175609 0.0123426663 0.0107835121 #> [4461] 0.0044398615 0.0177208632 0.0242320728 0.0294997599 0.0215537064 #> [4466] 0.0145993000 0.0058641513 0.0120106041 0.0018504990 0.0046804040 #> [4471] 0.0101756891 0.0156972855 0.0244615860 0.0153434593 0.0035563880 #> [4476] 0.0020930392 0.0073651494 0.0086129587 0.0122580128 0.0186010599 #> [4481] 0.0143027930 0.0169730335 0.0116659664 0.0034623530 0.0035420475 #> [4486] 0.0064762561 0.0164819956 0.0137271890 0.0026063437 0.0034682467 #> [4491] 0.0064652255 0.0040964279 0.0111314906 0.0090565067 0.0051325345 #> [4496] 0.0205479637 0.0162216891 0.0115589695 0.0123039354 0.0104659526 #> [4501] 0.0062153204 0.0128254946 0.0201240256 0.0121254623 0.0028530124 #> [4506] 0.0058314428 0.0045567541 0.0035819099 0.0071329759 0.0087494766 #> [4511] 0.0087999413 0.0080404226 0.0025021092 0.0049884962 0.0044134180 #> [4516] 0.0117503991 0.0132622253 0.0046109874 0.0095057748 0.0042382679 #> [4521] 0.0106504476 0.0036064761 0.0057705068 0.0020680565 0.0030158949 #> [4526] 0.0056427727 0.0110944053 0.0075309207 0.0162148271 0.0129505638 #> [4531] 0.0164976213 0.0138347987 0.0080163516 0.0049739447 0.0090506785 #> [4536] 0.0137681877 0.0241836403 0.0554224439 0.0564805269 0.0141523490 #> [4541] 0.0533161163 0.0384814218 0.0310781766 0.0348983891 0.0255806670 #> [4546] 0.0234252233 0.0213249028 0.0079872683 0.0052789226 0.0080862883 #> [4551] 0.0069182399 0.0084237987 0.0148257604 0.0154041043 0.0098066041 #> [4556] 0.0057638292 0.0050513959 0.0055735577 0.0046999920 0.0067431792 #> [4561] 0.0092465058 0.0075654890 0.0075656711 0.0078162048 0.0191208869 #> [4566] 0.0138085885 0.0086617768 0.0093145855 0.0017575960 0.0154867582 #> [4571] 0.0083134314 0.0252630059 0.0239158645 0.1021908447 0.0384207256 #> [4576] 0.0346661843 0.0291962549 0.0238927733 0.0200282019 0.0119144414 #> [4581] 0.0106034214 0.0129219331 0.0094146943 0.0139087858 0.0193849802 #> [4586] 0.0147122974 0.0120938113 0.0124737499 0.0040491591 0.0049284259 #> [4591] 0.0032067532 0.0094295070 0.0097169066 0.0114757940 0.0143371802 #> [4596] 0.0089510903 0.0044926382 0.0067301844 0.0100733954 0.0396238789 #> [4601] 0.0387666300 0.1064116433 0.0714319795 0.0314253010 0.0634415150 #> [4606] 0.1028368250 0.0646196082 0.0215722416 0.0401505232 0.0498214141 #> [4611] 0.0571177192 0.0745590180 0.0972791165 0.0207885373 0.0707192719 #> [4616] 0.0308229979 0.0248358268 0.0381996632 0.0465555750 0.0720029473 #> [4621] 0.0839516148 0.0944670066 0.1228309795 0.0554891191 0.1161016822 #> [4626] 0.0722834170 0.0373194776 0.0369980335 0.1506761461 0.0396696888 #> [4631] 0.1020742580 0.0227345880 0.0724400654 0.0452416986 0.0789400563 #> [4636] 0.1280217916 0.0935461596 0.1392388344 0.0575430803 0.0652118549 #> [4641] 0.1357489079 0.1029601917 0.1075264961 0.1528253406 0.0610250682 #> [4646] 0.1644536257 0.1363151968 0.0507816896 0.1583726406 0.1095140725 #> [4651] 0.0563887879 0.1427530795 0.1101647019 0.0359553285 0.1434083581 #> [4656] 0.1366601884 0.0575213581 0.1219479442 0.1328512281 0.0537617207 #> [4661] 0.1319531351 0.1434486806 0.0493019335 0.0923404172 0.1269687712 #> [4666] 0.0508481823 0.1523336917 0.1098605767 0.0926102549 0.1347007453 #> [4671] 0.0741826892 0.1026204750 0.1414095014 0.0569829531 0.1501945853 #> [4676] 0.0503545664 0.0907874778 0.1384149641 0.0445752181 0.1222457141 #> [4681] 0.0391435325 0.1179741472 0.0467084832 0.1649157554 0.0412831530 #> [4686] 0.1518407166 0.0553907715 0.0852675661 0.1439391226 0.0760498866 #> [4691] 0.1522348076 0.1333479583 0.0412711315 0.1255739778 0.1381595135 #> [4696] 0.0601376630 0.1183894873 0.1285159141 0.0790070295 0.0460577905 #> [4701] 0.1171062589 0.1564995646 0.0569508933 0.1458357871 0.1386601776 #> [4706] 0.0699919909 0.1515170932 0.0701750815 0.0432083383 0.0680923983 #> [4711] 0.0713202432 0.0962662175 0.0689308941 0.1055716425 0.1215545014 #> [4716] 0.0676546767 0.0351729393 0.0608823001 0.0895504951 0.0923635289 #> [4721] 0.0701447651 0.0708217993 0.1010246575 0.0978103802 0.0610129274 #> [4726] 0.0364760347 0.0621102341 0.0896925628 0.0741346553 0.0588166639 #> [4731] 0.0520978384 0.1150560230 0.1100728735 0.0611564331 0.1423816532 #> [4736] 0.0837860107 0.0767377540 0.1335766166 0.0756128356 0.0555053055 #> [4741] 0.0903270170 0.1052986830 0.0706539974 0.0452115498 0.0968442634 #> [4746] 0.0978959799 0.0789236128 0.0420446284 0.1043314859 0.1276423931 #> [4751] 0.0627011284 0.1141935214 0.1490881890 0.0677582473 0.1020418704 #> [4756] 0.1366783977 0.0673440173 0.0503362082 0.0978430659 0.1487968713 #> [4761] 0.0524408482 0.1107231304 0.1395744234 0.0721693337 0.0402826183 #> [4766] 0.0971753076 0.1195095032 0.0895935372 0.0611751191 0.1158386171 #> [4771] 0.1087536514 0.0610876642 0.0419601798 0.0675585568 0.0985023752 #> [4776] 0.0636367798 0.0458513834 0.0403015763 0.1205517873 0.1202366650 #> [4781] 0.0418080874 0.1884160340 0.0723780468 0.1081507802 0.1140051633 #> [4786] 0.0645480528 0.0336855799 0.1077002361 0.1222453341 0.0634259433 #> [4791] 0.0329250060 0.0744698942 0.1275732517 0.0738921389 0.0405116528 #> [4796] 0.0459111109 0.1050483882 0.1365416944 0.0646007061 0.1412680596 #> [4801] 0.1015404016 0.0400587283 0.0924729630 0.1216626465 0.0783552229 #> [4806] 0.0373895355 0.1275944263 0.1297780573 0.0556398630 0.0360723287 #> [4811] 0.0599045008 0.0738735273 0.0715752020 0.0771936402 0.0335944444 #> [4816] 0.0702504665 0.0893301591 0.0880141780 0.0450537093 0.0329162106 #> [4821] 0.0946329162 0.1456616670 0.0471842848 0.1032936200 0.0744856670 #> [4826] 0.0702580065 0.0522700846 0.0448382236 0.0832679942 0.1336123049 #> [4831] 0.0739181340 0.0834627599 0.0904449522 0.0902323946 0.0582634360 #> [4836] 0.0412247553 0.0743533075 0.0684093311 0.0826025754 0.0681697875 #> [4841] 0.0389473476 0.0719734058 0.0968151391 0.0888963863 0.0553795770 #> [4846] 0.1279946864 0.1254999787 0.0857119858 0.0779509693 0.1098933890 #> [4851] 0.0985238776 0.0618587248 0.0665352568 0.1454255134 0.1136856154 #> [4856] 0.0579852089 0.1478751898 0.1206041798 0.0631325319 0.1301550120 #> [4861] 0.1211638972 0.0503395200 0.0302434713 0.0671082288 0.0821726173 #> [4866] 0.0688456744 0.0732456446 0.0333768763 0.0610969253 0.1193941012 #> [4871] 0.0950303078 0.0470741540 0.0599232912 0.0721795037 0.0951921269 #> [4876] 0.0515301190 0.0257368553 0.0422172733 0.0558877923 0.0562874824 #> [4881] 0.0267889109 0.0116771115 0.0278835371 0.0302737188 0.0226029120 #> [4886] 0.0195916295 0.0145575088 0.0415141024 0.1072263047 0.0729948580 #> [4891] 0.0314018726 0.0564200133 0.0853336975 0.0839938000 0.0533844605 #> [4896] 0.0361910872 0.0428726859 0.0683815777 0.0867289528 0.0589544885 #> [4901] 0.0839646757 0.3066810369 0.1070755050 0.0953589305 0.0665570721 #> [4906] 0.0668170676 0.0353072844 0.0569198020 0.0763101131 0.0929057747 #> [4911] 0.0973847508 0.0121370954 0.1444275975 0.0981957689 0.0457852818 #> [4916] 0.1389079690 0.0950150341 0.0519530401 0.0779975653 0.0686703101 #> [4921] 0.0702679977 0.0517394543 0.0197321232 0.1771073639 0.0870543346 #> [4926] 0.0941238180 0.1000815779 0.1019647196 0.0184349474 0.0257742405 #> [4931] 0.0288721249 0.0940461680 0.1147208139 0.1968508959 0.0372309275 #> [4936] 0.1133421585 0.1661136001 0.1256473511 0.1048869938 0.0892276466 #> [4941] 0.1619640738 0.0938360021 0.0300219618 0.1646056026 0.0631607622 #> [4946] 0.0306941643 0.1224407256 0.1277294755 0.0979813784 0.0513736643 #> [4951] 0.0677746087 0.0832936093 0.0105967568 0.0539645068 0.0236559547 #> [4956] 0.1303874701 0.0476593710 0.0579373501 0.1123266295 0.0286979713 #> [4961] 0.1183378324 0.0959612355 0.1089745089 0.1126106381 0.0852499306 #> [4966] 0.2447309345 0.0967372730 0.1243144348 0.1653984338 0.0349270366 #> [4971] 0.1126862243 0.0453011096 0.1006553173 0.0418929271 0.0614261329 #> [4976] 0.0989633724 0.0360375419 0.0942834541 0.0493658222 0.0741763487 #> [4981] 0.1195822284 0.0863204524 0.0442837700 0.0376477912 0.0903716385 #> [4986] 0.1223655194 0.0547779948 0.0504046790 0.0999564454 0.0879417956 #> [4991] 0.0475745723 0.0377862155 0.0632669702 0.0906312838 0.0727477521 #> [4996] 0.0651087910 0.1445082575 0.1055075750 0.0676336437 0.0460989624 #> [5001] 0.0609190986 0.0542332567 0.0483429059 0.0951415598 0.0444761887 #> [5006] 0.0224668290 0.0479522310 0.0620109290 0.0483307242 0.0515601374 #> [5011] 0.0415326096 0.0381209888 0.0769191757 0.0777009428 0.0523048714 #> [5016] 0.0274503976 0.0397467129 0.0546442792 0.0598779209 0.0747698620 #> [5021] 0.0308502950 0.0445241556 0.0232413244 0.0602691472 0.0606716387 #> [5026] 0.0709800273 0.0372024961 0.0353685021 0.0525701270 0.0656562671 #> [5031] 0.1153766066 0.0708436072 0.0229928624 0.0332168564 0.0440409295 #> [5036] 0.0464028977 0.0530574769 0.0461466201 0.0239838716 0.0167959519 #> [5041] 0.0489707217 0.0668727234 0.0724498257 0.0395401269 0.0345688798 #> [5046] 0.0688003078 0.0714886338 0.0592388324 0.0408648774 0.0455996953 #> [5051] 0.0543039776 0.0597041845 0.0863267332 0.0571117550 0.0469233766 #> [5056] 0.0412247181 0.0696975216 0.0722316280 0.0670014173 0.0312453881 #> [5061] 0.0373013839 0.0840764642 0.0736377537 0.0612542406 0.0585452355 #> [5066] 0.1041099578 0.0737167597 0.0672099143 0.0372082405 0.0236133374 #> [5071] 0.0579040051 0.0631037280 0.0655623749 0.0575032271 0.0310848020 #> [5076] 0.0469498374 0.0871767551 0.0751954541 0.0454349220 0.0741637126 #> [5081] 0.0879449621 0.0907272920 0.0345787928 0.0292773247 0.0944605842 #> [5086] 0.0642419830 0.0676355660 0.0559596904 0.1202076972 0.0831698030 #> [5091] 0.0862223282 0.0907258913 0.0316065885 0.1042746529 0.0365679376 #> [5096] 0.2110890001 0.2855023444 0.2338144630 0.1820670515 0.1047600135 #> [5101] 0.0788904205 0.1064578369 0.1276388615 0.1105293334 0.0732871667 #> [5106] 0.0434568338 0.0033875559 0.0602913760 0.0902644470 0.0731669664 #> [5111] 0.0974112824 0.1230439246 0.1372139007 0.1296525300 0.0740735233 #> [5116] 0.0530761778 0.1270915717 0.1924457401 0.0546199754 0.0615780056 #> [5121] 0.0969118923 0.0579238087 0.1071333662 0.0820628107 0.1187705472 #> [5126] 0.0747871250 0.1241713092 0.0760519207 0.0708548725 0.0469324999 #> [5131] 0.1137340590 0.0170255508 0.0926730856 0.0301090181 0.0257338695 #> [5136] 0.1174474582 0.0481764302 0.0405824333 0.1065592840 0.0343121029 #> [5141] 0.0765364096 0.0416727476 0.0455850214 0.0543716028 0.1387936622 #> [5146] 0.0446900763 0.1096094698 0.0526161194 0.0754536763 0.0325756930 #> [5151] 0.1616274565 0.0440832041 0.0793733150 0.0997378528 0.0489882380 #> [5156] 0.0564632118 0.0640719533 0.0712855533 0.1733048409 0.2031547576 #> [5161] 0.1447159052 0.0493736118 0.1176694930 0.0240019262 0.1109756008 #> [5166] 0.0141283693 0.0793403834 0.0199692361 0.0570480749 0.1184692979 #> [5171] 0.0280412082 0.0806450397 0.0648911521 0.0540414974 0.1318916082 #> [5176] 0.0727662817 0.0948089361 0.1043547615 0.0274951681 0.0247314051 #> [5181] 0.0409070812 0.0581562184 0.0269217659 0.0861247331 0.0595060773 #> [5186] 0.0382828712 0.0910820439 0.0547289401 0.0433718935 0.0270153787 #> [5191] 0.0204477664 0.0419208929 0.0466959700 0.0544413254 0.0283521283 #> [5196] 0.0207080599 0.0368620008 0.0362213664 0.0538173206 0.0462799892 #> [5201] 0.0384192355 0.0445423946 0.0258064382 0.0277213100 0.0119873695 #> [5206] 0.0329674706 0.0259032380 0.0418307073 0.0142061356 0.0391180627 #> [5211] 0.0142889163 0.0257200524 0.0108101033 0.0213010274 0.0227422714 #> [5216] 0.0207587276 0.0385847762 0.0249630716 0.0180409048 0.0264381468 #> [5221] 0.0907376856 0.0455165431 0.0195765458 0.0132338116 0.0300686285 #> [5226] 0.0272318237 0.0292512011 0.0203382317 0.0240881629 0.0222081095 #> [5231] 0.0277971011 0.0183182191 0.0442342125 0.0235329047 0.0171841271 #> [5236] 0.0270705987 0.0259276666 0.0665946379 0.0672702119 0.0184225366 #> [5241] 0.0437275916 0.0378755741 0.0558025576 0.0318621993 0.0529750921 #> [5246] 0.0259053241 0.0524943173 0.0730601475 0.0520810820 0.0186050497 #> [5251] 0.0444792658 0.0572252013 0.0825941488 0.0274795257 0.0570421591 #> [5256] 0.0615911223 0.0311196949 0.0246562883 0.0722565651 0.0303537976 #> [5261] 0.0205547027 0.0996647701 0.0536254421 0.0321388356 0.0871733800 #> [5266] 0.0603037179 0.0769257993 0.0372271165 0.0745743364 0.0688361749 #> [5271] 0.0408276320 0.0745003894 0.0924611911 0.0402822010 0.0392432958 #> [5276] 0.0499627516 0.0601443537 0.0582266264 0.0108202733 0.1119255126 #> [5281] 0.1642643958 0.0695817098 0.1056884602 0.0251204614 0.0344581865 #> [5286] 0.0084510641 0.0389074758 0.1228809953 0.1790638417 0.0362240411 #> [5291] 0.3508037925 0.4483014345 0.1216727868 0.1141836420 0.2120683044 #> [5296] 0.4133429229 0.0851745084 0.4422377348 0.3823378980 0.0525885038 #> [5301] 0.1544567198 0.2008320540 0.0816536546 0.2951590121 0.3453201950 #> [5306] 0.3162201941 0.1442864984 0.5044518113 0.2422377318 0.1584039778 #> [5311] 0.0552642979 0.1977107823 0.4229851067 0.1308882087 0.3928515613 #> [5316] 0.4219163060 0.1459149420 0.0895365253 0.0611205548 0.1318713725 #> [5321] 0.2463279814 0.3590238988 0.2586393654 0.3839194477 0.4913975000 #> [5326] 0.0950918645 0.0544155203 0.0999789089 0.0495425276 0.0799778476 #> [5331] 0.1445639282 0.4050863981 0.2948217988 0.3041107953 0.4508527517 #> [5336] 0.1397962421 0.1073120907 0.2726283073 0.3657806516 0.2856383622 #> [5341] 0.2761713266 0.4892368913 0.1158977970 0.0440950617 0.0638396889 #> [5346] 0.1276718378 0.2797795534 0.3624505103 0.0979625359 0.4556559026 #> [5351] 0.3261180520 0.0784751773 0.1053705886 0.1325480044 0.1374855042 #> [5356] 0.2696171403 0.4058264494 0.0817683116 0.4916463494 0.2922007143 #> [5361] 0.0488496758 0.1020861268 0.3518896103 0.3916258514 0.2190323472 #> [5366] 0.4909122288 0.2026599646 0.0817695111 0.1497562677 0.1170964539 #> [5371] 0.2235412747 0.1526031494 0.1227530837 0.1226591691 0.1748807430 #> [5376] 0.0567781143 0.3878215253 0.1214436665 0.2923903763 0.2012862265 #> [5381] 0.1732044965 0.0699746832 0.0671493709 0.0213905405 0.0224810559 #> [5386] 0.0188709553 0.0210648216 0.0254260134 0.0287173204 0.0212434381 #> [5391] 0.0189959779 0.0040236637 0.0297807492 0.0417533778 0.0317215361 #> [5396] 0.0283315796 0.0340388305 0.0250903908 0.0271196365 0.0238501672 #> [5401] 0.0171043184 0.0038580336 0.0102817938 0.0072064372 0.0142386528 #> [5406] 0.0218601134 0.0181720573 0.0183483437 0.0164030306 0.0178381503 #> [5411] 0.0638495460 0.0522371419 0.2816477418 0.0844654143 0.1599261165 #> [5416] 0.1235893145 0.0361017287 0.0049308469 0.0674661919 0.0855747983 #> [5421] 0.0808404908 0.0735517889 0.0623730496 0.0360133424 0.0224789493 #> [5426] 0.0263871308 0.1036707237 0.0468518361 0.0232893806 0.0532234944 #> [5431] 0.0425179042 0.0165295266 0.0252749193 0.0234128516 0.0441636331 #> [5436] 0.0837853849 0.0380052440 0.0484388582 0.0844100490 0.0322108828 #> [5441] 0.0215381235 0.0313545205 0.0141119557 0.0187895354 0.0428630561 #> [5446] 0.1027186215 0.1453064680 0.1775381863 0.2191359401 0.1473486125 #> [5451] 0.4988324344 0.2656071186 0.0569721423 0.0904725492 0.0304157585 #> [5456] 0.0519637018 0.0290449243 0.1178326458 0.2930719554 0.3838022947 #> [5461] 0.0757395998 0.4912763238 0.3182755411 0.1082734913 0.1727127582 #> [5466] 0.0849561244 0.1446462125 0.3718553185 0.2055842429 0.3374800682 #> [5471] 0.4142904878 0.1515445709 0.0612747073 0.1489905566 0.2477793843 #> [5476] 0.1538169831 0.3186166883 0.1034347638 0.4338999093 0.2454200089 #> [5481] 0.0363972858 0.1281026006 0.0432819799 0.0508265235 0.0771476850 #> [5486] 0.1124877930 0.0812678710 0.0112368753 0.2596831620 0.3306179643 #> [5491] 0.0929538384 0.3921553195 0.3930743635 0.0563595779 0.1245011240 #> [5496] 0.0748245716 0.0489898138 0.3004488051 0.3763409853 0.2609380484 #> [5501] 0.3075477779 0.5258842111 0.2337283939 0.0685065314 0.2197149098 #> [5506] 0.2472165376 0.3589292765 0.1253342032 0.4463847578 0.3339588642 #> [5511] 0.1053088903 0.0643717870 0.1405522972 0.0349805653 0.0653521419 #> [5516] 0.3358145356 0.3261899650 0.1463988125 0.0000000000 #>  #> $Jerk$sampling #> [1] \"regular\" #>  #> $Jerk$sampling_rate #> [1] 1 #>  #> $Jerk$sampling_rate_unit #> [1] \"Hz\" #>  #> $Jerk$depid #> [1] \"md13_134a\" #>  #> $Jerk$creation_date #> [1] \"2023-07-05 15:03:35.417483\" #>  #> $Jerk$history #> [1] \"sens_struct\" #>  #> $Jerk$full_name #> [1] \"norm jerk\" #>  #> $Jerk$description #> [1] \"norm jerk\" #>  #> $Jerk$unit #> [1] \"m/s3\" #>  #> $Jerk$unit_name #> [1] \"meters per seconds cubed\" #>  #> $Jerk$unit_label #> [1] \"m/s^3\" #>  #> $Jerk$start_offset #> [1] 0 #>  #> $Jerk$start_offset_units #> [1] \"second\" #>  #> $Jerk$column_name #> [1] \"jerk\" #>  #> $Jerk$frame #> [1] \"animal\" #>  #> $Jerk$axes #> [1] \"FRU\" #>  #> $Jerk$type #> [1] \"njerk\" #>  #>  #> $info #> $info$creation_date #> [1] \"2023-07-05 15:03:35.418501\" #>  #> $info$depid #> [1] \"md13_134a\" #>  #> $info$field #> [1] \"params\" #>  #> $info$dtype_source #> [1] \"md13_134aprh25.mat\" #>  #> $info$dtype_datetime_made #> [1] \"7/07/2017 22:50:00\" #>  #> $info$dtype_nfiles #> [1] \"1\" #>  #> $info$dtype_format #> [1] \"MAT\" #>  #> $info$device_serial #> [1] \"77031D26\" #>  #> $info$device_make #> [1] \"DTAG\" #>  #> $info$device_type #> [1] \"Archival\" #>  #> $info$device_model #> [1] \"DTAG3\" #>  #> $info$device_url #> [1] \"https://www.soundtags.org\" #>  #> $info$sensors_firm #> [1] \"Not specified\" #>  #> $info$sensors_soft #> [1] \"Not specified\" #>  #> $info$sensors_list #> [1] \"3axis Accelerometer,3 axis Magnetometer,Pressure\" #>  #> $info$animal_id #> [1] \"Unknown\" #>  #> $info$animal_species_common #> [1] \"Blainville's beaked whale\" #>  #> $info$animal_species_science #> [1] \"Mesoplodon densirostris\" #>  #> $info$animal_dbase_url #> [1] \"https://www.cetabase.info/\" #>  #> $info$dephist_device_tzone #> [1] \"0\" #>  #> $info$dephist_device_regset #> [1] \"dd/mm/yyyy HH:MM:SS\" #>  #> $info$dephist_device_datetime_start #> [1] \"2013-05-14 12:42:00\" #>  #> $info$dephist_deploy_locality #> [1] \"El Hierro,Canary Islands,Spain\" #>  #> $info$dephist_deploy_location_lat #> [1] \"27.66\" #>  #> $info$dephist_deploy_location_lon #> [1] \"-18\" #>  #> $info$dephist_deploy_datetime_start #> [1] \"2013-05-14 12:42:00\" #>  #> $info$dephist_deploy_method #> [1] \"Suction cup\" #>  #> $info$project_name #> [1] \"El Hierro 2013\" #>  #> $info$project_datetime_start #> [1] \"2013-05-01\" #>  #> $info$project_datetime_end #> [1] \"2013-06-01\" #>  #> $info$provider_name #> [1] \"Mark Johnson, Natacha Aguilar de Soto\" #>  #> $info$provider_details #> [1] \"Univ St Andrews, Univ La Laguna\" #>  #> $info$provider_email #> [1] \"info@animaltags.org\" #>  #> $info$provider_license #> [1] \"Contact data provider\" #>  #> $info$provider_cite #> [1] \"Contact data provider\" #>  #> $info$provider_doi #> [1] \"Contact data provider\" #>  #> $info$udm_export #> [1] \"1\" #>  #> $info$udm_segment #> [1] \"5062,10581\" #>  #> $info$udm_segment_unit #> [1] \"seconds since tag start\" #>  #>  #> attr(,\"class\") #> [1] \"animaltag\" \"list\""},{"path":"/reference/m2h.html","id":null,"dir":"Reference","previous_headings":"","what":"Heading from accelerometer and magnetometer data — m2h","title":"Heading from accelerometer and magnetometer data — m2h","text":"function used compute heading, field intensity, inclination angle gimballing magnetic field measurement matrix pitch roll estimated accelerometer matrix.","code":""},{"path":"/reference/m2h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heading from accelerometer and magnetometer data — m2h","text":"","code":"m2h(M, A, sampling_rate = NULL, fc = NULL)"},{"path":"/reference/m2h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heading from accelerometer and magnetometer data — m2h","text":"M sensor data structure matrix, M = [mx,,mz] consistent unit (e.g., uT Gauss) magnetometer sensor list (e.g., readtag.R). sensor data structure matrix columns [ax ay az] acceleration sensor list (e.g., readtag.R). Acceleration can consistent unit, e.g., g m/s^2. sampling_rate (optional) sampling rate sensor data Hz (samples per second). needed filtering required. M sensor data lists, sampling_rate obtained . fc (optional) cut-frequency low-pass filter apply M computing heading. filter cut-frequency Hertz. filter length 4*sampling_rate/fc. Filtering adds group delay. fc specified, filtering performed.","code":""},{"path":"/reference/m2h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heading from accelerometer and magnetometer data — m2h","text":"list 3 elements: h:  heading radians frame M. heading respect magnetic north (.e., north vector navigation frame) must corrected declination. v:  estimated magnetic field intensity units M. computed taking 2-norm M, filtering (filtering specified). incl:  estimated magnetic field inclination angle (.e., angle respect horizontal plane) radians. convention, field vector pointing horizon positive inclination angle. See note function using incl.","code":""},{"path":"/reference/m2h.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Heading from accelerometer and magnetometer data — m2h","text":"Output sampling rate input sampling rate (.e. h, v, incl estimated sampling rate M nx1 vectors). Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. North east magnetic, true. frames positive heading clockwise rotation around z-axis. heading computed respect frame M magnetic heading true heading. M must sampling rate, frame, number rows.","code":""},{"path":[]},{"path":"/reference/m2h.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heading from accelerometer and magnetometer data — m2h","text":"","code":"m2h_out <- m2h(M = matrix(c(22, -24, 14), nrow = 1),                          A = matrix(c(-0.3, 0.52, 0.8), nrow = 1))"},{"path":"/reference/make_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an info structure with tag metadata — make_info","title":"Make an info structure with tag metadata — make_info","text":"function allows user generate \"skeleton\" info structure tag deployment, common pieces metadata filled . Additional information can added manually using custom script saving info part netCDF file.","code":""},{"path":"/reference/make_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an info structure with tag metadata — make_info","text":"","code":"make_info(depid, tagtype, species, owner)"},{"path":"/reference/make_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an info structure with tag metadata — make_info","text":"depid Deployment id string tag record tagtype String identifying tag type, example 'dtag', 'cats', 'mk10', ... species (optional) 2-letter string first letters species binomial owner (optional) String initials tag data owner","code":""},{"path":"/reference/make_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an info structure with tag metadata — make_info","text":"list containing metadata tag deployment. recommended name output \"info\" save part netCDF tag data archive file (along tag sensor data).","code":""},{"path":"/reference/make_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make an info structure with tag metadata — make_info","text":"","code":"info <- make_info(\"d4_template\", \"dtag4\", \"zc\", \"sdr\")"},{"path":"/reference/make_specgram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a spectrogram with default settings — make_specgram","title":"Plot a spectrogram with default settings — make_specgram","text":"wrapper function specgram draw spectrogram input argument names defaults tag tools Matlab/Octave function make_specgram.","code":""},{"path":"/reference/make_specgram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a spectrogram with default settings — make_specgram","text":"","code":"make_specgram(   x,   nfft = 256,   fs = 2,   window = signal::hanning(nfft),   noverlap = length(window)/2,   draw_plot = TRUE )"},{"path":"/reference/make_specgram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a spectrogram with default settings — make_specgram","text":"x input signal nfft specifies number frequency points used calculate discrete Fourier transforms. fs sampling frequency Hz window specify scalar window, make_specgram uses Hanning window length. window must length smaller equal nfft greater noverlap. noverlap number samples sections x overlap. draw_plot (logical) plot drawn? Defaults TRUE.","code":""},{"path":"/reference/make_specgram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a spectrogram with default settings — make_specgram","text":"draw_plot TRUE, plot produced. FALSE, list returned, follows. element matrix three matrices size. s,  matrix spectrogram values signal x dB. f,  Frequencies (Hz) corresponding rows s t,  Time indices corresponding columns s","code":""},{"path":"/reference/make_specgram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a spectrogram with default settings — make_specgram","text":"","code":"x <- signal::chirp(seq(from = 0, by = 0.001, to = 2),   f0 = 0,   t1 = 2,   f1 = 500 ) fs <- 2 nfft <- 256 numoverlap <- 128 window <- signal::hanning(nfft) S <- make_specgram(x, nfft, fs, window, numoverlap, draw_plot = FALSE)"},{"path":"/reference/mean_absorption.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the mean absorption in salt water — mean_absorption","title":"Calculate the mean absorption in salt water — mean_absorption","text":"function used calculate mean absorption salt water frequency range.","code":""},{"path":"/reference/mean_absorption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the mean absorption in salt water — mean_absorption","text":"","code":"mean_absorption(freq, r, depth, Ttab = NULL)"},{"path":"/reference/mean_absorption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the mean absorption in salt water — mean_absorption","text":"freq Specifies frequency range, freq = c(fmin, fmax) Hz. single frequency, use scalar value freq. r path (slant) length metres. depth depths covered path. can single value horizontal path two component vector .e., depth = c(dmax, dmin) path extends two depths. Ttab (optional) temperature (scalar) degrees C specifies temperature profile Ttab = c(depth, tempr) depth tempr equal-sized column vectors. Default value isothermal profile 13 degrees.","code":""},{"path":"/reference/mean_absorption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the mean absorption in salt water — mean_absorption","text":"mean sound absorption path dB.","code":""},{"path":"/reference/mean_absorption.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate the mean absorption in salt water — mean_absorption","text":"Kinsler Frey pp. 159-160.","code":""},{"path":"/reference/mean_absorption.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the mean absorption in salt water — mean_absorption","text":"","code":"mean_absorption(c(25e3, 60e3), 1000, c(0, 700)) #>          [,1] #> [1,] 7.728188"},{"path":"/reference/median_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the nth-order median filter — median_filter","title":"Computes the nth-order median filter — median_filter","text":"function computes nth-order median filter column X. filter output median consecutive group n samples. useful removing occasional outliers data otherwise fairly smooth. makes appropriate pressure, temperature magnetometer data (amongst sensors) suitable acceleration can highly dynamic. filter introduce delay. start end values, .e., within n samples start end input data, computed decreasing order median filters unless noend = TRUE. noend = TRUE, start end values taken directly X without short median filters.","code":""},{"path":"/reference/median_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the nth-order median filter — median_filter","text":"","code":"median_filter(X, n, noend = TRUE)"},{"path":"/reference/median_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the nth-order median filter — median_filter","text":"X sensor list vector matrix. multiple columns data, column treated separate signal filtered. n filter length. even n given, automatically incremented make odd. ensures median well-defined (median even length vector usually defined mean middle two points may differ different programmes). Note short n (e.g., 3 5) usually sufficient processing slow n large. noend TRUE (default), start end values taken directly X without short median filters.","code":""},{"path":"/reference/median_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the nth-order median filter — median_filter","text":"output filter. size S sampling rate units X. X sensor list, return also .","code":""},{"path":"/reference/median_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the nth-order median filter — median_filter","text":"","code":"v <- matrix(c(1, 3, 4, 4, 20, -10, 5, 6, 6, 7), ncol = 1) w <- median_filter(v, n = 3)"},{"path":"/reference/merge_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge the fields of two lists — merge_fields","title":"Merge the fields of two lists — merge_fields","text":"function used merge fields two lists. duplicate fields, fields s1 taken.","code":""},{"path":"/reference/merge_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge the fields of two lists — merge_fields","text":"","code":"merge_fields(s1, s2)"},{"path":"/reference/merge_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge the fields of two lists — merge_fields","text":"s1 Arbitrary list e.g., containing metadata settings. s2 Arbitrary list e.g., containing metadata settings.","code":""},{"path":"/reference/merge_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge the fields of two lists — merge_fields","text":"list containing fields s1 s2","code":""},{"path":"/reference/merge_fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge the fields of two lists — merge_fields","text":"","code":"s1 <- list(a = 1, b = c(2, 3, 4)) s2 <- list(b = 3, c = \"cat\") s <- merge_fields(s1, s2)"},{"path":"/reference/metadata_editor.html","id":null,"dir":"Reference","previous_headings":"","what":"Edits a html file from given csv. — metadata_editor","title":"Edits a html file from given csv. — metadata_editor","text":"Takes data csv, edits default given html fill data csv. HTML must tagmetadata.html variations, csv contain metadata tag.","code":""},{"path":"/reference/metadata_editor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edits a html file from given csv. — metadata_editor","text":"","code":"metadata_editor(   masterHTML = system.file(\"extdata\", \"tagmetadata.html\", package = \"tagtools\"),   csvfilename = system.file(\"extdata\", \"blank_template.csv\", package = \"tagtools\") )"},{"path":"/reference/metadata_editor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edits a html file from given csv. — metadata_editor","text":"masterHTML default masterHTML located package, can changed according user input. csvfilename file name csv used editing HTML","code":""},{"path":"/reference/metadata_editor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edits a html file from given csv. — metadata_editor","text":"\"dynamic tagmetadata.html\" masterHTML changes csv. file written current working directory, also opened editing user.","code":""},{"path":"/reference/msa.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute MSA — msa","title":"Compute MSA — msa","text":"function used compute Minimum Specific Acceleration (MSA). absolute value norm acceleration minus 1 g, .e., amount acceleration differs gravity value. always equal less actual specific acceleration correctly calibrated.","code":""},{"path":"/reference/msa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute MSA — msa","text":"","code":"msa(A, ref)"},{"path":"/reference/msa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute MSA — msa","text":"nx3 acceleration matrix columns [ax ay az], tag sensor data list containing acceleration data. Acceleration can consistent unit, e.g., g m/s^2. can frame MSA rotation independent. ref gravitational field strength units . needed sensor structure. matrix, default value 9.81 assumes m/s^2. Use ref = 1 unit g.","code":""},{"path":"/reference/msa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute MSA — msa","text":"column vector MSA number rows , tag sensor data list (output matches input). m units .","code":""},{"path":"/reference/msa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute MSA — msa","text":"Possible input combinations: msa() list, msa(,ref) matrix.","code":""},{"path":"/reference/msa.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute MSA — msa","text":"See Simon et al. (2012) Journal Experimental Biology, 215:3786-3798.","code":""},{"path":[]},{"path":"/reference/msa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute MSA — msa","text":"","code":"sampleMatrix <- matrix(c(1, -0.5, 0.1, 0.8, -0.2, 0.6, 0.5, -0.9, -0.7),   byrow = TRUE, nrow = 3, ncol = 3 ) msa(A = sampleMatrix, ref = 1) #> [1] 0.1224972 0.0198039 0.2449900"},{"path":"/reference/m_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Mahalanobis distance — m_dist","title":"Calculate Mahalanobis distance — m_dist","text":"function used calculate Mahalanobis distance multivariate time series.","code":""},{"path":"/reference/m_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Mahalanobis distance — m_dist","text":"","code":"m_dist(   data,   sampling_rate,   smoothDur,   overlap,   consec,   cumSum,   expStart,   expEnd,   baselineStart,   baselineEnd,   BL_COV )"},{"path":"/reference/m_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Mahalanobis distance — m_dist","text":"data data frame matrix one row time point. Note Mahalanobis distance calculation carried continuous data , data contain logical, factor character data, proceed risk...errors (least meaningless results) probably ensue. sampling_rate sampling rate Hz (data regularly sampled). specified assumed 1 Hz. smoothDur length, minutes, window use calculation \"comparison\" values. specified zero, smoothing (distance calculated data observation). overlap amount overlap, minutes, consecutive \"comparison\" windows. smooth_dur - overlap give time resolution  resulting distance time series. specified zero, overlap.  Overlap also set zero smoothDur unspecified zero. consec Logical. consec = TRUE, calculated distances consecutive windows duration smoothDur, sliding forward data set time step (smoothDur-overlap) minutes. TRUE, baselineStart baselineEnd inputs used define period used calculate data covariance matrix. Default consec = FALSE. cumSum Logical.  cum_sum = TRUE, output cumulative sum calculated distances, rather distances . Default cum_sum = FALSE. expStart Start times (seconds since start data set) experimental exposure period(s). expEnd End times (seconds since start data set) experimental exposure period(s). either exp_start exp_end missing, distance calculated whole dataset full dataset assumed baseline. baselineStart Start time (seconds since start data set) baseline period (mean data values period used 'control' \"comparison\" data points (windows) compared. specified, assumed 0 (start record). baselineEnd End time (seconds since start data set) baseline period. specified, entire data set used (baseline_end last sampled time-point data set). BL_COV Logical.  BL_COV=  TRUE, covariance matrix using data baseline period used calculating Mahalanobis distance. Default BL_COV = FALSE.","code":""},{"path":"/reference/m_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Mahalanobis distance — m_dist","text":"Data frame containing results: D$t times seconds since start dataset, Mahalanobis distances reported. smoothDur applied, reported times start times \"comparison\" window. D$dist Mahalanobis distances specified baseline period specified \"comparison\" periods.","code":""},{"path":"/reference/m_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Mahalanobis distance — m_dist","text":"","code":"BW <- beaked_whale m_dist_result <- m_dist(BW$A$data, BW$A$sampling_rate)"},{"path":"/reference/njerk.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the norm-jerk — njerk","title":"Compute the norm-jerk — njerk","text":"function used compute norm-jerk triaxial acceleration data.","code":""},{"path":"/reference/njerk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the norm-jerk — njerk","text":"","code":"njerk(A, sampling_rate)"},{"path":"/reference/njerk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the norm-jerk — njerk","text":"tag sensor data list nx3 acceleration matrix columns [ax ay az]. Acceleration can consistent unit, e.g., g m/s^2. can frame norm-jerk rotation independent. must least 2 rows (.e., n>=2). sampling_rate sampling rate Hz acceleration signals. used estimate differential first-order difference.","code":""},{"path":"/reference/njerk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the norm-jerk — njerk","text":"norm-jerk triaxial acceleration data form column vector number rows , tag sensor data structure (input one). norm-jerk ||dA/dt||, ||x|| 2-norm x, .e., square-root sum squares axis. unit m/s^2, norm-jerk unit m/s^3. unit g, norm-jerk unit g/s. j norm jerk, always positive zero (acceleration constant). final value j always 0 last finite difference calculated.","code":""},{"path":[]},{"path":"/reference/njerk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the norm-jerk — njerk","text":"","code":"sampleMatrix <- matrix(c(1, 2, 3, 2, 2, 4, 1, -2, 4, 4, 4, 4), byrow = TRUE, nrow = 4, ncol = 3) norm_jerk <- njerk(A = sampleMatrix, sampling_rate = 5)"},{"path":"/reference/norm2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the row-wise vector norm — norm2","title":"Compute the row-wise vector norm — norm2","text":"function used compute row-wise vector norm X X matrix. X vector (row column), v vector norm.","code":""},{"path":"/reference/norm2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the row-wise vector norm — norm2","text":"","code":"norm2(X)"},{"path":"/reference/norm2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the row-wise vector norm — norm2","text":"X data structure, vector matrix.","code":""},{"path":"/reference/norm2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the row-wise vector norm — norm2","text":"row-wise vector-norm matrix X, .e., square-root sum squares row. X vector (row column), v vector norm norm2() equivalent built-function norm(). X matrix e.g., triaxial accelerometer magnetometer matrix, norm() gives overall norm matrix whereas norm2() gives vector norm row (.e., field strength case magnetometer matrix).","code":""},{"path":"/reference/norm2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the row-wise vector norm — norm2","text":"","code":"sampleMatrix <- matrix(c(0.2, 0.4, -0.7, -0.3, 1.1, 0.1), byrow = TRUE, nrow = 2, ncol = 3) norm2(X = sampleMatrix) #> [1] 0.8306624 1.1445523"},{"path":"/reference/ocdr.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the forward speed — ocdr","title":"Estimate the forward speed — ocdr","text":"function used estimate forward speed flying diving animal first computing altitude depth-rate (.e., first differential pressure meters) correcting pitch angle. called Orientation Corrected Depth Rate. two major assumptions method: () animal moves direction longitudinal axis, (ii) frame coincides animal's axes.","code":""},{"path":"/reference/ocdr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the forward speed — ocdr","text":"","code":"ocdr(p, A, sampling_rate, fc, plim)"},{"path":"/reference/ocdr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the forward speed — ocdr","text":"p depth altitude vector (regularly sampled time series) depth altitude sensors list meters, sampled sampling_rate Hz. nx3 acceleration matrix columns [ax ay az] acceleration sensor list (e.g., readtag.R). Acceleration can consistent unit, e.g., g m/s^2. must number rows p. sampling_rate sampling rate p Hz (samples per second). fc (optional) Specifies cut-frequency low-pass filter apply p computing depth-rate computing pitch. filter cut-frequency Hz. filter length 4*sampling_rate/fc. Filtering adds group delay. fc empty given, default value 0.2 Hz (.e., 5 second time constant) used. plim (optional) Specifies minimum pitch angle radians speed can computed. Errors speed estimation using method increase strongly low pitch angles. avoid estimates poor accuracy used later analyses, speed estimates low pitch angles replaced NaN (--number). default threshold 20 degrees.","code":""},{"path":"/reference/ocdr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the forward speed — ocdr","text":"forward speed estimate m/s","code":""},{"path":"/reference/ocdr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate the forward speed — ocdr","text":"Possible input combinations: ocdr(p,) p lists, ocdr(p,,fc = fc) p lists, ocdr(p,,fc = fc,plim = plim) p lists, ocdr(p,,sampling_rate) p vectors/matrices, ocdr(p,,sampling_rate,fc) p vectors/matrices, ocdr(p,,sampling_rate,fc,plim) p vectors/matrices.","code":""},{"path":"/reference/ocdr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate the forward speed — ocdr","text":"Output sampling rate input sampling rate s size p. Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. frames, positive pitch angle anti-clockwise rotation around y-axis. descending animal negative pitch angle.","code":""},{"path":"/reference/ocdr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the forward speed — ocdr","text":"","code":"HS <- harbor_seal s <- ocdr(p = HS$P$data, A = HS$A$data, sampling_rate = HS$P$sampling_rate, fc = NULL, plim = NULL) speed <- list(s = s) plott(speed, HS$P$sampling_rate)"},{"path":"/reference/odba.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute ODBA — odba","title":"Compute ODBA — odba","text":"function used compute 'Overall Dynamic Body Acceleration' sensu Wilson et al. 2006. ODBA norm high-pass-filtered acceleration. Several methods computing ODBA use differ norm filter used.  Wilson paper, 1-norm rectangular window (moving average) filter used. moving average subtracted input accelerations implement high-pass filter.  2-norm may preferable tag orientation unknown may change termed VeDBA. tapered symmetric FIR  filter gives efficient high-pass filtering compared rectangular window method avoids lobes response.","code":""},{"path":"/reference/odba.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute ODBA — odba","text":"","code":"odba(A, sampling_rate = NULL, fh = NULL, method = \"fir\", n = NULL)"},{"path":"/reference/odba.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute ODBA — odba","text":"tag sensor data list containing tri-axial acceleration data nx3 acceleration matrix columns [ax ay az]. Acceleration can consistent unit, e.g., g m/s^2. can frame result depends method used compute ODBA.  default method VeDBA method rotation independent give result irrespective frame . 1-norm method complex dependency frame. sampling_rate sampling rate Hz acceleration signals. Required 'fir' method tag sensor data list. fh high-pass filter cut-frequency Hz. chosen half stroking rate animal (e.g., using dsf.R). Required default 'fir' method. method character containing either 'wilson' 'vedba' 'fir'. determines ethod ODBA calculated. default method 'fir'. n rectangular window (moving average) length samples. needed using classic ODBA VeDBA forms (methods 'wilson' 'vedba').","code":""},{"path":"/reference/odba.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute ODBA — odba","text":"column vector ODBA number rows . e units .","code":""},{"path":"/reference/odba.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute ODBA — odba","text":"applying default (FIR filtering) method calculate odba, use inputs , sampling_rate, fh. applying 'vedba' 'wilson' method, use inputs , n, method.","code":""},{"path":"/reference/odba.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute ODBA — odba","text":"","code":"BW <- beaked_whale e <- odba(A = BW$A$data, sampling_rate = BW$A$sampling_rate, fh = 0.05) ba <- list(e = e) plott(ba, BW$A$sampling_rate)"},{"path":"/reference/plott.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot tag data time series — plott","title":"Plot tag data time series — plott","text":"Plot time series single multi-paneled figure. useful, example, comparing measurements across different sensors animaltag data object. time axis automatically displayed seconds, minutes, hours, days according span data.","code":""},{"path":"/reference/plott.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot tag data time series — plott","text":"","code":"plott(   X,   fsx = NULL,   r = FALSE,   offset = 0,   date_time_axis = FALSE,   recording_start = NULL,   panel_heights = rep.int(1, length(X)),   panel_labels = names(X),   line_colors,   interactive = FALSE,   par_opts,   ... )"},{"path":"/reference/plott.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot tag data time series — plott","text":"X List whose elements either lists (containing data metadata) vectors/matrices time series data. See details. fsx (Optional) numeric vector whose length matches number sensor data streams (list elements) X. (shorter, fsx recycled appropriate length). fsx gives sampling rate Hz data object. Sampling rates needed data object(s) X list(s) contain sampling rate information -- beware, fsx (given) override sensor metadata. r (Optional) Logical. direction y-axis flipped? Default FALSE. r length one (shorter number sensor data streams X) recycled match number sensor data streams. Reversed y-axes useful, example, plotting dive profiles match physical situation (greater depths lower display). name sensor list \"P\" contains word \"depth\", automatically reversed. offset (Optional) vector offsets, seconds, start sensor data stream start first one. example, acceleration data collection started depth data collection commenced 436 seconds later, offset depth data 436. date_time_axis (Optional) Logical. x-axis units date-times rather time-since-start--recording?  Ignored recording_start provided X contain metadata recording start time. Default FALSE. recording_start (Optional) start time tag recording POSIXct object. provided, time axis show calendar date/times; , show days/hours/minutes/seconds (appropriate) since time 0 = start recording. character string provided coerced POSIXct .POSIXct. panel_heights (Optional) vector relative absolute heights different panels (one entry sensor data stream X). Default equal-height panels. panel_heights numeric vector, interpreted relative panel heights. specify absolute panel heights centimeters using lcm (see help layout). panel_labels (Optional) list y-axis labels panels. Defaults names(X). line_colors (Optional) list colors lines multivariate data streams (example, panel plots tri-axial acceleration, three lines -- line colors first three list). May specified specification R understands colors. Defaults c(\"#000000\", \"#009E73\", \"#9ad0f3\", \"#0072B2\", \"#e79f00\", \"#D55E00\") interactive (Optional) interactive figure (allowing zoom/pan/etc.) produced? Default FALSE. Interactive plotting requires zoom package zm function. par_opts (Optional) list options passed par plotting. Default mar=c(1,5,0,0), oma=c(2,0,2,1), las=1, lwd=1, cex=0.8. ... Additional arguments passed plot.","code":""},{"path":"/reference/plott.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot tag data time series — plott","text":"plot time-series data","code":""},{"path":"/reference/plott.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot tag data time series — plott","text":"input data X animaltag object, sensor variables object plotted. plot selected sensors animaltag object my_tag, example, input X=list(my_tag$, my_tag$M) plot just accelerometer magnetometer data. possible, plot ","code":""},{"path":"/reference/plott.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot tag data time series — plott","text":"flexible plotting tool can used display explore sensor data different sampling rates uniform time grid.","code":""},{"path":"/reference/plott.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot tag data time series — plott","text":"","code":"HS <- harbor_seal list <- list(depth = HS$P$data, A = HS$A$data) plott(list, HS$P$sampling_rate, r = c(TRUE, FALSE))"},{"path":"/reference/prh_predictor1.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor1","title":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor1","text":"Predict tag position diving animal parameterized p0, r0, h0, canonical angles principal axes tag animal. tag orientation animal can change time function provides way estimate orientation start end suitable dive. function critically assumes animal rests horizontally surface (least average) dives steeply away surface without initial roll. ascents processed, must also roll last seconds ascents. See prh_predictor2 method suitable animals make short dives respirations. function provides graphical interface showing estimated tag--animal orientation throughout deployment. Follow directions top panel figure edit delete orientation estimate.","code":""},{"path":"/reference/prh_predictor1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor1","text":"","code":"prh_predictor1(P, A, sampling_rate = NULL, TH = 100, DIR = \"descent\")"},{"path":"/reference/prh_predictor1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor1","text":"P dive depth vector sensor structure units m H2O. acceleration matrix sensor structure columns ax, ay, az. Acceleration can consistent unit, e.g., g m/s^2, must sampling rate P. sampling_rate sampling rate sensor data Hz (samples per second). needed neither M sensor structures. TH optional minimum dive depth threshold (default 100m). descents start dives deeper TH analysed (ascents end dives deeper TH true). DIR optional dive direction constraint. default (DIR = 'descent') analyse descents tend give better results. DIR = '', descents ascents analysed.","code":""},{"path":"/reference/prh_predictor1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor1","text":"PRH, data frame columns cue  p0, r0, h0, q row dive edge analysed. cue time second-since-tag-start dive edge analysed. p0, r0, h0 deduced tag orientation angles radians. q quality indicator low value (near 0, e.g., <0.05) indicating data fit consistently assumptions method.","code":""},{"path":[]},{"path":"/reference/prh_predictor2.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor2","title":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor2","text":"Predict tag position diving animal parametrized p0, r0, h0, canonical angles principal axes tag animal. tag orientation animal can change time function provides way estimate orientation start end suitable dive. function critically assumes animal makes sequence short dives respirations animal remains upright (.e., roll) shallow dives. See prh_predictor1 method suitable animals rest horizontally surface. function provides graphical interface showing estimated tag--animal orientation throughout deployment. Follow directions top panel figure edit delete orientation estimate. function provides graphical interface showing estimated tag--animal orientation throughout deployment. Follow directions top panel figure edit delete orientation estimate.","code":""},{"path":"/reference/prh_predictor2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor2","text":"","code":"prh_predictor2(P, A, sampling_rate = NULL, MAXD = 10)"},{"path":"/reference/prh_predictor2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor2","text":"P dive depth vector sensor structure units m H2O. acceleration matrix sensor structure columns ax, ay, az. Acceleration can consistent unit, e.g., g m/s^2, must sampling rate P. sampling_rate sampling rate sensor data Hz (samples per second). needed neither M sensor structures. MAXD optional maximum depth near-surface dives. default value 10 m. used find contiguous surface intervals suitable analysis.","code":""},{"path":"/reference/prh_predictor2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor2","text":"PRH, data frame columns cue  p0, r0, h0, q row dive edge analysed. cue time second-since-tag-start dive edge analysed. p0, r0, h0 deduced tag orientation angles radians. q quality indicator low value (near 0, e.g., <0.05) indicating data fit consistently assumptions method.","code":""},{"path":[]},{"path":"/reference/ptrack.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate simple dead-reckoned track — ptrack","title":"Estimate simple dead-reckoned track — ptrack","text":"function used estimate simple dead-reckoned track (pseudo-track) based speed bodypointing angle.","code":""},{"path":"/reference/ptrack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate simple dead-reckoned track — ptrack","text":"","code":"ptrack(A, M, s, sampling_rate = NULL, fc = 0.2, return_pe = FALSE)"},{"path":"/reference/ptrack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate simple dead-reckoned track — ptrack","text":"nx3 acceleration matrix columns [ax ay az] acceleration sensor list. Acceleration can consistent unit, e.g., g m/s^2. M magnetometer signal matrix, M = [mx,,mz] consistent unit (e.g., uT Gauss)  magnetometer sensor list. M must size (measured sampling rate). s forward speed animal m/s. s can single number meaning animal assumed travel constant speed. s can also vector number rows M, e.g., generated speed_from_depth(). sampling_rate sampling rate sensor data Hz (samples per second). input ignored /M sensor lists, case sampling rate extracted . fc (optional) cut-frequency low-pass filter apply M computing bodypointing angle. filter cut-frequency Hz. filter length 4*sampling_rate/fc. Filtering adds group delay. fc empty given, default value 0.2 Hz (.e., 5 second time constant) used. return_pe Logical. return_pe TRUE, estimated depth altitude predicted returned estimated track. Default FALSE.","code":""},{"path":"/reference/ptrack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate simple dead-reckoned track — ptrack","text":"estimated track local level frame. track defined meters northward eastward movement (variables 'northing' 'easting' output data frame) relative animal's position start measurements  (defined [0,0]). track sampling rate input data row T defines track coordinates times 0,1/sampling_rate,2/sampling_rate,... relative start time measurements. , return_pe = TRUE, function returns value estimated depth altitude predicted speed pitch angle. can compared measured depth/altitude assess errors dead-reckoned track. Note even pe matches observed depth, guarantee track accurate.","code":""},{"path":"/reference/ptrack.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate simple dead-reckoned track — ptrack","text":"Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. M must rotated needed match animal's cardinal axes otherwise track meaningful. CAUTION: dead-reckoned tracks usually inaccurate. useful get idea animals move rather go. animals probably travel exactly direction longitudinal axis anyway measuring precise orientation longitudinal axis non-rigid animal fraught error. Moreover, net flow medium, animal affected flow addition autonomous movement. swimming animals can lead substantial errors. forward speed assumed respect medium track derived 'track-made-good', .e., geographic movement animal. estimates movement animal respect medium. numerous sources error use risk!","code":""},{"path":[]},{"path":"/reference/ptrack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate simple dead-reckoned track — ptrack","text":"","code":"BW <- beaked_whale list <- ptrack(A = BW$A$data, M = BW$M$data, s = 3,  sampling_rate = BW$A$sampling_rate, fc = NULL,  return_pe = TRUE) plot(list$track$easting, list$track$northing, xlab = \"Easting, m\", ylab = \"Northing, m\")"},{"path":"/reference/read_cats.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a CATS data file and convert to .nc — read_cats","title":"Read a CATS data file and convert to .nc — read_cats","text":"Read .csv file data CATS tag deployment, including associated metadata, store resulting data .nc file.","code":""},{"path":"/reference/read_cats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a CATS data file and convert to .nc — read_cats","text":"","code":"read_cats(fname, depid)"},{"path":"/reference/read_cats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a CATS data file and convert to .nc — read_cats","text":"fname file name CATS CSV file including complete path name file current working directory directory path. .csv suffix optional. depid string containing deployment identification code assigned deployment, example, 'mn12_186a'.","code":""},{"path":"/reference/read_cats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a CATS data file and convert to .nc — read_cats","text":"string (constructed : 'depid_raw.nc'; example, 'mn12_186a_raw.nc') containing file name netCDF (.nc) file output saved. function generates netCDF file current working directory containing \t\ttag data variables, including:  , Accelerometer data structure M, Magnetometer data structure T, Temperature sensor data structure info\tInformation structure deployment","code":""},{"path":"/reference/read_cats.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Read a CATS data file and convert to .nc — read_cats","text":"CATS loggers can produce large csv files slow process. function (somewhat) optimised speed memory use tolerate large files. processing ppube slow.","code":""},{"path":"/reference/read_cats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a CATS data file and convert to .nc — read_cats","text":"","code":"if (FALSE) { nc_filename <- read_cats(\"my_cats_file.csv\", \"my_cats_deplyment_name\") load_nc(\"my_cats_deployment_name_raw.nc\") }"},{"path":"/reference/read_cats_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a CSV file with sensor data from a CATS tag — read_cats_csv","title":"Read a CSV file with sensor data from a CATS tag — read_cats_csv","text":"Read data CATS tag deployment (stored .csv file). function usable normally called read_cats handles metadata creates NetCDF file.","code":""},{"path":"/reference/read_cats_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a CSV file with sensor data from a CATS tag — read_cats_csv","text":"","code":"read_cats_csv(fname, max_samps = Inf, skip_samps = 0)"},{"path":"/reference/read_cats_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a CSV file with sensor data from a CATS tag — read_cats_csv","text":"fname file name CATS CSV file including complete path name file current working directory directory path. .csv suffix optional. max_samps optional used limit reading maximum number samples (rows) per sensor. useful read part large file testing. max_samps given, entire file read. skip_samps Number lines data skip (excluding header) starting read data. Defaults 0 (start beginning file), can used read part file, read process large file chunks.","code":""},{"path":"/reference/read_cats_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a CSV file with sensor data from a CATS tag — read_cats_csv","text":"tibble data frame containing data read file. column names taken first line CSV file include units axis. columns may empty (example, tag record data certain sensor type).","code":""},{"path":"/reference/read_cats_csv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Read a CSV file with sensor data from a CATS tag — read_cats_csv","text":"CATS csv files can extremely large; perhaps large read entire file memory work .","code":""},{"path":"/reference/rotate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate data. — rotate_data","title":"Rotate data. — rotate_data","text":"Rotate numeric vector (rotation_test, set event times).  \"Rotating\" vector entails advancing values random increment, subtracting maximum expected value rotated entries exceed maximum. utility function used rotation_test, advanced users may wish use directly carry non-standard rotation tests.","code":""},{"path":"/reference/rotate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate data. — rotate_data","text":"","code":"rotate_data(event_times, full_period)"},{"path":"/reference/rotate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate data. — rotate_data","text":"event_times vector times events. Times can given format. event_times sorted prior analysis (example, times given hours day times dataset span several days), sure specify skip_sort=TRUE. full_period length two vector giving start end times full period events event_times might occurred. missing, default range(event_times).","code":""},{"path":"/reference/rotate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate data. — rotate_data","text":"vector numeric values length event_times generated rotating event times random amount","code":""},{"path":"/reference/rotate_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rotate data. — rotate_data","text":"rotation test applied Miller et al. 2004 detailed DeRuiter Solow 2008. test variation standard randomization permutation tests appropriate time-series non-independent events (example, time series behavioral events tend occur clusters). implementation rotation test compares test statistic (summary \"experimental\" time-period) expected value non-experimental periods. Instead resampling random subsets observations original dataset, rotation test samples many contiguous blocks original data, duration experimental period. summary statistic, computed \"rotated\" samples, provides distribution test statistic data can compared.","code":""},{"path":"/reference/rotate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate data. — rotate_data","text":"","code":"my_events <- 1500 * stats::runif(10) # 10 events at \"times\" between 0 and 1500 my_events #>  [1] 1201.3791  133.9514  495.9785  100.1106  314.4146  190.2308 1424.4399 #>  [8] 1144.2439  929.4636  661.2426 rotated_events <- rotate_data(my_events, full_period = c(0, 1500)) rotated_events #>  [1]   57.21708  114.35230  337.41304  513.08378  546.92457  603.20393 #>  [7]  727.38772  908.95168 1074.21579 1342.43672"},{"path":"/reference/rotate_vecs.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate triaxial vector measurements — rotate_vecs","title":"Rotate triaxial vector measurements — rotate_vecs","text":"function used rotate triaxial vector measurements one frame another.","code":""},{"path":"/reference/rotate_vecs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate triaxial vector measurements — rotate_vecs","text":"","code":"rotate_vecs(V, Q)"},{"path":"/reference/rotate_vecs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate triaxial vector measurements — rotate_vecs","text":"V tag data structure, 3-element vector 3-column matrix vector measurements example V accelerometer magnetometer. Q rotation matrix. Q single 3x3 matrix, rotation applied vectors V. Q 3x3xn matrix n number rows V, different transformation given Q[,, k] applied row V.","code":""},{"path":"/reference/rotate_vecs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate triaxial vector measurements — rotate_vecs","text":"rotated vector matrix size input V.","code":""},{"path":"/reference/rotate_vecs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rotate triaxial vector measurements — rotate_vecs","text":"Frame: function makes assumptions frame.","code":""},{"path":"/reference/rotate_vecs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate triaxial vector measurements — rotate_vecs","text":"","code":"x <- (pi / 180) * matrix(c(25, -60, 33), ncol = 3) Q <- euler2rotmat(x[, 1], x[, 2], x[, 3]) V <- rotate_vecs(c(0.77, -0.6, -0.22), Q)"},{"path":"/reference/rotation_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Carry out a rotation randomization test. — rotation_test","title":"Carry out a rotation randomization test. — rotation_test","text":"Carry rotation test (applied Miller et al. 2004 detailed DeRuiter Solow 2008). test variation standard randomization permutation tests appropriate time-series non-independent events (example, time series behavioral events tend occur clusters).","code":""},{"path":"/reference/rotation_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Carry out a rotation randomization test. — rotation_test","text":"","code":"rotation_test(   event_times,   exp_period,   full_period = range(event_times, na.rm = TRUE),   n_rot = 10000,   ts_fun = length,   skip_sort = FALSE,   conf_level = 0.95,   return_rot_stats = FALSE,   ... )"},{"path":"/reference/rotation_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Carry out a rotation randomization test. — rotation_test","text":"event_times vector times events. Times can given format. event_times sorted prior analysis (example, times given hours day times dataset span several days), sure specify skip_sort=TRUE. exp_period two-column vector, matrix, data frame specifying start end times \"experimental\" period test. matrix data frame provided, one column start time(s) end time(s).  Note data falls experimental period concatenated passed ts_fun. finer control desired, consider writing test using underlying function rotate_data. full_period length two vector giving start end times full period events event_times might occurred. missing, default range(event_times). n_rot Number rotations (randomizations) carry . Default n_rot=10000. ts_fun function compute test statistic. Input provided function times events occur \"experimental\" period.  default function length - words, default test statistis number events happen experimental period. skip_sort Logical. times sorted ascending order? Default skip_sort=FALSE. conf_level Confidence level used bootstrap CI calculation, specified proportion. (default conf_level=0.95, 95% confidence.) return_rot_stats Logical. output include test statistics computed rotation data? Default return_rot_stats=FALSE. ... Additional inputs passed ts_fun","code":""},{"path":"/reference/rotation_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Carry out a rotation randomization test. — rotation_test","text":"list containing following components: result, one-row data frame rows: statistic: Test statistic (original data) p_value: P-value test (2-sided) n_rot: Number rotations CI_low: Lower bound rotation-resampling percentile-based confidence interval CI_up: Upper bound rotation-resampling percentile-based confidence interval conf_level: Confidence level, proportion rot_stats (return_rot_stats TRUE), vector n_rot statistics rotated datasets","code":""},{"path":"/reference/rotation_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Carry out a rotation randomization test. — rotation_test","text":"implementation rotation test compares test statistic (summary \"experimental\" time-period) expected value non-experimental periods. Instead resampling random subsets observations original dataset, rotation test samples many contiguous blocks original data, duration experimental period. summary statistic, computed \"rotated\" samples, provides distribution test statistic data can compared.","code":""},{"path":"/reference/rotation_test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Carry out a rotation randomization test. — rotation_test","text":"Miller, P. J. O., Shapiro, . D., Tyack, P. L. Solow, . R. (2004). Call-type matching vocal exchanges free-ranging resident killer whales, Orcinus orca. Anim. Behav. 67, 1099–1107. DeRuiter, S. L. Solow, . R. (2008). rotation test behavioural point-process data. Anim. Behav. 76, 1103–1452.","code":""},{"path":[]},{"path":"/reference/rotation_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Carry out a rotation randomization test. — rotation_test","text":"","code":"r <- rotation_test(   event_times =     2000 * runif(500),   exp_period = c(100, 200),   return_rot_stats = TRUE, ts_fun = mean )"},{"path":"/reference/rotmat2euler.html","id":null,"dir":"Reference","previous_headings":"","what":"Decompose a rotation (or direction cosine) matrix — rotmat2euler","title":"Decompose a rotation (or direction cosine) matrix — rotmat2euler","text":"function used decompose rotation (direction cosine) matrix Euler angles, pitch, roll, heading.","code":""},{"path":"/reference/rotmat2euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decompose a rotation (or direction cosine) matrix — rotmat2euler","text":"","code":"rotmat2euler(Q)"},{"path":"/reference/rotmat2euler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decompose a rotation (or direction cosine) matrix — rotmat2euler","text":"Q 3x3 rotation matrix.","code":""},{"path":"/reference/rotmat2euler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decompose a rotation (or direction cosine) matrix — rotmat2euler","text":"1x3 vector containing: prh=[p,r,h] p pitch angle radians, r roll angle radians, h heading yaw angle radians.","code":""},{"path":"/reference/rotmat2euler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decompose a rotation (or direction cosine) matrix — rotmat2euler","text":"","code":"set <- matrix(c(0.6765458, 0.7227523, 0.1411200, 0.3675912, -0.4975063, 0.7857252, 0.6380928, -0.4797047, -0.6022632), nrow = 3, ncol = 3) rotmat2euler(set) #> [1] 0.1415926 2.2247779 0.8184074"},{"path":"/reference/rough_cal_3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate scale factors and offsets — rough_cal_3d","title":"Estimate scale factors and offsets — rough_cal_3d","text":"function used estimate scale factors offsets measurements triaxial field sensor. function estimates scale factor needed make magnitude X close expected field strength. calls fix_offset_3d correct offset errors X. function try optimize results. See spherical_cal powerful data-driven calibration method.","code":""},{"path":"/reference/rough_cal_3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate scale factors and offsets — rough_cal_3d","text":"","code":"rough_cal_3d(X, fstr)"},{"path":"/reference/rough_cal_3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate scale factors and offsets — rough_cal_3d","text":"X sensor structure matrix containing measurements triaxial field sensor accelerometer magnetometer. X can units frame. fstr expected field strength measurement location units X","code":""},{"path":"/reference/rough_cal_3d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate scale factors and offsets — rough_cal_3d","text":"list 2 elements: X:  sensor structure matrix containing adjusted triaxial sensor measurements. size sampling rate units input data. input sensor structure, output also. G:  list calibration information containing one field: G$poly, 3x2 matrix. Rows correspond X,Y,Z axes. one column X, Y, Z axes. first column G$poly contains scale factors second column G$poly offset added column X scaling.","code":""},{"path":"/reference/rough_cal_3d.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate scale factors and offsets — rough_cal_3d","text":"function requires lot data looking extreme values axis. minimum data size 1000 samples used. function usable field sensors. work gyroscope data.","code":""},{"path":"/reference/rough_cal_3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate scale factors and offsets — rough_cal_3d","text":"","code":"BW <- beaked_whale plot(x = c(1:length(BW$M$data)), y = BW$M$data)  rcal <- rough_cal_3d(BW$M$data, fstr = 38.2) cal <- list(x = c(1:length(rcal$X)), y = rcal$X) plot(cal)"},{"path":"/reference/save_nc.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a tag dataset to a netCDF file. — save_nc","title":"Save a tag dataset to a netCDF file. — save_nc","text":"function saves tag dataset netCDF file (archival file format supported tagtools package suitable submission online data archives).","code":""},{"path":"/reference/save_nc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a tag dataset to a netCDF file. — save_nc","text":"","code":"save_nc(file, X, ...)"},{"path":"/reference/save_nc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a tag dataset to a netCDF file. — save_nc","text":"file name data metadata file written. file include .nc suffix, added automatically. X animaltag object, list tag sensor /metadata lists. Alternatively, sensor metadata lists may input multiple separate unnamed inputs. kind variables can saved NetCDF file supporting information structures needed describe contents file. non-archive non-portable storage variables, consider using save various functions write data text files. ... Additional sensor metadata lists, user bundled list already providing individual structures.","code":""},{"path":"/reference/save_nc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a tag dataset to a netCDF file. — save_nc","text":"return; saves dataset nc file","code":""},{"path":"/reference/save_nc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save a tag dataset to a netCDF file. — save_nc","text":"Warning: overwrite previous NetCDF file name. file assumed current working directory unless file includes file path information.","code":""},{"path":"/reference/save_nc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a tag dataset to a netCDF file. — save_nc","text":"","code":"# \\dontshow{ .old_wd <- setwd(tempdir()) # } BW <- beaked_whale save_nc(\"beaked_whale_test\", BW)  # \\dontshow{ setwd(.old_wd) # }"},{"path":"/reference/sens_struct.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a sensor structure from a sensor data vector or matrix. — sens_struct","title":"Generate a sensor structure from a sensor data vector or matrix. — sens_struct","text":"Generate sensor structure sensor data vector matrix.","code":""},{"path":"/reference/sens_struct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a sensor structure from a sensor data vector or matrix. — sens_struct","text":"","code":"sens_struct(   data,   sampling_rate = NULL,   T = NULL,   depid,   type,   unit = NULL,   frame = NULL,   name = NULL,   start_offset = 0,   start_offset_units = \"second\",   quiet = FALSE )"},{"path":"/reference/sens_struct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a sensor structure from a sensor data vector or matrix. — sens_struct","text":"data sensor data vector matrix sampling_rate (optional) sensor data sampling rate Hz T (optional) time seconds measurement data irregularly sampled data. time reference (.e., 0 time) respect start time deployment. depid string provides unique identifier tag deployment type string containing first letters sensor type, e.g., acc acceleration. matched list sensor names sensor_names.csv file. one sensor matches type, warning given. type can upper lower case. unit (optional) units data sampled. Default determined matching type defaults sensor_names.csv frame (optional) frame reference data axes, example 'animal' 'tag'. Default determined matching type defaults sensor_names.csv. name (optional) \"full name\" assign variable. Default determined matching type defaults sensor_names.csv/ start_offset (optional) offset start time sensor relative start tag recording. Defaults 0. start_offset_units (optional) units start_offset. default 'second'. quiet prints screen quiet set false","code":""},{"path":"/reference/sens_struct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a sensor structure from a sensor data vector or matrix. — sens_struct","text":"sensor list field data containing data metadata fields pre-populated sensor_names.csv file. Change manually needed (specify relevant inputs sens_struct) correct values.","code":""},{"path":"/reference/sens_struct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a sensor structure from a sensor data vector or matrix. — sens_struct","text":"","code":"HB <- harbor_seal A <- sens_struct(data=HB$A$data,sampling_rate=3,depid='md13_134a', type='acc', quiet=TRUE)"},{"path":"/reference/smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Low pass filter a time series — smooth","title":"Low pass filter a time series — smooth","text":"function used low pass filter (smooth) regularly-sampled time series.","code":""},{"path":"/reference/smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low pass filter a time series — smooth","text":"","code":"smooth(x, n)"},{"path":"/reference/smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low pass filter a time series — smooth","text":"x signal filtered. can multi-channel signal column, e.g., acceleration matrix. number samples (.e., number rows x) must larger filter length, n. n smoothing parameter - use larger number smooth . n must greater 1. Signal components 1/n Nyquist frequency filtered .","code":""},{"path":"/reference/smooth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low pass filter a time series — smooth","text":"input signal first fifth harmonic. Applying low-pass filter removes fifth harmonic output appears sinewave except first samples affected filter startup transient. Smooth uses fir_nodelay perform filtering introduces delay.","code":""},{"path":"/reference/smooth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Low pass filter a time series — smooth","text":"","code":"y1 <- sin((2 * pi * 0.05) %*% t(c(1:100))) + cos((2 * pi * 0.25) %*% t(c(1:100))) x1 = c(1:length(y1)) plot(x = x1, y = y1)  y2 <- smooth(x1, n = 4) x2 = c(1:length(y2)) plot(x = x2, y = y2)"},{"path":"/reference/sound_speed.html","id":null,"dir":"Reference","previous_headings":"","what":"Sound speed estimation — sound_speed","title":"Sound speed estimation — sound_speed","text":"function used estimate sound speed using Coppens equation","code":""},{"path":"/reference/sound_speed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sound speed estimation — sound_speed","text":"","code":"sound_speed(temperature, D = NULL, S = NULL)"},{"path":"/reference/sound_speed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sound speed estimation — sound_speed","text":"temperature temperature degrees C D (optional) depth meters (defaults 1 m) S salinity part-per-thousand (defaults 35 ppt)","code":""},{"path":"/reference/sound_speed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sound speed estimation — sound_speed","text":"sound speed m/s","code":""},{"path":"/reference/sound_speed.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sound speed estimation — sound_speed","text":"Range validity: temperature 0 35 °C, salinity 0 45 parts per thousand, depth 0 4000 m Source: http://resource.npl.co.uk/acoustics/techguides/soundseawater/content.html#UNESCO","code":""},{"path":"/reference/sound_speed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sound speed estimation — sound_speed","text":"","code":"sound_speed(8, 1000, 34) #> [1] 1497.708"},{"path":"/reference/spectrum_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the spectrum level of a signal x. — spectrum_level","title":"Compute the spectrum level of a signal x. — spectrum_level","text":"function used compute spectrum level signal x.","code":""},{"path":"/reference/spectrum_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the spectrum level of a signal x. — spectrum_level","text":"","code":"spectrum_level(x, nfft, sampling_rate, w, nov)"},{"path":"/reference/spectrum_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the spectrum level of a signal x. — spectrum_level","text":"x vector containing signal processed. signals multiple channels, channel column x. nfft length fft use. Choose power two fastest operation. Default value 512. sampling_rate sampling rate x Hz. Default value 1. sampling_rate vector frequencies SL calculated. w window length. default value nfft. w<nfft, segment w samples zero-padded nfft. nov number samples overlap segment. default value half window length.","code":""},{"path":"/reference/spectrum_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the spectrum level of a signal x. — spectrum_level","text":"list 2 elements: SL: spectrum level frequency dB RMS re root-Hz. spectrum single-sided extends sampling_rate/2. reference level 1.0 (.e., white noise unit variance spectrum level 3-10*log10(sampling_rate). 3dB negative positive spectra added together total power signal total power spectrum. f:  vector frequencies SL calculated.","code":""},{"path":"/reference/spectrum_level.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute the spectrum level of a signal x. — spectrum_level","text":"spectrum single-sided extends sampling_rate/2. reference level 1.0 (.e., white noise unit variance spectrum level 3-10*log10(sampling_rate). 3dB negative positive spectra added together total power signal total power spectrum.","code":""},{"path":"/reference/spectrum_level.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the spectrum level of a signal x. — spectrum_level","text":"","code":"BW <- beaked_whale list <- spectrum_level(x = BW$P$data, nfft = 4, sampling_rate = BW$P$sampling_rate)"},{"path":"/reference/speed_from_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the forward speed of a diving animal — speed_from_depth","title":"Estimate the forward speed of a diving animal — speed_from_depth","text":"function used estimate forward speed diving animal first computing depth-rate (.e., first differential depth) correcting pitch angle.","code":""},{"path":"/reference/speed_from_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the forward speed of a diving animal — speed_from_depth","text":"","code":"speed_from_depth(   p,   A = NULL,   fs_p = NULL,   fs_A = NULL,   fc = 0.2,   plim = 20/180 * pi )"},{"path":"/reference/speed_from_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the forward speed of a diving animal — speed_from_depth","text":"p depth vector (regularly sampled time series) meters. sampled sampling_rate Hz. can either animaltags sensor list, vector. (optional) matrix animaltags sensor data list containing acceleration data. provided vertical velocity returned (output depth_rate()). Acceleration can consistent unit, e.g., g m/s^2. Acceleration data must number rows p. fs_p (optional) sampling rate p Hz (samples per second). Required p vector rather sensor data list. fs_A (optional) sampling rate Hz (samples per second). Required vector rather sensor data list. fc (optional) Specifies cut-frequency low-pass filter apply p computing depth-rate computing pitch. filter cut-frequency Hz. filter length 4*sampling_rate/fc. Filtering adds group delay. fc empty given, default value 0.2 Hz (.e., 5 second time constant) used. plim (optional) Minimum pitch angle, radians, speed can computed. Default: 0.3490659 radians = 20 degrees. Errors speed estimation using method increase strongly low pitch angles. avoid estimates poor accuracy used later analyses, speed estimates low pitch angles replaced NaN (--number). default threshold 20 degrees.","code":""},{"path":"/reference/speed_from_depth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the forward speed of a diving animal — speed_from_depth","text":"Either forward speed vertical speed: s:  p input, forward speed estimate m/s returned v:  p input, depth-rate (vertical velocity) m/s returned","code":""},{"path":"/reference/speed_from_depth.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate the forward speed of a diving animal — speed_from_depth","text":"Output sampling rate input sampling rate. p input higher sampling rate, p output interpolated match using interp2length . Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. frames, positive pitch angle anti-clockwise rotation around y-axis. descending animal negative pitch angle. Forward velocity animals negative vertical velocity negative pitch angle positive, , vertical velocity positive pitch angle negative. One avoid getting negative forward velocity taking absolute value output.","code":""},{"path":"/reference/speed_from_depth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the forward speed of a diving animal — speed_from_depth","text":"","code":"s <- speed_from_depth(harbor_seal$P, harbor_seal$A)"},{"path":"/reference/spherical_cal.html","id":null,"dir":"Reference","previous_headings":"","what":"Deduce the calibration constants — spherical_cal","title":"Deduce the calibration constants — spherical_cal","text":"function used deduce calibration constants triaxial field sensor, accelerometer magnetometer, based movement data. can used 'bench' calibration sensor.","code":""},{"path":"/reference/spherical_cal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deduce the calibration constants — spherical_cal","text":"","code":"spherical_cal(X, n = NULL, method = NULL)"},{"path":"/reference/spherical_cal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deduce the calibration constants — spherical_cal","text":"X segment triaxial sensor data calibrate. must 3-column matrix. X can come triaxial field sensor can unit frame. n target field magnitude e.g., 9.81 accelerometer data using m/s^2 unit. method optional string selecting type calibration. default calibrate offset scaling . options : 'gain' adjust gain axes 2 3 relative 1, 'cross' adjust gain remove cross-axis correlations","code":""},{"path":"/reference/spherical_cal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deduce the calibration constants — spherical_cal","text":"list 2 elements: Y:  matrix converted sensor values. units input argument n. size Y size X frame sampling rate. G:  calibration structure containing fields: G.poly matrix polynomials. first column G.poly three scale factors applied columns X. second column offset added column X scaling. G.cross 3x3 matrix cross-factors. cross-terms, identity matrix. -axis terms correct cross-axis sensitivity. message also printed screen presenting","code":""},{"path":"/reference/spherical_cal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deduce the calibration constants — spherical_cal","text":"function reports residual axial balance data. low residual e.g., <5% indicates data can calibrated well much noise. axial balance indicates whether movement X suitable data-driven calibration. movement covers directions fairly equally, axial balance high. balance <20 % may lead unreliable calibration. bench calibrations, high axial balance achieved rotating sensor full 3-dimensions. Sampling rate frame Y input data Y size X. units Y units used n. n specified, units Y input data. good idea low-pass filter /remove outliers sensor data using function reduce errors specific acceleration sensor noise.","code":""},{"path":"/reference/spherical_cal.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Deduce the calibration constants — spherical_cal","text":"function uses Simplex search optimal calibration parameters can slow data size large. reason suitable bench calibrations rather field data. function usable field sensors. work gyroscope data.","code":""},{"path":"/reference/spherical_cal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deduce the calibration constants — spherical_cal","text":"","code":"p <- spherical_cal(harbor_seal$A$data)"},{"path":"/reference/tag2animal.html","id":null,"dir":"Reference","previous_headings":"","what":"Tag-frame to animal-frame conversion — tag2animal","title":"Tag-frame to animal-frame conversion — tag2animal","text":"Convert tag frame measurements animal frame using pre-determined tag orientation(s) animal.","code":""},{"path":"/reference/tag2animal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tag-frame to animal-frame conversion — tag2animal","text":"","code":"tag2animal(X, sampling_rate, OTAB, Ya = NULL)"},{"path":"/reference/tag2animal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tag-frame to animal-frame conversion — tag2animal","text":"X Data triaxial sensor accelerometer, magnetometer gyroscope. X can three column matrix sensor structure (data frame tbl). either case, X tag frame, .e., expressed canonical axes tag, animal. X can unit regular sampling rate (.e., measurements regularly sampled; equally spaced time). sampling_rate (optional) sampling rate sensor data Hz (samples per second). needed X sensor structure. X sensor data list, sampling_rate obtained metadata (X$sampling_rate). OTAB matrix defining orientation tag animal function time. row OTAB : cue1, cue2, pitch, roll, heading. (See Details.) Ya optional sensor structure sensor data already converted animal frame. OTAB extracted structure. useful, example, replicate tag--animal conversions different sampling rates.","code":""},{"path":"/reference/tag2animal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tag-frame to animal-frame conversion — tag2animal","text":"Xa,sensor data animal frame, .e., rotated correct tag orientation animal. X sensor structure, Xa also one. case structure elements 'frame' 'name' changed. OTAB also added structure.","code":""},{"path":"/reference/tag2animal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tag-frame to animal-frame conversion — tag2animal","text":"function uses OTAB matrix convert sensor data X tag frame reference whale frame reference. row OTAB : cue1, cue2, pitch, roll, heading cue1 start time move seconds respect start X. cue2 end time move. cue1 cue2 , move instantaneous, otherwise gradual move implemented orientation tag linearly interpolated previous new orientation. pitch, roll heading angles describe tag orientation animal end move (angles radians). first row OTAB must cue1 cue2 equal 0 initial orientation tag animal. Subsequent rows () OTAB describe","code":""},{"path":[]},{"path":"/reference/tag2animal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tag-frame to animal-frame conversion — tag2animal","text":"","code":"Aw <- tag2animal(beaked_whale$A, OTAB = matrix(c(0,0,0.1, 0.04, -0.2), nrow = 1))"},{"path":"/reference/tortuosity.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure tortuosity index — tortuosity","title":"Measure tortuosity index — tortuosity","text":"function used measure tortuosity regularly sampled horizontal track. Tortuosity can measured number ways. function compares stretched-track length (STL) interval time distance made good (DMG, .e., distance actually covered interval). index returned (STL-DMG)/STL 0 straightline movement 1 extreme circular movement.","code":""},{"path":"/reference/tortuosity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure tortuosity index — tortuosity","text":"","code":"tortuosity(track, sampling_rate, intvl)"},{"path":"/reference/tortuosity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure tortuosity index — tortuosity","text":"track Contains animal positions local horizontal plane. track parameter row position two columns: northing easting. positions can consistent spatial unit, e.g., metres, km, nautical miles, referenced arbitrary 0,0 location. T degrees distance equivalent degree latitude degree longitude. sampling_rate sampling rate positions Hertz (samples per second). intvl time interval seconds tortuosity calculated. chosen according scale interest, e.g., typical length foraging bout.","code":""},{"path":"/reference/tortuosity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Measure tortuosity index — tortuosity","text":"tortuosity index 0 1 described . t contains value period intvl seconds.","code":""},{"path":"/reference/tortuosity.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Measure tortuosity index — tortuosity","text":"tortuosity index fairly insensitive speed track produced dead-reckoning (e.g., using ptrack htrack), speed estimate important. Also frame track important long two axes (nominally called northing easting) used describe positions perpendicular.","code":""},{"path":"/reference/tortuosity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure tortuosity index — tortuosity","text":"","code":"BW <- beaked_whale track <- ptrack(   A = BW$A$data, M = BW$M$data, s = 3,   sampling_rate = BW$A$sampling_rate,   fc = NULL, return_pe = TRUE )$track tortuosity <- tortuosity(track, sampling_rate = BW$A$sampling_rate, intvl = 25)"},{"path":"/reference/track3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct a track from pitch, heading and depth data, given a starting position — track3D","title":"Reconstruct a track from pitch, heading and depth data, given a starting position — track3D","text":"track3D function use data tag reconstruct track fitting state space model using Kalman filter. x,y observations provided corresponds pseudo-track obtained via dead reckoning extreme care required interpreting results.","code":""},{"path":"/reference/track3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct a track from pitch, heading and depth data, given a starting position — track3D","text":"","code":"track3D(   z,   phi,   psi,   sf,   r = 0.001,   q1p = 0.02,   q2p = 0.08,   q3p = 1.6e-05,   tagonx,   tagony,   enforce = TRUE,   x,   y )"},{"path":"/reference/track3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct a track from pitch, heading and depth data, given a starting position — track3D","text":"z vector depth time (meters, observation) phi vector pitch time (Radians, assumed known covariate) psi vector heading time (Radians, assumed known covariate) sf scalar defining sampling rate (Hz) r Observation error q1p speed state error q2p depth state error q3p x y state error tagonx Easting starting position (meters, requires projected data) tagony Northing starting position (meters, requires projected data) enforce TRUE (default), speed depth kept strictly positive x Direct observations Easting (meters, requires projected data) y Direct observations Northing (meters, requires projected data)","code":""},{"path":"/reference/track3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct a track from pitch, heading and depth data, given a starting position — track3D","text":"list 10 elements: p:  smoothed speeds fit.ks:  fitted speeds fit.kd:  fitted depths fit.xs:  fitted xs fit.ys:  fitted ys fit.rd:  smoothed depths fit.rx:  smoothed xs fit.ry:  smoothed ys fit.kp:  kalman posteriori state covariance fit.ksmo:  kalman smoother variance","code":""},{"path":"/reference/track3D.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Reconstruct a track from pitch, heading and depth data, given a starting position — track3D","text":"Output sampling rate input sampling rate. Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. frames, positive pitch angle anti-clockwise rotation around y-axis. positive roll angle clockwise rotation around x-axis. descending animal negative pitch angle animal rolled right side positive roll angle. function output can quite sensitive inputs used, namely define relative weight given existing data, particular regarding (x,y)=(lat,long); increasing q3p, (x,y) state variance, increase weight given independent observations (x,y), say GPS readings","code":""},{"path":[]},{"path":"/reference/track3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reconstruct a track from pitch, heading and depth data, given a starting position — track3D","text":"","code":"p <- a2pr(A = beaked_whale$A$data) h <- m2h(M = beaked_whale$M$data, A = beaked_whale$A$data) track <- track3D(z = beaked_whale$P$data, phi = p$p,  psi = h$h, sf = beaked_whale$A$sampling_rate,  r = 0.001, q1p = 0.02, q2p = 0.08, q3p = 1.6e-05,  tagonx = 1000, tagony = 1000, enforce = TRUE, x = NA, y = NA) oldpar <- par(no.readonly = TRUE) on.exit(par(oldpar))   par(mfrow = c(2, 1), mar = c(4, 4, 0.5, 0.5)) plot(-beaked_whale$P$data, pch = \".\", ylab = \"Depth (m)\",  xlab = \"Time\") plot(track$fit.rx, track$fit.ry, xlab = \"X\",  ylab = \"Y\", pch = \".\") points(track$fit.rx[c(1, length(track$fit.rx))],  track$fit.ry[c(1, length(track$fit.rx))], pch = 21, bg = 5:6) legend(\"bottomright\", cex = 0.7, legend = c(\"Start\", \"End\"),  col = c(5, 6), pt.bg = c(5, 6), pch = c(21, 21))"},{"path":"/reference/undo_cal.html","id":null,"dir":"Reference","previous_headings":"","what":"Undo calibrations steps — undo_cal","title":"Undo calibrations steps — undo_cal","text":"function used undo calibration steps applied sensor data. reverse re-mapping, scaling offset adjustments applied data, reverting sensor data state read source (excluding filtering decimation steps).","code":""},{"path":"/reference/undo_cal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undo calibrations steps — undo_cal","text":"","code":"undo_cal(X, temperature)"},{"path":"/reference/undo_cal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undo calibrations steps — undo_cal","text":"X sensor list set sensor lists tag frame, .e., calibrations applied. temperature vector temperature measurements number samples sampling rate data input sensor data structure X. temperature parameter indicates temperature experienced sensor data collection (necessarily ambient temperature experienced animal), may affect calibration many sensors’ output values change depending temperature.","code":""},{"path":"/reference/undo_cal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Undo calibrations steps — undo_cal","text":"sensor list set sensor lists reverted sensor frame, .e., without calibrations.","code":""},{"path":"/reference/undo_cal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Undo calibrations steps — undo_cal","text":"","code":"BW <- beaked_whale no_cal <- undo_cal(BW)"},{"path":"/reference/zero_crossings.html","id":null,"dir":"Reference","previous_headings":"","what":"Find zero-crossings in a vector — zero_crossings","title":"Find zero-crossings in a vector — zero_crossings","text":"function used find zero-crossings vector using hysteretic detector. useful, e.g., locate cyclic postural changes due propulsion.","code":""},{"path":"/reference/zero_crossings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find zero-crossings in a vector — zero_crossings","text":"","code":"zero_crossings(x, TH, Tmax = NULL)"},{"path":"/reference/zero_crossings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find zero-crossings in a vector — zero_crossings","text":"x vector data. can sensor sampling rate. TH magnitude threshold detecting zero-crossing. zero-crossing detected values x pass -TH +TH vice versa. Tmax (optional) maximum duration samples threshold crossings. accepted zero-crossing, signal must pass -TH TH, vice versa, Tmax samples. useful eliminate slow transitions. Tmax given, limit number samples threshold crossings.","code":""},{"path":"/reference/zero_crossings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find zero-crossings in a vector — zero_crossings","text":"list elements K:  vector cues (samples) zero-crossings x. s:  vector containing sign zero-crossing (1 = positive-going, -1 = negative-going). s size K. zero-crossings found, K s empty KK:  zero crossings vertical velocity vector","code":""},{"path":"/reference/zero_crossings.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find zero-crossings in a vector — zero_crossings","text":"Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. M must rotated needed match animal's cardinal axes otherwise track meaningful. CAUTION: dead-reckoned tracks usually inaccurate. useful get idea animals move rather go.  animals probably travel exactly direction longitudinal axis anyway measuring precise orientation longitudinal axis non-rigid animal fraught error.  Moreover, net flow medium, animal advected flow addition autonomous movement. swimming animals can lead substantial errors.  forward speed assumed  respect medium track derived 'track-made-good', .e., geographic movement animal. estimates movement animal respect medium.  numerous sources error use risk!","code":""},{"path":"/reference/zero_crossings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find zero-crossings in a vector — zero_crossings","text":"","code":"R <- zero_crossings(sin(2 * pi * 0.033 * c(1:100)), 0.3) s <- c(-1, 1, -1, 1, -1, 1)"},{"path":"/news/index.html","id":"tagtools-0009000","dir":"Changelog","previous_headings":"","what":"tagtools 0.0.0.9000","title":"tagtools 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
