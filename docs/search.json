[{"path":"/articles/acceleration-filtering.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Complementary filtering for acceleration: low- & high-frequency","text":"vignette use data suction cup tag attached back beaked whale. want run example, download “testset1.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files Write testset1 object bw, “beaked whale”. use plott() inspect .  dataset contains deep dive followed shallow dive. want infer function looking locomotion effort sudden changes acceleration indicative prey capture attempts. also going look changes swimming gait.","code":"library(tagtools) bw_file_path <- \"nc_files/testset1.nc\" bw <- load_nc(bw_file_path) plott(X = list(Depth = bw$P, Acc = bw$A, Mag = bw$M))"},{"path":"/articles/acceleration-filtering.html","id":"complementary-filtering","dir":"Articles","previous_headings":"","what":"Complementary filtering","title":"Complementary filtering for acceleration: low- & high-frequency","text":"separate slow orientation changes postural dynamics locomotion, need choose filter cut-frequency stroke frequency. can estimate dominant stroke frequency using dsf(). bout steady swimming minutes 35 42 data. Use crop_to() pick accelerometer data interval: Mimic previous code similarly crop pressure (depth) magnetometer data: Plot three together make sure got right.  , run dsf() Aseg get mean stroking rate: Try magnetometer data: estimated stroke rates similar? Yes, . acceleration-based estimate .3821574, magnetometer-based estimate .3807932. magnetometer sensitive specific acceleration, stroking motions show Mseg? animal changing position, magnetometer reading change. Refer plots Mseg Dseg try figure axis stroking motions show . good starting choice filter cut-frequency 70% stroking rate (pick one estimates, average two). Call value fc. Run complementary filter separate slow fast time-scales. Recall stored bw bw$: complementary filter returns list containing two data matrices: low-pass filtered data high-pass filtered data. three-column matrix filter run column input data. like now two accelerometers tag—one sensitive low frequencies sensitive high frequencies. like get matrix cell array, : sampling rate original data. simplicity, make variable sampling_rate equal sampling rate use plott() plot two filtered accelerations along dive profile:  two versions acceleration sometimes called ‘static’ ‘dynamic’ acceleration. filtering worked, see Alow large, relatively slow changes acceleration mostly orientation. missing Ahigh, high frequency specific acceleration, propulsion strikes flinches. like, zoom section steady stroking used dsf—see stroking Ahigh, Alow.","code":"Aseg <- crop_to(X = bw$A, tcues = c(35*60, 42*60)) Dseg <- crop_to(X = bw$P, tcues = c(35*60, 42*60)) Mseg <- crop_to(X = bw$M, tcues = c(35*60, 42*60)) plott(X = list(Depth = Dseg, Acc = Aseg, Mag = Mseg), interactive = TRUE) dsfa <- dsf(Aseg)$fpk   # estimated stroking rate in Hz dsfm <- dsf(Mseg)$fpk # another estimate fc <- 'YourValueHere'           # your value for fc in Hz, a number, without quotes Af <- comp_filt(bw$A, fc = fc)  str(Af, max.level = 1) #> List of 2 #>  $ lowpass : num [1:137976, 1:3] -1.22 -1.22 -1.21 -1.19 -1.17 ... #>  $ highpass: num [1:137976, 1:3] -0.624 -0.558 -0.516 -0.511 -0.471 ... Alow <- Af[[1]]     # low frequency A data Ahigh <- Af[[2]]      # high frequency A data sampling_rate <- bw$A$sampling_rate plott(X = list(`Depth (m)` = bw$P$data,                `LF Accel` = Alow,                 `HF Accel` = Ahigh),       fsx = sampling_rate) plott(X = list(`Depth` = bw$P$data,                `LF Accel` = Alow,                 `HF Accel` = Ahigh),       fsx = sampling_rate, xlim = c(35*60, 42*60)/3600)"},{"path":"/articles/acceleration-filtering.html","id":"locomotion-style","dir":"Articles","previous_headings":"","what":"Locomotion style","title":"Complementary filtering for acceleration: low- & high-frequency","text":"want characterise locomotion style animal deep-dive ascent. Using plot made , zoom ascent see can identify intervals animal appears just swimming steadily (hint: look Alow fairly constant, indicating steady orientation). see changes swimming style throughout ascent? particular, check swimming styles time intervals (1) 36-38 minutes (2) 56-58 minutes. Write two objects (say, intvl1 intvl2) contain intervals seconds, using c(YourStartTime, YourEndTime). , crop high frequency acceleration data intervals using crop_to(...). (Try write code !) Now plott together. careful comparing, since plott puts different y-scales automatically fit data window!  Comparing two intervals swimming, conclude swimming styles? Look magnitude acceleration (units \\(m/s^2\\)). may want compare depth data intervals, .  one swimming style seem energetic ? magnitude acceleration peak lower first interval (\\(-0.5\\) \\(+1\\) \\(m/s^2\\)), time interval time animal swimming steadily upwards. However, acceleration changing quickly back forth: peaks come much frequently, 46 within two minutes. second time interval different, higher magnitudes acceleration (\\(-3\\) \\(+4\\) \\(m/s^2\\)). time interval also time animal swimming slightly upwards, visually obvious “bumps” path upwards, actually correspond individual acceleration peaks. Possibly, rather just ascending surface, whale exerting , accelerating quickly, try catch prey. Overall, second swimming style seems energetic first. Finally go back plot full high frequency acceleration data, Ahigh, portion cropped shallow dive. Use see whether active swimming shallow dive , , swimming gait used .  similarities swimming earlier? differences? two intervals look much similar intvl2 intvl3. Large spikes acceleration almost nonexistent, magnitude acceleration usually neatly \\(-1\\) \\(+1\\) \\(m/s^2\\). , number peaks intvl4 (47 peaks 2 minutes) almost exactly intvl2 (46 peaks 2 minutes). intvl5 slightly complicated. whale approaches zero depth end intvl5, almost acceleration stops momentarily final glide surface. surface, behavior erratic, representing perhaps kind relaxed frolicking, rather efficient swim upwards.","code":"intvl1 <- c(36*60, 38*60) intvl2 <- c(56*60, 58*60) Ah1 <- crop_to(Ahigh, sampling_rate = sampling_rate, tcues = intvl1) Ah2 <- crop_to(Ahigh, sampling_rate = sampling_rate, tcues = intvl2) plott(X = list(Ah1 = Ah1, Ah2 = Ah2), fsx = sampling_rate, xl = c(0, 1)) D1 <- crop_to(bw$P$data, sampling_rate = sampling_rate, tcues = intvl1) D2 <- crop_to(bw$P$data, sampling_rate = sampling_rate, tcues = intvl2) plot(x = (1:length(D1)), y = (-D1), xlab = \"samples\", ylab = \"Depth\") # plott doesn't make it very clear plot(x = (1:length(D2)), y = (-D2), xlab = \"samples\", ylab = \"Depth\") # so we'll just use plot plott(X = list(`Depth` = bw$P$data,                `LF Accel` = Alow,                 `HF Accel` = Ahigh),       fsx = sampling_rate) intvl3 <- c(77*60, 89*60) # whole shallow dive, for context intvl4 <- c(77*60, 79*60) # earlier in the shallow dive intvl5 <- c(87*60, 89*60) # later in the shallow dive Ah3 <- crop_to(X = Ahigh, sampling_rate = sampling_rate, tcues = intvl3) D3 <- crop_to(X = bw$P$data, sampling_rate = sampling_rate, tcues = intvl3) Ah4 <- crop_to(X = Ahigh, sampling_rate = sampling_rate, tcues = intvl4) D4 <- crop_to(X = bw$P$data, sampling_rate = sampling_rate, tcues = intvl4) Ah5 <- crop_to(X = Ahigh, sampling_rate = sampling_rate, tcues = intvl5) D5 <- crop_to(X = bw$P$data, sampling_rate = sampling_rate, tcues = intvl5)  plott(X = list(Depth = D3, HfAccel3 = Ah3), fsx = sampling_rate, interactive = TRUE) plot(x = (1:length(D4)), y = D4) plott(X = list(HfAccel4 = Ah4), fsx = sampling_rate, interactive = TRUE) plot(x = (1:length(D5)), y = D5) plott(X = list(HfAccel5 = Ah5), fsx = sampling_rate, interactive = TRUE)"},{"path":"/articles/acceleration-filtering.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Complementary filtering for acceleration: low- & high-frequency","text":"’ve learned separate low- high-frequency acceleration data complementary filter, done interpretation two sets data. Aaaaand… congrats! ’ve aced vignette. ’d like continue working vignettes, jerk-transients logical choice. magnetometer-filtering. three vignettes go together. Perhaps logical ordering acceleration-filtering, jerk-transients, magnetometer-filtering. , suits fancy/data! Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":""},{"path":"/articles/data-quality-error-correction.html","id":"checking-accelerometer-and-magnetometer-data","dir":"Articles","previous_headings":"","what":"Checking accelerometer and magnetometer data","title":"Data quality & error correction","text":"Biologging data always ready--use read tag. corrections may needed. Quality checking fairly easy pressure data aquatic mammals know breathe surface. Data accelerometers magnetometers difficult. one thing, three axes, also don’t intuitive feel look like. However, fortunately, quality checks can M data help catch correct problems. objective estimate orientation animal (pitch, roll heading) function time. first need check correct errors M.","code":""},{"path":"/articles/data-quality-error-correction.html","id":"data-quality-checks","dir":"Articles","previous_headings":"Checking accelerometer and magnetometer data","what":"Data quality checks","title":"Data quality & error correction","text":"practical use data tag attached back sperm whale. want run example, download “rawtestset3.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files Look overall structure get idea data stored, check info structure see data came . Inspect depth, acceleration magnetometer data plott:  Depth, sw$P, seems fine—looks like depth versus time plot diving whale. However, hard see whether problems accelerometer magnetometer data, sw$sw$M, respective plots. Two things can often go wrong raw tag data: sensors may well-calibrated, axes M may aligned animal’s axes. Luckily, can check data. much specific acceleration, vector magnitude acceleration measurement close magnitude gravity vector, .e., 9.8 \\(\\frac{m}{s^2}\\). magnetometer data also fairly constant vector magnitude equal field strength data came . 48 \\(\\mu\\)T case since tag deployed \\(28.48^{\\circ}\\), \\(-89.052^{\\circ}\\) latitude/longitude. (, \\(28.48^{\\circ}\\) north latitude, \\(89.052^{\\circ}\\) west longitude.) (useful website find geomagnetic field parameters, based tag deployed , : https://www.ngdc.noaa.gov/geomag-web/#igrfwmm.) Finally, angle M close magnetic inclination angle, also locally constant, \\(59^{\\circ}\\) case. Use check_AM() compute field strength M inclination angle. Recall stored sw$M stored sw$M, write result new object AMcheck another similar name. check object contains. able tell AMcheck list containing two vectors, AMcheck$fstr (field strength) AMcheck$incl (inclination). Open next code see plott .  top plot shows field strength M. close 9.8 48, respectively, little variation. , acceleration magnetometer data need re-calibration. Usually, problem M due stray magnetic fields tag. Fix ‘hard-iron correction’, function fix_offset_3d can . , recall M stored within sw sw$M. Write result object Mf, look Mf contains. show Mf list two elements, Mf$X Mf$G. Comparing Mf$G Mf$X sw$, ’ll notice Mf$X sw$structures contain kind data. Hence Mf$X can stand sw$M (Mf ). , try re-run check_AM() sw$Mf$X see field strength improved.  gone well, field strength pretty constant right around 48 \\(\\mu\\)T. ? Great work! Now look inclination angle (bottom plot). Chances , doesn’t look consistently close \\(59^{\\circ}\\). Therefore, need next step…","code":"library(tagtools) sw_file_path <- \"nc_files/rawtestset3.nc\" sw <- load_nc(sw_file_path) str(sw, max.level = 1) sw$info #> [1] \"results for `str(sw, max.level = 1)`:\" #> [1] \"-------------------------------------\" #> List of 5 #>  $ _empty:List of 1 #>  $ P     :List of 16 #>  $ A     :List of 18 #>  $ M     :List of 18 #>  $ info  :List of 36 #>  - attr(*, \"class\")= chr [1:2] \"animaltag\" \"list\" #> [1] \"-------------------------------------\" #> [1] \"and results for `sw$info`:\" #> [1] \"-------------------------------------\" #> $depid #> [1] \"sw03_165a\" #>  #> $dtype_source #> [1] \"sw03_165aprh.mat,sw03_165aaud.txt\" #>  #> $dtype_datetime_made #> [1] \"18/07/2017 22:15:00\" #>  #> $dtype_nfiles #> [1] \"1\" #>  #> $dtype_format #> [1] \"MAT\" #>  #> $device_serial #> [1] \"\" #>  #> $device_make #> [1] \"DTAG\" #>  #> $device_type #> [1] \"Archival\" #>  #> $device_model #> [1] \"DTAG2\" #>  #> $device_url #> [1] \"https://www.soundtags.org\" #>  #> $sensors_firm #> [1] \"Not specified\" #>  #> $sensors_soft #> [1] \"Not specified\" #>  #> $sensors_list #> [1] \"3axis Accelerometer,3 axis Magnetometer,Pressure,Sound\" #>  #> $animal_id #> [1] \"Unknown\" #>  #> $animal_species_common #> [1] \"Sperm whale\" #>  #> $animal_species_science #> [1] \"Physeter macrocephalus\" #>  #> $animal_dbase_url #> [1] \"http://www.arkive.org/sperm-whale/physeter-macrocephalus/\" #>  #> $animal_dbase_itis #> [1] \"180488\" #>  #> $dephist_device_tzone #> [1] \"0\" #>  #> $dephist_device_regset #> [1] \"dd/mm/yyyy HH:MM:SS\" #>  #> $dephist_device_datetime_start #> [1] \"2003-06-14 18:38:35\" #>  #> $dephist_deploy_locality #> [1] \"northern Gulf of Mexico\" #>  #> $dephist_deploy_location_lat #> [1] \"28.48\" #>  #> $dephist_deploy_location_lon #> [1] \"-89.052\" #>  #> $dephist_deploy_datetime_start #> [1] \"2003-06-14 18:38:35\" #>  #> $dephist_deploy_method #> [1] \"Suction cups\" #>  #> $project_name #> [1] \"GOM 2003\" #>  #> $project_datetime_start #> [1] \"2003-06-03\" #>  #> $project_datetime_end #> [1] \"2003-06-24\" #>  #> $provider_name #> [1] \"Mark Johnson\" #>  #> $provider_details #> [1] \"Univ St Andrews\" #>  #> $provider_email #> [1] \"info@animaltags.org\" #>  #> $provider_license #> [1] \"Contact data provider\" #>  #> $provider_cite #> [1] \"Contact data provider\" #>  #> $provider_doi #> [1] \"Contact data provider\" #>  #> $creation_date #> [1] \"02-Dec-2019 16:14:58\" plott(X = list(depth = sw$P, acc = sw$A, mag = sw$M)) AMcheck <- check_AM(sw$A, sw$M) str(AMcheck, max.level = 1) #> List of 2 #>  $ fstr: num [1:71975, 1:2] 9.76 9.62 9.39 9.32 9.31 ... #>  $ incl: num [1:71975, 1] -0.655 -0.634 -0.62 -0.577 -0.529 ... sampling_rate <- sw$A$sampling_rate # get the sampling rate of A and M for plotting # plott fstr, and incl (converting from radians to degrees) plott(X = list(fstr = AMcheck$fstr, incl = AMcheck$incl*180/pi), fsx = sampling_rate) Mf <- fix_offset_3d(sw$M) str(Mf, max.level = 1) #> List of 2 #>  $ X:List of 19 #>  $ G:List of 1 str(Mf$G, max.level = 1) str(Mf$X, max.level = 1) str(sw$A, max.level = 1) #> [1] \"----------------\" #> [1] \"results for Mf$G\" #> [1] \"----------------\" #> List of 1 #>  $ poly: num [1:3, 1:2] 1 1 1 9.64 -5.58 ... #> [1] \"----------------\" #> [1] \"results for Mf$X\" #> [1] \"----------------\" #> List of 19 #>  $ data              : num [1:71975, 1:3] -28.6 -28.1 -27.4 -26.6 -25.6 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 5 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"sw03_165a\" #>  $ creation_date     : chr \"07-Aug-2017 15:32:56\" #>  $ history           : chr \"fix_offset_3d\" #>  $ type              : chr \"mag\" #>  $ full_name         : chr \"Magnetometer\" #>  $ description       : chr \"triaxial magnetometer\" #>  $ unit              : chr \"uT\" #>  $ unit_name         : chr \"micro Tesla\" #>  $ unit_label        : chr \"\\\\muT\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"sensor\" #>  $ axes              : chr \"FRU\" #>  $ cal_poly          : num [1:3, 1:2] 1 1 1 9.64 -5.58 ... #> [1] \"----------------\" #> [1] \"results for sw$A\" #> [1] \"----------------\" #> List of 18 #>  $ data              : num [1:71975, 1:3] -3.49 -3.32 -3.04 -2.89 -2.73 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 5 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"sw03_165a\" #>  $ creation_date     : chr \"07-Aug-2017 15:32:56\" #>  $ history           : chr \"sens_struct,decdc(5)\" #>  $ type              : chr \"acc\" #>  $ full_name         : chr \"Acceleration\" #>  $ description       : chr \"triaxial acceleration\" #>  $ unit              : chr \"m/s2\" #>  $ unit_name         : chr \"meters per seconds squared\" #>  $ unit_label        : chr \"m/s^2\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"tag\" #>  $ axes              : chr \"FRU\" AMcheck2 <- check_AM(sw$A, Mf$X) plott(X = list(fstr = AMcheck2$fstr, incl = AMcheck2$incl*180/pi), fsx = sampling_rate)"},{"path":"/articles/data-quality-error-correction.html","id":"correcting-the-axes-of-triaxial-sensor-data","dir":"Articles","previous_headings":"Checking accelerometer and magnetometer data","what":"Correcting the axes of triaxial sensor data","title":"Data quality & error correction","text":"field strength okay M inclination angle wrong, strong indication magnetometer accelerometer axes don’t match. Assuming accelerometer axes correct, found trial error magnetometer axes mapped follows: make corrections Mf one--one, probably convenient . make happen, define ‘map’ matrix summarizes changes: Use function rotate_vecs() apply Map Mf$X make new ‘tag frame’ data structure: Mt now oriented tag’s frame reference. Add important information Mt structure Mt: Check field strength inclination sw$Mt . Try , check work code : write new object, perhaps AMcheck3, result check_AM sw$Mt. use new object AMcheck3 place AMcheck2 get two plots, newly corrected data.  good? Bear mind inferred inclination angle accelerometer magnetometer data usually bit noisy don’t expect incl exactly expected inclination angle. get pretty close, though (around \\(59^{\\circ}\\)). comfortable data pass quality checks, save new NetCDF file: corrections made get Mt stored structure information also saved automatically nc file - verify showing contents Mt. processing steps listed ‘history’ field traceable expect professional archive.","code":"Map <- matrix(c(-1, 0, 0,                 0, 0, 1,                 0, 1, 0),               nrow = 3, ncol = 3, byrow = TRUE) #>      [,1] [,2] [,3] #> [1,]   -1    0    0 #> [2,]    0    0    1 #> [3,]    0    1    0 Mt <- rotate_vecs(Mf$X,Map) Mt$frame <- 'tag' Mt$sensor_map <- Map        # save the Map matrix too str(Mt, max.level = 1) #> List of 20 #>  $ data              : num [1:71975, 1:3] 28.6 28.1 27.4 26.6 25.6 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 5 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"sw03_165a\" #>  $ creation_date     : chr \"07-Aug-2017 15:32:56\" #>  $ history           : chr \"fix_offset_3d\" #>  $ type              : chr \"mag\" #>  $ full_name         : chr \"Magnetometer\" #>  $ description       : chr \"triaxial magnetometer\" #>  $ unit              : chr \"uT\" #>  $ unit_name         : chr \"micro Tesla\" #>  $ unit_label        : chr \"\\\\muT\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"tag\" #>  $ axes              : chr \"FRU\" #>  $ cal_poly          : num [1:3, 1:2] 1 1 1 9.64 -5.58 ... #>  $ sensor_map        : num [1:3, 1:3] -1 0 0 0 0 1 0 1 0 AMcheck3 <- check_AM(sw$A, Mt) plott(X = list(fstr = AMcheck3$fstr, incl = AMcheck3$incl*180/pi), fsx = sampling_rate) save_nc('testset3_tag_frame', X = list(sw$A, Mt, sw$P, sw$info)) str(Mt) #> List of 20 #>  $ data              : num [1:71975, 1:3] 28.6 28.1 27.4 26.6 25.6 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 5 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"sw03_165a\" #>  $ creation_date     : chr \"07-Aug-2017 15:32:56\" #>  $ history           : chr \"fix_offset_3d\" #>  $ type              : chr \"mag\" #>  $ full_name         : chr \"Magnetometer\" #>  $ description       : chr \"triaxial magnetometer\" #>  $ unit              : chr \"uT\" #>  $ unit_name         : chr \"micro Tesla\" #>  $ unit_label        : chr \"\\\\muT\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"tag\" #>  $ axes              : chr \"FRU\" #>  $ cal_poly          : num [1:3, 1:2] 1 1 1 9.64 -5.58 ... #>  $ sensor_map        : num [1:3, 1:3] -1 0 0 0 0 1 0 1 0"},{"path":"/articles/data-quality-error-correction.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Data quality & error correction","text":"learned? powerful tools detecting correcting common errors raw data. Great work! ’ve completed vignette. ’d like continue working vignettes, tag--whale-frame probably good option. deals estimating correcting orientation tag animal. vignette use tag data aligned animal’s body axes, e.g., tag applied free-moving whale. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('tag-to-whale-frame')"},{"path":"/articles/detectors.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Detectors","text":"      Scientists long struggled study animal behavior minimizing amount imposed stress upon animal observed (Brown et al., 2013; Schneirla, 1950). Difficulty also arises attempting observe animals environments time periods relatively inaccessible humans (Allen et al., 2016). two concerns arose scientific field biotelemetry (Kooyman, 2003). Since first use tagging devices animals 1963, field biotelemtery evolved discipline allows detailed behavioral studying animals ranging size chipmunks blue whales (Hammond et al., 2016; Acevedo-Gutiérrez et al., 2002; Kooyman, 2003).       Marine biologging become one prominent fields biotelemetry. variety unique tagging systems (.e. DTAGs (Johnson Tyack, 2003), Acousonde tags (Burgess et al., 1998), etc.) developed researchers around world try gain non-invasive access unique lives marine creatures. data obtained tags, scientists able determine exact moment time animal exhibited certain behavior (Johson et al., 2009; Goldbogen et al., 2006; Goldbogen et al., 2008; Miller et al., 2004). However, due often high sampling rate multisensor tags long duration data recording, process determining time every instance given behavior can quite laborious time consuming.       quest make data analysis efficient, scientists begun develop software functions, automatically detect animal behaviors multisensor data (Owen et al., 2016; Allen et al., 2016; Doniol-Valcroze et al., 2011; Kokubun et al., 2011; Cox et al., 2017; Ware et al., 2011; Viviant et al., 2010). functions scan data searching signal characteristics, known indicators unique animal behaviors. many methods specific data format requirements, flexible methods can easily applied data many species tag types facilitate inter-study inter-specific comparisons meta-analysis variety different animal behaviors.       light , developed function, usable three widely used software programs (R (R Core Team 2017), Matlab (MathWorks, Natick, MA, USA), Octave (Eaton et al., 2016)), generalizable wide variety data types/formats, animals, behaviors. function, called detect_peaks, part tagtools package R.","code":""},{"path":"/articles/detectors.html","id":"function-design","dir":"Articles","previous_headings":"","what":"Function Design","title":"Detectors","text":"      detect_peaks function contains 6 specified inputs allows additional inputs added end command.       vignette, describing , user, need understand using function thought process behind significant step function script. Later , section titled Case Study, walk specific example function may used.       order make best use function, helpful understand things regarding design. name function suggests, function determines time animal behavior going large data sets locating large spikes/peaks data signal. peak determined represent behavior event surpasses predetermined threshold. function, default threshold level (input thresh) set 0.99 quantile signal. However, threshold level appropriate circumstances. may cases threshold level result many false positive detections (peak detected without present behavior) insufficient true positive detections (peak detected present behavior). Typically, threshold high, number missed detections high strongest peaks representing behavior events detected. threshold low, number true positive detections high, number false positives (Urick, 1967). Therefore, allow user change threshold level desire level default. information determining best threshold level can found case study .       peaks signal detected, blanking time (input bktime) used determine start end times peak well time peak reached maximum level signal. blanking time amount time within detected peaks determined represent one large, unified behavior event. default value blanking time set 0.80 quantile vector containing time differences consecutive signal values surpass specified threshold. first job blanking time determine adjacent peaks represent one multiple behavior events. detected peaks separated length time larger blanking time considered distinct behavior events. done, start times (point peak first exceeds threshold), end times (point peak finally recedes beneath threshold value), peak times (point peak reaches maximum signal strength), peak maximum (maximum value detected peak units signal) determined returned output.       function finished running, signal studied plotted (assuming input plot_peaks TRUE) determined peak labeled marker. point, able examine quality function’s performance detecting true positive events. determine wish threshold level blanking time altered, can click graph change values. example, want change threshold level, can click within plot given threshold level desired click “Finish”. rerun function return new peak detections new plot. want change blanking time, must click twice within plot click “Finish”. distance click determines new blanking time function rerun. want change threshold blanking time, must click three times. first click change threshold second two clicks alter blanking time. clicking three times, function rerun. occasion satisfied threshold blanking times used first run function, must simply click “Finish” button located just plot, peak detections returned. Along peak detections, threshold level blanking time used analysis also returned ouput.       final crucial thing understand using function input data can either signal vector matrix data. data signal vector, user wishes peaks detected , nothing given input FUN. However, data given input matrix, input FUN must given peak detector able detect peaks matrix data. input FUN function user wishes apply data matrix generate signal vector (passes peak detection process described ). signal vector metric whose values large events occur, small otherwise – specific event detected, better. Examples functions pass “FUN” tagtools package njerk, odba, etc., function (including custom function written user) can used. provide examples detect_peaks function works vector matrix inputs case study .","code":"detect_peaks(data, sr, FUN = NULL, thresh = NULL, bktime = NULL, plot_peaks = NULL,...)"},{"path":[]},{"path":"/articles/detectors.html","id":"detecting-lunge-feeding-events-of-a-blue-whale-from-triaxial-acceleration-data","dir":"Articles","previous_headings":"Case Study","what":"Detecting lunge feeding events of a blue whale from triaxial acceleration data","title":"Detectors","text":"      case study, providing example use detect_peaks function order detect times lunge feedings events blue whale. Previous studies shown effectiveness using norm jerk triaxial acceleration detect presence lunge feeding events tag data (Simon et al., 2012; Owen et al., 2016). norm jerk square-root sum squares axis acceleration matrix. good proxy feeding behavior events blue whales, lunge feeding whales, known drastically increase speed acceleration approaching feeding patch. , upon opening mouthes engulf prey, extremely sudden decrease speed acceleration due drag. rapid increase decrease speed acceleration can observed norm jerk signal large peak signal. Thankfully, tagtools package function njerk can used convert acceleration matrix norm jerk signal vector.       begin, load data used case study. following data obtain members SOCAL Behavioral Response Study project (https://sea-inc.net/science/socal-brs/). particular blue whale tagged DTAG2, gathered multisensor data including, limited , triaxial accelerometer pressure (depth) data. particular data set used variety publications (DeRuiter et al., 2017; Goldbogen et al., 2013; Goldbogen et al., 2015). time , load acceleration matrix (within whale frame) blue whale data set. , use read_csv function package readr. (need , install_packages(\"readr\") trick.) acceleration matrix within whale frame labeled “Aw”. also create variable “sampling_rate” specifies sampling rate acceleration data, used run njerk function. , look first rows Aw sampling_rate confirm worked properly.       Next, generate norm jerk signal using function njerk. plot provides helpful visualization signal.        can see, used acceleration matrix now converted norm-jerk signal vector. plot, can already begin get idea lunge feeding events might notice occasional peaks signal. However, peaks right 63000 time value begin look completely unlike data. (equals 3.5 hours: 63000 signals times (one second per five signals) times (one hour per 3600 seconds) = 63000 / 18000 = 3.5.) good explanation time, tag fallen whale. Consequentially, past time, longer recording norm jerk whale’s movement, instead norm jerk tag floating surface ocean. likely peaks skew results, remove data sample 63000.       next step detecting event lunge feeding behavior gather rest data necessary use detect_peaks function. order run detect_peaks function, must variable sr, sampling rate data input. might think , “Isn’t sampling_rate, already gathered?” correct. However, due nature function, sampling rate must labeled something “sampling_rate”.       point, almost ready apply norm jerk signal detect_peaks function. One thing consider first, however, whether want set specified threshold /blanking time value okay simply using default values inputs. instance, let’s assume don’t know perfect threshold value blanking time . use default settings (now).  case need/want see jerk signal running detect_peaks function, produced results using following code:       Now, looking generated plot can see signal , now plot markers identifying peaks detected. time, can decide wish change level threshold blanking time, consequentally rerunning function. wish accept peak detections displayed, can end function obtain output list detection times levels. order fully walk capabilities function, let’s imagine wish change threshold blanking time values see output might change. , click within plot, given , list coordinates [x, y] clicked three different locations plot: [19873, 0.874], [20000, 1.258], [19950, 0.736]. Based three coordinates, threshold value function rerun 0.874, blanking time 50. new plot summary results. included new code provide helpful visual, using detect_peaks() , necessary retype function changing threshold /blanking time interactive plot.","code":"library(readr) bw11_210a_tagdata <- readr::read_csv('http://sldr.netlify.com/data/bw11_210a_tagdata.csv') Aw <- cbind(bw11_210a_tagdata$Awx, bw11_210a_tagdata$Awy, bw11_210a_tagdata$Awz) sampling_rate <- bw11_210a_tagdata$fs[1]   head(Aw, 5) head(sampling_rate) ##           [,1]     [,2]     [,3] ## [1,] -0.757237 0.256707 0.594229 ## [2,] -0.754772 0.243776 0.613680 ## [3,] -0.749972 0.231498 0.635822 ## [4,] -0.741841 0.231193 0.662992 ## [5,] -0.730536 0.256309 0.700784 ## [1] 5 library(tagtools) jerk <- njerk(A = Aw, sampling_rate = sampling_rate) X <- list(jerk = jerk) plott(X, 5, line_colors = \"blue\") jerk <- jerk[1:63000] sr <- bw11_210a_tagdata$fs[1] detect_peaks(data = jerk, sr = sr, FUN = NULL,                  thresh = NULL, bktime = NULL, plot_peaks = TRUE) detect_peaks(data = Aw[1:63000, ], sr = sr, FUN = \"njerk\",                  thresh = NULL, bktime = NULL, plot_peaks = TRUE, sampling_rate = sampling_rate) peaks <- detect_peaks(data = jerk, sr = sr, FUN = NULL,                            thresh = 0.874, bktime = 50, plot_peaks = TRUE) plott(X, sampling_rate, line_colors = \"blue\") plott(X, sampling_rate, line_colors = \"blue\") str(peaks) ## 'data.frame':    232 obs. of  6 variables: ##  $ start_time: num  326 687 1124 1130 1187 ... ##  $ end_time  : num  326 692 1125 1130 1191 ... ##  $ peak_time : num  326 690 1124 1130 1190 ... ##  $ peak_max  : num  0.871 1.149 0.806 0.672 0.931 ... ##  $ thresh    : num  0.67 0.67 0.67 0.67 0.67 ... ##  $ bktime    : num  3.2 3.2 3.2 3.2 3.2 3.2 3.2 3.2 3.2 3.2 ..."},{"path":"/articles/detectors.html","id":"roc-curves-and-detection-optimization","dir":"Articles","previous_headings":"Case Study > Detecting lunge feeding events of a blue whale from triaxial acceleration data","what":"ROC Curves and Detection Optimization","title":"Detectors","text":"      Receiver operating characteristic (ROC) curves type plot used order enhance overall performance automated event detection functions determining optimal threshold level. plots generated determining true positive rate false positive rate event detection function (case detect_peaks) specified threshold level. single point plot specifies true positive rate false positive rate one specified threshold level. Therefore, order generate full ROC curve, event detections must performed variety different thresholds. rate true positive detections calulated dividing number true positive detections number actual events. rate false positive detections calculated dividing number false positive detections total number possible events within time tag recording. Determining number total possible events can difficult, unfortunately, biological system, value dependent upon long list determining factors. example, number times whale can lunge feed within given amount time dependent upon availability food source, energy required swim currents, time required filter water baleen engulfing prey, etc. paper written Jeremy Goldbogen Stanford University, fin whales determined able lunge feed every 44.5 ± 19.1 seconds (Goldbogen et al., 2006). Therefore, since blue whales similar size fin whales, averaging meters longer, let’s say blue whales able lunge feed minimum 30 seconds since previous feeding event. Using number, can determine total possible number lunge feeding events dividing total number samples data sampling_rate, dividing number 30. , get 420 total possible lunge feeding events (tpevents) blue whale.       number known events also hard determine requires trained scientist manually scroll signal, looking distinct characteristics plot known related desired behavioral event. Lucky us, hard work already completed members SOCAL BRS project. name vector containing known times lunges data set “events”. Now, event times determined members SOCAL BRS units seconds, must first multiply vector sampling rate order units samples.       Let’s now begin make ROC curve. run detect_peaks function using blanking time 30 seconds thresholds ranging .05 1.75 (roughly max jerk signal). determine rate false positive true positive detections threshold level using known lunge times. Using rates, able plot ROC curve. Shown true positive false positive rates corresponding ROC plot.       Looking ROC plot , see overall event detection using detect_peaks function quite successful. large amount area curve, representing high performing event detector. Now, next step going determine optimal threshold level based true false positive rates shown . generally accepted definition “optimal” threshold level highest ratio true positive false positive detections. However, interest case study, let us assume wish find threshold level obtained maximum number true positive detections. looking detection rates , see occured thresholds 0.20 0.65. Becauses multiple thresholds maximum true positive rate achieved, going find thresholds posseses highest ratio true positive false positive detections, use “optimal” threshold.       see last value possesses highest ratio. value represents ratio threshold 0.65. final step optimizing event detection method utilize “optimal” threshold use run detect_peaks function one final time.         resulting data shows lunge feeding events detected detect_peaks function using “optimal” threshold blanking time. included plot dive profile blue whale lunges detected detect_peaks function marked gold known lunge times marked red. One brief note dive profile plot shown gold red markings overlap slightly directly overlayed still represent correctly detected lunge feeding event. exact time lunge determined occured slightly different detect_peaks function manual detections performed SOCAL BRS researchers.       case study provides specific application tool determine times lunge feeding events bio-logging acceleration data, hope tool flexible enough use across many different signal types, species contexts.","code":"tpevents <- (63000 / sampling_rate) / 30 head(events, 8) ## [1]  340  700 1195 1505 1910 3980 4380 6555 ##       True_Positive_Rate False_Positive_Rate ##  [1,]         0.00000000         0.000000000 ##  [2,]         0.45555556         0.019047619 ##  [3,]         0.88888889         0.033333333 ##  [4,]         0.91111111         0.050000000 ##  [5,]         0.92222222         0.076190476 ##  [6,]         0.92222222         0.109523810 ##  [7,]         0.92222222         0.140476190 ##  [8,]         0.92222222         0.150000000 ##  [9,]         0.92222222         0.114285714 ## [10,]         0.92222222         0.095238095 ## [11,]         0.92222222         0.073809524 ## [12,]         0.92222222         0.071428571 ## [13,]         0.92222222         0.066666667 ## [14,]         0.92222222         0.057142857 ## [15,]         0.91111111         0.052380952 ## [16,]         0.87777778         0.050000000 ## [17,]         0.85555556         0.045238095 ## [18,]         0.81111111         0.035714286 ## [19,]         0.76666667         0.023809524 ## [20,]         0.66666667         0.014285714 ## [21,]         0.58888889         0.007142857 ## [22,]         0.50000000         0.007142857 ## [23,]         0.44444444         0.007142857 ## [24,]         0.35555556         0.004761905 ## [25,]         0.30000000         0.002380952 ## [26,]         0.20000000         0.002380952 ## [27,]         0.15555556         0.000000000 ## [28,]         0.12222222         0.000000000 ## [29,]         0.10000000         0.000000000 ## [30,]         0.05555556         0.000000000 ## [31,]         0.03333333         0.000000000 ## [32,]         0.02222222         0.000000000 ## [33,]         0.02222222         0.000000000 ## [34,]         0.02222222         0.000000000 ## [35,]         0.02222222         0.000000000 ## [36,]         0.01111111         0.000000000 ## [37,]         1.00000000         1.000000000 rates[5:14, 1] / rates[5:14, 2] ##  [1] 12.104167  8.420290  6.564972  6.148148  8.069444  9.683333 12.494624 ##  [8] 12.911111 13.833333 16.138889 peaks <- detect_peaks(data = Aw[1:63000, ], sr = 5, FUN = njerk, thresh = 0.65, bktime = 30, plot_peaks = FALSE, sampling_rate = 5) str(peaks) ## 'data.frame':    107 obs. of  6 variables: ##  $ start_time: num  326 687 1124 1490 1880 ... ##  $ end_time  : num  326 692 1191 1497 1899 ... ##  $ peak_time : num  326 690 1190 1492 1899 ... ##  $ peak_max  : num  0.871 1.149 0.931 1.259 1.064 ... ##  $ thresh    : num  0.65 0.65 0.65 0.65 0.65 0.65 0.65 0.65 0.65 0.65 ... ##  $ bktime    : num  30 30 30 30 30 30 30 30 30 30 ... depth <- bw11_210a_tagdata$depth cropped_depth <- depth[1:63000] klunge <- (((events / 5) / 60) / 60) dettimes <- (((peaks$peak_time / 5) / 60) / 60) depthevents <- cropped_depth[events] depthdetections <- cropped_depth[peaks$peak_time] Dive_Profile <- list(Dive_Profile = cropped_depth) plott(Dive_Profile, 5, r = TRUE, par_opts = list(mar=c(1,5,0,0), oma=c(2,0,2,1), las=1, lwd=1, cex = 1)) graphics::points(x = klunge, y = depthevents, col = \"red\", cex = 1.4, pch = 16) graphics::points(x = dettimes, y = depthdetections, col = \"gold\", cex = 1.4, pch = \"+:\")"},{"path":"/articles/detectors.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"Detectors","text":"Acevedo-Gutiérrez, ., Croll, D.., Tershy, B.R. (2002). High feeding costs limit dive time largest whales. J. Exp. Biol. 205, 1747-1753. Allen, .N., Goldbogen, J.., Friedlaender, .S., Calambokidis, J. (2016). Development automated method detecting stereotyped feeding events multisensor data tagged rorqual whales. Ecology Evolution. 6(20), 7522–7535. Brown, D.D, Kays, R., Martin, W., Wilson, R., Klimley, .P. (2013). Observing unwatchable acceleration logging animal behavior. Animal Biotelemetry. 1(20). Burgess, W.C., Tyack, P.L., Le Boeuf, B.J., Costa, D.P. (1998). programmable acoustic recording tag Þrst results free-ranging northern elephant seals. Deep_seaResearch II. 45, 1327-1351. Cox, S.L., Orgeret, F., Gesta, M., Rodde, C., Heizer, ., Weimerskirch, H., Guinet, C. (2017). Processing acceleration dive data -board satellite relay tags investigate diving foraging behaviour free-ranging marine predators. Methods Ecology Evolution. doi:10.1111/2041-210X.12845. Doniol-Valcroze, T., Lesage, V., Giard, J., Michaud, R. (2011). Optimal foraging theory predicts diving feeding strategies largest marine predator. Behavioral Ecology. 22(4), 880-888. Eaton, J.W., Bateman, D., Hauberg, S., Wehbring, R. (2016). GNU Octave version 4.2.0 manual: high-level interactive language numerical computations. URL:https://docs.octave.org/interpreter/. Goldbogen, J.., Calambokidis, J., Shadwick, R.E., Oleson, E.M., McDonald, M.., Hildebrand, J.. (2006). Kinematics foraging dives lunge-feeding fin whales. J. Exp. Biol. 209, 1231-1244. Goldbogen, J.., Calambokidis, J., Croll, D.., Harvey, J.T., Newton, K.M., Oleson, E.M., Schorr, G., Shadwick, R.E. (2008). Foraging behavior humpback whales: kinematic respiratory patterns suggest high cost lunge. J. Exp. Biol. 211, 3712-3719. Goldbogen, J.., Hazen, E.L., Friedlaender, .S., Calambokidis, J., DeRuiter, S.L., Stimpert, .K., Southall, B.L. (2015). Prey density distribution drive three-dimensional foraging strategies largest filter feeder. Functional Ecology. 29, 951-961. Hammond, T.T., Springthorpe, D., Walsh, R.E., Berg-Kirkpatrick, T. (2016). Using accelerometers remotely automatically characterize behavior small animals. J. Exp. Biol. 219, 1618-1624. Johnson, M.P., Aguilar de Soto, N., Madsen, P.T. (2009). Studying behaviour sensory ecology marine mammals using acoustic recording tags: review. Marine Ecology Progress Series. 395, 55-73. Johnson, M.P., Tyack, P.L. (2003). digital acoustic recording tag measuring response wild marine mammals sound. Journal Oceanic Engineering. 28(1), 3-12. Kokubun, N., Kim, J., Shin, H., Naito, Y., Takahashi, . (2011). Penguin head movement detected using small accelerometers: proxy prey encounter rate. J. Exp. Biol. 214, 3760-3767. Kooyman, G.L. (2004). Genesis evolution bio-logging devices: 1963-2002. Mem. Natl Inst. Polar Res. 58, 15-22. MATLAB (2017a). MathWorks, Inc., Natick, Massachusetts, United States. Miller, P.O., Johnson, M.P., Tyack, P.L. (2004). Sperm whale behaviour indicates use echolocation click buzzes ‘creaks’ prey capture. Royal Society. 271, 2239-2247. Owen, K., Dunlop, R.., Monty, J.P., Chung, D., Noad, M.J, Donnelly, D., Goldizen, .W., Mackenzie, T. (2016) Detecting surface-feeding behavior rorqual whales accelerometer data. Marine Mammal Science. 32(1), 327-348. Owen, K., Jenner, C.S., Jenner, M.M., Andrews, R.D. (2016). week life pygmy blue whale: migratory dive depth overlaps large vessel drafts. Animal Biotelemetry. 4(17). R Core Team (2017). R: language environment statistical computing. R Foundation Statistical Computing, Vienna, Austria. URL:https://www.R-project.org/. Schneirla, T.C. (1950). relationship observation experimentation field study behavior. ANNALS New York Academy Sciences. 51, 1022-1044. Viviant, M., Trites, .W., Rosen, D..S., Monestiez, P., Guinet, C. (2010). Prey capture attempts can detected Steller sea lions marine predators using accelerometers. Polar Biol. 33, 713-719. Ware, C., Friedlaender, .S., Nowacek, D.P. Shallow deep lunge feeding humpback whales fjords West Antarctic Peninsula. Marine Mammal Science. 27(3), 587-605.","code":""},{"path":"/articles/dive-stats.html","id":"finding-dives-and-summarising-them","dir":"Articles","previous_headings":"","what":"Finding dives and summarising them","title":"Using dive_stats","text":"Consider dataset DTAG attached Cuvier’s beaked whale, Ziphius cavirostris. Load data file zc11_267a.nc. want run example, download “zc11_267a.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files Make plot dive profile. notice?  deep dives profile! perhaps expected Cuvier’s beaked whales, reputation mysteriously extreme excursions. probably want crop data analysis, period start recording tag yet deployed whale.  minimum depth threshold think use detect dives animal’s dives? Consider justify choice. less fifty meters seems like reasonable choice detect animal’s dives. , dives animal performs 100 meters depth. Use find_dives detect dives deeper chosen minimum depth mindepth. Going forward, code assumed minimum depth \\(50 m\\). Now use dive_stats compute summary statistics dives detected. look dive stats perhaps make plot . notice anything interesting?","code":"library(tagtools) ZC_file_path <- \"nc_files/zc11_267a.nc\" ZC <- load_nc(ZC_file_path) plott(X=list(Depth=ZC$P), r = TRUE) ZPCr = crop(ZC$P) # if you want to review history/other fields str(ZPCr, max.level = 1) #> [1] \"Results for `crop(ZC$P)`:\" #> [1] \"---------------------------------------\" #> [1] \"Position your cursor and then click once followed by clicking FINISH to change the start, or click twice in the same spot followed by clicking FINISH to change the end. If you wish to change both the start and end click once at the start time desired and twice at the end time desired.\" #> [1] \"Results for `str(ZPCr, max.level = 1)`:\" #> [1] \"---------------------------------------\" #> List of 18 #>  $ data              : num [1:330359(1d)] 2.15 2.13 2.16 2.16 2.13 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 5 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"zc11_267a\" #>  $ creation_date     : chr \"2017-08-08 04:55:39\" #>  $ history           : chr \"sens_struct\" #>  $ type              : chr \"P\" #>  $ full_name         : chr \"Depth\" #>  $ description       : chr \"dive depth\" #>  $ unit              : chr \"m H2O\" #>  $ unit_name         : chr \"meters H2O (salt)\" #>  $ unit_label        : chr \"meters\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"\" #>  $ frame             : chr \"\" #>  $ axes              : chr \"D\" mindepth <- # your chosen minimum depth here dt <- find_dives(ZPCr, mindepth=mindepth) ds <- dive_stats(ZPCr, dive_cues=dt[,c('start', 'end'),])  str(ds) #> 'data.frame':    25 obs. of  12 variables: #>  $ num      : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ max      : num  1737 356 395 391 438 ... #>  $ st       : num  6728 10925 12624 14304 16177 ... #>  $ et       : num  10806 12510 14230 16091 18027 ... #>  $ dur      : num  4078 1585 1606 1787 1850 ... #>  $ dest_st  : num  7698 11212 13093 14768 16636 ... #>  $ dest_et  : num  8954 11802 13705 15391 17170 ... #>  $ dest_dur : num  1255 590 612 623 534 ... #>  $ to_dur   : num  970 287 469 465 459 ... #>  $ from_dur : num  1852 709 525 700 857 ... #>  $ to_rate  : num  1.521 1.055 0.715 0.714 0.809 ... #>  $ from_rate: num  -0.797 -0.426 -0.638 -0.473 -0.434 ..."},{"path":"/articles/dive-stats.html","id":"optional-choose-an-extra-variable","dir":"Articles","previous_headings":"Finding dives and summarising them","what":"Optional: choose an extra variable","title":"Using dive_stats","text":"Choose auxiliary variable (anything interest - pitch, roll, heading, MSA, ODBA, njerk…). Compute auxiliary variable, recompute dive stats including auxiliary variable. One example auxiliary variable—pitch—given .","code":""},{"path":"/articles/dive-stats.html","id":"compute-pitch","dir":"Articles","previous_headings":"Finding dives and summarising them > Optional: choose an extra variable","what":"Compute pitch","title":"Using dive_stats","text":"function a2pr calculate pitch roll acceleration. use acceleration data, ’ll want cropped time window ’ve cropped depth data.  now compute pitch:","code":"ZACr <- crop_to(ZC$A, tcues = ZPCr$crop) # plot to confirm the cropping  plott(X=list(CroppedDepth=ZPCr, CroppedAccel=ZACr),        r=c(TRUE,FALSE)) # and reverse the y-axis for depth, but not acceleration ZPiCr <- a2pr(ZACr)$p # this is the variable you'll want to use later"},{"path":"/articles/dive-stats.html","id":"recompute-dive-stats","dir":"Articles","previous_headings":"Finding dives and summarising them > Optional: choose an extra variable","what":"Recompute dive stats","title":"Using dive_stats","text":"Use auxiliary variable choice (following example , ’ll use ZPiCr) my_aux_var. Examine /plot .","code":"dsAux <- dive_stats(P = matrix(ZPCr$data), sampling_rate = ZPCr$sampling_rate, dive_cues=dt[,c('start', 'end'),], X=matrix(my_aux_var)) # if you are using ZPiCr dsAux <- dive_stats(P = matrix(ZPCr$data),                      dive_cues=dt[,c('start', 'end'),],                      X = matrix(ZPiCr), # to avoid nrow != ncol errors                     angular = TRUE, # because this is pitch angle data                     sampling_rate = c(5, 5) # sampling rate is 5 for P & X                     ) str(ds, max.level = 1) str(dsAux, max.level = 1)  plott( # ... figure out what you want to plott; results not shown for this part   ) #> [1] \"Results for `str(ds, max.level = 1):`\" #> [1] \"-----------------------------------------\" #> 'data.frame':    25 obs. of  12 variables: #>  $ num      : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ max      : num  1737 356 395 391 438 ... #>  $ st       : num  6728 10925 12624 14304 16177 ... #>  $ et       : num  10806 12510 14230 16091 18027 ... #>  $ dur      : num  4078 1585 1606 1787 1850 ... #>  $ dest_st  : num  7698 11212 13093 14768 16636 ... #>  $ dest_et  : num  8954 11802 13705 15391 17170 ... #>  $ dest_dur : num  1255 590 612 623 534 ... #>  $ to_dur   : num  970 287 469 465 459 ... #>  $ from_dur : num  1852 709 525 700 857 ... #>  $ to_rate  : num  1.521 1.055 0.715 0.714 0.809 ... #>  $ from_rate: num  -0.797 -0.426 -0.638 -0.473 -0.434 ... #> [1] \"Results for `str(dsAux, max.level = 1):`\" #> [1] \"-----------------------------------------\" #> 'data.frame':    25 obs. of  20 variables: #>  $ num            : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ max            : num  1737 356 395 391 438 ... #>  $ st             : num  6728 10925 12624 14304 16177 ... #>  $ et             : num  10806 12510 14230 16091 18027 ... #>  $ dur            : num  4078 1585 1606 1787 1850 ... #>  $ dest_st        : num  7698 11212 13093 14768 16636 ... #>  $ dest_et        : num  8954 11802 13705 15391 17170 ... #>  $ dest_dur       : num  1255 590 612 623 534 ... #>  $ to_dur         : num  970 287 469 465 459 ... #>  $ from_dur       : num  1852 709 525 700 857 ... #>  $ to_rate        : num  1.521 1.055 0.715 0.714 0.809 ... #>  $ from_rate      : num  -0.797 -0.426 -0.638 -0.473 -0.434 ... #>  $ mean_angle     : num  0.3 0.369 0.327 0.346 0.338 ... #>  $ angle_var      : num  0.3087 0.0978 0.113 0.0972 0.0784 ... #>  $ mean_to_angle  : num  -0.85 -0.356 -0.252 -0.201 -0.201 ... #>  $ mean_dest_angle: num  0.209 0.348 0.345 0.378 0.337 ... #>  $ mean_from_angle: num  0.832 0.635 0.782 0.673 0.606 ... #>  $ to_angle_var   : num  0.0763 0.1025 0.0737 0.0446 0.0565 ... #>  $ dest_angle_var : num  0.2638 0.0326 0.0264 0.0195 0.022 ... #>  $ from_angle_var : num  0.0398 0.0245 0.0139 0.0581 0.0186 ..."},{"path":"/articles/dive-stats.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Using dive_stats","text":"’ve learned couple ways use dive-stats. Well done! ’d like continue working practicals, consider rotation-test fine-scale-tracking . Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('rotation-test') vignette('fine-scale-tracking')"},{"path":"/articles/find-dives.html","id":"load-the-test-data-set","dir":"Articles","previous_headings":"","what":"Load the test data set","title":"Using find_dives","text":"Load test dataset mn12_186a_raw.nc. dataset already converted source file offloaded tag NetCDF file. , metadata gleaned file added data. metadata added hand. want run example, download “mn12_186a_raw.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files Use load_nc load NetCDF file: creates animaltag list object MN workspace. can view Environment tab working RStudio, command line type: see lists , M, P, S, T info contained within list MN.","code":"library(tagtools) MN_file_path <- \"nc_files/mn12_186a_raw.nc\" MN <- load_nc(MN_file_path) names(MN) str(MN$A) # not run because output is very long! see the whole STRucture of MN: # str(MN) # shorter outline version: str(MN, max.level = 1) #> [1] \"Results for `names(MN)`:\" #> [1] \"------------------------\" #> [1] \"P\"    \"A\"    \"M\"    \"T\"    \"S\"    \"info\" #> [1] \"Results for `str(MN$A)`:\" #> [1] \"------------------------\" #> List of 19 #>  $ data              : num [1:1172115, 1:3] 2355 2340 2324 2315 2296 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 32 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"mn12_186a\" #>  $ creation_date     : chr \"07-Aug-2017 14:51:46\" #>  $ history           : chr \"read_ll3m\" #>  $ type              : chr \"acc\" #>  $ full_name         : chr \"Acceleration\" #>  $ description       : chr \"triaxial acceleration\" #>  $ unit              : chr \"1\" #>  $ unit_name         : chr \"counts\" #>  $ unit_label        : chr \"counts\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"tag\" #>  $ axes              : chr \"FRU\" #>  $ files             : chr \"20120704-57537-Mn-XXXX-U-NoName-Acceleration-X.TXT20120704-57537-Mn-XXXX-U-NoName-Acceleration-Y.TXT20120704-57\"| __truncated__ #> [1] \"Results for `str(MN$A)`:\" #> [1] \"------------------------\" #> List of 6 #>  $ P   :List of 17 #>  $ A   :List of 19 #>  $ M   :List of 19 #>  $ T   :List of 16 #>  $ S   :List of 17 #>  $ info:List of 25 #>  - attr(*, \"class\")= chr [1:2] \"animaltag\" \"list\""},{"path":"/articles/find-dives.html","id":"exercise-calculate-the-mean-duration-of-dives-deeper-than-5m","dir":"Articles","previous_headings":"","what":"Exercise: Calculate the mean duration of dives deeper than 5m","title":"Using find_dives","text":"goal data calculate mean duration dives deeper 5 m. can think way already, please go ahead try! can compare answer step--step procedure . raw depth data, problems dive profile. Try plot depth profile temperature. , see can find evidence plot: Incorrect calibration sensor Occasional outliers Coarse depth resolution Temperature sensitivity 1. Pay attention depths reported… looks like dive profile, mostly, looks like “surface” actually around \\(-10\\) m (, ten meters high air)! know humpback whales , fact, go ten meters sky routinely. suggests sensor well-calibrated. 2. Occasionally, peaks go higher yet ten meters high sky momentarily (like 15 meters). outliers. 3. Zoom shallow part dive notice . individual measurements precise meter; thus appear jump back forth suddenly expect relaxed whale surface.  4. temperature gradually rises recording nears end, spikes . accompanied gradually decreasing depth ten meters sky surface. Together, two trends strongly suggest depth data affected changing temperature tag sits near surface.","code":""},{"path":"/articles/find-dives.html","id":"hints-tips","dir":"Articles","previous_headings":"Exercise: Calculate the mean duration of dives deeper than 5m","what":"Hints & Tips","title":"Using find_dives","text":"Look info find species data come . depth values reasonable species? Zoom see size depth steps data. Use plott plot depth temperature:","code":"plott(X=list(Depth=MN$P, Temperature=MN$T), r=c(TRUE,FALSE)) # r=c(TRUE,FALSE) tells plot to reverse the y-axis for the Depth data (so that it looks like a dive profile), but not for the Temperature data (which would be silly)."},{"path":"/articles/find-dives.html","id":"what-to-do-about-periods-of-data-when-the-tag-is-not-on-the-animal","dir":"Articles","previous_headings":"Exercise: Calculate the mean duration of dives deeper than 5m","what":"What to do about periods of data when the tag is not on the animal","title":"Using find_dives","text":"tags way start logging soon tag deployed animal. Often data logging started time trigger alarm, researcher make guess tag deployed set start time appropriately. Often means tag logging data put animal. Equally, tags means detecting release tagged animal. consequence, may continue log data release. cases, logged data deployment use. reduce data just periods tag animal, use tool crop:  displays interactive depth plot. Follow instructions select obvious diving section data click finish. function returns new data structure contains just selected part dive profile. resulting sensor data list also contains fields document just . see : $history field keeps track operations perform data structure. helps traceability make processed data available archive. $crop $start_time fields show original data changed: start_time respect field ‘dephist_device_datetime_start’ $info structure says tag recording started. Use plott plot Pc make sure cropped correctly. Note results look little different depending exactly ’ve cropped data, come essentially thing.","code":"Pc = crop(MN$P) #> [1] \"Position your cursor and then click once followed by clicking FINISH to change the start, or click twice in the same spot followed by clicking FINISH to change the end. If you wish to change both the start and end click once at the start time desired and twice at the end time desired.\" Pc$history str(Pc, max.level = 1) #> [1] \"Results for `Pc$history`:\" #> [1] \"-------------------------------------\" #> [1] \"read_ll3m,crop_to\" #> [1] \"Results for `str(Pc, max.level = 1)`:\" #> [1] \"-------------------------------------\" #> List of 21 #>  $ data              : num [1:25306] -6.5 -6.5 -6.5 -6.5 -6.5 -6.5 -6.5 -6.5 -6.5 -7 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 1 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"mn12_186a\" #>  $ creation_date     : chr \"07-Aug-2017 14:51:49\" #>  $ history           : chr \"read_ll3m,crop_to\" #>  $ type              : chr \"press\" #>  $ full_name         : chr \"Pressure\" #>  $ description       : chr \"dive depth\" #>  $ unit              : chr \"m H2O\" #>  $ unit_name         : chr \"meters H2O (salt)\" #>  $ unit_label        : chr \"meters\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ axes              : chr \"D\" #>  $ files             : chr \"20120704-57537-Mn-XXXX-U-NoName-Depth.TXT\" #>  $ crop              : num [1:2] 0 25306 #>  $ crop_units        : chr \"seconds\" #>  $ start_time        : num 0 #>  $ start_time_units  : chr \"seconds\" plott(X = list(DepthCropped=Pc), r = TRUE) plott(X = list(DepthCropped=Pc), r = TRUE)"},{"path":"/articles/find-dives.html","id":"removing-outliers-","dir":"Articles","previous_headings":"Exercise: Calculate the mean duration of dives deeper than 5m","what":"Removing outliers.","title":"Using find_dives","text":"Outliers spikes data may result errors tag poor sensor performance rapidly changing environmental conditions. example data set, rapid changes temperature pressure animal surfaces cause small glitches data. representative animal’s behaviour need remove . good way median filter. Type: find function works. call using: variable Pcm now contains median-filtered, cropped depth data. Check history verify median filtering added. Compare unfiltered data using:  plots Pc upper panel Pcm lower one, reverses y-axis labeling plots (setting r TRUE times).","code":"?median_filter Pcm = median_filter(Pc,n=3) plott(X=list(Pc=Pc, Pcm=Pcm), r=c(TRUE,TRUE))"},{"path":"/articles/find-dives.html","id":"correcting-pressure-offsets-temperature-effects","dir":"Articles","previous_headings":"Exercise: Calculate the mean duration of dives deeper than 5m","what":"Correcting pressure offsets & temperature effects","title":"Using find_dives","text":"next step correct ‘0’ pressure offset depth sensor (animal 10 m water really surface). can also compensate temperature time. first crop temperature data match pressure data. can using: uses crop information stored Pc operation T. Plot together confirm time intervals (horizontal ticks) :  tag toolbox function correct pressure data called ‘fix_pressure’. Type find assumptions makes data. Use function calling: Compare compensated dive profile uncompensated cropped ones using plott. (code produce three plots, might make bit small. Hit “Zoom” view larger window.)  problems listed taken care ? ideas remaining one(s)? 1. Incorrect calibration sensor temperature sensitivity addressed now, since whale actually resting breathing surface, rather ten meters air. Additionally, occasional outliers removed median filter. However, none increased resolution depth data. order resolve last issue, ultimately, new data taken higher resolution.","code":"Tc <- crop_to(MN$T,tcues=Pc$crop) plott(X=list(Pcm=Pcm, Tc=Tc), r=c(TRUE,FALSE)) ? fix_pressure Pcmf <- fix_pressure(Pcm, Tc) plott(X=list(Pc=Pc, Pcm=Pcm, Pcmf=Pcmf$p), r=c(TRUE,TRUE,TRUE))"},{"path":"/articles/find-dives.html","id":"finding-dives-the-mean-dive-duration","dir":"Articles","previous_headings":"Exercise: Calculate the mean duration of dives deeper than 5m","what":"Finding dives & the mean dive duration","title":"Using find_dives","text":"find mean dive duration dives 5 m depth, measure dive hand depth plot (ginput useful function Matlab Octave measuring data plot – isn’t great equivalent R, interactive plots really commonly used). toolbox function called find_dives. See help function find options . find dives deeper 5 m compensated dive data, type: d return data frame start, end, maximum depth 51 dives (depending cropped data). can get mean dive duration & mean (maximum) dive depth structure? Code provides one possible answer. got mean dive depth, try plotting start end dives depth plot:  , plot might rather small. result might tricky make sense markers designate starts ends dives. able click Zoom view plot larger window. Note: cropped time units x-axis days, adjust multipliers points code accordingly. example , start end times returned find_dives seconds needed divide 3600*24 match unit (days) automatically selected time plott.","code":"? find_dives d <- find_dives(Pcmf$p,mindepth=5) str(d, max.level = 1) #> 'data.frame':    50 obs. of  4 variables: #>  $ start: num  2392 2604 3165 3626 4023 ... #>  $ end  : num  2481 2778 3361 3860 4213 ... #>  $ max  : num  5.75 10.74 10.24 48.7 22.23 ... #>  $ tmax : num  2432 2640 3196 3739 4073 ... total_dive_duration <- matrix(0) for(n in 1:nrow(d)) {   total_dive_duration <- total_dive_duration + d[n,2] - d[n,1]   } mean_dive_duration <- total_dive_duration/nrow(d) mean_dive_duration # since this is using data from find_dives, the mean duration is in seconds # and mean depth total_dive_depth <- matrix(0) for(n in 1:nrow(d)) {   total_dive_depth <- total_dive_depth + d[n,3] } mean_dive_depth <- total_dive_depth/nrow(d) mean_dive_depth plott(X=list(Pcmf=Pcmf$p), r=TRUE) points(d$start/(3600*24),rep(0,nrow(d)),col='green', pch=19) points(d$end/(3600*24),rep(0,nrow(d)),col='red', pch=17)"},{"path":"/articles/find-dives.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Using find_dives","text":"Great work! ’ve learned use find_dives. ’d like continue working practicals, dive-stats might good option ’re especially interested analyzing individual dives. Otherwise, consider fine-scale-tracking mahalanobis-distance. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (source code)","code":"vignette('dive-stats') vignette('fine-scale-tracking') vignette('mahalanobis-distance')"},{"path":"/articles/fine-scale-tracking.html","id":"load-and-explore-data","dir":"Articles","previous_headings":"","what":"Load and Explore Data","title":"Fine-scale tracking","text":"want run example, download “testset7.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files Load data set testset7.nc. dataset built tagtools package, can access using system.file. , check contents data structures answer following questions. (See code need hint.) species data come , data come ? humpback whale, Megaptera novaeangliae. sampling rate accelerometer data? 1 Hz. processing steps already applied magnetometer data? sens_struct, do_cal, tag2animal, crop_to, decdc(5)… , converted sensor structure, calibrated, put animal frame, cropped certain segment data, decimated factor five (result, sampling rate now acceleration data, 1 Hz). 3 columns POS (GPS position) data? three columns time, latitude, longitude. frame accelerometer data ? frame magnetometer data ? accelerometer data oriented animal frame, magnetometer data. Plot pressure accelerometer data plott() get sense animal might data segment. Note code example assumes called data set d7:  , plot GPS positions:","code":"str(d7$info, max.level = 1) #> List of 35 #>  $ depid                        : chr \"mn18_175d\" #>  $ dtype_source                 : chr \"mn18_175d001,mn18_175d002,mn18_175d003,mn18_175d004,mn18_175d005,mn18_175d006,mn18_175d007,mn18_175d008,mn18_17\"| __truncated__ #>  $ dtype_datetime_made          : chr \"2018/07/05 15:25:29\" #>  $ dtype_nfiles                 : num 18 #>  $ dtype_format                 : chr \"DTG\" #>  $ device_serial                : num 1.88e+09 #>  $ device_make                  : chr \"DTAG\" #>  $ device_type                  : chr \"Archival\" #>  $ device_model                 : chr \"DTAG4\" #>  $ device_url                   : chr \"https://www.soundtags.org\" #>  $ sensors_firm                 : chr \"Not specified\" #>  $ sensors_soft                 : chr \"Not specified\" #>  $ sensors_list                 : chr \"3axis Accelerometer,3 axis Magnetometer,Pressure,GPS,Sound\" #>  $ animal_id                    : chr \"Unknown\" #>  $ animal_species_common        : chr \"Humpback whale\" #>  $ animal_species_science       : chr \"Megaptera novaeangliae\" #>  $ animal_dbase_url             : chr \"http://www.arkive.org/humpback-whale/megaptera-novaeangliae/\" #>  $ dephist_device_tzone         : chr \"0\" #>  $ dephist_device_regset        : chr \"yyyy/mm/dd HH:MM:SS\" #>  $ dephist_device_datetime_start: chr \"2018/06/24 11:14:24\" #>  $ dephist_deploy_locality      : chr \"Cape Cod, Massachusetts\" #>  $ dephist_deploy_location_lat  : chr \"\" #>  $ dephist_deploy_location_lon  : chr \"\" #>  $ dephist_deploy_datetime_start: chr \"2018/06/24 11:14:24\" #>  $ dephist_deploy_method        : chr \"suction cup\" #>  $ project_name                 : chr \"ONR Tag Design\" #>  $ project_datetime_start       : chr \"\" #>  $ project_datetime_end         : chr \"\" #>  $ provider_name                : chr \"Susan Parks\" #>  $ provider_details             : chr \"Univ Syracuse\" #>  $ provider_email               : chr \"sparks@syr.edu\" #>  $ provider_license             : chr \"Contact data provider\" #>  $ provider_cite                : chr \"Contact data provider\" #>  $ provider_doi                 : chr \"Contact data provider\" #>  $ creation_date                : chr \"06-Dec-2019 10:34:49\" str(d7$Aa, max.level = 1) #> List of 23 #>  $ data              : num [1:10756, 1:3] -0.725 -1.73 -1.221 -1.632 -2.85 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 1 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"mn18_175d\" #>  $ creation_date     : chr \"09-Jul-2018 12:06:55\" #>  $ history           : chr \"sens_struct,do_cal,tag2animal,crop_to,decdc(5)\" #>  $ type              : chr \"acc\" #>  $ full_name         : chr \"Acceleration\" #>  $ description       : chr \"triaxial acceleration\" #>  $ unit              : chr \"m/s2\" #>  $ unit_name         : chr \"metres per second squared\" #>  $ unit_label        : chr \"m/s^2\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"seconds\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"animal\" #>  $ axes              : chr \"FRU\" #>  $ cal_poly          : num [1:6] 77.4183 77.7662 77.7547 -0.0921 -0.0762 ... #>  $ cal_map           : num [1:9] 0 -1 0 -1 0 0 0 0 1 #>  $ otab              : num [1:5] 0 0 -0.855 0.157 1.902 #>  $ crop              : num [1:2] 91265 102021 #>  $ crop_units        : chr \"seconds\" str(d7$POS, max.level = 1) #> List of 20 #>  $ data              : num [1:63, 1:3] 0.827 12.058 338.364 698.659 738.046 ... #>  $ sampling          : chr \"irregular\" #>  $ sampling_time     : chr \"column 1\" #>  $ sampling_time_unit: chr \"second\" #>  $ depid             : chr \"mn18_175d\" #>  $ creation_date     : chr \"05-Jul-2018 15:25:54\" #>  $ history           : chr \"sens_struct,crop_to\" #>  $ type              : chr \"pos\" #>  $ full_name         : chr \"Position\" #>  $ description       : chr \"GPS position\" #>  $ unit              : chr \"degrees\" #>  $ unit_name         : chr \"decimal degrees\" #>  $ unit_label        : chr \"degrees\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"seconds\" #>  $ column_name       : chr \"time,lat,long\" #>  $ frame             : chr \"WGS84\" #>  $ axes              : chr \"NE\" #>  $ crop              : num [1:2] 91265 102021 #>  $ crop_units        : chr \"seconds\" library(tagtools) d7_file_path <- \"\" d7 <- load_nc(d7_file_path) sampling_rate <- d7$P$sampling_rate plott(X = list(Depth = d7$P, Acceleration = d7$Aa), fsx = sampling_rate, interactive = TRUE) plot(d7$POS$data[,3], d7$POS$data[,2], type = 'b', pch = 20)"},{"path":[]},{"path":"/articles/fine-scale-tracking.html","id":"what-is-dead-reckoning","dir":"Articles","previous_headings":"Dead-reckoning","what":"What is Dead-reckoning?","title":"Fine-scale tracking","text":"Hearken back earliest trigonometry course. Chances , used angles distances calculate distances (right triangle, especially). , calculus, ’ve probably used angles rates change calculate distance rates change. Dead-reckoning essentially —using just heading forward speed order plot forward path. technique fairly commonplace sailing aviation, can made accurate help known position data. want background, consult video example simple trigonometry. However, per Wikipedia (simply says well), dead-reckoning “subject significant errors approximation. precise positional information, speed direction must accurately known times travel. notably, dead reckoning account directional drift travel fluid medium. errors tend compound greater distances”. see true course vignette—water seldom entirely still, quite current present data soon investigate.","code":""},{"path":"/articles/fine-scale-tracking.html","id":"why-use-dead-reckoning","dir":"Articles","previous_headings":"Dead-reckoning","what":"Why use Dead-reckoning?","title":"Fine-scale tracking","text":"plot shows mix intensive extensive movements, constraint getting positions animal surface means infer much movement behaviour within dives. Dead-reckoning accelerometer magnetometer data way estimate movement within dives without requiring external tracking infrastructure.","code":""},{"path":"/articles/fine-scale-tracking.html","id":"estimating-animal-speed","dir":"Articles","previous_headings":"Dead-reckoning","what":"Estimating Animal Speed","title":"Fine-scale tracking","text":"Dead-reckoning uses accelerometer magnetometer calculate direction travel. frame data need ? need animal frame. Thankfully, already ! estimate forward speed also required. don’t speed sensor—actually quite cumbersome, compared acceleration sensor. Nevertheless, can compute vertical speed (.e., differential depth) descents ascents, might good starting guess:  Set interactive = TRUE zoom individual dives plot get rough idea descent ascent speed whale. , interactive figure drives bit crazy, just set axis limits:","code":"v <- depth_rate(d7$P) plott(X = list(Depth = d7$P$data, `Vertical Speed` = v),        fsx = sampling_rate) plott(X = list(Depth = d7$P$data, `Vertical Speed` = v),         fsx = sampling_rate, xl = c(0,0.1))"},{"path":"/articles/fine-scale-tracking.html","id":"computing-a-dead-reckoned-track","dir":"Articles","previous_headings":"Dead-reckoning","what":"Computing a Dead-Reckoned Track","title":"Fine-scale tracking","text":"Call speed estimate speed spd use following line compute dead-reckoned track:  dead-reckoned track series distances north (south negative) east (west negative) starting point position (0, 0) plot. first two columns DR ‘northing’ ‘easting’ values. DR track defined Local Level Frame (LLF) opposed latitude longitude. LLF like map—region small enough can assume earth flat—centered starting point. spatial resolution dead-reckoned track look compared surface GPS positions? first glance, shape quite similar, might concern us yet. Also, spatial resolution looks much, much better! , making track seems like good idea.","code":"spd <- #???? (fill in your estimate here) DR <- ptrack(A = d7$Aa, M = d7$Ma, s = spd) plot(DR$easting, DR$northing, type = 'l',      xlab = 'Easting, m', ylab = 'Northing, m',      main = 'Dead-Reckoned Track')"},{"path":"/articles/fine-scale-tracking.html","id":"adding-gps-positions","dir":"Articles","previous_headings":"Dead-reckoning","what":"Adding GPS positions","title":"Fine-scale tracking","text":"plot GPS positions plot, need first convert LLF. first GPS position 0.8s dataset (\\$d7\\$POS\\$data[1,1]) can say dead-reckoned track starts point. convert latitude longitude LLF use:  well dead-reckoned track match GPS positions? match much . touch beginning… ’s . , shapes somewhat preserved, predicted track way farther north, quite ways farther east, actual known positions. dead-reckoned track always computed respect water, ground, plotting respect ground. accurate track take account water current. Can imagine current direction needed make dead-reckoned track closely match GPS positions? current need moving quite bit south, also distance west, order compensate large errors seeing. number ways combine GPS positions dead-reckoned track single track absolute accuracy GPS high temporal resolution dead-reckoning. simple method force dead-reckoned track meet GPS positions surfacing adding constant ‘current’ track point preceding dive. done fit_tracks:","code":"POSLLF <- lalo2llf(trk = d7$POS$data[,c(2:3)]) plot(DR$easting, DR$northing, type = 'l',      xlab = 'Easting, m', ylab = 'Northing, m',      main = 'Dead-Reckoned Track',      yl = c(-1000, 5000)) lines(POSLLF$easting, POSLLF$northing, type = 'b', col = 'red', pch = 20) FT <- fit_tracks(P = POSLLF, T = d7$POS$data[,1],                 D = DR[,c(1:2)],                 sampling_rate = d7$Aa$sampling_rate) # add to plot plot(DR$easting, DR$northing, type = 'l',      xlab = 'Easting, m', ylab = 'Northing, m',      main = 'Dead-Reckoned Track',      yl = c(-1000, 5000)) lines(POSLLF$easting, POSLLF$northing, type = 'b', col = 'red', pch = 20)  lines(FT$easting, FT$northing, col = 'darkgreen')"},{"path":"/articles/fine-scale-tracking.html","id":"a-digression-about-graphics","dir":"Articles","previous_headings":"Dead-reckoning","what":"A digression about graphics","title":"Fine-scale tracking","text":"Skip next section ’re interested improving plots. interested nicer, zoomable plot either , willing install, packages ggformula plotly, give following try!  OK, ’s track figure. zooming interaction? Ahhh, much nicer! note plotly() figures render interactive R sessions , using Rmarkdown, html output (PDF). figure also nicer can update chaining. example, change axis limits:","code":"# if you need to install: # install.packages(pkgs = c('ggformula', 'plotly')) library(ggformula) library(plotly) theme_set(theme_bw(base_size = 12))  track_fig <- gf_path(northing ~ easting, data = DR,          xlab = 'Easting, m', ylab = 'Northing, m') %>%   gf_path(northing ~ easting, data = POSLLF, color = 'darkred') %>%   gf_point(northing ~ easting, data = POSLLF, color = 'darkred') %>%   gf_path(northing ~ easting, data = FT, color = 'darkgreen')  track_fig #> Loading required package: ggplot2 #> Loading required package: ggstance #>  #> Attaching package: 'ggstance' #> The following objects are masked from 'package:ggplot2': #>  #>     geom_errorbarh, GeomErrorbarh #> Loading required package: scales #> Loading required package: ggridges #>  #> New to ggformula?  Try the tutorials:  #>  learnr::run_tutorial(\"introduction\", package = \"ggformula\") #>  learnr::run_tutorial(\"refining\", package = \"ggformula\") #>  #> Attaching package: 'plotly' #> The following object is masked from 'package:ggplot2': #>  #>     last_plot #> The following object is masked from 'package:stats': #>  #>     filter #> The following object is masked from 'package:graphics': #>  #>     layout track_fig %>% ggplotly() track_fig_zoom <- track_fig %>%   gf_lims(x = c(-500, 1500), y = c(-1100, 100)) track_fig_zoom #> Warning: Removed 10610 rows containing missing values (`geom_path()`)."},{"path":"/articles/fine-scale-tracking.html","id":"interpreting-the-tracks","dir":"Articles","previous_headings":"Dead-reckoning","what":"Interpreting the Tracks","title":"Fine-scale tracking","text":"Now, back main tutorial… Examine plot see green fitted track interpolates red GPS positions. green track believed, effectively surface positions capture movement animal? don’t capture movement animal well. much happens positions ’re able collect surface, missing surface positions collect/show.","code":""},{"path":"/articles/fine-scale-tracking.html","id":"tracks-colored-by-a-variable","dir":"Articles","previous_headings":"","what":"Tracks Colored by a Variable","title":"Fine-scale tracking","text":"often want plot track colored proportional another variable interest. example, can useful see animal diving along track. colour track depth, use col_line() P color information: –> interactive version? Zoom see scale track tortuosity: tortuosity within individual dives, tortuosity occurring across dives? tortuosity occurs across dives, tortuosity within dives well. following picture comes next chunk code. done want challenge, try colouring track absolute roll angle instead depth. use col_line3 plot 3-d positions (.e., FT$easting, FT$northing, d7\\$P\\$data), colour plot absolute roll angle remembering convert radians degrees.","code":"CF <- col_line(y = northing, x = easting, data = FT, color = d7$P$data) CF CF <- col_line(y = northing, x = easting, data = FT, color = d7$P$data) CF col_line(x = FT$easting, y = FT$northing, color = d7$P$data) pitch_roll <- a2pr(d7$Aa) roll_deg <- pitch_roll$r/pi*180 col_line3(x = FT$easting, y = FT$northing,            z = d7$P$data, c = roll_deg)"},{"path":"/articles/fine-scale-tracking.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Fine-scale tracking","text":"learned? can get —despite problems can arise —dead-reckoning. ’s ! Fantastic work vignette. ’d like continue working vignettes, take stab find-dives dive-stats. deal functions find_dives dive_stats, respectively. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('find-dives') vignette('dive-stats')"},{"path":[]},{"path":"/articles/install-load-tagtools.html","id":"prerequisites","dir":"Articles","previous_headings":"Installing tagtools for R","what":"Prerequisites","title":"Installing and loading tagtools","text":"begin, must R —recommended—RStudio installed computer. can download software RStudio.com (need free one). Alternatively, can work RStudio.cloud. free , nice download required. drawback , free RStudio.cloud account, limited certain number project-hours per month, RAM, CPU. One lot work RStudio, several hours day, run hours within week two. desktop version fewer restraints. happen new R also, nice standalone tutorial. practicals assume basic experience working R/RStudio, can execute provided code, making user-specific changes along way (e.g. help R find file downloaded).","code":""},{"path":"/articles/install-load-tagtools.html","id":"install-tagtools-from-github","dir":"Articles","previous_headings":"Installing tagtools for R","what":"Install tagtools from github","title":"Installing and loading tagtools","text":"devtools installed computer, can use install tagtools package directly github. want need install devtools, want information , see online installation guide r-project.org. code gives devtools command install. Click “Code” right open chunk, able copy-paste code R console. However, careful copy-pasting special characters _underscores_, ‘quotes’. get error, one thing check just single, simple underscore, 'straight quotes', whether 'single' \"double\" (rather “smart quotes”). asked something like “packages recent versions available”, harm update , “install sources packages need compilation”. package July 2021, overall process take ten fifteen minutes, depending speed internet machine, eight minutes spent building vignettes. Receiving abundance red messages end world—just R shows package installed. ends message \"* DONE (tagtools)\", ’re set!","code":"devtools::install_github('animaltags/tagtools_r',                          build_vignettes = FALSE)"},{"path":"/articles/install-load-tagtools.html","id":"install-tagtools-from-zip-archive","dir":"Articles","previous_headings":"Installing tagtools for R","what":"Install tagtools from zip archive","title":"Installing and loading tagtools","text":"want use devtools option, can install tagtools package archive files provided materials WMMC 2019 workshop (folder created unzipping wmmc-2019-workshop-materials.zip). archive files also available TagTools website. Try http://animaltags.org , https://animaltags.netlify.app . Note: choose install archive files (.zip .tgz), probably also manually install packages tagtools depends . use devtools method , . Windows users want use .zip archive Mac Linux users want use .tgz archive Save appropriate archive known location computer. , run: (fill absolute relative path archive file, archive file name). example, Mac, file saved Downloads, path might look like : can also use “install packages” GUI RStudio—go “Packages” tab, click “Install”, choose “Package Archive File” “Install ” pulldown menu, navigate archive file. follow prompts. must also make sure installed packages tagtools depends : Note writing object dpnds, vector 18 (text) strings, concatenated together c(). install.packages() can take dependencies input.","code":"install.packages('YourPath/YourFilename') # you'll have to edit this appropriately install.packages('/Users/YourUsernameHere/Downloads/FileName.tgz') dpnds <- c('CircStats', 'ggformula', 'graphics', 'hht',             'latex2exp', 'lubridate', 'magrittr',             'matlab', 'ncdf4', 'plotly', 'pracma',             'readr', 'rgl', 'signal', 'stats',             'utils', 'zoo', 'zoom') install.packages(pkgs = dpnds)"},{"path":"/articles/install-load-tagtools.html","id":"check-tagtools-installation","dir":"Articles","previous_headings":"Installing tagtools for R","what":"Check tagtools Installation","title":"Installing and loading tagtools","text":"tagtools successfully installed, able run often get message: “following object masked ‘package:stats’: smooth”—means loaded properly; congratulations! Another check make sure function help files accessible; example, Now point future check like , might get error saying function doesn’t exist. happens, make sure tagtools loaded library. won’t reinstall package install.packages() unless start working different machine, run library(tagtools) require(tagtools) every time restart RStudio. fewer packages loaded kinder computer’s memory, good R doesn’t automatically load everything. However, mean every time restart RStudio, must reload packages need, tagtools, . Thus beginning vignette one ’ll reminded run library(tagtools). command ? load_nc pulls help file function load_nc like , ’re set.","code":"library(tagtools) ?load_nc"},{"path":"/articles/install-load-tagtools.html","id":"accessing-other-vignettes-through-r-directly","dir":"Articles","previous_headings":"","what":"Accessing other vignettes through R directly","title":"Installing and loading tagtools","text":"’ve run devtools command, can read vignettes directly local RStudio without needing click website! syntax straightforward. see list vignettes just package, simply type: can run vignette vignette('package-index', package = 'tagtools'). instance, order see vignette, can run: package = \"tagtools\" argument end optional. However, good addition clarifies package working . , happened , say, another vectors-vs-structures vignette package, load one specific package vignette(\"vectors-vs-structures\", package = \"tagtools\").","code":"vignette(package = \"tagtools\") ## [1] \"Vignettes in package ‘tagtools’:\" ## [1] \"\" ## [1] \"complementary-filtering         complementary-filtering (source, html)\" ## [1] \"data-quality-error-correction   data-quality-error-correction (source, html)\" ## [1] \"Detectors                       Detectors (source, html)\" ## [1] \"detectors-draft                 detectors-draft (source, html)\" ## [1] \"dive-stats                      dive-stats (source, html)\" ## [1] \"find-dives                      find-dives (source, html)\" ## [1] \"fine-scale-tracking             fine-scale-tracking (source, html)\" ## [1] \"install-load-tagtools           install-load-tagtools (source, html)\" ## [1] \"jerk-transients                 jerk-transients (source, html)\" ## [1] \"load-tag-data                   load-tag-data (source, html)\" ## [1] \"mahalanobis-distance            mahalanobis-distance (source, html)\" ## [1] \"more-filtering                  more-filtering (source, html)\" ## [1] \"plots-and-cropping              plots-and-cropping (source, html)\" ## [1] \"rotation-test                   rotation-test (source, html)\" ## [1] \"tag-to-whale-frame              tag-to-whale-frame (source, html)\" ## [1] \"vectors-vs-structures           vectors-vs-structures (source, html)\" vignette(\"install-load-tagtools\", package = \"tagtools\")"},{"path":"/articles/install-load-tagtools.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Installing and loading tagtools","text":"learned far? Important setup steps help avoid confusion delay moving forward. Congrats! ’d like continue working vignettes, load-tag-data plots--cropping good options help get started tools ’ve just installed loaded. Perhaps best starting option ‘load-tag-data’, helpful familiarizing process loading data, well making sure important metadata included data. vectors-vs-structures quick review way R stores data structures, can extracted individual vectors/scalars. already feel confident setup structures R, try plots--cropping—’ll get start visualizing data types ’ve learning load. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('load-tag-data', package = 'tagtools') vignette('vectors-vs-structures', package = 'tagtools') vignette('plots-and-cropping', package = 'tagtools')"},{"path":"/articles/jerk-transients.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Jerk: a way to emphasize rapid changes in acceleration","text":"’ve finished complementary-filtering within R session, skip Acceleration transients, jerk dynamic acceleration. , ’ll want first section. practical use data suction cup tag attached back beaked whale. want run example, download “testset1.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files Write testset1.nc object bw, “beaked whale”. use plott() get look .  dataset contains deep dive followed shallow dive. want infer function looking locomotion effort sudden changes acceleration indicative prey capture attempts. also going look changes swimming gait.","code":"library(tagtools) bw_file_path <- \"nc_files/testset1.nc\" bw <- load_nc(bw_file_path) plott(X = list(Depth = bw$P, Acc = bw$A, Mag = bw$M))"},{"path":"/articles/jerk-transients.html","id":"acceleration-transients-jerk-and-dynamic-acceleration","dir":"Articles","previous_headings":"","what":"Acceleration transients, jerk and dynamic acceleration","title":"Jerk: a way to emphasize rapid changes in acceleration","text":"want look indications foraging two dives. Sudden changes (transients) acceleration often associated prey capture attempts. One way emphasise rapid changes acceleration differentiating produce jerk. effectively high-pass filtering acceleration constantly-sloping filter—higher frequency, emphasised. don’t know kind movement involved prey capture attempt, don’t know axis acceleration relevant. safer just compute magnitude jerk three axes get single vector (also called “norm-jerk”). way, peak axes show . njerk computes acceleration. Try running njerk acceleration data (stored?) writing result J. , also grab sampling rate, can plot jerk data.  dive profile largest jerk transients (peaks) appear? largest jerk transients appear mostly bottom deeper dive. Check biggest peaks see short .","code":"J <- njerk(bw$A) fs <- bw$A$sampling_rate plott(X = list(Depth = bw$P$data, Jerk = J), fsx = fs)"},{"path":"/articles/jerk-transients.html","id":"effects-of-sampling-rate-on-jerk","dir":"Articles","previous_headings":"Acceleration transients, jerk and dynamic acceleration","what":"Effects of Sampling Rate on jerk","title":"Jerk: a way to emphasize rapid changes in acceleration","text":"size clarity jerk peaks depends sampling rate. using 25 Hz data. see get 5 Hz data, try decimating acceleration computing jerk: Compute decimated jerk decimated acceleration, plot jerk computed full bandwidth acceleration:  Check obvious peaks around minute 20 minute 30 look ‘signal--noise’ jerk transients. clear jerk transients decimated signal compared original data rate? tell frequency content transients? jerk transients definitely less clear decimated signal compared original data rate. Consider peak near 0.75 hours original (25 Hz)signal: corresponding peak near 0.75 hours decimated signal. Similarly, consider two peaks near 1.5 hours original. Though jerk higher around area decimated signal, peaks quite unclear. tells us important high-resolution data—since acceleration changing quickly, possible stop observing just 0.2 seconds (true 5 Hz data), miss important event. Put concisely, jerk signal lot high frequency content.","code":"str(bw$A, max.level = 1) # look at the data before decimation Ad <- decdc(bw$A, 5) # decimate by 5 times. New sampling rate is 25/5 Hz str(Ad, max.level = 1) # and after decimation #> [1] \"results for str(bw$A, max.level = 1)\" #> [1] \"------------------------------------\" #> List of 18 #>  $ data              : num [1:137976, 1:3] -1.85 -1.78 -1.73 -1.7 -1.64 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 25 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"md13_134a\" #>  $ creation_date     : chr \"30-Jul-2017 23:13:50\" #>  $ history           : chr \"sens_struct\" #>  $ type              : chr \"acc\" #>  $ full_name         : chr \"Acceleration\" #>  $ description       : chr \"triaxial acceleration\" #>  $ unit              : chr \"m/s2\" #>  $ unit_name         : chr \"meters per seconds squared\" #>  $ unit_label        : chr \"m/s^2\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"animal\" #>  $ axes              : chr \"FRU\" #> [1] \"results for str(Ad, max.level = 1)\" #> [1] \"------------------------------------\" #> List of 18 #>  $ data              : num [1:27595, 1:3] -1.797 -1.484 -0.966 -0.28 0.339 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 5 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"md13_134a\" #>  $ creation_date     : chr \"30-Jul-2017 23:13:50\" #>  $ history           : chr \"decdc(5)\" #>  $ type              : chr \"acc\" #>  $ full_name         : chr \"Acceleration\" #>  $ description       : chr \"triaxial acceleration\" #>  $ unit              : chr \"m/s2\" #>  $ unit_name         : chr \"meters per seconds squared\" #>  $ unit_label        : chr \"m/s^2\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"animal\" #>  $ axes              : chr \"FRU\" Jd <- njerk(Ad) plott(X = list(Depth = bw$P$data, `25 Hz Jerk` = J, `5Hz Jerk` = Jd),       fsx = c(fs, fs, fs/5))"},{"path":"/articles/jerk-transients.html","id":"detecting-jerk-peaks","dir":"Articles","previous_headings":"Acceleration transients, jerk and dynamic acceleration","what":"Detecting Jerk Peaks","title":"Jerk: a way to emphasize rapid changes in acceleration","text":"find potential prey capture attempts, need run detector norm-jerk signal. Although easy see peaks eye data, detectors require information good job: need know threshold peak really peak blanking time, .e., minimum time must elapse detection another detection can happen. tagtools includes interactive peak detectors allow choose threshold see effect transients detected. use blanking time 5s, .e., expect shortest time prey captures 5s:  Follow instructions console change threshold. need pick threshold excludes jerk transients strong propulsion locomotion ascent still detects jerk transients bottom part deep dive. (Balancing false detections missed detections often easy detector matter finding trade-works application.) figure given, ’ve set threshold 100. function returns list information detected peaks. detection, start end times reported (seconds), along time peak occurred height peak. Finally, selected threshold blanking time reported. can plot height time detection along dive profile follows:  Bearing mind jerk peaks might come strong locomotory strokes, strong evidence foraging deep dive? strong evidence foraging shallow dive? Yes, strong evidence foraging deep dive, since jerk peaks present , likely strong locomotory strokes . strong locomotory strokes , turn, evidence foraging. However, almost evidence foraging shallow dive, since jerk peaks . Now, done complementary-filtering recently, one question . Adding inference complementary-filtering locomotion shallow dive, can conclude general behaviour animal shallow dive? Namely, resting, traveling foraging? Write marvelous thoughts. know now whale likely foraging shallow dive, since sudden movements (jerk peaks) happening earlier dive. Additionally, though animal accelerating quickly (striking/flinching), still moving (locomotion). seems likely traveling resting.","code":"pks <- detect_peaks(J, fs, bktime = 5)  # 5s blanking time, threshold is interactive #> [1] \"GRAPH HELP:\" #> [1] \"For changing only the thresh level, click once within the plot and then push enter\" #> [1] \" to specify the y-value at which your new thresh level will be.\" #> [1] \"For changing just the bktime value, click twice within the plot and then push enter\" #> [1] \" to specify the length for which your bktime will be.\" #> [1] \"To change both the bktime and the thresh, click three times within the plot:\" #> [1] \" the first click will change the thresh level,\" #> [1] \" the second and third clicks will change the bktime.\" #> [1] \"To return your results without changing the thresh and bktime from their default\" #> [1] \" values, simply push enter.\" plott(X = list(Depth = bw$P)) # note: the code below assumes your plott x-axis is in hours. # if it were in minutes use /60 instead of /3600, etc. points(pks$peak_time/fs/3600, bw$P$data[round(pks$peak_time)], pch = 8)"},{"path":"/articles/jerk-transients.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Jerk: a way to emphasize rapid changes in acceleration","text":"’ve learned accentuate quick movements animal using jerk, used accentuated picture gain understanding animal’s behaviour. , congrats! bounced vignette. ’d like continue working vignettes, acceleration-filtering magnetometer-filtering logical choices. ’ll gain insight dataset, ways analysing locomotion, . Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('acceleration-filtering') vignette('magnetometer-filtering')"},{"path":[]},{"path":"/articles/load-tag-data.html","id":"load-the-test-data-set","dir":"Articles","previous_headings":"Loading an .nc File","what":"Load the test data set","title":"Load tag data","text":"example, load data file CATs tag. data file already stored .nc file called ‘cats_test_raw.nc’. want run example, download “cats_test_raw.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files. Click Code right see . especially concise two-line method always work installation tagtools support, eight built-datasets come package. make frequent use method vignettes. especially nice saves hassle (tracking dataset saved setting working directory , figuring working directory moving dataset ). However, worth understand steps manually, though requires separate mental task, real world get data somewhere else. keep track working directory reasons, . , familiarize following commands: Additionally, working directory visible top console:  Now, navigated working directory file finder /ensured dataset file, cats_test_raw.nc, located (whether changing working directory copy-pasting file working directory), can run load_nc “hand”—see code: right! Whichever way just run MN <- load_nc(...), creates animaltag list object MN workspace. can view Environment tab working RStudio.  command line/console, type: see variables Acc, Gyr, Depth, Light, info contained within list MN.","code":"library(tagtools) # always start with this cats_file_path <- \"nc_files/cats_test_raw.nc\" MN <- load_nc(cats_file_path) getwd() # prints your current working directory. Often this will not be a tidy folder, but contain other things. So, to avoid that...  setwd(\"/Path/To/Tidy/Working/Directory/In/Quotes\") # on Mac or Linux, paths look like this, with forward slashes between folders. For instance: setwd(\"/Library/Frameworks/R.framework/Versions/4.1/Resources/library/tagtools/extdata/\") # depending on your system, this may set your working directory to the folder containing the built-in datasets setwd(\"C:\\Users\\Sam Fynewever\\Program Files\") # on Windows, paths look like this, with a letter and colon at the beginning, then backslashes between folders MN <- load_nc(\"cats_test_raw\") # no .nc required this way! names(MN) str(MN, max.level = 1) str(MN$A) #> [1] \"First the results for names(MN):\" #> [1] \"--------------------------------------------\" #> [1] \"A\"    \"M\"    \"G\"    \"LL\"   \"P\"    \"info\" #> [1] \"Then the results for str(MN, max.level = 1):\" #> [1] \"--------------------------------------------\" #> List of 6 #>  $ A   :List of 19 #>  $ M   :List of 19 #>  $ G   :List of 19 #>  $ LL  :List of 19 #>  $ P   :List of 19 #>  $ info:List of 11 #>  - attr(*, \"class\")= chr [1:2] \"animaltag\" \"list\" #> [1] \"and finally the results for str(MN$A):\" #> [1] \"--------------------------------------------\" #> List of 19 #>  $ data              : num [1:720000, 1:3] -2.42 -2.4 -2.35 -2.3 -2.2 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 400 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"cats_test_raw\" #>  $ creation_date     : chr \"2023-06-14 12:58:08.013504\" #>  $ history           : chr \"read_cats\" #>  $ type              : chr \"A\" #>  $ full_name         : chr \"Acceleration\" #>  $ description       : chr \"triaxial acceleration\" #>  $ unit              : chr \"m/s2\" #>  $ unit_name         : chr \"metres per second squared\" #>  $ unit_label        : chr \"m/s^2\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"tag\" #>  $ axes              : chr \"FRU\" #>  $ files             : chr \"20160730-091117-Froback-11-part.csv\""},{"path":"/articles/load-tag-data.html","id":"explore-the-test-dataset","dir":"Articles","previous_headings":"","what":"Explore the test dataset","title":"Load tag data","text":"Now can find variables just typing name followed enter. example, info (tag-wide metadata), run info structure tells data came , collected, animal, type tag. info general metadata store dataset. can find specific field info, e.g., get sensors_list:","code":"MN$info #> $creation_date #> [1] \"2023-06-14 12:58:11.202458\" #>  #> $depid #> [1] \"cats_test_raw\" #>  #> $data_source #> [1] \"20160730-091117-Froback-11-part.csv\" #>  #> $data_nfiles #> [1] \"1\" #>  #> $data_format #> [1] \"csv\" #>  #> $device_make #> [1] \"CATS\" #>  #> $device_type #> [1] \"Archival\" #>  #> $dephist_device_tzone #> [1] \"0\" #>  #> $dephist_device_regset #> [1] \"dd-mm-yyyy HH:MM:SS\" #>  #> $dephist_device_datetime_start #> [1] \"2016-07-27 16:29:38\" #>  #> $sensors_list #> [1] \"3 axis Accelerometer,3 axis Magnetometer,3 axis Gyroscope,Temperature,Pressure,Light level,\" MN$info$sensors_list #> [1] \"3 axis Accelerometer,3 axis Magnetometer,3 axis Gyroscope,Temperature,Pressure,Light level,\""},{"path":"/articles/load-tag-data.html","id":"updating-and-adding-metadata","dir":"Articles","previous_headings":"Explore the test dataset","what":"Updating and adding metadata","title":"Load tag data","text":"lot metadata missing file! read_cats() can auto-fill information standard CATS tags, contained file . metadata must added user. example, add field called ‘data_owner’ value ‘Jeremy Goldbogen, Dave Cade’, enter: way add metadata dataset sending archive (e.g., dataset accompany journal paper). Although rules call field, working toward establishing set best practices. Entering metadata hand typing R console tedious, also recipe inconsistencies. (Let’s avoid !) end, tried provide couple options, considered .","code":"MN$info$data_owner <- 'Jeremy Goldbogen, Dave Cade' MN$info$data_owner #> [1] \"Jeremy Goldbogen, Dave Cade\""},{"path":"/articles/load-tag-data.html","id":"saving-metadata-with-make_info","dir":"Articles","previous_headings":"Explore the test dataset","what":"Saving Metadata with make_info","title":"Load tag data","text":"can use make_info() create metadata info structure information researcher, tag type, study species. function allows user generate “skeleton” info structure tag deployment, common pieces metadata filled . Additional information can added manually using custom script saving info part netCDF (.nc) file. example, Note may need add researchers, species, perhaps tag types template files. find stored machine, can run: , navigate folder make edits like. may need restart R take effect. succeeded running make_info(), can view results:","code":"more_info <- make_info(depid = 'cats_test', tagtype = 'CATS',                         species = 'mn', owner = 'jg') # results a few chunks later system.file('extdata', 'researchers.csv', package='tagtools') #> [1] \"C:/Users/Keren/AppData/Local/Temp/RtmpwfDq3r/temp_libpath4f1067d325b/tagtools/extdata/researchers.csv\" more_info #> $animal_dbase_url #> [1] NA #>  #> $animal_id #> [1] \"Unknown\" #>  #> $animal_species_common #> [1] \"Humpback whale\" #>  #> $animal_species_science #> [1] \"Megaptera novaeangliae\" #>  #> $dephist_deploy_datetime_start #> [1] \"UNKNOWN\" #>  #> $dephist_deploy_locality #> [1] \"\" #>  #> $dephist_deploy_location_lat #> [1] \"\" #>  #> $dephist_deploy_location_lon #> [1] \"\" #>  #> $dephist_deploy_method #> [1] \"\" #>  #> $dephist_device_datetime_start #> [1] \"UNKNOWN\" #>  #> $dephist_device_regset #> [1] \"dd/mm/yyyy HH:MM:SS\" #>  #> $dephist_device_tzone #> [1] \"0\" #>  #> $depid #> [1] \"cats_test\" #>  #> $device_make #> [1] \"CATS\" #>  #> $device_model #> [1] \"\" #>  #> $device_serial #> [1] \"UNKNOWN\" #>  #> $device_type #> [1] \"Archival\" #>  #> $device_url #> [1] \"http://www.cats.is/\" #>  #> $dtype_datetime_made #> [1] \"2023-06-23 18:52:00\" #>  #> $dtype_format #> [1] \".csv\" #>  #> $dtype_nfiles #> [1] \"UNKNOWN\" #>  #> $dtype_source #> [1] \"UNKNOWN\" #>  #> $project_datetime_end #> [1] \"\" #>  #> $project_datetime_start #> [1] \"\" #>  #> $project_name #> [1] \"\" #>  #> $provider_cite #> [1] \"Contact data provider\" #>  #> $provider_details #> [1] \"Stanford University\" #>  #> $provider_doi #> [1] \"Contact data provider\" #>  #> $provider_email #> [1] \"jergold@stanford.edu\" #>  #> $provider_license #> [1] \"Contact data provider\" #>  #> $provider_name #> [1] \"Jeremy Goldbogen\" #>  #> $sensors_firm #> [1] \"Not specified\" #>  #> $sensors_list #> [1] \"3axis Accelerometer,3 axis Magnetometer,3 axis Gyroscope,Pressure,Light,GPS,Video\" #>  #> $sensors_soft #> [1] \"Not specified\""},{"path":"/articles/load-tag-data.html","id":"combining-info-and-more_info","dir":"Articles","previous_headings":"Explore the test dataset","what":"Combining info and more_info","title":"Load tag data","text":"Now two different info structures—one just created make_info() one got created .nc file using read_cats(). can combine two together, keeping fields original info duplicates:","code":"more_info[names(MN$info)] <- MN$info MN$info <- more_info MN$info #> $animal_dbase_url #> [1] NA #>  #> $animal_id #> [1] \"Unknown\" #>  #> $animal_species_common #> [1] \"Humpback whale\" #>  #> $animal_species_science #> [1] \"Megaptera novaeangliae\" #>  #> $dephist_deploy_datetime_start #> [1] \"UNKNOWN\" #>  #> $dephist_deploy_locality #> [1] \"\" #>  #> $dephist_deploy_location_lat #> [1] \"\" #>  #> $dephist_deploy_location_lon #> [1] \"\" #>  #> $dephist_deploy_method #> [1] \"\" #>  #> $dephist_device_datetime_start #> [1] \"2016-07-27 16:29:38\" #>  #> $dephist_device_regset #> [1] \"dd-mm-yyyy HH:MM:SS\" #>  #> $dephist_device_tzone #> [1] \"0\" #>  #> $depid #> [1] \"cats_test_raw\" #>  #> $device_make #> [1] \"CATS\" #>  #> $device_model #> [1] \"\" #>  #> $device_serial #> [1] \"UNKNOWN\" #>  #> $device_type #> [1] \"Archival\" #>  #> $device_url #> [1] \"http://www.cats.is/\" #>  #> $dtype_datetime_made #> [1] \"2023-06-23 18:52:00\" #>  #> $dtype_format #> [1] \".csv\" #>  #> $dtype_nfiles #> [1] \"UNKNOWN\" #>  #> $dtype_source #> [1] \"UNKNOWN\" #>  #> $project_datetime_end #> [1] \"\" #>  #> $project_datetime_start #> [1] \"\" #>  #> $project_name #> [1] \"\" #>  #> $provider_cite #> [1] \"Contact data provider\" #>  #> $provider_details #> [1] \"Stanford University\" #>  #> $provider_doi #> [1] \"Contact data provider\" #>  #> $provider_email #> [1] \"jergold@stanford.edu\" #>  #> $provider_license #> [1] \"Contact data provider\" #>  #> $provider_name #> [1] \"Jeremy Goldbogen\" #>  #> $sensors_firm #> [1] \"Not specified\" #>  #> $sensors_list #> [1] \"3 axis Accelerometer,3 axis Magnetometer,3 axis Gyroscope,Temperature,Pressure,Light level,\" #>  #> $sensors_soft #> [1] \"Not specified\" #>  #> $creation_date #> [1] \"2023-06-14 12:58:11.202458\" #>  #> $data_source #> [1] \"20160730-091117-Froback-11-part.csv\" #>  #> $data_nfiles #> [1] \"1\" #>  #> $data_format #> [1] \"csv\" #>  #> $data_owner #> [1] \"Jeremy Goldbogen, Dave Cade\""},{"path":"/articles/load-tag-data.html","id":"saving-metadata-with-a-gui-editor","dir":"Articles","previous_headings":"Explore the test dataset","what":"Saving metadata with a GUI editor","title":"Load tag data","text":"Another option entering user-generated metadata use animaltags metadata editor. interface allows type information pre-named fields, allowing fully customize information also using standard field names. launch editor, run: web browser window open can fill metadata fields tag.  Depending individual platform, editor may tabs open. Simply click one tabs (Device Information, Tag Animal Information, etc.) open . Perhaps don’t currently metadata hand fill fields . , point might already metadata stored CSV spreadsheet, specific format reader recognizes (magically pick metadata saved CSV order choosing). either case, function reads metadata .csv file useful. .csv spreadsheet metadata workshop materials can use now. Upload “Browse”, click “Open CSV” harvest data. automate data entry process . done, scroll bottom editor, fill file name save work, click “Save”. Note number fields strongly suggest filling …get warning try save left blank. can choose computer save (temporary) file, confirm file name . , file working directory, can load info R animaltags info structure via: finally, combine rest . Try emulate two lines , changing names needed, without opening chunk . check work :","code":"metadata_editor() yet_more_info <- csv2struct('the_file_you_just_saved.csv') # results not included, will depend on your individual file yet_more_info[names(MN$info)] <- MN$info MN$info <- yet_more_info"},{"path":"/articles/load-tag-data.html","id":"saving-the-data","dir":"Articles","previous_headings":"","what":"Saving the data","title":"Load tag data","text":"’ve now made quite additions metadata info structure, probably want save .nc file. ’s . ’s ! worked smoothly, .nc file contain additions ’ve working .","code":"MN$info[is.na(MN$info)] <- NULL add_nc('cats_test_raw', X = MN$info, vname = 'info')"},{"path":"/articles/load-tag-data.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Load tag data","text":"learned far? important steps hopefully, ’re working data frequently, become healthy routines consistent, rigorous documentation. Great work! ’d like continue working practicals, vectors-vs-structures plots--cropping two good choices. vectors-vs-structures quick review way R stores data structures, can extracted individual vectors/scalars. plots--cropping, ’ll get start visualizing data types ’ve learning load. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('vectors-vs-structures', package = 'tagtools') vignette('plots-and-cropping', package = 'tagtools')"},{"path":"/articles/magnetometer-filtering.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"More complementary filtering: magnetometer & dynamic acceleration","text":"’ve done acceleration-filtering jerk-transients within R session, skip Spoilers. , within R session, ’ve done , skip Complementary Filter Magnetometer. , ’ll want section load necessary data, take look . vignettes use data suction cup tag attached back beaked whale. data testset1. want run example, download “testset1.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files Use load_nc() read —write testset1.nc object bw, “beaked whale”. use plott() get look .  dataset contains deep dive followed shallow dive. want infer function looking locomotion effort sudden changes acceleration indicative prey capture attempts. also going look changes swimming gait.","code":"library(tagtools) bw_file_path <- \"nc_files/testset1.nc\" bw <- load_nc(bw_file_path) plott(X = list(Depth = bw$P, Acc = bw$A, Mag = bw$M))"},{"path":"/articles/magnetometer-filtering.html","id":"spoilers","dir":"Articles","previous_headings":"","what":"Spoilers","title":"More complementary filtering: magnetometer & dynamic acceleration","text":"’ve done acceleration-filtering jerk-transients R session, skip Complementary Filter Magnetometer. , ’ll want section. ’ll bunch spoilers two vignettes objects need. Paste code , shouldn’t mess already , whether ’ve done one .","code":"# stuff from acceleration-filtering fc = 0.267032715030423 # filter cut-off frequency Af <- comp_filt(bw$A, fc = fc) # filtering acceleration data Alow <- Af[[1]] # low-frequency acceleration Ahigh <- Af[[2]] # high-frequency acceleration sampling_rate <- bw$A$sampling_rate # sampling rate for this data intvl1 <- c(36*60, 38*60)  intvl2 <- c(56*60, 58*60) # two interesting time intervals: 36-38 and 56-58 minutes Ah1 <- crop_to(Ahigh, sampling_rate = sampling_rate, tcues = intvl1) # high-frequency acceleration data in the first interval Ah2 <- crop_to(Ahigh, sampling_rate = sampling_rate, tcues = intvl2) # high-frequency acceleration data in the first interval  # stuff from jerk-transients (might depend on stuff from complementary-filtering, just paste it all) J <- njerk(bw$A) # get jerk Ad <- decdc(bw$A, 5) # decimate accel data by a factor of 5 Jd <- njerk(Ad) # decimated jerk"},{"path":"/articles/magnetometer-filtering.html","id":"complementary-filter-for-magnetometer","dir":"Articles","previous_headings":"","what":"Complementary Filter for Magnetometer","title":"More complementary filtering: magnetometer & dynamic acceleration","text":"Let’s get started! Try applying complementary filter magnetometer data, bw$M, plot high frequency magnetometer data two intervals swimming might looked Locomotion style section acceleration-filtering. Make new figure plot comparison.  magnetometer signals compare intervals accelerometer (Ah1 Ah2)? Either hearken back acceleration-filtering open following:  see similar increase magnitude magnetometer data interval 2 acceleration? Actually, . case acceleration, first interval magnitude peaks usually \\(-1\\) \\(+1.5\\) \\(m/s^2\\) , whereas second interval magnitude peaks \\(-3\\) \\(+4\\) \\(m/s^2\\). contrast, case magnetometer data, magnitude peaks \\(-4\\) \\(+4\\) \\(\\mu T\\)interval 1 interval 2. Remember magnetometer sensitive postural dynamics specific acceleration. Can conclude whether difference swimming styles result larger amplitude swimming strokes (.e., larger orientation dynamic due body undulations) larger specific acceleration, bit ? magnetometer reporting difference, accelerometer . difference swimming styles must due larger specific acceleration, postural dynamics.","code":"Mf <- comp_filt(bw$M, fc = fc)  Mhigh <- Mf[[2]]    # high frequency M data Mh1 <- crop_to(Mhigh, sampling_rate = sampling_rate, tcues = intvl1) Mh2 = crop_to(Mhigh, sampling_rate = sampling_rate, tcues = intvl2) plott(X = list(`Mh Interval 1` = Mh1, `Mh interval 2` = Mh2), fsx = sampling_rate) # Spoilers from acceleration-filtering. If you want to see how the accelerometer signals in these time intervals look, here's the code.  plott(X = list(`Ah Interval 1` = Ah1, `Ah interval 2` = Ah2), fsx = sampling_rate)"},{"path":"/articles/magnetometer-filtering.html","id":"jerk-vs--dynamic-acceleration","dir":"Articles","previous_headings":"","what":"Jerk vs. Dynamic Acceleration","title":"More complementary filtering: magnetometer & dynamic acceleration","text":"may know, high-pass filter emphasize rapid changes acceleration. Jerk effectively filter emphasises higher frequencies progressively . also use filter flat cut-frequency, like complementary filter used make Ahigh. get magnitude three axes together like njerk(), use norm2(). gives sometimes called dynamic acceleration: Plot DA J compare :  Check obvious peaks around minute 20 minute 30 see clear look DA J. signal gives lowest noise peaks, .e., best signal--noise ratio? suggest frequency content acceleration transients? Give thought answers–’re close. Jerk gives better signal--noise ratio dynamic acceleration. suggests acceleration transients happen quickly, important high-resolution data. right?","code":"DA <- norm2(Ahigh) plott(X = list(`Dyn. Acc` = DA, Jerk = J), fsx = sampling_rate)"},{"path":"/articles/magnetometer-filtering.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"More complementary filtering: magnetometer & dynamic acceleration","text":"’ve learned separate low- high-frequency magnetometer data complementary filter, done interpretation two sets data. Fabulous work! pranced way vignette. ’d like continue working vignettes, fine-scale-tracking fairly logical option. , ’ll consider dead-reckoned paths way visualize animal might move, can lead large errors, correct errors. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('fine-scale-tracking')"},{"path":"/articles/mahalanobis-distance.html","id":"what-is-mahalanobis-distance","dir":"Articles","previous_headings":"","what":"What is Mahalanobis distance?","title":"Mahalanobis distance","text":"Put concisely, Mahalanobis distance way comparing different data expect like. plotting one variable seeing distribution like graphically, can determine accurately ---ordinary something computing distance point centroid points. picture taken Schwarz et al. 2012, J. Neuroscience Methods 206(2): 120-131 appears “Statistics ”Tag Data” lecture animaltags website.  See blog post another explanation Mahalanobis distance. can also consult slides topic “Statistics Tag Data” lecture animaltags website, http://animaltags.org/ https://animaltags.netlify.app .","code":""},{"path":"/articles/mahalanobis-distance.html","id":"load-inspect-data","dir":"Articles","previous_headings":"","what":"Load & inspect data","title":"Mahalanobis distance","text":"Consider dataset zc11_267a. want run example, download “zc11_267a.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files  might use Mahalanobis distance summarise multivariate tag data single data stream? input variables might choose try quantify whale might changed behavior response sonar sounds? (need context, can check paper https://royalsocietypublishing.org/doi/10.1098/rsbl.2013.0223.) Use tag tool function m_dist compute Mahalanobis distance using chosen inputs, using model guide (note choices inputs kind ridiculous—better!). choose averaging window length -window overlap. can use experiment start end times provided. justify choices?  included dive depth input variable, affect resulting distance metric? think ? another, better way include information dive profile Mahalanobis distance metric? think “change” behavior response sonar exposure? wanted set threshold detecting “change”, ?","code":"library(tagtools) ZC_file_path <- \"nc_files/zc11_267a.nc\" zc <- load_nc(ZC_file_path) str(zc, max.level = 1) plott(X = list(Depth = zc$P$data, Accel = zc$A$data), fsx = zc$P$sampling_rate, interactive = TRUE) #> List of 4 #>  $ A   :List of 18 #>  $ P   :List of 18 #>  $ head:List of 10 #>  $ info:List of 19 #>  - attr(*, \"class\")= chr [1:2] \"animaltag\" \"list\" MDdata <- data.frame(jerk = njerk(zc$A, sampling_rate = zc$A$sampling_rate)$data, Mx = zc$P$data) est <- as.numeric(as.POSIXct('2011-09-24 14:45:00') - as.POSIXct(zc$info$dephist_device_datetime_start))*3600 eet <- as.numeric(as.POSIXct('2011-09-24 15:15:00') - as.POSIXct(zc$info$dephist_device_datetime_start))*3600 MD <- m_dist(data = MDdata, sampling_rate=zc$P$sampling_rate, smoothDur = 10, overlap = 9.5, expStart = est, expEnd = eet) plot(MD$t, MD$dist, type = 'l')"},{"path":"/articles/mahalanobis-distance.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Mahalanobis distance","text":"’ve learned use m_dist calculate Mahalanobis distance real-world data. Well done! ’d like continue working vignettes, consider rotation-test fine-scale-tracking. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('rotation-test') vignette('fine-scale-tracking')"},{"path":"/articles/plots-and-cropping.html","id":"setup-load-cats_test_raw-nc-as-a-large-list-mn","dir":"Articles","previous_headings":"","what":"Setup: load “cats_test_raw.nc” as a large list, MN","title":"Plots and cropping","text":"’ve already completed load-tag-data within R session, can skip bit Exploratory data plots. , don’t worry! ’ll catch code . example, make use CATS tag data file already stored .nc file called ‘cats_test_raw.nc’. want run example, download “cats_test_raw.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files","code":"library(tagtools) cats_file_path <- \"nc_files/cats_test_raw.nc\" MN <- load_nc(cats_file_path)"},{"path":"/articles/plots-and-cropping.html","id":"exploratory-data-plots","dir":"Articles","previous_headings":"","what":"Exploratory data plots","title":"Plots and cropping","text":"tag toolbox function plotting tag sensor data without getting structure:  Notice two t’s function name: plott(). plott() general purpose tag data plotter; key features : depth data, automatically plots reversed y-axis: increasing depths going downwards. nicer visualizing dive actually going , ascent actually going , screen. “t” stands “time”; plott also automatically converts horizontal axis convenient time unit like hours days instead seconds, date-time recording start time given. input interactive set TRUE (code ), can zoom data using keyboard entries. first input plott() data, must form list (sensor data lists matrices/vectors). careful data inputs, since, code , often contained within structures. Rather typing just variable Depth, important put MN$depth. list items named, names used axis labels. features info, run help function ? plott:","code":"plott(X = list(Depth = MN$P, Acceleration = MN$A, Gyroscope = MN$G), interactive = FALSE) ? plott"},{"path":"/articles/plots-and-cropping.html","id":"cropping-data-from-a-plot","dir":"Articles","previous_headings":"","what":"Cropping data from a plot","title":"Plots and cropping","text":"tags way start logging soon tag deployed animal. Often data logging started time trigger alarm, researcher make guess tag deployed set start time appropriately. Often means tag logging data put animal. token, tags means detecting release tagged animal. consequence, may continue log data release. cases, logged data deployment use. reduce data just periods tag animal, use tool crop():  displays interactive depth plot. (know reverse y-axis, ’s looks upside .) Follow instructions select obvious diving section data click finish. Alternatively, click desired left limit twice desired right limit, finish click cropping complete. function returns new data structure contains just selected part dive profile. ’ve cropped depth data relevant segment, stored Pc. Now, use plott plot Pc make sure cropped correctly. (Now especially good time try write code , since ’ve used plott . Hint: remember input X list.)  gone well, plott absolutely beautiful. alternative crop, already know start end times (appropriate units) like crop data , can use crop_to. instance, get back something like just crop depth data: resulting sensor data list also contains fields document just . look like: history keeps track operations perform data structure. helps traceability make processed data available archive. crop start_time fields show original data changed: start_time respect field dephist_device_datetime_start info structure says tag recording started.","code":"Pc = crop(MN$P) #> [1] \"Position your cursor and then click once followed by clicking FINISH to change the start, or click twice in the same spot followed by clicking FINISH to change the end. If you wish to change both the start and end click once at the start time desired and twice at the end time desired.\" plott(X = list(Depth = Pc)) Pc <- crop_to(X=MN$P, tcues=c(974, 1800)) Pc$history #> [1] \"read_cats,crop_to\""},{"path":"/articles/plots-and-cropping.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Plots and cropping","text":"’ve learned make plots using tagtools function plott, well crop plots. Congratulations! ’ve completed vignette. ’d like continue working vignettes, data-quality-error-correction probably good option. , ’ll start use unique data processing tools tagtools provides. , might consider tag--whale-frame. vignette deals one specific problem error correction: orienting data animal’s frame reference (, various reasons, may oriented different frame reference). Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('data-quality-error-correction', package = 'tagtools') vignette('tag-to-whale-frame', package = 'tagtools')"},{"path":"/articles/rotation-test.html","id":"rotation-test","dir":"Articles","previous_headings":"","what":"Rotation test","title":"Rotation test","text":"fortunate obtain number test datasets different sources permission make publicly available tag tool kit. One dataset (obtained anonymous Scottish contacts) particularly exciting possibly unique world: fragment tag data obtained high-resolution movement tag deployed Nessie, Loch Ness Monster. Unfortunately several tag sensors malfunctioned, able salvage dive depth data used example. dataset called nessie.nc. want run example, download “nessie.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files Read data: make plot dive profile (course want see ):  According Scottish lore, Nessie surfaces often hour around noon rest day (glare water, lure lunch, make difficult people spot ). really? Use find_dives find start times submergences, use proxy breath times. case, want use threshold shallow practicable. think just use regression model surfacing rate answer question? ? , data autocorrelated? Uh,… ’s just complicated? help pls Use rotation test test whether number surfacings 11:30 12:30 actually higher ’d expect. can conclude? Since p-value high, appears Nessie , contrary popular belief, actually surface (significantly) hour 11:30am 12:30pm. , great work! Now mystery forever gone… knowledge power! ’d like continue working practicals, consider dive-stats. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"library(tagtools) nessie_file_path <- \"nc_files/nessie.nc\" nessie <- load_nc(nessie_file_path) str(nessie, max.level = 1) #> List of 2 #>  $ P   :List of 16 #>  $ info:List of 17 #>  - attr(*, \"class\")= chr [1:2] \"animaltag\" \"list\" plott(X = list(Depth = nessie$P), interactive = TRUE) th <- # ??? set a very shallow threshold #find dives dt <- find_dives(nessie$P, mindepth = th) str(dt, max.level = 1) #> 'data.frame':    3471 obs. of  4 variables: #>  $ start: num  0.52 0.64 0.84 1.2 1.48 1.6 1.76 1.88 2.12 2.24 ... #>  $ end  : num  0.6 0.72 0.92 1.28 1.56 1.68 1.84 1.96 2.2 2.32 ... #>  $ max  : num  0.601 0.606 0.622 0.615 0.615 ... #>  $ tmax : num  0.6 0.72 0.92 1.28 1.56 1.68 1.84 1.96 2.2 2.32 ... # make time variables t <- as.POSIXct(nessie$info$dephist_device_datetime_start, tz = 'GMT') + c(1:nrow(nessie$P$data))/nessie$P$sampling_rate # find data times between 11:30 and 12:30 s <- as.POSIXct('2017-01-13 11:30:00', tz = 'GMT') e <- as.POSIXct('2017-01-13 12:30:00', tz = 'GMT') noon <- range(which(t < e & t > s))  #convert to seconds noon <- noon/nessie$P$sampling_rate #do test RTR <- rotation_test(event_times = dt$start, exp_period = noon, full_period = c(0,length(nessie$P$data)/nessie$P$sampling_rate), n_rot = 10000, ts_fun = length) #> $result #>   statistic CI_low CI_up n_rot conf_level  p_value #> 1       153      0   851 10000       0.95 0.739526 vignette('dive-stats')"},{"path":"/articles/tag-to-whale-frame.html","id":"from-tag-frame-to-sperm-whale-frame","dir":"Articles","previous_headings":"","what":"From tag frame to sperm whale frame","title":"Tag orientation: From tag frame to sperm whale frame","text":"tags placed free-swimming animals, tag axes generally coincide animal’s axes. tag M data therefore tell tag, animal, oriented. can corrected know orientation tag animal, .e., pitch, roll heading tag animal horizontal pointing north. Three steps needed : First tag orientation whale inferred looking accelerometer values animal near surface. orientation may change tag moves slides deployment make ‘orientation table’ describes sequence orientations tag. table used convert tag frame measurements animal frame.","code":""},{"path":"/articles/tag-to-whale-frame.html","id":"estimate-the-tag-orientations-on-the-whale","dir":"Articles","previous_headings":"From tag frame to sperm whale frame","what":"Estimate the tag orientations on the whale","title":"Tag orientation: From tag frame to sperm whale frame","text":"Use load_nc() read testset5.nc, pilot whale Canary Islands. Write object sw follow along code vignette. want run example, download “testset5.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files use prh_predictor1() infer tag--animal orientation. function animals like pilot whales log (less) surface diving steeply. assumes two things: animal rests horizontally surface (least average). dives steeply away surface without rolling, least initially. good assumptions animal, prh_predictor2() may work. suitable whales beaked whales make short dives breaths surface. tools try predict tag orientation whale parameterized pitch, roll yaw (shall call p0, r0, h0). use prh_predictor1(), need define minimum dive depth analyse—let’s say 400 m. call tool like : graphical interface open showing dive profile (top), estimated tag--animal orientations throughout deployment (middle panel), quality estimates (bottom panel). middle panel, colored stars show p0, r0 h0 estimates start dive. quality measure <0.05 bottom panel indicates data fit well assumptions method. tag move animal dive dive, p0, r0 h0 fairly constant across dives. constant can due sudden change (e.g., tag gets hit) slow movement tag animal. case seems change orientation dives 6 7. function automatically picks segments data analyse, check well, especially ‘quality’ number > 0.05. third dive slightly bad quality: type e main figure “edit” click one third dive orientation points. Note prompts appear top figure window(s), update based recent user actions. new plot drawn second figure window (pull automatically come front) top panel shows acceleration data tag frame current dive edge. Blue, orange red (depending Matlab/Octave version) yellow represent x, y z axes, respectively. bottom panel shows acceleration data correction using p0, r0 h0 estimates printed panel. Two black rectangles show data segments chosen analysis may need moved: left-hand ‘surface’ segment positioned just start dive. right-hand ‘dive’ segment just start dive. surface segment cover interval consistent surfacing behaviour (either logging shallow diving). dive segment contain roll-free steep diving, .e., blue red lines (x- y-axes) close -9.8 m/s2 0, respectively, lower panel. segment edges numbered 1 4 left. change segment, hover mouse plot type relevant number, click mouse want newly-drawn box edge . segment move p0, r0, h0 quality re-calculated. satisfied estimate quality, type q return first figure.","code":"library(tagtools) sw_file_path <- \"nc_files/testset5.nc\" sw <- load_nc(sw_file_path) PRH = prh_predictor1(sw$P, sw$A, TH = 400)"},{"path":"/articles/tag-to-whale-frame.html","id":"produce-the-orientation-table","dir":"Articles","previous_headings":"From tag frame to sperm whale frame","what":"Produce the orientation table","title":"Tag orientation: From tag frame to sperm whale frame","text":"need create orientation table (OTAB) summarizes tag orientation animal function time. row OTAB matrix describes orientation tag animal time interval. two moves, OTAB three lines: initial orientation orientation move. row defines tag oriented animal columns: t1, t2, p0, r0, h0. t1 t2 start end times move (seconds-since-tag-), p0, r0, h0 new orientation Euler angles move (radians). initial orientation (.e., first row OTAB) always t1 = t2 = 0. subsequent moves, move instantaneous, use t2 = t1. move gradual, set t1 time movement appears start set t2 time move appears complete. Making OTAB bit black art. prh_predictor1() infinitely precise, apparent change less 10 degrees probably worth worrying . going assume just one move (.e., 6th dive) pilot whale data. Position mouse blue (p0), red orange (r0), yellow (h0) lines move click left button get angle (degrees). Make first OTAB line: p0, r0 h0 readings. pi/180 converts radians. second OTAB line, read p0, r0 h0 values move decide move actually happens (let’s say sudden move end dive, e.g., 10100 seconds). : Finally, type ‘q’ quit prh_predictor1. Now can make OTAB matrix:","code":"otab1 <- matrix(data = c(0,0, c(p0, r0 , h0)*pi/180), nrow = 1) otab2 <- matrix(data = c(10100, 10100, c(p0, r0, h0)*pi/180), nrow = 1) OTAB <- rbind(otab1,                otab2)"},{"path":"/articles/tag-to-whale-frame.html","id":"tag-frame-to-animal-frame","dir":"Articles","previous_headings":"From tag frame to sperm whale frame","what":"Tag frame to animal frame","title":"Tag orientation: From tag frame to sperm whale frame","text":"Use OTAB convert tag frame measurements (M) animal frame: particular dataset, provided, case want also convert tag frame magnetometer measurements animal frame, similar way, using code form: Aa now contain acceleration data like recorded tag aligned animal’s axes, .e., animal frame. Compute pitch roll Aa plot check make sense: pitch roll vectors radians (hence *180/pi covert degrees) sampling rate Aa. Zoom check animal realistic orientation surface, ascent descent. comfortable tag well aligned animal frame, can add corrected data archive file: need also save pitch roll can easily re-computed Aa. archive file contain source data data corrected. orientation correction steps OTAB stored Aa, information saved automatically archive file. Nice work!","code":"Aa <- tag2animal(sw$A, OTAB = OTAB) Ma <- tag2animal(sw$M, OTAB = OTAB) pr <- a2pr(Aa) pitch <- pr$p roll <- pr$r rm(pr)  plott(X = list(depth = P, pitch = pitch*180/pi, roll = roll*180/pi),       fsx = Aa.sampling_rate, interactive = TRUE) add_nc('testset5_animal_frame', Aa)"},{"path":"/articles/tag-to-whale-frame.html","id":"extra-quality-check","dir":"Articles","previous_headings":"From tag frame to sperm whale frame > Tag frame to animal frame","what":"Extra quality check","title":"Tag orientation: From tag frame to sperm whale frame","text":"time want something extra, following check. code compute smoothed pitch angle; 12 smoothing parameter. Signal components 1/12 Nyquist frequency filtered . Now find whale’s vertical speed m/sec: plot . Feel free convert favorite graphics system - love ggformula… Aa done right, fairly good negative correlation depth rate pitch. outliers didn’t put tag orientation change quite right place. feel like making fine adjustments, improve OTAB perform check . data, likely spend lot time making small adjustments.","code":"pitch_s <- a2pr(tagtools::smooth(Aa.data, 12)) v <- depth_rate(sw$P) plot(v, pitch_s*180/pi, type = 'p', pch = 16,      ylab = 'smooth pitch (degrees)',      xlab = 'speed (m/sec)')"},{"path":"/articles/tag-to-whale-frame.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Tag orientation: From tag frame to sperm whale frame","text":"’ve learned estimate tag orientation time, well correct estimates problematic. Congrats! made vignette. ’d like continue working vignettes, consider acceleration-filtering. , ’ll look acceleration data, consider quick changes acceleration (high-frequency acceleration) versus slower changes (low-frequency acceleration) interpret animal’s behavior. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('acceleration-filtering')"},{"path":"/articles/TagTools.html","id":"more-background-whats-in-a-vignette","dir":"Articles","previous_headings":"","what":"More background: What’s in a Vignette?","title":"Tagtools vignettes: overview and introduction","text":"Already familiar concept? Feel free skip Introductory vignettes! vignette contains various chunks information one , including plain text chunks (like one), code chunks, —especially package—collapsible answers results sections. really plain text chunks code chunks running directly HTML code make easily hidden default, openable click button. example code chunk. Click “Code” right expand . package, often include results given code chunk directly code chunk, especially interesting visible result. code example , let’s see results.  code provided vignettes presented way run smoothly. code checked quite times bugs, including every time package built using following command:","code":"# This is a code chunk! print(\"Hello, Biologger!\") print(sqrt(256)) yData <- sin(c(1:24)*pi/12) plot(x = c(1:length(yData)), y = yData, xlab = \"X\", ylab = \"sin(π/12 X)\") #> [1] \"Hello, Biologger!\" #> [1] 16 devtools::install_github('stacyderuiter/TagTools/R/tagtools', build_vignettes = TRUE)"},{"path":"/articles/TagTools.html","id":"introductory-vignettes","dir":"Articles","previous_headings":"","what":"Introductory vignettes","title":"Tagtools vignettes: overview and introduction","text":"’re new package, vignettes ! Anyone benefit reviewing basics making sure package loaded correctly, loading data, converting (sensor) data structures vectors, using plotter function, plott.","code":""},{"path":[]},{"path":"/articles/TagTools.html","id":"install-load-tagtools","dir":"Articles","previous_headings":"Introductory vignettes","what":"1. install-load-tagtools","title":"Tagtools vignettes: overview and introduction","text":"vignette('install-load-tagtools') Estimated time complete: 15 minutes. vignette especially helpful new users haven’t yet installed tagtools. couple different options installation given, helpful information interpret messages R sends installing. example, know getting lot red messages row isn’t always bad thing (fact, package install, can mean everything running smoothly)?","code":""},{"path":"/articles/TagTools.html","id":"load-tag-data","dir":"Articles","previous_headings":"Introductory vignettes","what":"2. load-tag-data","title":"Tagtools vignettes: overview and introduction","text":"vignette('load-tag-data') Estimated time complete: 20 minutes. vignette deals functions load_nc, add_nc, save_nc, form backbone dealing data NetCDF files. particular, ’ll use load_nc every vignette one. vignette, learn couple different ways load data, particularly important ’re finding data somewhere tagtools package (eight built-datasets). ’ll also learn add edit metadata—important data data.","code":""},{"path":"/articles/TagTools.html","id":"vectors-vs-structures","dir":"Articles","previous_headings":"Introductory vignettes","what":"3. vectors-vs-structures","title":"Tagtools vignettes: overview and introduction","text":"vignette('vectors-vs-structures') Estimated time complete: 15 minutes. quick vignette talks differences vectors (scalars, matrices—standalone objects) data structures (contain one object). Particularly important understand $ operator, used extensively R datasets. instance, acceleration data dataset called bw, beaked_whale, might found bw$.","code":""},{"path":"/articles/TagTools.html","id":"plots-and-cropping","dir":"Articles","previous_headings":"Introductory vignettes","what":"4. plots-and-cropping","title":"Tagtools vignettes: overview and introduction","text":"vignette('plots--cropping') Estimated time complete: 25 minutes. first vignette can include really compelling graphic lure try ! ’ll learn use tagtools plotter function plott, crop irrelevant data (beginning end recording) , allowing plot just data actually animal.","code":""},{"path":[]},{"path":"/articles/TagTools.html","id":"data-quality-error-correction","dir":"Articles","previous_headings":"Calibration","what":"1. data-quality-error-correction","title":"Tagtools vignettes: overview and introduction","text":"vignette('data-quality-error-correction') Estimated time complete: 25 minutes. ’ll find common sources error accelerometer magnetometer data, see ways errors can corrected. Quality checking fairly easy pressure (depth) data aquatic mammals know breathe surface. Data accelerometers magnetometers difficult. one thing, three axes, also don’t intuitive feel look like. However, fortunately, quality checks can M data help catch correct problems.","code":""},{"path":"/articles/TagTools.html","id":"tag-to-whale-frame","dir":"Articles","previous_headings":"Calibration","what":"2. tag-to-whale-frame","title":"Tagtools vignettes: overview and introduction","text":"vignette('tag--whale-frame') Estimated time complete: 25 minutes. ’ll correct data oriented properly animal’s frame reference. tags placed free-swimming animals, tag axes generally coincide animal’s axes. tag M data therefore tell tag, animal, oriented. can corrected know orientation tag animal (pitch, roll heading tag animal horizontal pointing north). Three steps needed : First tag orientation whale inferred looking accelerometer values animal near surface. orientation may change tag moves slides deployment make ‘orientation table’ describes sequence orientations tag. table used convert tag frame measurements animal frame.","code":""},{"path":"/articles/TagTools.html","id":"filtering","dir":"Articles","previous_headings":"","what":"Filtering","title":"Tagtools vignettes: overview and introduction","text":"three vignettes particularly interrelated, recommend together. applying sort filter (e.g. high-pass filtering, low-pass filtering) gain insight data (e.g. acceleration magnetometer).","code":""},{"path":"/articles/TagTools.html","id":"acceleration-filtering","dir":"Articles","previous_headings":"Filtering","what":"1. acceleration-filtering","title":"Tagtools vignettes: overview and introduction","text":"vignette('acceleration-filtering') Estimated time complete: 20 minutes. ’ll use complementary filters acceleration data taken beaked whale. separate intervals movements distinct frequency bands, .e., posture (low frequency) strikes/flinches (high frequency), order gain insight movements animal.","code":""},{"path":"/articles/TagTools.html","id":"jerk-transients","dir":"Articles","previous_headings":"Filtering","what":"2. jerk-transients","title":"Tagtools vignettes: overview and introduction","text":"vignette('jerk-transients') Estimated time complete: 20 minutes. work acceleration data time, know acceleration second derivative position. Take third derivative ’ll called jerk, can used effectively high-pass filter. also illuminate particular value high-resolution data (especially data lot high-frequency content).","code":""},{"path":"/articles/TagTools.html","id":"magnetometer-filtering","dir":"Articles","previous_headings":"Filtering","what":"3. magnetometer-filtering","title":"Tagtools vignettes: overview and introduction","text":"vignette('magnetometer-filtering') Estimated time complete: 20 minutes. ’ll use techniques acceleration-filtering, magnetometer data.","code":""},{"path":"/articles/TagTools.html","id":"advanced-processing","dir":"Articles","previous_headings":"","what":"Advanced processing","title":"Tagtools vignettes: overview and introduction","text":"vignettes bit hodge-podge: things can now experience working tagtools package. Slightly less guidance given, slightly independence expected/required.","code":""},{"path":"/articles/TagTools.html","id":"fine-scale-tracking","dir":"Articles","previous_headings":"Advanced processing","what":"1. fine-scale-tracking","title":"Tagtools vignettes: overview and introduction","text":"vignette('fine-scale-tracking') Estimated time complete: 40 minutes. longer vignette—shortened older practical. dead-reckon travel path animal based estimates forward speed… without knowledge currents (thus, estimate animal might traveled relative object “dead water”). Large errors result. help correction, full picture animal movement can emerge, compared gathered simply using GPS data.","code":""},{"path":"/articles/TagTools.html","id":"find-dives","dir":"Articles","previous_headings":"Advanced processing","what":"2. find-dives","title":"Tagtools vignettes: overview and introduction","text":"vignette('find-dives') Estimated time complete: 20 mins vignette starts quick review, ’ll find correct different sources error depth data. , ’ll locate beginnings endings dives, plot beginnings endings depth profile using function find_dives. ’ll also simple analysis, like calculating mean dive depth.","code":""},{"path":"/articles/TagTools.html","id":"dive-stats","dir":"Articles","previous_headings":"Advanced processing","what":"3. dive-stats","title":"Tagtools vignettes: overview and introduction","text":"vignette('dive-stats') Estimated time complete: 25 mins vignette also nice review previous concepts—cropping data, calibrating data, finding dives. , ’ll use function dive_stats efficiently compute summary statistics dives depth profile.","code":"#>   num       max      st      et    dur dest_st dest_et dest_dur to_dur from_dur #> 1   1 1737.0414  6728.0 10805.8 4077.8  7698.2  8953.6   1255.4  970.2   1852.4 #> 2   2  356.2372 10925.0 12510.4 1585.4 11211.6 11802.0    590.4  286.6    708.6 #> 3   3  395.3293 12623.6 14229.6 1606.0 13092.8 13704.6    611.8  469.2    525.2 #> 4   4  390.7887 14303.6 16091.0 1787.4 14768.4 15391.0    622.6  464.8    700.2 #> 5   5  437.5752 16177.2 18026.8 1849.6 16636.4 17170.0    533.6  459.2    857.0 #> 6   6  365.1476 18088.0 20000.2 1912.2 18572.0 19160.8    588.8  484.0    839.6 #>     to_rate  from_rate #> 1 1.5208853 -0.7970521 #> 2 1.0548637 -0.4260587 #> 3 0.7149649 -0.6382696 #> 4 0.7144625 -0.4733356 #> 5 0.8086120 -0.4336557 #> 6 0.6405371 -0.3693056"},{"path":"/articles/TagTools.html","id":"rotation-test","dir":"Articles","previous_headings":"Advanced processing","what":"4. rotation-test","title":"Tagtools vignettes: overview and introduction","text":"vignette('rotation-test') Estimated time complete: 20 mins ’ll use statistical method test whether hypothesis holds scrutiny, using dataset (?) beloved lake creature. ’s nice one find-dives, since ’ll use similar techniques one.","code":"#> $result #>   statistic CI_low CI_up n_rot conf_level   p_value #> 1       153      0   851 10000       0.95 0.7547245"},{"path":"/articles/TagTools.html","id":"mahalanobis-distance","dir":"Articles","previous_headings":"Advanced processing","what":"5. mahalanobis-distance","title":"Tagtools vignettes: overview and introduction","text":"vignette('mahalanobis-distance') Estimated time complete: 25 mins ’ll compare data data see ordinary , using dataset whale underwent controlled exposure military sonar.","code":""},{"path":"/articles/TagTools.html","id":"miscellaneous","dir":"Articles","previous_headings":"","what":"Miscellaneous","title":"Tagtools vignettes: overview and introduction","text":"Detectors (detectors-draft) vignette deal function detect_peaks. lack newer features vignettes (hideable results, answers), worth trying nevertheless.","code":""},{"path":"/articles/TagTools.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Tagtools vignettes: overview and introduction","text":"Thanks reading—best luck! Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":""},{"path":"/articles/vectors-vs-structures.html","id":"setup-write-cats_test_raw-nc-and-load-it-as-a-large-list-mn","dir":"Articles","previous_headings":"","what":"Setup: write “cats_test_raw.nc”, and load it as a large list, MN","title":"Vectors and scalars versus structures","text":"vignette use NetCDF file cats_test_raw.nc. want run example, download “cats_test_raw.nc” file https://github.com/animaltags/tagtools_data change file path match ’ve saved files write file “cats_test_raw.nc”, load current R session list object called MN. Looks good? Good work! Confused? See vignette load-tag-data.","code":"library(tagtools) cats_file_path <- \"nc_files/cats_test_raw.nc\" MN <- load_nc(cats_file_path)"},{"path":"/articles/vectors-vs-structures.html","id":"sensor-data-structures-extracting-data-vectors","dir":"Articles","previous_headings":"","what":"Sensor data structures & extracting data vectors","title":"Vectors and scalars versus structures","text":"caught , return sensor data structures. Like $info: structures contain data information . Typing variable names followed enter show . example, try Acceleration: Matlab, Octave R look little different, information. Specifically, variable , contained within large list MN. MN$access , R. results tell acceleration data sampled nominal rate 32 Hz (32 samples per second) units meters per second squared. familiar data vectors structures, can easily get data structure, standalone object, using: makes matrix acceleration data scalar sampling_rate sampling rate, case 32. can also just keep everything stored list object, like (R clear reason pull ). , ’d just keep typing MN$$data MN$$sampling_rate instead sampling_rate. move forward plots--cropping, still use animaltag list MN, pulling data directly .","code":"MN$info #> $creation_date #> [1] \"2023-06-14 12:58:11.202458\" #>  #> $depid #> [1] \"cats_test_raw\" #>  #> $data_source #> [1] \"20160730-091117-Froback-11-part.csv\" #>  #> $data_nfiles #> [1] \"1\" #>  #> $data_format #> [1] \"csv\" #>  #> $device_make #> [1] \"CATS\" #>  #> $device_type #> [1] \"Archival\" #>  #> $dephist_device_tzone #> [1] \"0\" #>  #> $dephist_device_regset #> [1] \"dd-mm-yyyy HH:MM:SS\" #>  #> $dephist_device_datetime_start #> [1] \"2016-07-27 16:29:38\" #>  #> $sensors_list #> [1] \"3 axis Accelerometer,3 axis Magnetometer,3 axis Gyroscope,Temperature,Pressure,Light level,\" str(MN$A, max.level = 1) # display the STRucture of MN$A #> List of 19 #>  $ data              : num [1:720000, 1:3] -2.42 -2.4 -2.35 -2.3 -2.2 ... #>  $ sampling          : chr \"regular\" #>  $ sampling_rate     : num 400 #>  $ sampling_rate_unit: chr \"Hz\" #>  $ depid             : chr \"cats_test_raw\" #>  $ creation_date     : chr \"2023-06-14 12:58:08.013504\" #>  $ history           : chr \"read_cats\" #>  $ type              : chr \"A\" #>  $ full_name         : chr \"Acceleration\" #>  $ description       : chr \"triaxial acceleration\" #>  $ unit              : chr \"m/s2\" #>  $ unit_name         : chr \"metres per second squared\" #>  $ unit_label        : chr \"m/s^2\" #>  $ start_offset      : num 0 #>  $ start_offset_units: chr \"second\" #>  $ column_name       : chr \"x,y,z\" #>  $ frame             : chr \"tag\" #>  $ axes              : chr \"FRU\" #>  $ files             : chr \"20160730-091117-Froback-11-part.csv\" A <- MN$A$data sampling_rate <- MN$A$sampling_rate str(A, max.level = 1) sampling_rate #> [1] \"Results for str(A, max.level = 1):\" #> [1] \"----------------------------------\" #>  num [1:720000, 1:3] -2.42 -2.4 -2.35 -2.3 -2.2 ... #> [1] \"----------------------------------\" #> [1] \"Result for sampling_rate:\" #> [1] \"----------------------------------\" #> [1] 400"},{"path":"/articles/vectors-vs-structures.html","id":"review","dir":"Articles","previous_headings":"","what":"Review","title":"Vectors and scalars versus structures","text":"’ve learned distinguish vectors structures, go structure vector (scalar). Nice work! ’re set vectors-vs-structures. ’d like keep working practicals, plots--cropping logical continuation. ’s particularly nice learn use plotter comes tagtools, called plott. Otherwise, might consider jumping ahead data-quality-error-correction. , ’ll get started work fixing errors data. Animaltags home pages: http://animaltags.org/ (old), https://animaltags.netlify.app/ (new), https://github.com/stacyderuiter/TagTools (latest beta source code), https://stacyderuiter.github.io/TagTools/articles/TagTools (vignettes overview)","code":"vignette('plots-and-cropping', package = 'tagtools') vignette('data-quality-error-correction', package = 'tagtools')"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stacy DeRuiter. Author, maintainer, copyright holder. Mark Johnson. Author, copyright holder. David Sweeney. Author. Ye Joo McNamara-Oh. Author. Samuel Fynewever. Author. (Oghenkevwe) Racheal Tejevbo. Author. Tiago Marques. Author. (Yuqian) Eason Wang. Author. (Oghenesuvwe) Su Ogedegbe. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"DeRuiter S, Johnson M, Sweeney D, McNamara-Oh Y, Fynewever S, Tejevbo (, Marques T, Wang (, Ogedegbe ( (2023). tagtools: Work Data High-Resolution Biologging Tags. R package version 0.1.0.","code":"@Manual{,   title = {tagtools: Work with Data from High-Resolution Biologging Tags},   author = {Stacy DeRuiter and Mark Johnson and David Sweeney and Ye Joo McNamara-Oh and Samuel Fynewever and (Oghenkevwe) Racheal Tejevbo and Tiago Marques and (Yuqian) Eason Wang and (Oghenesuvwe) Su Ogedegbe},   year = {2023},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"tagtools_r","dir":"","previous_headings":"","what":"Work with Data from High-Resolution Biologging Tags","title":"Work with Data from High-Resolution Biologging Tags","text":"repository contains R package R version animaltag tool kit. Install CRAN : install.packages(\"tagtools\") Install development version github running: remotes::install_github(\"animaltags/tagtools_r\") Documentation vignettes available : https://animaltags.github.io/tagtools_r/ High-resolution movement-sensor tags typically include accelerometers measure body posture sudden movements changes speed, magnetometers measure direction travel, pressure sensors measure dive depth aquatic marine animals. subset tags include sensors speed, turning rate (gyroscopes), sound. package provides software tools facilitate calibration, processing, analysis data. Tools provided : Data Import/export, Calibration (raw data calibrated data scientific units), Visualization (e.g., time-series plots, multiple events overlaid, long-term spectral averages), Data Processing (e.g., event detection, derived metrics like jerk dynamic acceleration, Dive detection dive parameter calculation, Integrating movement data sensors eg acoustic camera, integrating position data onboard GPS, visual observations, etc. movement data, statistical Analysis (e.g., track reconstruction, Mahalanobis distance analysis). material based upon research supported United States Office Naval Research Award Number N00014-16-1-3089.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/reference/a2pr.html","id":null,"dir":"Reference","previous_headings":"","what":"Pitch and roll from acceleration — a2pr","title":"Pitch and roll from acceleration — a2pr","text":"Pitch roll estimation triaxial accelerometer data. non-iterative estimator |pitch| constrained <= 90 degrees. pitch roll estimates give least-square-norm error -vector measured estimated pitch roll. animal frame, resulting pitch roll define orientation animal respect navigation frame. tag frame, pitch roll define tag orientation respect navigation frame.","code":""},{"path":"/reference/a2pr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pitch and roll from acceleration — a2pr","text":"","code":"a2pr(A, sampling_rate = NULL, fc = NULL)"},{"path":"/reference/a2pr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pitch and roll from acceleration — a2pr","text":"nx3 acceleration matrix columns [ax ay az] acceleration sensor list (e.g., readtag.R). Acceleration can consistent unit, e.g., g m/s^2. sampling_rate (optional) sampling rate sensor data Hz (samples per second). needed filtering required. sensor data list, sampling_rate obtained metadata ($sampling_rate). fc (optional) cut-frequency low-pass filter apply computing pitch roll. filter cut-frequency Hertz. filter length 4*sampling_rate/fc. Filtering adds group delay. fc specified, filtering performed.","code":""},{"path":"/reference/a2pr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pitch and roll from acceleration — a2pr","text":"list 2 elements: p:  pitch estimate radians r:  roll estimate radians","code":""},{"path":"/reference/a2pr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Pitch and roll from acceleration — a2pr","text":"Output sampling rate input sampling rate. Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. frames, positive pitch angle anti-clockwise rotation around y-axis. positive roll angle clockwise rotation around x-axis. descending animal negative pitch angle animal rolled right side positive roll angle.","code":""},{"path":[]},{"path":"/reference/a2pr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pitch and roll from acceleration — a2pr","text":"","code":"if (FALSE) { samplematrix <- matrix(c(0.77, -0.6, -0.22, 0.45, -0.32, 0.99, 0.2, -0.56, 0.5),   byrow = TRUE, nrow = 3 ) list <- a2pr(samplematrix) }"},{"path":"/reference/absorption.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the absorption coefficient for sound in seawater — absorption","title":"Calculates the absorption coefficient for sound in seawater — absorption","text":"Calculates absorption coefficient sound seawater","code":""},{"path":"/reference/absorption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the absorption coefficient for sound in seawater — absorption","text":"","code":"absorption(f, T, d)"},{"path":"/reference/absorption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the absorption coefficient for sound in seawater — absorption","text":"f frequency Hz T temperature degrees C d depth meters","code":""},{"path":"/reference/absorption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the absorption coefficient for sound in seawater — absorption","text":"sound absorption dB per metre.","code":""},{"path":"/reference/absorption.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculates the absorption coefficient for sound in seawater — absorption","text":"Input arguments can scalars, mixture vectors scalars long argument either vector length nx1 (n vector arguments) scalar. Kinsler Frey pp. 159-160","code":""},{"path":"/reference/absorption.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the absorption coefficient for sound in seawater — absorption","text":"","code":"absorption(140e3, 13, 10) #> [1] 0.04354982"},{"path":"/reference/acc_wgs84.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate total acceleration — acc_wgs84","title":"Calculate total acceleration — acc_wgs84","text":"function calculates total acceleration due gravitation centripetal force earth's surface according WGS84 international gravity formula.","code":""},{"path":"/reference/acc_wgs84.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate total acceleration — acc_wgs84","text":"","code":"acc_wgs84(latitude)"},{"path":"/reference/acc_wgs84.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate total acceleration — acc_wgs84","text":"latitude latitude degrees.","code":""},{"path":"/reference/acc_wgs84.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate total acceleration — acc_wgs84","text":"g given units $m/s^2$","code":""},{"path":"/reference/acc_wgs84.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate total acceleration — acc_wgs84","text":"Source: http://solid_earth.ou.edu/notes/potential/igf.htm","code":""},{"path":"/reference/acc_wgs84.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate total acceleration — acc_wgs84","text":"","code":"acc_wgs84(50) #> [1] 9.810704"},{"path":"/reference/add_nc.html","id":null,"dir":"Reference","previous_headings":"","what":"Save an item to a NetCDF or add one tag sensor or metadata variable to a NetCDF archive file. — add_nc","title":"Save an item to a NetCDF or add one tag sensor or metadata variable to a NetCDF archive file. — add_nc","text":"Add one tag sensor metadata variable NetCDF archive file. archive file exist, created. file assumed current working directory unless pathname added beginning fname.","code":""},{"path":"/reference/add_nc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save an item to a NetCDF or add one tag sensor or metadata variable to a NetCDF archive file. — add_nc","text":"","code":"add_nc(file, D, vname)"},{"path":"/reference/add_nc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save an item to a NetCDF or add one tag sensor or metadata variable to a NetCDF archive file. — add_nc","text":"file name netCDF file save. name include .nc suffix, added automatically. D sensor data metadata list saved. vname name sensor data stream saved. Defaults entry \"name\" sensor metadata list provided user (option specify name provided facilitate calling function save_nc).","code":""},{"path":[]},{"path":"/reference/add_nc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save an item to a NetCDF or add one tag sensor or metadata variable to a NetCDF archive file. — add_nc","text":"","code":"if (FALSE) { add_nc('dog17_124a',A) }"},{"path":"/reference/apply_cal.html","id":null,"dir":"Reference","previous_headings":"","what":"Implement a calibration on tag sensor data — apply_cal","title":"Implement a calibration on tag sensor data — apply_cal","text":"Given appropriate set calibration constants information, function apply calibration procedure tag sensor data set. Cal fields currently supported : poly, cross, map, tcomp, tref","code":""},{"path":"/reference/apply_cal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implement a calibration on tag sensor data — apply_cal","text":"","code":"apply_cal(X, cal, T = NULL)"},{"path":"/reference/apply_cal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implement a calibration on tag sensor data — apply_cal","text":"X tag sensor data list, matrix vector containing tag sensor data cal calibration list data X , example, spherical_cal. T tag sensor data list vector temperature measurements use temperature compensation. T sensor data list, must size sampling rate data X. T required tcomp item cal list.","code":""},{"path":"/reference/apply_cal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implement a calibration on tag sensor data — apply_cal","text":"tag sensor data structure (matrix vector, X matrix vector) calibration implemented. Data size sampling rate input data X, units may changed.","code":""},{"path":"/reference/apply_cal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Implement a calibration on tag sensor data — apply_cal","text":"","code":"p <- apply_cal(harbor_seal$A,spherical_cal(harbor_seal$A$data))"},{"path":"/reference/beaked_whale.html","id":null,"dir":"Reference","previous_headings":"","what":"Set of sensor lists for a beaked_whale — beaked_whale","title":"Set of sensor lists for a beaked_whale — beaked_whale","text":"Data _Mesoplodon densirostris_ tag ID md13_134a. device used DTAG3 deployed 2013-05-14 12:42:00 El Hierro, Canary Islands, Spain.","code":""},{"path":"/reference/beaked_whale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set of sensor lists for a beaked_whale — beaked_whale","text":"","code":"beaked_whale"},{"path":"/reference/beaked_whale.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Set of sensor lists for a beaked_whale — beaked_whale","text":"set sensor lists: sensor list contining triaxial acceleration matrix sampled 25 Hz M sensor list containing triaxial magnetometer matrix sampled 25 Hz P sensor list containing pressure (depth) vector sampled 25 Hz","code":""},{"path":"/reference/block_acf.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute autocorrelation function — block_acf","title":"Compute autocorrelation function — block_acf","text":"function allows calculation autocorrelation function (ACF) dataset multiple independent units (example, data several individuals, data multiple dives individual animal, etc.). groups (individual, dive, etc.) coded categorical variable. function calculates correlation coefficients levels categorical variable, respecting divisions levels (example, individual animals kept separate).","code":""},{"path":"/reference/block_acf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute autocorrelation function — block_acf","text":"","code":"block_acf(resids, blocks, max_lag, make_plot = TRUE, ...)"},{"path":"/reference/block_acf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute autocorrelation function — block_acf","text":"resids variable ACF computed (often vector residuals fitted model) blocks categorical variable indicating groupings (must length resids. ACF computed data points within block.) max_lag ACF computed 0-max_lag lags, ignoring observations span blocks. Defaults minimum number observations block. function allow specify max_lag longer shortest block choose. make_plot Logical. plot produced? Defaults TRUE. ... Additional arguments passed plot.acf","code":""},{"path":"/reference/block_acf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute autocorrelation function — block_acf","text":"data frame 1 variable containing values ACF.","code":""},{"path":"/reference/block_acf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute autocorrelation function — block_acf","text":"","code":"block_acf(   resids = ChickWeight$weight,   blocks = ChickWeight$Chick )"},{"path":"/reference/block_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute mean of sample blocks — block_mean","title":"Compute mean of sample blocks — block_mean","text":"function used compute means successive blocks samples.","code":""},{"path":"/reference/block_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute mean of sample blocks — block_mean","text":"","code":"block_mean(X, n, nov)"},{"path":"/reference/block_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute mean of sample blocks — block_mean","text":"X vector matrix containing samples signal column. n number samples X use analysis block. nov (optional) number samples next block overlaps previous block. default value 0.","code":""},{"path":"/reference/block_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute mean of sample blocks — block_mean","text":"list 2 elements: Y:  vector matrix containing mean value block. X mxn matrix, Y pxn p number complete n-length blocks nov can made m samples, .e., n+(p-1)*(n-nov) < m t:  time output Y reported, units samples X.  t[1] = 12, value Y[1] corresponds “time” 12 samples X.","code":""},{"path":"/reference/block_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute mean of sample blocks — block_mean","text":"","code":"samplematrix <- matrix(c(1, 3, 5, 7, 9, 11, 13, 15, 17), byrow = TRUE, ncol = 3) list <- block_mean(samplematrix, n = 3, nov = 1)"},{"path":"/reference/block_rms.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute RMS of sample blocks — block_rms","title":"Compute RMS of sample blocks — block_rms","text":"function used compute RMS (root-mean-square) successive blocks samples.","code":""},{"path":"/reference/block_rms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute RMS of sample blocks — block_rms","text":"","code":"block_rms(X, n, nov = NULL)"},{"path":"/reference/block_rms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute RMS of sample blocks — block_rms","text":"X vector matrix containing samples signal column. n number samples X use analysis block. nov number samples next block overlaps previous block.","code":""},{"path":"/reference/block_rms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute RMS of sample blocks — block_rms","text":"list 2 elements: Y:  vector matrix containing RMS value block. X mxn matrix, Y pxn p number complete n-length blocks nov can made m samples, .e., n+(p-1)*(n-nov) < m t:  time output Y reported, units samples X.  t[1] = 12, value Y[1] corresponds “time” 12 samples X. times Y values reported centers averaging windows.","code":""},{"path":"/reference/block_rms.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute RMS of sample blocks — block_rms","text":"Output sampling rate input sampling rate s v size p. Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. frames, positive pitch angle anti-clockwise rotation around y-axis. descending animal negative pitch angle.","code":""},{"path":"/reference/block_rms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute RMS of sample blocks — block_rms","text":"","code":"X <- matrix(c(1:20), byrow = TRUE, nrow = 4) block_rms(X, n = 2, nov = NULL) #> $Y #>           [,1]      [,2]      [,3]      [,4]      [,5] #> [1,]  4.301163  5.147815  6.041523  6.964194  7.905694 #> [2,] 13.729530 14.713939 15.700318 16.688319 17.677670 #>  #> $t #> [1] 1 3 #>"},{"path":"/reference/body_axes.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the cardinal axes of an animal — body_axes","title":"Generate the cardinal axes of an animal — body_axes","text":"function used generate cardinal axes animal (.e., longitudinal, transverse, ventro-dorsal) accelerometer magnetic field measurements. functions generates approximate orthonormal basis measurement M : () normalizing M unit length, (ii) rotating magnetometer measurement horizontal plane (Mh), (iii) computing cross-product, N, Mh generate third axis, (iv) transposing [Mh,N,] form body axis basis.","code":""},{"path":"/reference/body_axes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the cardinal axes of an animal — body_axes","text":"","code":"body_axes(A, M, sampling_rate = NULL, fc = NULL)"},{"path":"/reference/body_axes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the cardinal axes of an animal — body_axes","text":"acceleration matrix columns [ax ay az], sensor data list. Acceleration can consistent unit, e.g., g $m/s^2$. M magnetometer signal matrix, M=[mx,,mz], sensor data list, consistent unit (e.g., uT Gauss). sampling_rate sampling rate M Hz (optional M sensor data lists) fc (optional) cut-frequency low-pass filter apply M computing axes. filter cut-frequency Hz. filter length 4*fs/fc. Filtering adds group delay. fc specified, filtering  performed.","code":""},{"path":"/reference/body_axes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the cardinal axes of an animal — body_axes","text":"W, list entries x, y, z; nx3 matrix body axes n number rows M . W$x nx3 matrix (length-3 vector M one row) containing X longitudinal (caudo-rostral) axes. W$y nx3 matrix (length-3 vector M one row) containing Y transverse (left-right) axes. W$z nx3 matrix (length-3 vector M one row) containing Z ventro-dorsal axes. W$sampling_rate sampling rate M.","code":""},{"path":"/reference/body_axes.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generate the cardinal axes of an animal — body_axes","text":"Output sampling rate input sampling rate. Irregularly sampled data can used, filtering must applied (fc = NULL). Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. function return animal's cardinal axes tag attached sensor axes aligned animal's axes tag M measurements rotated account orientation tag animal. Otherwise, axes returned function cardinal axes tag, animal.","code":""},{"path":"/reference/body_axes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the cardinal axes of an animal — body_axes","text":"","code":"samplematrix1 <- matrix(c(7, 2, 3, 6, 4, 9), byrow = TRUE, ncol = 3) samplematrix2 <- matrix(c(6, 5, 3, 4, 8, 9), byrow = TRUE, ncol = 3) W <- body_axes(A = samplematrix1, M = samplematrix2, fc = NULL)"},{"path":"/reference/buffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Buffers a signal vector into matrix — buffer","title":"Buffers a signal vector into matrix — buffer","text":"function used buffer signal vector matrix data frames. input nodelay TRUE, signal buffered delay. nodelay FALSE, specifies vector samples precede x[1] overlapping buffer.","code":""},{"path":"/reference/buffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Buffers a signal vector into matrix — buffer","text":"","code":"buffer(x, n, overlap, opt, nodelay = FALSE)"},{"path":"/reference/buffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Buffers a signal vector into matrix — buffer","text":"x signal vector buffered n desired length data segments (rows). overlap desired amount overlap consecutive frames (columns) output matrix opt vector samples specified precede x[1] overlapping buffer nodelay logical statement determine vector buffered without delay. Default FALSE (delay)","code":""},{"path":"/reference/buffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Buffers a signal vector into matrix — buffer","text":"list 3 elements returned nodelay = FALSE: X:  matrix buffered signal vector \"vec\" \"n\" data segments overlap consecutive frames specified \"p\". matrix starts \"opt\" values nodelay FALSE. z:   remainder vector included matrix last column full number rows. opt:  last values, length \"p\", matrix \"X\". nodelay = TRUE, matrix buffered signal vector \"vec\" \"n\" data segments overlap consecutive frames specified \"overlap\". matrix starts \"opt\" values nodelay FALSE.","code":""},{"path":"/reference/buffer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Buffers a signal vector into matrix — buffer","text":"","code":"x <- c(1:10) n <- 3 overlap <- 2 opt <- c(2, 1) list1 <- buffer(x, n, overlap, opt) list2 <- buffer(x, n, overlap, nodelay = TRUE)"},{"path":"/reference/check_AM.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute field intensity of tag acceleration and magnetometer data. — check_AM","title":"Compute field intensity of tag acceleration and magnetometer data. — check_AM","text":"Compute field intensity acceleration magnetometer data,  inclination angle magnetic field.  useful checking quality calibration,  detecting drift, validating mapping  sensor axes tag axes.","code":""},{"path":"/reference/check_AM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute field intensity of tag acceleration and magnetometer data. — check_AM","text":"","code":"check_AM(A, M = NULL, fs = NULL, find_incl = TRUE)"},{"path":"/reference/check_AM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute field intensity of tag acceleration and magnetometer data. — check_AM","text":"accelerometer sensor structure matrix columns [ax ay az]. Acceleration can consistent unit, e.g., g m/s^2. M magnetometer sensor structure matrix, M=[mx,,mz] consistent  unit (e.g., uT Gauss). fs (optional) sampling rate sensor data Hz (samples per second). needed M sensor structures filtering required. find_incl (optional; logical) inclination computed returned? Default TRUE.","code":""},{"path":"/reference/check_AM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute field intensity of tag acceleration and magnetometer data. — check_AM","text":"find_incl false, matrix fstr returned. Otherwise, check_AM returns list elements: fstr,  estimated field intensity M units M.          fstr vector two column matrix. one type data input,          fstr column vector. M input, fstr two columns          field strength 1st column field strength M          2nd column. incl,  estimated field inclination angle (.e., angle respect    horizontal plane) radians. incl column vector. convention, field    vector pointing horizon positive inclination angle.    returned function called M data.","code":""},{"path":"/reference/check_AM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute field intensity of tag acceleration and magnetometer data. — check_AM","text":"sampling rate fstr incl input sampling rate. function automatically low-pass filters data cut-frequency  5 Hz sampling rate greater 10 Hz.  Frame: function assumes [north,east,] navigation frame  [forward,right,] local frame.","code":""},{"path":"/reference/check_AM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute field intensity of tag acceleration and magnetometer data. — check_AM","text":"","code":"if (FALSE) { AMcheck <- check_AM(   A = matrix(c(-0.3, 0.52, 0.8), nrow = 1),   M = matrix(c(22, -22, 14), nrow = 1),   fs = 1 ) }"},{"path":"/reference/cline.html","id":null,"dir":"Reference","previous_headings":"","what":"Add colored line segments to a plot — cline","title":"Add colored line segments to a plot — cline","text":"function adds colored line segments existing plot.  line plotted points specified inputs x y, colored according factor input z (one color level z).","code":""},{"path":"/reference/cline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add colored line segments to a plot — cline","text":"","code":"cline(x, y, z, color_vector)"},{"path":"/reference/cline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add colored line segments to a plot — cline","text":"x x positions points plotted y y positions points plotted z factor, length x y. Line segments resulting plot colored according levels z. color_vector list colors use (length match number levels z).","code":""},{"path":"/reference/cline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add colored line segments to a plot — cline","text":"","code":"cline(x=ChickWeight$Time, y=ChickWeight$weight,        z=as.factor(ChickWeight$Diet),        color_vector=c('black', 'grey20',                       'grey50', 'grey70')) #> Error in plot.xy(xy.coords(x, y), type = type, ...): plot.new has not been called yet"},{"path":"/reference/col_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot coloured line(s) in 2 dimensions — col_line","title":"Plot coloured line(s) in 2 dimensions — col_line","text":"function used plot two dimensional lines individual line possessing different color.","code":""},{"path":"/reference/col_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot coloured line(s) in 2 dimensions — col_line","text":"","code":"col_line(x, y, color, ...)"},{"path":"/reference/col_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot coloured line(s) in 2 dimensions — col_line","text":"x vector matrix values display horizontal axis. y vector matrix values display vertical axis. color vector matrix values representing colour draw point. ... Additional inputs plot()","code":""},{"path":"/reference/col_line.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot coloured line(s) in 2 dimensions — col_line","text":"x, y c must size. x, y, c matrices, one line drawn column. color axis default span range values c, .e., caxis c(min(min(c)), max(max(c))). can changed calling caxis colline.","code":""},{"path":"/reference/col_line3.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot coloured line(s) in 3 dimensions with plot_ly — col_line3","title":"Plot coloured line(s) in 3 dimensions with plot_ly — col_line3","text":"function used plot three dimensional lines segments colored. may just simple use plotly::plot_ly() directly.","code":""},{"path":"/reference/col_line3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot coloured line(s) in 3 dimensions with plot_ly — col_line3","text":"","code":"col_line3(x, y, z = 0, c, ...)"},{"path":"/reference/col_line3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot coloured line(s) in 3 dimensions with plot_ly — col_line3","text":"x name object variable containing data x axis y name object variable containing data y axis z name object variable containing data z axis c name object variable color ... Additional inputs plot_ly()","code":""},{"path":"/reference/col_line3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot coloured line(s) in 3 dimensions with plot_ly — col_line3","text":"plot_ly() graphics object","code":""},{"path":"/reference/col_line3.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot coloured line(s) in 3 dimensions with plot_ly — col_line3","text":"x, y, z c must size vectors. color axis default span range values c, .e., caxis c(min(min(c)), max(max(c))).","code":""},{"path":[]},{"path":"/reference/col_line3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot coloured line(s) in 3 dimensions with plot_ly — col_line3","text":"","code":"col_line3(1:20, 1:20, 1:20, 1:20)  {\"x\":{\"visdat\":{\"5be08354394\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"5be08354394\",\"attrs\":{\"5be08354394\":{\"x\":{},\"y\":{},\"z\":{},\"mode\":\"lines\",\"color\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"x\"},\"yaxis\":{\"title\":\"y\"},\"zaxis\":{\"title\":\"-z\"}},\"hovermode\":\"closest\",\"showlegend\":false,\"legend\":{\"yanchor\":\"top\",\"y\":0.5}},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],\"y\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],\"z\":[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20],\"mode\":\"lines\",\"type\":\"scatter3d\",\"marker\":{\"colorbar\":{\"title\":\"c\",\"ticklen\":2},\"cmin\":1,\"cmax\":20,\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":false,\"color\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],\"line\":{\"colorbar\":{\"title\":\"\",\"ticklen\":2},\"cmin\":1,\"cmax\":20,\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":false,\"color\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]}},\"line\":{\"colorbar\":{\"title\":\"c\",\"ticklen\":2},\"cmin\":1,\"cmax\":20,\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":false,\"color\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]},\"frame\":null},{\"x\":[1,20],\"y\":[1,20],\"type\":\"scatter3d\",\"mode\":\"markers\",\"opacity\":0,\"hoverinfo\":\"none\",\"showlegend\":false,\"marker\":{\"colorbar\":{\"title\":\"c\",\"ticklen\":2,\"len\":0.5,\"lenmode\":\"fraction\",\"y\":1,\"yanchor\":\"top\"},\"cmin\":1,\"cmax\":20,\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":true,\"color\":[1,20],\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"z\":[-20,-1],\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/comp_filt.html","id":null,"dir":"Reference","previous_headings":"","what":"Complementary filtering of a signal. — comp_filt","title":"Complementary filtering of a signal. — comp_filt","text":"function breaks signal X two frequency bands sum signals separate bands equal original signal.","code":""},{"path":"/reference/comp_filt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complementary filtering of a signal. — comp_filt","text":"","code":"comp_filt(X, sampling_rate = NULL, fc)"},{"path":"/reference/comp_filt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complementary filtering of a signal. — comp_filt","text":"X sensor vector matrix (.e., signal column) sensor list (e.g., readtag.R). sampling_rate sampling rate sensor data Hz (samples per second). fc Specifies cut-frequency frequencies complementary filters. Frequencies Hz. one frequency given, X split low- high-frequency component. fc contains one value, X split multiple complementary bands. filter length 4*sampling_rate/fc. Filtering adds group delay.","code":""},{"path":"/reference/comp_filt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complementary filtering of a signal. — comp_filt","text":"list filtered signals. n+1 sections list n length fc. List sections ordered Xf lowest highest frequency. list section contains vector matrix size X, sampling rate X.","code":""},{"path":"/reference/comp_filt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complementary filtering of a signal. — comp_filt","text":"Possible input combinations: comp_filt(X,sampling_rate,fc) X vector matrix, comp_filt(X,fc = fc) X list","code":""},{"path":"/reference/comp_filt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complementary filtering of a signal. — comp_filt","text":"","code":"if (FALSE) { Xf <- comp_filt(X = beaked_whale$A$data, sampling_rate = beaked_whale$A$sampling_rate, fc = .15) xf <- list(Xf1 = Xf[[1]], Xf2 = Xf[[2]]) plott(xf, beaked_whale$A$sampling_rate) }"},{"path":"/reference/crop.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive data cropping tool. — crop","title":"Interactive data cropping tool. — crop","text":"function plots input data # allows user select start end times cropping.","code":""},{"path":"/reference/crop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive data cropping tool. — crop","text":"","code":"crop(X, sampling_rate = NULL, T = NULL)"},{"path":"/reference/crop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive data cropping tool. — crop","text":"X sensor list, vector matrix. X can regularly irregularly sampled data frame unit. sampling_rate sampling rate X Hz. needed X sensor list. X regularly sampled, sampling_rate one number. T vector sampling times X. needed X sensor list X regularly sampled.","code":""},{"path":"/reference/crop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive data cropping tool. — crop","text":"list 3 elements: Y:  sensor list, vector matrix containing cropped data segment. input sensor list, output also . output units, frame sampling characteristics input. T:  vector sampling times Y. returned X irregularly sampled X sensor list. X sensor list, sampling times stored list. tcues:  tcues two-element vector containing start end time cue seconds data segment kept, .e., tcues = c(start_time, end_time).","code":""},{"path":"/reference/crop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interactive data cropping tool. — crop","text":"Possible input combinations include: crop(X) X sensor list, crop(X, sampling_rate) X vector matrix.","code":""},{"path":"/reference/crop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive data cropping tool. — crop","text":"","code":"data <- beaked_whale Pc <- crop(data$P) # interactively select a section of data   #> [1] \"Position your cursor and then click once followed by clicking FINISH to change the start, or click twice in the same spot followed by clicking FINISH to change the end. If you wish to change both the start and end click once at the start time desired and twice at the end time desired.\" Ydata <- Pc$data plot(-Ydata)"},{"path":"/reference/crop_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce the time span of a dataset — crop_all","title":"Reduce the time span of a dataset — crop_all","text":"function used reduce time span dataset cropping data falls two time cues.","code":""},{"path":"/reference/crop_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce the time span of a dataset — crop_all","text":"","code":"crop_all(tcues, X)"},{"path":"/reference/crop_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce the time span of a dataset — crop_all","text":"tcues two-element vector containing start end time cue seconds data segment keep, .e., tcues = c(start_time, end_time). X sensor list set sensor lists (e.g., load_nc).","code":""},{"path":"/reference/crop_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce the time span of a dataset — crop_all","text":"sensor list set sensor lists containing cropped data segment. output data units, frame sampling characteristics input. list may many sublists additional sensor structures required match input.","code":""},{"path":"/reference/crop_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reduce the time span of a dataset — crop_all","text":"Possible input combinations: crop_all(X) X sensor list set sensor lists, crop_all(tcues, X, Y, ...) X, Y, ... sensor lists.","code":""},{"path":"/reference/crop_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce the time span of a dataset — crop_all","text":"","code":"d <- find_dives(beaked_whale$P,300)           X <- crop_all(c(d$start[1], d$end[1]), beaked_whale)  #crop all data to 1st dive          plott(X = list(X$P, X$A), r = c(1, 0), panel_labels = c('Depth', 'Acc'))"},{"path":"/reference/crop_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce the time span of data — crop_to","title":"Reduce the time span of data — crop_to","text":"function used reduce time span data cropping data falls two time cues.","code":""},{"path":"/reference/crop_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce the time span of data — crop_to","text":"","code":"crop_to(X, sampling_rate = NULL, tcues, T = NULL)"},{"path":"/reference/crop_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce the time span of data — crop_to","text":"X sensor list, vector, matrix. X can regularly irregularly samples data frame unit. sampling_rate sampling rate X Hz. needed X sensor structure. tcues two-element vector containing start end time cues seconds data segment keep (.e., tcues <- c(start_time, end_time)). T vector sampling times X. needed X sensor list X regularly sampled.","code":""},{"path":"/reference/crop_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce the time span of data — crop_to","text":"Cropped data format X, unless X irregularly sampled sensor list. case, function returns list 2 elements: X:  sensor list, vector matrix containing cropped data segment. input sensor list, output also . output units, frame sampling characteristics input. T:  vector sampling times Y. returned X irregularly sampled X sensor list. (X sensor list, sampling times stored list.)","code":""},{"path":"/reference/crop_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce the time span of data — crop_to","text":"","code":"d <- find_dives(beaked_whale$P,300)           P2 <- crop_to(beaked_whale$P, tcues = c(d$start[1], d$end[1]))  #crop to 1st dive          plott(X = list(P2), r=c(1), panel_labels=c('Depth'))"},{"path":"/reference/csv2struct.html","id":null,"dir":"Reference","previous_headings":"","what":"Read tag metadata from csv — csv2struct","title":"Read tag metadata from csv — csv2struct","text":"Read CSV metadata file convert metadata list. metadata file comma-separated text file (.csv) containing line metadata entry. first comma-separated field line name entry. last field line contains value assigned metadata entry. value can string number always saved string structure - downstream users metadata parse/decode entries.","code":""},{"path":"/reference/csv2struct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read tag metadata from csv — csv2struct","text":"","code":"csv2struct(fname)"},{"path":"/reference/csv2struct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read tag metadata from csv — csv2struct","text":"fname Name text file read. file extension provided, '.csv' added automatically. file located current working directory, fname must include correct relative absolute path.","code":""},{"path":"/reference/csv2struct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read tag metadata from csv — csv2struct","text":"metadata list populated fname (one list element per row file). list elements stored \"character\" class objects (even field contains number, date, etc) - attempt made determine appropriate class item.","code":""},{"path":"/reference/csv2struct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read tag metadata from csv — csv2struct","text":"","code":"if (FALSE) { S <- csv2struct('testset1') }"},{"path":"/reference/decdc.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce the sampling rate — decdc","title":"Reduce the sampling rate — decdc","text":"function used reduce sampling rate time series integer factor.","code":""},{"path":"/reference/decdc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce the sampling rate — decdc","text":"","code":"decdc(x, df)"},{"path":"/reference/decdc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce the sampling rate — decdc","text":"x data structure, vector matrix containing signal(s) decimated. x matrix, column decimated separately. df decimation factor. output sampling rate input sampling rate divided df. df must integer greater 1.","code":""},{"path":"/reference/decdc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce the sampling rate — decdc","text":"y decimated signal vector matrix. number columns x 1/df rows.","code":""},{"path":"/reference/decdc.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Reduce the sampling rate — decdc","text":"Decimation performed first low-pass filtering x keeping 1 sample every df. symmetric FIR filter length 12*df cutoff frequency 0.4*fs/df used. group delay filter removed. large decimation factors (e.g., df>>50), better perform several decimations lower factors. example decimate 120, use: decdc(decdc(x,10),12).","code":""},{"path":"/reference/decdc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce the sampling rate — decdc","text":"","code":"s <- matrix(sin(2 * pi / 100 * c(0:1000) - 1), ncol = 1) plot(c(1:length(s)), s)   y <- decdc(x = s, df = 4) plot(c(1:length(y)), y)"},{"path":"/reference/decz.html","id":null,"dir":"Reference","previous_headings":"","what":"Decimate sampling rate recursively. — decz","title":"Decimate sampling rate recursively. — decz","text":"Recursive sampling rate decimator. function can run iteratively long data set, e.g., decimate entire recording large read memory.","code":""},{"path":"/reference/decz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decimate sampling rate recursively. — decz","text":"","code":"decz(x, df = NULL, Z = NULL, nf = 12, frbw = 0.8)"},{"path":"/reference/decz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decimate sampling rate recursively. — decz","text":"x vector, matrix, tag data list containing signal(s) decimated. x matrix, column decimated separately. inputs df Z provided, value df stored Z override user-provided df. df decimation factor. output sampling rate input sampling rate divided df. df must integer greater 1. df can also three element vector case: df(1) decimation factor; df(2) number output samples spanned filter (default value 12). larger value makes filter steeper; df(3) fractional bandwidth filter (default value 0.8) relative output Nyquist frequency. df(2) greater 12, df(3) can closer 1. Z 'state' list generated previous call decz. function keeps track filter internal values (.e., memory) call--call. nf number output samples spanned filter (default value 12). larger value makes filter steeper. frbw fractional bandwidth filter (default value 0.8) relative output Nyquist frequency. nf greater 12, frbw can closer 1.","code":""},{"path":"/reference/decz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decimate sampling rate recursively. — decz","text":"list elements: y:  decimated signal vector matrix. number columns x , average, 1/df rows. Z:  state list (internal tracking filter internal values). Contains elements df (decimation factor), nf (used compute filter length), frbw (bandwidth filter relative new Nyquist frequency), h (FIR filter coefficients), n (filter length), z (padded signal used filtering), ov (\"overflow\" samples passed future iterations).","code":""},{"path":"/reference/decz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decimate sampling rate recursively. — decz","text":"first time decz called, use following format: y = decz(x,df). subsequent calls decz contiguous input data : decz(x,Z). final call input data : decz(x = NULL, Z = Z). output y contains segment decimated signal need concatenated. Decimation performed way decdc. group delay filter removed. large decimation factors (e.g., df much greater 50), better perform several nested decimations lower factors.","code":""},{"path":[]},{"path":"/reference/decz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decimate sampling rate recursively. — decz","text":"","code":"if (FALSE) { plott(list(Accel = beaked_whale$A)) # acceleration data before decimation a_rows <- nrow(beaked_whale$A$data) a_ind <- data.frame(start = c(1, floor(a_rows / 3), floor(2 * a_rows / 3))) a_ind$end <- c(a_ind$start[2:3] - 1, a_rows) df <- 10 Z <- NULL y <- NULL for (k in 1:nrow(a_ind)) {   decz_out <- decz(     x = beaked_whale$A$data[c(a_ind[k, 1]:a_ind[k, 2]), ],     df = df, Z = Z   )   df <- NULL   Z <- decz_out$Z   y <- rbind(y, decz_out$y) } decz_out$y$sampling_rate <- 2.5 plott(list(DecAccel = decz_out)) # does not plot }"},{"path":"/reference/depth2pressure.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert depth to pressure — depth2pressure","title":"Convert depth to pressure — depth2pressure","text":"function used convert depth (meters) pressure Pascals.","code":""},{"path":"/reference/depth2pressure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert depth to pressure — depth2pressure","text":"","code":"depth2pressure(d, latitude)"},{"path":"/reference/depth2pressure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert depth to pressure — depth2pressure","text":"d depth meters latitude latitude degrees","code":""},{"path":"/reference/depth2pressure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert depth to pressure — depth2pressure","text":"pressure Pa","code":""},{"path":"/reference/depth2pressure.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert depth to pressure — depth2pressure","text":"Based Leroy Parthiot (1998) formula. See: http://resource.npl.co.uk/acoustics/techguides/soundseawater/content.html#UNESCO","code":""},{"path":"/reference/depth2pressure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert depth to pressure — depth2pressure","text":"","code":"depth2pressure(1000, 27) #> [1] 10075403"},{"path":"/reference/depth_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the vertical velocity — depth_rate","title":"Estimate the vertical velocity — depth_rate","text":"function used estimate vertical velocity differentiating depth altitude time series. low-pass filter reduces sensor noise amplified differentiation.","code":""},{"path":"/reference/depth_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the vertical velocity — depth_rate","text":"","code":"depth_rate(p, fs, fc, depth)"},{"path":"/reference/depth_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the vertical velocity — depth_rate","text":"p vector depth altitude data, animaltags list object containing depth altitude data. fs (required p vector) sampling rate p Hz. fc (optional) smoothing filter cut-frequency Hz. fc given, default value used 0.2 Hz (5 second time constant). depth (optional) behavior animals. Required dealing animals behave descent ascent.","code":""},{"path":"/reference/depth_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the vertical velocity — depth_rate","text":"v, vertical velocity sampling rate p. v vector dimensions p. unit v depends unit p. example, p meters, v meters/second","code":""},{"path":"/reference/depth_rate.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate the vertical velocity — depth_rate","text":"low-pass filter symmetric FIR length 4fs/fc. group delay filters removed. Usually, function handles data pertaining diving animals, data measured depth beneath water surface. ascending data coming birds alike data, setting depth = FALSE help calculating right vertical velocity.","code":""},{"path":"/reference/depth_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the vertical velocity — depth_rate","text":"","code":"if (FALSE) { v <- depth_rate(p = beaked_whale$P) plott(list(beaked_whale$P$data, v),   fs = beaked_whale$P$sampling_rate,   r = c(1, 0), panel_labels = c(\"Depth\\n(m)\", \"Vertical Velocity\\n(m/s)\") ) }"},{"path":"/reference/detect_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect peaks in signal vector data — detect_peaks","title":"Detect peaks in signal vector data — detect_peaks","text":"function detects peaks time series data exceed specified threshold returns peak's start time, end time, maximum peak value, time maximum peak value, threshold level, blanking time.","code":""},{"path":"/reference/detect_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect peaks in signal vector data — detect_peaks","text":"","code":"detect_peaks(   data,   sr,   FUN = NULL,   thresh = NULL,   bktime = NULL,   plot_peaks = NULL,   ... )"},{"path":"/reference/detect_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect peaks in signal vector data — detect_peaks","text":"data vector (positive values) matrix data used peak detection. data matrix, must specify FUN applied data. sr sampling rate Hz date. fs tagtools functions. used calculate bktime case input bktime missing. FUN function applied data data run peak detector. specify function name (.e. njerk). left blank, data input immediately passed peak detector. thresh threshold level peaks signal detected. Inputs must units signal. input thresh missing/empty, default level 0.99 quantile bktime specified length time (seconds) signal values detected threshold value (moment first peak recedes threshold level moment second peak surpasses threshold level) required value considered separate unique peak. input bktime missing/empty default value blanking time set .80 quantile vector time differences signal values specified threshold. plot_peaks conditional input. input TRUE missing, interactive plot generated, allowing user manipulate thresh bktime values observe changes peak detection. input FALSE, interactive plot generated. Look console help use plot upon running function. ... Additional inputs passed FUN","code":""},{"path":"/reference/detect_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect peaks in signal vector data — detect_peaks","text":"data frame containing start times, end times, peak times, peak maxima, thresh, bktime. times presented sampling value.","code":""},{"path":"/reference/detect_peaks.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Detect peaks in signal vector data — detect_peaks","text":"specified description input plot_peaks, interactive plot can generated, allowing user manipulate thresh bktime values observe changes peak detection. plot output given input plot_peaks specified true input left missing/empty.","code":""},{"path":"/reference/detect_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect peaks in signal vector data — detect_peaks","text":"","code":"if (FALSE) { BW <- beaked_whale detect_peaks(data = BW$A$data, sr = BW$A$sampling_rate,  FUN = njerk, thresh = NULL, bktime = NULL,  plot_peaks = NULL, sampling_rate = BW$A$sampling_rate) }"},{"path":"/reference/dive_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute summary statistics for dives or flights — dive_stats","title":"Compute summary statistics for dives or flights — dive_stats","text":"Given depth/altitude profile series dive/flight start end times, compute summary dive statistics.","code":""},{"path":"/reference/dive_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute summary statistics for dives or flights — dive_stats","text":"","code":"dive_stats(   P,   X = NULL,   dive_cues,   sampling_rate = NULL,   prop = 0.85,   angular = FALSE,   X_name = NULL,   na.rm = TRUE )"},{"path":"/reference/dive_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute summary statistics for dives or flights — dive_stats","text":"P Depth data. vector (one-column matrix), tag sensor data list. X (optional) Another data stream (vector (one-column matrix) tag sensor data list) compute mean variability. angular TRUE, interpreted angular data (example pitch, roll, heading) means variances computed accordingly. unit measure must radians (degrees). Currently, X must regularly sampled. dive_cues two-column data frame matrix dive/flight start times first column dive/flight end times second. May obtained find_dives. Units seconds since start tag recording. sampling_rate (optional ignored P X tag sensor data lists) Sampling rate P (X, X given). omitted, input data must sensor data lists. one value given P X input, assumed sampling rate. P X different sampling rates, input can two elements (first P, second X). prop proportion maximal excursion use defining \"destination\" phase dive flight. example, prop 0.85 (default), destination phase lasts first last time depth/altitude exceeds 0.85 times within-dive maximum. angular X angular data? Defaults FALSE. X_name short name use X variable output data frame. example, X pitch data, use X_name='pitch' get outputs column names like mean_pitch, etc. Defaults 'angle' angular data 'aux' non-angular data. na.rm Logical, default TRUE. TRUE, returned mean values ignore missing values, computing average non-missing observations.","code":""},{"path":"/reference/dive_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute summary statistics for dives or flights — dive_stats","text":"data frame one row dive/flight columns detailed . times seconds, rates units x/sec x units P. max  maximum depth altitude st start time dive (seconds) - input dive_cues et end time dive (seconds) - input dive_cues dur  duration excursion dest_st  start time destination phase seconds since start tag recording (also end time phase) dest_et  end time destination phase seconds since start tag recording (also start phase). dest_dur  duration seconds destination phase to_dur  duration seconds phase from_dur  duration seconds phase mean_angle  angular=TRUE X input, mean angle entire excursion. Values phase also provided columns mean_to_angle, mean_dest_angle, mean_from_angle. angle_var  angular=TRUE X input, angular variance entire excursion. Values phase also provided individually columns to_angle_var, dest_angle_var, from_angle_var. mean_aux  angular=FALSE X input, mean value X entire excursion. Values phase also provided columns mean_to_aux, mean_dest_aux, mean_from_aux. aux_sd  angular=FALSE X input, standard deviation X entire excursion. Values phase also provided individually columns to_aux_sd, dest_aux_sd, from_aux_sd. #'","code":""},{"path":"/reference/dive_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute summary statistics for dives or flights — dive_stats","text":"addition maximum excursion duration, dive_stats divides excursion three phases: \"\" (descent dives, ascent flights), \"\" (ascent dives, descent flights), \"destination\". \"destination\" (bottom dives top flights) phase excursion identified using \"proportion maximum depth/altitude\" method, whereby example bottom phase dive lasts first last time depth exceeds stated proportion maximum depth. Average vertical velocity computed phases using simple method: total depth/altitude change divided total time. angular data variable also supplied (example, pitch, roll heading), circular mean (computed via circ.mean) variance (computed via circ.disp reporting var output) also computed dive phase dive whole.","code":""},{"path":[]},{"path":"/reference/draw_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw time axis on plott plot. — draw_axis","title":"Draw time axis on plott plot. — draw_axis","text":"function called plott add time axis plot created plott. Users unlikely need call function directly.","code":""},{"path":"/reference/draw_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw time axis on plott plot. — draw_axis","text":"","code":"draw_axis(side = 1, x = NULL, date_time, last_panel)"},{"path":"/reference/draw_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw time axis on plott plot. — draw_axis","text":"side See axis. x date-time date object, types objects can converted appropriately. date_time Logical. data plotted date-time (POSIX) time seconds? last_panel Logical. last panel (words, x axis tick labels drawn)?","code":""},{"path":"/reference/dsf.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the dominant stroke frequency — dsf","title":"Estimate the dominant stroke frequency — dsf","text":"function can used estimate dominant stroke frequency triaxial accelerometer data [ax,ay,az].","code":""},{"path":"/reference/dsf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the dominant stroke frequency — dsf","text":"","code":"dsf(A, sampling_rate = NULL, fc = NULL, Nfft = NULL)"},{"path":"/reference/dsf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the dominant stroke frequency — dsf","text":"sensor data list nx3 acceleration matrix columns [ax ay az]. Acceleration can consistent unit, e.g., g m/s^2. sampling_rate sampling rate sensor data Hz (samples per second). fc (optional) cut-frequency Hz low-pass filter apply computing spectra. prevents high frequency transients e.g., foraging, dominating spectra. filter  length 6*sampling_rate/fc. fc specified, defaults 2.5 Hz. fc>sampling_rate/2, filtering operation skipped. Nfft (optional) FFT length therefore frequency resolution. default value power two closest 20*sampling_rate, .e., analysis block length 20 s frequency resolution 0.05 Hz. shorter FFT may required movement behaviour variable. longer FFT may work well propulsion continuous stereotyped.","code":""},{"path":"/reference/dsf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the dominant stroke frequency — dsf","text":"list 2 elements: fpk: dominant stroke frequency (.e., peak frequency sum acceleration power spectra) Hz. Quadratic interpolation used spectral peak improve resolution. q:  quality peak measured peak power divided mean power spectra. dimensionless number large clear spectral peak.","code":""},{"path":"/reference/dsf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate the dominant stroke frequency — dsf","text":"Animals tend produce propulsive movements narrow frequency range. movements cause cyclical changes posture /specific acceleration, measured animal-attached accelerometer. Thus sections accelerometer data largely contain propulsion show spectral peak one axes dominant stroke frequency.","code":""},{"path":"/reference/dsf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate the dominant stroke frequency — dsf","text":"Frame: function makes assumption accelerometer frame. Data frame can used. Data selection: function works best sensor matrix, , covers interval propulsion main activity. complete dive interval running flapping flight. interval length least Nfft/sampling_rate seconds, .e., 20 s default FFT length.","code":""},{"path":"/reference/dsf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the dominant stroke frequency — dsf","text":"","code":"dsf(harbor_seal$A) #> $fpk #> [1] 1.224956 #>  #> $q #> [1] 3.262381 #>"},{"path":"/reference/euler2rotmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a rotation (or direction cosine) matrix — euler2rotmat","title":"Make a rotation (or direction cosine) matrix — euler2rotmat","text":"function used make rotation (direction cosine) matrix sets Euler angles, pitch, roll, heading.","code":""},{"path":"/reference/euler2rotmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a rotation (or direction cosine) matrix — euler2rotmat","text":"","code":"euler2rotmat(p, r, h)"},{"path":"/reference/euler2rotmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a rotation (or direction cosine) matrix — euler2rotmat","text":"p pitch angle radians. r roll angle radians. h heading yaw angle radians.","code":""},{"path":"/reference/euler2rotmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a rotation (or direction cosine) matrix — euler2rotmat","text":"One 3x3 rotation matrices. p, r, h scalars, Q 3x3 matrix, Q = H","code":""},{"path":"/reference/euler2rotmat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a rotation (or direction cosine) matrix — euler2rotmat","text":"","code":"vec1 <- matrix(c(1:10), nrow = 10) vec2 <- matrix(c(11:20), nrow = 10) vec3 <- matrix(c(21:30), nrow = 10) Q <- euler2rotmat(p = vec1, r = vec2, h = vec3)"},{"path":"/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a sub-sample of data — extract","title":"Extract a sub-sample of data — extract","text":"function used extract sub-sample data vector matrix.","code":""},{"path":"/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a sub-sample of data — extract","text":"","code":"extract(x, sampling_rate, tst, ted)"},{"path":"/reference/extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a sub-sample of data — extract","text":"x vector matrix measurements. x matrix, column treated separate measurement vector. sampling_rate sampling rate Hz data x. tst Defines start time seconds interval extracted x. ted Defines end time seconds interval extracted x.","code":""},{"path":"/reference/extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a sub-sample of data — extract","text":"X:  matrix containing sub-sample x. X number columns x. length sub-sample round(sampling_rate*(tend-tstart)) samples.","code":""},{"path":"/reference/extract.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract a sub-sample of data — extract","text":"Output sampling rate input sampling rate. either tst ted beyond length x, non-existing samples replaced NaN X.","code":""},{"path":"/reference/extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a sub-sample of data — extract","text":"","code":"BW <- beaked_whale t <- extract(x = BW$A$data, sampling_rate = BW$A$sampling_rate, tst = 3, ted = 100)"},{"path":"/reference/extract_cues.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract multiple sub-samples of data — extract_cues","title":"Extract multiple sub-samples of data — extract_cues","text":"function used extract multiple sub-samples data vector matrix.","code":""},{"path":"/reference/extract_cues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract multiple sub-samples of data — extract_cues","text":"","code":"extract_cues(x, sampling_rate, cues, len)"},{"path":"/reference/extract_cues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract multiple sub-samples of data — extract_cues","text":"x vector matrix measurements. x matrix, column treated separate measurement vector. sampling_rate sampling rate Hz data x. cues defines start time seconds intervals extracted x. len length interval extract seconds. scalar.","code":""},{"path":"/reference/extract_cues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract multiple sub-samples of data — extract_cues","text":"list 2 elements: X:  matrix containing sub-samples x. x vector, X many columns cues, .e., cue generates column X. x pxm matrix, X qxmxn matrix n size cues q length interval requested, .e., round(sampling_rate*len) samples. cues:  list cues actually used. cues require data outside x rejected.","code":""},{"path":"/reference/extract_cues.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract multiple sub-samples of data — extract_cues","text":"Output sampling rate input sampling rate.","code":""},{"path":"/reference/extract_cues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract multiple sub-samples of data — extract_cues","text":"","code":"BW <- beaked_whale # beaked_whale must be in your working directory list <- extract_cues(x = BW$A$data, sampling_rate = BW$A$sampling_rate, cues = c(6, 40), len = 11)"},{"path":"/reference/find_dives.html","id":null,"dir":"Reference","previous_headings":"","what":"Find time cues for dives — find_dives","title":"Find time cues for dives — find_dives","text":"function used find time cues start end either dives depth record flights altitude record.","code":""},{"path":"/reference/find_dives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find time cues for dives — find_dives","text":"","code":"find_dives(p, mindepth, sampling_rate = NULL, surface = 1, findall = 0)"},{"path":"/reference/find_dives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find time cues for dives — find_dives","text":"p depth altitude time series (sensor data list  vector) meters. mindepth threshold meters recognize dive flight. Dives shallow flights lower mindepth ignored. sampling_rate sampling rate sensor data Hz (samples per second). surface (optional) threshold meters animal presumed reached surface. Default value 1. smaller value can used dive/altitude data accurate need detect shallow dives/flights. findall (optional) TRUE, forces algorithm include incomplete dives start end record. Default FALSE recognizes complete dives.","code":""},{"path":"/reference/find_dives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find time cues for dives — find_dives","text":"T data frame one row dive/flight found. columns T : start (time seconds start dive/flight), end (time seconds start dive/flight), max (maximum depth/altitude reached dive/flight), tmax\t(time seconds animal reaches max depth/altitude).","code":""},{"path":"/reference/find_dives.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find time cues for dives — find_dives","text":"","code":"BW <- beaked_whale T <- find_dives(p = BW$P$data,  sampling_rate = BW$P$sampling_rate,  mindepth = 5, surface = 2,  findall = FALSE)"},{"path":"/reference/fir_nodelay.html","id":null,"dir":"Reference","previous_headings":"","what":"Delay-free filtering — fir_nodelay","title":"Delay-free filtering — fir_nodelay","text":"function used gather delay-free filtering using linear-phase (symmetric) FIR filter followed group delay correction. Delay-free filtering needed relative timing signals important e.g., integrating signals sampled different rates.","code":""},{"path":"/reference/fir_nodelay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delay-free filtering — fir_nodelay","text":"","code":"fir_nodelay(x, n, fc, qual = \"low\", return_coefs = FALSE)"},{"path":"/reference/fir_nodelay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delay-free filtering — fir_nodelay","text":"x signal filtered. can multi-channel signal column, e.g., acceleration matrix. number samples (.e., number rows x) must larger filter length, n. n length symmetric FIR filter use units input samples (.e., samples x). length least 4/fc. longer filter gives steeper cut-. fc filter cut-frequency relative sampling_rate/2=1. single number given, filter low-pass high-pass. fc vector two numbers, filter bandpass filter lower upper cut-frequencies given fc(1) fc(2). bandpass filter, n least 4/fc(1) 4/diff(fc) whichever larger. qual optional qualifier determining filter : \"low\" low-pass (default value fc single number), \"high\" high-pass. Default \"low\". return_coefs Logical. Return filter coefficients instead filtered signal? TRUE, function return FIR filter coefficients instead filtered signal. Default FALSE.","code":""},{"path":"/reference/fir_nodelay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delay-free filtering — fir_nodelay","text":"return_coefs FALSE (default), fir_nodelay() returns filtered signal (size x). return_coefs TRUE, returns vector filter coefficients .","code":""},{"path":"/reference/fir_nodelay.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Delay-free filtering — fir_nodelay","text":"filter generated call fir1: h <- fir1(n, fc, qual). h always odd length filter even n even. needed ensure filter symmetric group delay integer number samples. filter support n samples, .e., uses n samples x compute sample y. input samples used n/2 samples n/2 samples sample number computed. means samples start end output vector y need input samples start x end x. faked reversing first n/2 samples x concatenating start x. trick used end x. result, first last n/2 samples y untrustworthy. initial condition problem true filter FIR filter used makes easy identify precisely samples unreliable.","code":""},{"path":"/reference/fir_nodelay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delay-free filtering — fir_nodelay","text":"","code":"if (FALSE) { x <- sin(t(2 * pi * 0.05 * (1:100)) +   t(cos(2 * pi * 0.25 * (1:100)))) Y <- fir_nodelay(x = x, n = 30, fc = 0.2, qual = \"low\") plot(c(1:length(x)), x,   type = \"l\", col = \"grey42\",   xlab = \"index\", ylab = \"input x and output y\" ) lines(c(1:length(Y)), Y, lwd = 2) }"},{"path":"/reference/fit_tracks.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate track with reference positions — fit_tracks","title":"Integrate track with reference positions — fit_tracks","text":"Simple track integration method merge infrequent accurate positions regularly sampled track absolutely accurate.","code":""},{"path":"/reference/fit_tracks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate track with reference positions — fit_tracks","text":"","code":"fit_tracks(P, T = NULL, D, sampling_rate)"},{"path":"/reference/fit_tracks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate track with reference positions — fit_tracks","text":"P two column matrix data frame containing anchor positions. first column \"northing\" second \"easting\" coordinates. (data frame input, columns two names, position, used present). T vector times corresponding positions P. P data frame column called \"T\" column used. Times seconds since start regularly sampled track. T must number rows P. Times must greater equal 0 less time length regularly sampled track. D two column matrix containing regularly sampled track points. D data frame columns named 'northing' 'easting' used regardless position; otherwise first column northing second easting. two columns contain 'x' 'y' coordinates track points local level frame. Units, axes frame must match P. sampling_rate sampling rate Hz D.","code":""},{"path":"/reference/fit_tracks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrate track with reference positions — fit_tracks","text":"D, data frame 4 columns: \"northing\" \"easting\" along new track, \"current_n\" \"current_e\", track increments needed match tracks. difference two tracks due medium moving, increments can considered estimate current m/s. axes frame input data.","code":""},{"path":"/reference/fix_offset_3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the offset in each axis — fix_offset_3d","title":"Estimate the offset in each axis — fix_offset_3d","text":"function used estimate offset axis triaxial field measurement, e.g., accelerometer magnetometer. useful correcting drift calibration errors sensor.","code":""},{"path":"/reference/fix_offset_3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the offset in each axis — fix_offset_3d","text":"","code":"fix_offset_3d(X)"},{"path":"/reference/fix_offset_3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the offset in each axis — fix_offset_3d","text":"X sensor list matrix containing measurements triaxial field sensor accelerometer magnetometer. X can units frame.","code":""},{"path":"/reference/fix_offset_3d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the offset in each axis — fix_offset_3d","text":"list 2 elements: X:  sensor list matrix containing adjusted triaxial sensor measurements. size sampling rate units input data. input sensor list, output also. G:  calibration list containing one field: G$poly. first column G$poly contains 1 function adjust scale factor X. second column G$poly offset added column X.","code":""},{"path":"/reference/fix_offset_3d.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate the offset in each axis — fix_offset_3d","text":"function usable field sensors. work gyroscope data.","code":""},{"path":"/reference/fix_offset_3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the offset in each axis — fix_offset_3d","text":"","code":"t <- fix_offset_3d(harbor_seal$A)"},{"path":"/reference/fix_pressure.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct a depth or altitude profile — fix_pressure","title":"Correct a depth or altitude profile — fix_pressure","text":"function used correct depth altitude profile offsets caused miscalibration temperature. function finds minima dive/altitude profile consistent surfacing/landing. uses depth/height points fit temperature regression.","code":""},{"path":"/reference/fix_pressure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct a depth or altitude profile — fix_pressure","text":"","code":"fix_pressure(p, t, sampling_rate, maxp = NULL)"},{"path":"/reference/fix_pressure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct a depth or altitude profile — fix_pressure","text":"p sensor list vector depth/altitude meters t sensor list vector temperature degrees Celsius sampling_rate sampling_rate p t Hz. needed p t sensor lists. depth temperature must sampling rate (use `decdc` needed achieve ). maxp maximum depth altitude reading pressure data animal actually surface. rough measurement potential error pressure data. unit meters. Start small value, e.g., 2m rerun fix_pressure larger value still obvious temperature-related errors resulting depth/altitude profile.","code":""},{"path":"/reference/fix_pressure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct a depth or altitude profile — fix_pressure","text":"list 2 elements: p:  sensor list vector corrected depth/altitude measurements sampling rate input data. input sensor list, output also . pc:  list containing pressure offset temperature correction coefficients. fields: pc$tref temperature compensation polynomial. used within function correct pressure follows: p + stats::polyval(pc$tcomp, t - pc$tref).","code":""},{"path":"/reference/fix_pressure.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Correct a depth or altitude profile — fix_pressure","text":"function makes number assumptions depth/altitude data behaviour animals: First, depth data incorrect outlier (negative) values fall well beyond surface. can reduced using median_filter.m calling fix_depth. Second, animal assumed near surface least 2","code":""},{"path":"/reference/get_researcher.html","id":null,"dir":"Reference","previous_headings":"","what":"Find matching researcher in a list of known tag researchers — get_researcher","title":"Find matching researcher in a list of known tag researchers — get_researcher","text":"Find matching researcher list known tag researchers","code":""},{"path":"/reference/get_researcher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find matching researcher in a list of known tag researchers — get_researcher","text":"","code":"get_researcher(initial)"},{"path":"/reference/get_researcher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find matching researcher in a list of known tag researchers — get_researcher","text":"initial two-letter code researcher interest (first letter first name first letter last name)","code":""},{"path":"/reference/get_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Find matching species in a list of marine mammals — get_species","title":"Find matching species in a list of marine mammals — get_species","text":"Find matching species list marine mammals","code":""},{"path":"/reference/get_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find matching species in a list of marine mammals — get_species","text":"","code":"get_species(initial)"},{"path":"/reference/get_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find matching species in a list of marine mammals — get_species","text":"initial two-letter code species interest (first letter Genus first letter species)","code":""},{"path":"/reference/harbor_seal.html","id":null,"dir":"Reference","previous_headings":"","what":"Set of sensor lists for a harbor seal — harbor_seal","title":"Set of sensor lists for a harbor seal — harbor_seal","text":"Data _Phoca vitulina_ tag ID 'hs16_265c'. device used DTAG4 deployed 2016-09-21 07:55:22 Husum, Germany.","code":""},{"path":"/reference/harbor_seal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set of sensor lists for a harbor seal — harbor_seal","text":"","code":"harbor_seal"},{"path":"/reference/harbor_seal.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Set of sensor lists for a harbor seal — harbor_seal","text":"set sensor lists: sensor list contining triaxial acceleration matrix sampled 5 Hz M sensor list containing triaxial magnetometer matrix sampled 5 Hz P sensor list containing pressure (depth) vector sampled 5 Hz POS sensor list containing position matrix columns [sampling time, latitude, longitude]","code":""},{"path":"/reference/hilbert_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the envelope of X using Hilbert transform.\r\n \r\nCompute the envelope of the signal matrix X using the Hilbert transform. \r\nTo avoid long transforms, this function uses the overlap and add method. — hilbert_env","title":"Compute the envelope of X using Hilbert transform.\r\n \r\nCompute the envelope of the signal matrix X using the Hilbert transform. \r\nTo avoid long transforms, this function uses the overlap and add method. — hilbert_env","text":"Compute envelope X using Hilbert transform. Compute envelope signal matrix X using Hilbert transform.  avoid long transforms, function uses overlap add method.","code":""},{"path":"/reference/hilbert_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the envelope of X using Hilbert transform.\r\n \r\nCompute the envelope of the signal matrix X using the Hilbert transform. \r\nTo avoid long transforms, this function uses the overlap and add method. — hilbert_env","text":"","code":"hilbert_env(X, N = 1024)"},{"path":"/reference/hilbert_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the envelope of X using Hilbert transform.\r\n \r\nCompute the envelope of the signal matrix X using the Hilbert transform. \r\nTo avoid long transforms, this function uses the overlap and add method. — hilbert_env","text":"X vector matrix signals. X matrix, column treated separate signal. signals must regularly sampled result correctly interpretable envelope. N (optional) specifies transform length used.  default value 1024 may fine situations.","code":""},{"path":"/reference/hilbert_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the envelope of X using Hilbert transform.\r\n \r\nCompute the envelope of the signal matrix X using the Hilbert transform. \r\nTo avoid long transforms, this function uses the overlap and add method. — hilbert_env","text":"E, envelope X. E size X: number columns  number samples per signal. units X envelope, values >=0.","code":""},{"path":"/reference/hilbert_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the envelope of X using Hilbert transform.\r\n \r\nCompute the envelope of the signal matrix X using the Hilbert transform. \r\nTo avoid long transforms, this function uses the overlap and add method. — hilbert_env","text":"","code":"if (FALSE) { s <- matrix(sin(0.1 * c(1:10000)), ncol = 1) *  matrix(sin(0.001 * c(1:10000)), ncol = 1) E <- hilbert_env(s) plot(c(1:length(s)), s, col = 'grey34') lines(c(1:length(E)), E, col = 'black') }"},{"path":"/reference/hilbert_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the Hilbert transform of a signal — hilbert_transform","title":"Return the Hilbert transform of a signal — hilbert_transform","text":"function used compute Hilbert transform signal. based function HilbertTransform() (defunct) package hht, modified EMD package Donghoh Kim Hee-Seok Oh (http://dasan.sejong.ac.kr/~dhkim/software.emd.html)","code":""},{"path":"/reference/hilbert_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the Hilbert transform of a signal — hilbert_transform","text":"","code":"hilbert_transform(x)"},{"path":"/reference/hilbert_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the Hilbert transform of a signal — hilbert_transform","text":"x signal vector buffered","code":""},{"path":"/reference/hilbert_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the Hilbert transform of a signal — hilbert_transform","text":"\"analytic signal,\" words Hilbert transform input signal x","code":""},{"path":"/reference/hilbert_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the Hilbert transform of a signal — hilbert_transform","text":"","code":"t <- seq(from = 0, by = 1/1024, to = 1) x <- sin(2*pi*60*t) y <- hilbert_transform(x)"},{"path":"/reference/htrack.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple horizontal dead-reckoned track — htrack","title":"Simple horizontal dead-reckoned track — htrack","text":"function used estimate simple horizontal dead-reckoned track (pseudo-track) based speed heading. differs ptrack animals body angle considered. makes appropriate animals always move direction longitudinal axis.","code":""},{"path":"/reference/htrack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple horizontal dead-reckoned track — htrack","text":"","code":"htrack(A, M, s, sampling_rate = NULL, fc = 0.2)"},{"path":"/reference/htrack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple horizontal dead-reckoned track — htrack","text":"nx3 acceleration matrix columns [ax ay az] acceleration sensor list. Acceleration can consistent unit, e.g., g m/s^2. M magnetometer signal matrix, M = [mx,,mz] consistent unit (e.g., uT Gauss) magnetometer sensor list. M must size (measured sampling rate). s forward speed animal m/s. s can single number meaning animal assumed travel constant speed. s can also vector number rows M, e.g., generated ocdr. sampling_rate sampling rate sensor data Hz (samples per second). fc (optional) Specifies cut-frequency low-pass filter apply M computing heading. filter cut-frequency Hz. filter length 4*sampling_rate/fc. Filtering adds group delay. fc empty given, default value 0.2 Hz (.e., 5 second time constant) used.","code":""},{"path":"/reference/htrack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple horizontal dead-reckoned track — htrack","text":"Data frame T containing estimated track local level frame. track defined meters northward eastward movement (termed 'northing' 'easting', .e, columns T northing easting relative animal's position start measurements (defined [0,0]). track sampling rate input data row T defines track coordinates times 0,1/sampling_rate,2/sampling_rate,... relative start time measurements.","code":""},{"path":"/reference/htrack.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Simple horizontal dead-reckoned track — htrack","text":"Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. M must rotated needed match animal's cardinal axes otherwise track meaningful. Unless local declination angle also corrected rotframe, dead-reckoned track use magnetic north rather true north. CAUTION: dead-reckoned tracks usually inaccurate.  useful get idea animals move rather go. animals probably travel exactly direction longitudinal axis. Additionally, measuring precise orientation longitudinal axis non-rigid animal fraught error.  Moreover, net flow medium, animal advected flow addition autonomous movement. swimming animals can lead substantial errors. forward speed assumed respect medium track derived 'track-made-good', .e., geographic movement animal. estimates movement animal respect medium.  numerous sources error use risk!","code":""},{"path":[]},{"path":"/reference/htrack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple horizontal dead-reckoned track — htrack","text":"","code":"if (FALSE) { bwhtrack <- htrack(A = beaked_whale$A, M = beaked_whale$M, s = 4) plot(bwhtrack$easting, bwhtrack$northing, xlab = \"Easting, m\", ylab = \"Northing, m\") }"},{"path":"/reference/image_irreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an image with an irregular grid. — image_irreg","title":"Plot an image with an irregular grid. — image_irreg","text":"function used plot image irregular grid. useful plotting matrix data (.e., sampled data function two parameters) one sampling schemes regularly spaced. image_irreg plots R(,j) coloured patch centered x(), y(j) dimension determined x[] - x[-1] y[] - y[-1].","code":""},{"path":"/reference/image_irreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an image with an irregular grid. — image_irreg","text":"","code":"image_irreg(x, y, R)"},{"path":"/reference/image_irreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an image with an irregular grid. — image_irreg","text":"x vector horizontal axis coordinates value R. y vector vertical axis coordinates value R. R matrix measurements display. values R converted colours current colormap caxis. R must length(x) length(y). Use NaN patch display.","code":""},{"path":"/reference/inclination.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the inclination angle — inclination","title":"Estimate the inclination angle — inclination","text":"function used estimate local magnetic field vector inclination angle directly acceleration magnetic field measurements.","code":""},{"path":"/reference/inclination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the inclination angle — inclination","text":"","code":"inclination(A, M, fc = NULL)"},{"path":"/reference/inclination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the inclination angle — inclination","text":"accelerometer data structure signal matrix, = [ax,ay,az] consistent unit (e.g., g m/s2). can frame. M magnetometer data structure signal matrix, M = [mx,,mz] consistent unit (e.g., uT Gauss). M must frame . fc (optional) cut-frequency low-pass filter apply M computing inclination angle. filter cut-frequency respect 1=Nyquist frequency. Filtering adds group delay. fc specified, filtering performed.","code":""},{"path":"/reference/inclination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the inclination angle — inclination","text":"magnetic field inclination angle radians.","code":""},{"path":"/reference/inclination.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate the inclination angle — inclination","text":"Output sampling rate input sampling rate. Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. frames, magnetic field vector positive inclination angle points horizon. frames can used long M frame however interpretation incl differ accordingly.","code":""},{"path":"/reference/inclination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the inclination angle — inclination","text":"","code":"if (FALSE) { A <- matrix(c(1, -0.5, 0.1, 0.8, -0.2, 0.6, 0.5, -0.9, -0.7),   byrow = TRUE, nrow = 3, ncol = 3 ) M <- matrix(c(1.3, -0.25, 0.16, 0.78, -0.3, 0.5, 0.5, -0.49, -0.6),   byrow = TRUE, nrow = 3, ncol = 3 ) incl <- inclination(A, M) }"},{"path":"/reference/interp2length.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate regularly sampled data to increase its sampling rate and match its length to another variable. — interp2length","title":"Interpolate regularly sampled data to increase its sampling rate and match its length to another variable. — interp2length","text":"function used reduce time span data cropping data falls two time cues.","code":""},{"path":"/reference/interp2length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate regularly sampled data to increase its sampling rate and match its length to another variable. — interp2length","text":"","code":"interp2length(X, Z, fs_in = NULL, fs_out = NULL, n_out = NULL)"},{"path":"/reference/interp2length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate regularly sampled data to increase its sampling rate and match its length to another variable. — interp2length","text":"X sensor list, vector, matrix. x contains  matrix, column treated independent signal. Z sensor structure, vector matrix whose sampling rate length matched. fs_in sampling rate Hz data X. needed X sensor structure. fs_out required new sampling rate Hz. needed Z given. n_out optional length output data. n_out given, output data length input data length * fs_out/fs_in.","code":""},{"path":"/reference/interp2length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate regularly sampled data to increase its sampling rate and match its length to another variable. — interp2length","text":"Y sensor structure, vector matrix interpolated data number columns X.","code":""},{"path":"/reference/interp2length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolate regularly sampled data to increase its sampling rate and match its length to another variable. — interp2length","text":"","code":"plott(X = list(harbor_seal$P), fsx = 5)           P_dec <- decdc(harbor_seal$P, 5)          P_interp <- interp2length(X = P_dec, Z = harbor_seal$A)          plott(X = list(P_interp$data), fsx = 1)"},{"path":"/reference/interp_nan.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove NAs from sensor data and return indices of (rows of) filled values — interp_nan","title":"Remove NAs from sensor data and return indices of (rows of) filled values — interp_nan","text":"internal function used htrack","code":""},{"path":"/reference/interp_nan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove NAs from sensor data and return indices of (rows of) filled values — interp_nan","text":"","code":"interp_nan(data)"},{"path":"/reference/interp_nan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove NAs from sensor data and return indices of (rows of) filled values — interp_nan","text":"data data vector matrix","code":""},{"path":"/reference/interp_nan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove NAs from sensor data and return indices of (rows of) filled values — interp_nan","text":"list entries data (input data NAs filled ) k logical vector indicating position (data vector) rows (data matrix) NAs filled . Internal NAs filled via linear interoplation, leading trailing ones filled using first following last preceding good value.","code":""},{"path":"/reference/interp_nan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove NAs from sensor data and return indices of (rows of) filled values — interp_nan","text":"","code":"if (FALSE) { A <- matrix(c(NA, NA, 3, 4, 5, 6, 7, 8, 9, 10, NA, NA, 13, 14, 15, 16, NA, NA), ncol = 2) result <- interp_nan(A) }"},{"path":"/reference/inv_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify invariant axis in triaxial movement measurements. — inv_axis","title":"Identify invariant axis in triaxial movement measurements. — inv_axis","text":"function processes tri-axial movement data (example, accelerometer, magentometer gyroscope) identify one axis varies least, .e., invariant axis.","code":""},{"path":"/reference/inv_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify invariant axis in triaxial movement measurements. — inv_axis","text":"","code":"inv_axis(data)"},{"path":"/reference/inv_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify invariant axis in triaxial movement measurements. — inv_axis","text":"data triaxial sensor measurement axis e.g., accelerometer magnetometer. frame unit matter.","code":""},{"path":"/reference/inv_axis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify invariant axis in triaxial movement measurements. — inv_axis","text":"list two entries: V  3x1 numeric vector defining least varying axis data. vector direction vector magnitude 1 unit-less. vector defined frame , first, second, third entries correspond first, second third columns data matrix, axis orientation conventions preserved. q  proportion movement invariant axis. small number (e.g., less 0.05) implies little movement occurs axis movement largely planar (.e., two-dimensional). fraction much larger 0.05, motion better described three-dimensional. q proportion unitless.","code":""},{"path":"/reference/inv_axis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify invariant axis in triaxial movement measurements. — inv_axis","text":"Rotational linear movement types propulsion largely occur 2 dimensions e.g., body rotation cetacean caudal propulsion occurs around animal's transverse axis. Likewise sychronized wing flaps flight pectoral swimming may generate acceleration longitudinal dorso-ventral axes much less transverse axis. function identifies direction axis moves least movement matrix.","code":""},{"path":"/reference/inv_axis.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Identify invariant axis in triaxial movement measurements. — inv_axis","text":"function returns one invariant axis applies entire input signal important choose relevant sub-sample movement data, , analyse.","code":""},{"path":"/reference/inv_axis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify invariant axis in triaxial movement measurements. — inv_axis","text":"","code":"if (FALSE) {  s <- matrix(sin( 2 * pi * 0.1 * c(1:100)), ncol=1)  A <- s %*% c(0.9, -0.4, 0.3) + s^2 %*% c(0, 0.2, 0.1)  inv_axis_out <- inv_axis(A)    }"},{"path":"/reference/julian_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert between dates and Julian day numbers. — julian_day","title":"Convert between dates and Julian day numbers. — julian_day","text":"function used convert dates Julian day numbers.  three different input arrangements, returns different output. description different input arrangements, see .","code":""},{"path":"/reference/julian_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert between dates and Julian day numbers. — julian_day","text":"","code":"julian_day(y = NULL, m = NULL, d = NULL)"},{"path":"/reference/julian_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert between dates and Julian day numbers. — julian_day","text":"y single year vector years m single month vector months d single day vector days","code":""},{"path":"/reference/julian_day.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert between dates and Julian day numbers. — julian_day","text":"See description section details return.","code":""},{"path":"/reference/julian_day.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert between dates and Julian day numbers. — julian_day","text":"Possible input combinations:  (n <- julian_day()) returns Julian day number today.  (n = julian_day(y,d)) y single year vector years d single day number vector daynumbers,  returns date vector [year,month,day] year, day pair.  (n = julian_day(y,m,d)) y single year vector years, m single month vector months, d single month day vector month days,  returns Julian day number year, month, day.","code":""},{"path":"/reference/julian_day.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert between dates and Julian day numbers. — julian_day","text":"","code":"julian_day(y = 2016, d = 12, m = 10) #> [1] 286 julian_day(y = 2016, 286) #> [1] \"2016-10-12\""},{"path":"/reference/lalo2llf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert latitude-longitude track points into a local level frame — lalo2llf","title":"Convert latitude-longitude track points into a local level frame — lalo2llf","text":"Convert latitude-longitude track points local level frame","code":""},{"path":"/reference/lalo2llf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert latitude-longitude track points into a local level frame — lalo2llf","text":"","code":"lalo2llf(trk, pt = NULL)"},{"path":"/reference/lalo2llf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert latitude-longitude track points into a local level frame — lalo2llf","text":"trk data frame, two-column matrix, two-element vector  track points c(latitude, longitude) sensor data  structure. pt c(latitude, longitude) centre point local level frame. pt given, first point track used.","code":""},{"path":"/reference/lalo2llf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert latitude-longitude track points into a local level frame — lalo2llf","text":"data frame columns northing easting track points local level frame. Northing easting metres. axes frame true (geographic) north true east.","code":""},{"path":"/reference/lalo2llf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert latitude-longitude track points into a local level frame — lalo2llf","text":"function assumes track surface geoid,  also uses simple spherical model geoid.  accurate conversion Cartesian frame, use spatial mapping packages Matlab/Octave.","code":""},{"path":"/reference/lalo2llf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert latitude-longitude track points into a local level frame — lalo2llf","text":"","code":"coordinates <- matrix(c( -122.4194, 37.7749, -73.9352,  40.7306), nrow = 2, ncol = 2, byrow = TRUE) lalo2llf(coordinates, c(15,19)) #>    northing easting #> 1 -15270044 2015179 #> 2  -9882479 2332425"},{"path":"/reference/load_nc.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a tag dataset from a netCDF file. — load_nc","title":"Load a tag dataset from a netCDF file. — load_nc","text":"function loads tag dataset netCDF file (archival file format supported tagtools package suitable submission online data archives).","code":""},{"path":"/reference/load_nc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a tag dataset from a netCDF file. — load_nc","text":"","code":"load_nc(file, which_vars = NULL)"},{"path":"/reference/load_nc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a tag dataset from a netCDF file. — load_nc","text":"file File name (path, necessary) netCDF file read, quoted character string. which_vars (Optional) list quoted character strings giving exact names variables read . Default read variables present file. parameters read .","code":""},{"path":"/reference/load_nc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a tag dataset from a netCDF file. — load_nc","text":"animaltag object (list) containing sensor metadata structures. item names X names variables NetCDF file (plus \"info\" one), e.g., file contains P, output object X fields X$, X$P X$info (file metadata).","code":""},{"path":"/reference/load_nc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a tag dataset from a netCDF file. — load_nc","text":"","code":"if (FALSE) { load_nc('testset1.nc') }"},{"path":"/reference/m2h.html","id":null,"dir":"Reference","previous_headings":"","what":"Heading from accelerometer and magnetometer data — m2h","title":"Heading from accelerometer and magnetometer data — m2h","text":"function used compute heading, field intensity, inclination angle gimballing magnetic field measurement matrix pitch roll estimated accelerometer matrix.","code":""},{"path":"/reference/m2h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heading from accelerometer and magnetometer data — m2h","text":"","code":"m2h(M, A, sampling_rate = NULL, fc = NULL)"},{"path":"/reference/m2h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heading from accelerometer and magnetometer data — m2h","text":"M sensor data structure matrix, M = [mx,,mz] consistent unit (e.g., uT Gauss) magnetometer sensor list (e.g., readtag.R). sensor data structure matrix columns [ax ay az] acceleration sensor list (e.g., readtag.R). Acceleration can consistent unit, e.g., g m/s^2. sampling_rate (optional) sampling rate sensor data Hz (samples per second). needed filtering required. M sensor data lists, sampling_rate obtained . fc (optional) cut-frequency low-pass filter apply M computing heading. filter cut-frequency Hertz. filter length 4*sampling_rate/fc. Filtering adds group delay. fc specified, filtering performed.","code":""},{"path":"/reference/m2h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heading from accelerometer and magnetometer data — m2h","text":"list 3 elements: h:  heading radians frame M. heading respect magnetic north (.e., north vector navigation frame) must corrected declination. v:  estimated magnetic field intensity units M. computed taking 2-norm M, filtering (filtering specified). incl:  estimated magnetic field inclination angle (.e., angle respect horizontal plane) radians. convention, field vector pointing horizon positive inclination angle. See note function using incl.","code":""},{"path":"/reference/m2h.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Heading from accelerometer and magnetometer data — m2h","text":"Output sampling rate input sampling rate (.e. h, v, incl estimated sampling rate M nx1 vectors). Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. North east magnetic, true. frames positive heading clockwise rotation around z-axis. heading computed respect frame M magnetic heading true heading. M must sampling rate, frame, number rows.","code":""},{"path":[]},{"path":"/reference/m2h.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heading from accelerometer and magnetometer data — m2h","text":"","code":"if (FALSE) m2h_out <- m2h(M = matrix(c(22, -24, 14), nrow = 1),                          A = matrix(c(-0.3, 0.52, 0.8), nrow = 1))"},{"path":"/reference/make_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an info structure with tag metadata — make_info","title":"Make an info structure with tag metadata — make_info","text":"function allows user generate \"skeleton\" info structure tag deployment, common pieces metadata filled . Additional information can added manually using custom script saving info part netCDF file.","code":""},{"path":"/reference/make_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an info structure with tag metadata — make_info","text":"","code":"make_info(depid, tagtype, species, owner)"},{"path":"/reference/make_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an info structure with tag metadata — make_info","text":"depid Deployment id string tag record tagtype String identifying tag type, example 'dtag', 'cats', 'mk10', ... species (optional) 2-letter string first letters species binomial owner (optional) String initials tag data owner","code":""},{"path":"/reference/make_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an info structure with tag metadata — make_info","text":"list containing metadata tag deployment. recommended name output \"info\" save part netCDF tag data archive file (along tag sensor data).","code":""},{"path":"/reference/make_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make an info structure with tag metadata — make_info","text":"","code":"if (FALSE) { info <- make_info(\"zc19_365a\", \"dtag\", \"zc\", \"sdr\") }"},{"path":"/reference/make_specgram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a spectrogram with default settings — make_specgram","title":"Plot a spectrogram with default settings — make_specgram","text":"wrapper function specgram draw spectrogram input argument names defaults tag tools Matlab/Octave function make_specgram.","code":""},{"path":"/reference/make_specgram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a spectrogram with default settings — make_specgram","text":"","code":"make_specgram(   x,   nfft = 256,   fs = 2,   window = signal::hanning(nfft),   noverlap = length(window)/2,   draw_plot = TRUE )"},{"path":"/reference/make_specgram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a spectrogram with default settings — make_specgram","text":"x input signal nfft specifies number frequency points used calculate discrete Fourier transforms. fs sampling frequency Hz window specify scalar window, make_specgram uses Hanning window length. window must length smaller equal nfft greater noverlap. noverlap number samples sections x overlap. draw_plot (logical) plot drawn? Defaults TRUE.","code":""},{"path":"/reference/make_specgram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a spectrogram with default settings — make_specgram","text":"draw_plot TRUE, plot produced. FALSE, list returned, follows. element matrix three matrices size. s,  matrix spectrogram values signal x dB. f,  Frequencies (Hz) corresponding rows s t,  Time indices corresponding columns s","code":""},{"path":"/reference/make_specgram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a spectrogram with default settings — make_specgram","text":"","code":"if (FALSE) { x <- signal::chirp(seq(from = 0, by = 0.001, to = 2),   f0 = 0,   t1 = 2,   f1 = 500 ) fs <- 2 nfft <- 256 numoverlap <- 128 window <- signal::hanning(nfft) make_specgram(x, nfft, fs, window, numoverlap) S <- make_specgram(x, nfft, fs, window, numoverlap, draw_plot = FALSE) }"},{"path":"/reference/mean_absorption.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the mean absorption in salt water — mean_absorption","title":"Calculate the mean absorption in salt water — mean_absorption","text":"function used calculate mean absorption salt water frequency range.","code":""},{"path":"/reference/mean_absorption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the mean absorption in salt water — mean_absorption","text":"","code":"mean_absorption(freq, r, depth, Ttab = NULL)"},{"path":"/reference/mean_absorption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the mean absorption in salt water — mean_absorption","text":"freq Specifies frequency range, freq = c(fmin, fmax) Hz. single frequency, use scalar value freq. r path (slant) length metres. depth depths covered path. can single value horizontal path two component vector .e., depth = c(dmax, dmin) path extends two depths. Ttab (optional) temperature (scalar) degrees C specifies temperature profile Ttab = c(depth, tempr) depth tempr equal-sized column vectors. Default value isothermal profile 13 degrees.","code":""},{"path":"/reference/mean_absorption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the mean absorption in salt water — mean_absorption","text":"mean sound absorption path dB.","code":""},{"path":"/reference/mean_absorption.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate the mean absorption in salt water — mean_absorption","text":"Kinsler Frey pp. 159-160.","code":""},{"path":"/reference/mean_absorption.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the mean absorption in salt water — mean_absorption","text":"","code":"mean_absorption(c(25e3, 60e3), 1000, c(0, 700)) #>          [,1] #> [1,] 7.728188"},{"path":"/reference/median_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the nth-order median filter — median_filter","title":"Computes the nth-order median filter — median_filter","text":"function computes nth-order median filter column X. filter output median consecutive group n samples. useful removing occasional outliers data otherwise fairly smooth. makes appropriate pressure, temperature magnetometer data (amongst sensors) suitable acceleration can highly dynamic. filter introduce delay. start end values, .e., within n samples start end input data, computed decreasing order median filters unless noend = TRUE. noend = TRUE, start end values taken directly X without short median filters.","code":""},{"path":"/reference/median_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the nth-order median filter — median_filter","text":"","code":"median_filter(X, n, noend = TRUE)"},{"path":"/reference/median_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the nth-order median filter — median_filter","text":"X sensor list vector matrix. multiple columns data, column treated separate signal filtered. n filter length. even n given, automatically incremented make odd. ensures median well-defined (median even length vector usually defined mean middle two points may differ different programmes). Note short n (e.g., 3 5) usually sufficient processing slow n large. noend TRUE (default), start end values taken directly X without short median filters.","code":""},{"path":"/reference/median_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the nth-order median filter — median_filter","text":"output filter. size S sampling rate units X. X sensor list, return also .","code":""},{"path":"/reference/median_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the nth-order median filter — median_filter","text":"","code":"v <- matrix(c(1, 3, 4, 4, 20, -10, 5, 6, 6, 7), ncol = 1) w <- median_filter(v, n = 3)"},{"path":"/reference/merge_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge the fields of two lists — merge_fields","title":"Merge the fields of two lists — merge_fields","text":"function used merge fields two lists. duplicate fields, fields s1 taken.","code":""},{"path":"/reference/merge_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge the fields of two lists — merge_fields","text":"","code":"merge_fields(s1, s2)"},{"path":"/reference/merge_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge the fields of two lists — merge_fields","text":"s1 Arbitrary list e.g., containing metadata settings. s2 Arbitrary list e.g., containing metadata settings.","code":""},{"path":"/reference/merge_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge the fields of two lists — merge_fields","text":"list containing fields s1 s2","code":""},{"path":"/reference/merge_fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge the fields of two lists — merge_fields","text":"","code":"s1 <- list(a = 1, b = c(2, 3, 4)) s2 <- list(b = 3, c = \"cat\") s <- merge_fields(s1, s2)"},{"path":"/reference/metadata_editor.html","id":null,"dir":"Reference","previous_headings":"","what":"Edits a html file from given csv. — metadata_editor","title":"Edits a html file from given csv. — metadata_editor","text":"Takes data csv, edits default given html fill data csv. HTML must tagmetadata.html variations, csv contain metadata tag.","code":""},{"path":"/reference/metadata_editor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edits a html file from given csv. — metadata_editor","text":"","code":"metadata_editor(   masterHTML = system.file(\"extdata\", \"tagmetadata.html\", package = \"tagtools\"),   csvfilename = system.file(\"extdata\", \"blank_template.csv\", package = \"tagtools\") )"},{"path":"/reference/metadata_editor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edits a html file from given csv. — metadata_editor","text":"masterHTML default masterHTML located package, can changed according user input. csvfilename file name csv used editing HTML","code":""},{"path":"/reference/metadata_editor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edits a html file from given csv. — metadata_editor","text":"\"dynamic tagmetadata.html\" masterHTML changes csv. file written current working directory, also opened editing user.","code":""},{"path":"/reference/msa.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute MSA — msa","title":"Compute MSA — msa","text":"function used compute Minimum Specific Acceleration (MSA). absolute value norm acceleration minus 1 g, .e., amount acceleration differs gravity value. always equal less actual specific acceleration correctly calibrated.","code":""},{"path":"/reference/msa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute MSA — msa","text":"","code":"msa(A, ref)"},{"path":"/reference/msa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute MSA — msa","text":"nx3 acceleration matrix columns [ax ay az], tag sensor data list containing acceleration data. Acceleration can consistent unit, e.g., g m/s^2. can frame MSA rotation independent. ref gravitational field strength units . needed sensor structure. matrix, default value 9.81 assumes m/s^2. Use ref = 1 unit g.","code":""},{"path":"/reference/msa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute MSA — msa","text":"column vector MSA number rows , tag sensor data list (output matches input). m units .","code":""},{"path":"/reference/msa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute MSA — msa","text":"Possible input combinations: msa() list, msa(,ref) matrix.","code":""},{"path":"/reference/msa.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute MSA — msa","text":"See Simon et al. (2012) Journal Experimental Biology, 215:3786-3798.","code":""},{"path":[]},{"path":"/reference/msa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute MSA — msa","text":"","code":"sampleMatrix <- matrix(c(1, -0.5, 0.1, 0.8, -0.2, 0.6, 0.5, -0.9, -0.7),   byrow = TRUE, nrow = 3, ncol = 3 ) msa(A = sampleMatrix, ref = 1) #> [1] 0.1224972 0.0198039 0.2449900"},{"path":"/reference/m_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Mahalanobis distance — m_dist","title":"Calculate Mahalanobis distance — m_dist","text":"function used calculate Mahalanobis distance multivariate time series.","code":""},{"path":"/reference/m_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Mahalanobis distance — m_dist","text":"","code":"m_dist(   data,   sampling_rate,   smoothDur,   overlap,   consec,   cumSum,   expStart,   expEnd,   baselineStart,   baselineEnd,   BL_COV )"},{"path":"/reference/m_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Mahalanobis distance — m_dist","text":"data data frame matrix one row time point. Note Mahalanobis distance calculation carried continuous data , data contain logical, factor character data, proceed risk...errors (least meaningless results) probably ensue. sampling_rate sampling rate Hz (data regularly sampled). specified assumed 1 Hz. smoothDur length, minutes, window use calculation \"comparison\" values. specified zero, smoothing (distance calculated data observation). overlap amount overlap, minutes, consecutive \"comparison\" windows. smooth_dur - overlap give time resolution  resulting distance time series. specified zero, overlap.  Overlap also set zero smoothDur unspecified zero. consec Logical. consec = TRUE, calculated distances consecutive windows duration smoothDur, sliding forward data set time step (smoothDur-overlap) minutes. TRUE, baselineStart baselineEnd inputs used define period used calculate data covariance matrix. Default consec = FALSE. cumSum Logical.  cum_sum = TRUE, output cumulative sum calculated distances, rather distances . Default cum_sum = FALSE. expStart Start times (seconds since start data set) experimental exposure period(s). expEnd End times (seconds since start data set) experimental exposure period(s). either exp_start exp_end missing, distance calculated whole dataset full dataset assumed baseline. baselineStart Start time (seconds since start data set) baseline period (mean data values period used 'control' \"comparison\" data points (windows) compared. specified, assumed 0 (start record). baselineEnd End time (seconds since start data set) baseline period. specified, entire data set used (baseline_end last sampled time-point data set). BL_COV Logical.  BL_COV=  TRUE, covariance matrix using data baseline period used calculating Mahalanobis distance. Default BL_COV = FALSE.","code":""},{"path":"/reference/m_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Mahalanobis distance — m_dist","text":"Data frame containing results: D$t times seconds since start dataset, Mahalanobis distances reported. smoothDur applied, reported times start times \"comparison\" window. D$dist Mahalanobis distances specified baseline period specified \"comparison\" periods.","code":""},{"path":"/reference/m_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Mahalanobis distance — m_dist","text":"","code":"if (FALSE)  BW <- beaked_whale m_dist_result <- m_dist(BW$A$data, BW$A$sampling_rate) #> Error in eval(expr, envir, enclos): object 'BW' not found"},{"path":"/reference/njerk.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the norm-jerk — njerk","title":"Compute the norm-jerk — njerk","text":"function used compute norm-jerk triaxial acceleration data.","code":""},{"path":"/reference/njerk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the norm-jerk — njerk","text":"","code":"njerk(A, sampling_rate)"},{"path":"/reference/njerk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the norm-jerk — njerk","text":"tag sensor data list nx3 acceleration matrix columns [ax ay az]. Acceleration can consistent unit, e.g., g m/s^2. can frame norm-jerk rotation independent. must least 2 rows (.e., n>=2). sampling_rate sampling rate Hz acceleration signals. used estimate differential first-order difference.","code":""},{"path":"/reference/njerk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the norm-jerk — njerk","text":"norm-jerk triaxial acceleration data form column vector number rows , tag sensor data structure (input one). norm-jerk ||dA/dt||, ||x|| 2-norm x, .e., square-root sum squares axis. unit m/s^2, norm-jerk unit m/s^3. unit g, norm-jerk unit g/s. j norm jerk, always positive zero (acceleration constant). final value j always 0 last finite difference calculated.","code":""},{"path":[]},{"path":"/reference/njerk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the norm-jerk — njerk","text":"","code":"if (FALSE) { sampleMatrix <- matrix(c(1, 2, 3, 2, 2, 4, 1, -2, 4, 4, 4, 4), byrow = TRUE, nrow = 4, ncol = 3) njerk(A = sampleMatrix, sampling_rate = 5) }"},{"path":"/reference/norm2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the row-wise vector norm — norm2","title":"Compute the row-wise vector norm — norm2","text":"function used compute row-wise vector norm X X matrix. X vector (row column), v vector norm.","code":""},{"path":"/reference/norm2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the row-wise vector norm — norm2","text":"","code":"norm2(X)"},{"path":"/reference/norm2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the row-wise vector norm — norm2","text":"X data structure, vector matrix.","code":""},{"path":"/reference/norm2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the row-wise vector norm — norm2","text":"row-wise vector-norm matrix X, .e., square-root sum squares row. X vector (row column), v vector norm norm2() equivalent built-function norm(). X matrix e.g., triaxial accelerometer magnetometer matrix, norm() gives overall norm matrix whereas norm2() gives vector norm row (.e., field strength case magnetometer matrix).","code":""},{"path":"/reference/norm2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the row-wise vector norm — norm2","text":"","code":"sampleMatrix <- matrix(c(0.2, 0.4, -0.7, -0.3, 1.1, 0.1), byrow = TRUE, nrow = 2, ncol = 3) norm2(X = sampleMatrix) #> [1] 0.8306624 1.1445523"},{"path":"/reference/ocdr.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the forward speed — ocdr","title":"Estimate the forward speed — ocdr","text":"function used estimate forward speed flying diving animal first computing altitude depth-rate (.e., first differential pressure meters) correcting pitch angle. called Orientation Corrected Depth Rate. two major assumptions method: () animal moves direction longitudinal axis, (ii) frame coincides animal's axes.","code":""},{"path":"/reference/ocdr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the forward speed — ocdr","text":"","code":"ocdr(p, A, sampling_rate, fc, plim)"},{"path":"/reference/ocdr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the forward speed — ocdr","text":"p depth altitude vector (regularly sampled time series) depth altitude sensors list meters, sampled sampling_rate Hz. nx3 acceleration matrix columns [ax ay az] acceleration sensor list (e.g., readtag.R). Acceleration can consistent unit, e.g., g m/s^2. must number rows p. sampling_rate sampling rate p Hz (samples per second). fc (optional) Specifies cut-frequency low-pass filter apply p computing depth-rate computing pitch. filter cut-frequency Hz. filter length 4*sampling_rate/fc. Filtering adds group delay. fc empty given, default value 0.2 Hz (.e., 5 second time constant) used. plim (optional) Specifies minimum pitch angle radians speed can computed. Errors speed estimation using method increase strongly low pitch angles. avoid estimates poor accuracy used later analyses, speed estimates low pitch angles replaced NaN (--number). default threshold 20 degrees.","code":""},{"path":"/reference/ocdr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the forward speed — ocdr","text":"forward speed estimate m/s","code":""},{"path":"/reference/ocdr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate the forward speed — ocdr","text":"Possible input combinations: ocdr(p,) p lists, ocdr(p,,fc = fc) p lists, ocdr(p,,fc = fc,plim = plim) p lists, ocdr(p,,sampling_rate) p vectors/matrices, ocdr(p,,sampling_rate,fc) p vectors/matrices, ocdr(p,,sampling_rate,fc,plim) p vectors/matrices.","code":""},{"path":"/reference/ocdr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate the forward speed — ocdr","text":"Output sampling rate input sampling rate s size p. Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. frames, positive pitch angle anti-clockwise rotation around y-axis. descending animal negative pitch angle.","code":""},{"path":"/reference/ocdr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the forward speed — ocdr","text":"","code":"if (FALSE) { HS <- harbor_seal s <- ocdr(p = HS$P$data, A = HS$A$data, sampling_rate = HS$P$sampling_rate, fc = NULL, plim = NULL) speed <- list(s = s) plott(speed, HS$P$sampling_rate) }"},{"path":"/reference/odba.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute ODBA — odba","title":"Compute ODBA — odba","text":"function used compute 'Overall Dynamic Body Acceleration' sensu Wilson et al. 2006. ODBA norm high-pass-filtered acceleration. Several methods computing ODBA use differ norm filter used.  Wilson paper, 1-norm rectangular window (moving average) filter used. moving average subtracted input accelerations implement high-pass filter.  2-norm may preferable tag orientation unknown may change termed VeDBA. tapered symmetric FIR  filter gives efficient high-pass filtering compared rectangular window method avoids lobes response.","code":""},{"path":"/reference/odba.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute ODBA — odba","text":"","code":"odba(A, sampling_rate = NULL, fh = NULL, method = \"fir\", n = NULL)"},{"path":"/reference/odba.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute ODBA — odba","text":"tag sensor data list containing tri-axial acceleration data nx3 acceleration matrix columns [ax ay az]. Acceleration can consistent unit, e.g., g m/s^2. can frame result depends method used compute ODBA.  default method VeDBA method rotation independent give result irrespective frame . 1-norm method complex dependency frame. sampling_rate sampling rate Hz acceleration signals. Required 'fir' method tag sensor data list. fh high-pass filter cut-frequency Hz. chosen half stroking rate animal (e.g., using dsf.R). Required default 'fir' method. method character containing either 'wilson' 'vedba' 'fir'. determines ethod ODBA calculated. default method 'fir'. n rectangular window (moving average) length samples. needed using classic ODBA VeDBA forms (methods 'wilson' 'vedba').","code":""},{"path":"/reference/odba.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute ODBA — odba","text":"column vector ODBA number rows . e units .","code":""},{"path":"/reference/odba.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute ODBA — odba","text":"applying default (FIR filtering) method calculate odba, use inputs , sampling_rate, fh. applying 'vedba' 'wilson' method, use inputs , n, method.","code":""},{"path":"/reference/odba.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute ODBA — odba","text":"","code":"if (FALSE) { BW <- beaked_whale e <- odba(A = BW$A$data, sampling_rate = BW$A$sampling_rate, fh = 4) ba <- list(e = e) plott(ba, BW$A$sampling_rate) }"},{"path":"/reference/plott.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot tag data time series — plott","title":"Plot tag data time series — plott","text":"Plot time series single multi-paneled figure. useful, example, comparing measurements across different sensors animaltag data object. time axis automatically displayed seconds, minutes, hours, days according span data.","code":""},{"path":"/reference/plott.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot tag data time series — plott","text":"","code":"plott(   X,   fsx = NULL,   r = FALSE,   offset = 0,   date_time_axis = FALSE,   recording_start = NULL,   panel_heights = rep.int(1, length(X)),   panel_labels = names(X),   line_colors,   interactive = FALSE,   par_opts,   ... )"},{"path":"/reference/plott.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot tag data time series — plott","text":"X List whose elements either lists (containing data metadata) vectors/matrices time series data. See details. fsx (Optional) numeric vector whose length matches number sensor data streams (list elements) X. (shorter, fsx recycled appropriate length). fsx gives sampling rate Hz data object. Sampling rates needed data object(s) X list(s) contain sampling rate information -- beware, fsx (given) override sensor metadata. r (Optional) Logical. direction y-axis flipped? Default FALSE. r length one (shorter number sensor data streams X) recycled match number sensor data streams. Reversed y-axes useful, example, plotting dive profiles match physical situation (greater depths lower display). name sensor list \"P\" contains word \"depth\", automatically reversed. offset (Optional) vector offsets, seconds, start sensor data stream start first one. example, acceleration data collection started depth data collection commenced 436 seconds later, offset depth data 436. date_time_axis (Optional) Logical. x-axis units date-times rather time-since-start--recording?  Ignored recording_start provided X contain metadata recording start time. Default FALSE. recording_start (Optional) start time tag recording POSIXct object. provided, time axis show calendar date/times; , show days/hours/minutes/seconds (appropriate) since time 0 = start recording. character string provided coerced POSIXct .POSIXct. panel_heights (Optional) vector relative absolute heights different panels (one entry sensor data stream X). Default equal-height panels. panel_heights numeric vector, interpreted relative panel heights. specify absolute panel heights centimeters using lcm (see help layout). panel_labels (Optional) list y-axis labels panels. Defaults names(X). line_colors (Optional) list colors lines multivariate data streams (example, panel plots tri-axial acceleration, three lines -- line colors first three list). May specified specification R understands colors. Defaults c(\"#000000\", \"#009E73\", \"#9ad0f3\", \"#0072B2\", \"#e79f00\", \"#D55E00\") interactive (Optional) interactive figure (allowing zoom/pan/etc.) produced? Default FALSE. Interactive plotting requires zoom package zm function. par_opts (Optional) list options passed par plotting. Default mar=c(1,5,0,0), oma=c(2,0,2,1), las=1, lwd=1, cex=0.8. ... Additional arguments passed plot.","code":""},{"path":"/reference/plott.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot tag data time series — plott","text":"plot time-series data","code":""},{"path":"/reference/plott.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot tag data time series — plott","text":"input data X animaltag object, sensor variables object plotted. plot selected sensors animaltag object my_tag, example, input X=list(my_tag$, my_tag$M) plot just accelerometer magnetometer data. possible, plot ","code":""},{"path":"/reference/plott.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot tag data time series — plott","text":"flexible plotting tool can used display explore sensor data different sampling rates uniform time grid.","code":""},{"path":"/reference/plott.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot tag data time series — plott","text":"","code":"if (FALSE) { HS <- harbor_seal list <- list(depth = HS$P$data, A = HS$A$data) plott(list, HS$P$sampling_rate, r = c(TRUE, FALSE)) }"},{"path":"/reference/prh_predictor1.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor1","title":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor1","text":"Predict tag position diving animal parameterized p0, r0, h0, canonical angles principal axes tag animal. tag orientation animal can change time function provides way estimate orientation start end suitable dive. function critically assumes animal rests horizontally surface (least average) dives steeply away surface without initial roll. ascents processed, must also roll last seconds ascents. See prh_predictor2 method suitable animals make short dives respirations. function provides graphical interface showing estimated tag--animal orientation throughout deployment. Follow directions top panel figure edit delete orientation estimate.","code":""},{"path":"/reference/prh_predictor1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor1","text":"","code":"prh_predictor1(P, A, sampling_rate = NULL, TH = 100, DIR = \"descent\")"},{"path":"/reference/prh_predictor1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor1","text":"P dive depth vector sensor structure units m H2O. acceleration matrix sensor structure columns ax, ay, az. Acceleration can consistent unit, e.g., g m/s^2, must sampling rate P. sampling_rate sampling rate sensor data Hz (samples per second). needed neither M sensor structures. TH optional minimum dive depth threshold (default 100m). descents start dives deeper TH analysed (ascents end dives deeper TH true). DIR optional dive direction constraint. default (DIR = 'descent') analyse descents tend give better results. DIR = '', descents ascents analysed.","code":""},{"path":"/reference/prh_predictor1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor1","text":"PRH, data frame columns cue  p0, r0, h0, q row dive edge analysed. cue time second-since-tag-start dive edge analysed. p0, r0, h0 deduced tag orientation angles radians. q quality indicator low value (near 0, e.g., <0.05) indicating data fit consistently assumptions method.","code":""},{"path":[]},{"path":"/reference/prh_predictor2.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor2","title":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor2","text":"Predict tag position diving animal parametrized p0, r0, h0, canonical angles principal axes tag animal. tag orientation animal can change time function provides way estimate orientation start end suitable dive. function critically assumes animal makes sequence short dives respirations animal remains upright (.e., roll) shallow dives. See prh_predictor1 method suitable animals rest horizontally surface. function provides graphical interface showing estimated tag--animal orientation throughout deployment. Follow directions top panel figure edit delete orientation estimate. function provides graphical interface showing estimated tag--animal orientation throughout deployment. Follow directions top panel figure edit delete orientation estimate.","code":""},{"path":"/reference/prh_predictor2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor2","text":"","code":"prh_predictor2(P, A, sampling_rate = NULL, MAXD = 10)"},{"path":"/reference/prh_predictor2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor2","text":"P dive depth vector sensor structure units m H2O. acceleration matrix sensor structure columns ax, ay, az. Acceleration can consistent unit, e.g., g m/s^2, must sampling rate P. sampling_rate sampling rate sensor data Hz (samples per second). needed neither M sensor structures. MAXD optional maximum depth near-surface dives. default value 10 m. used find contiguous surface intervals suitable analysis.","code":""},{"path":"/reference/prh_predictor2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict the tag position on a diving animal from depth and acceleration data — prh_predictor2","text":"PRH, data frame columns cue  p0, r0, h0, q row dive edge analysed. cue time second-since-tag-start dive edge analysed. p0, r0, h0 deduced tag orientation angles radians. q quality indicator low value (near 0, e.g., <0.05) indicating data fit consistently assumptions method.","code":""},{"path":[]},{"path":"/reference/ptrack.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate simple dead-reckoned track — ptrack","title":"Estimate simple dead-reckoned track — ptrack","text":"function used estimate simple dead-reckoned track (pseudo-track) based speed bodypointing angle.","code":""},{"path":"/reference/ptrack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate simple dead-reckoned track — ptrack","text":"","code":"ptrack(A, M, s, sampling_rate = NULL, fc = 0.2, return_pe = FALSE)"},{"path":"/reference/ptrack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate simple dead-reckoned track — ptrack","text":"nx3 acceleration matrix columns [ax ay az] acceleration sensor list. Acceleration can consistent unit, e.g., g m/s^2. M magnetometer signal matrix, M = [mx,,mz] consistent unit (e.g., uT Gauss)  magnetometer sensor list. M must size (measured sampling rate). s forward speed animal m/s. s can single number meaning animal assumed travel constant speed. s can also vector number rows M, e.g., generated speed_from_depth(). sampling_rate sampling rate sensor data Hz (samples per second). input ignored /M sensor lists, case sampling rate extracted . fc (optional) cut-frequency low-pass filter apply M computing bodypointing angle. filter cut-frequency Hz. filter length 4*sampling_rate/fc. Filtering adds group delay. fc empty given, default value 0.2 Hz (.e., 5 second time constant) used. return_pe Logical. return_pe TRUE, estimated depth altitude predicted returned estimated track. Default FALSE.","code":""},{"path":"/reference/ptrack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate simple dead-reckoned track — ptrack","text":"estimated track local level frame. track defined meters northward eastward movement (variables 'northing' 'easting' output data frame) relative animal's position start measurements  (defined [0,0]). track sampling rate input data row T defines track coordinates times 0,1/sampling_rate,2/sampling_rate,... relative start time measurements. , return_pe = TRUE, function returns value estimated depth altitude predicted speed pitch angle. can compared measured depth/altitude assess errors dead-reckoned track. Note even pe matches observed depth, guarantee track accurate.","code":""},{"path":"/reference/ptrack.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate simple dead-reckoned track — ptrack","text":"Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. M must rotated needed match animal's cardinal axes otherwise track meaningful. CAUTION: dead-reckoned tracks usually inaccurate. useful get idea animals move rather go. animals probably travel exactly direction longitudinal axis anyway measuring precise orientation longitudinal axis non-rigid animal fraught error. Moreover, net flow medium, animal affected flow addition autonomous movement. swimming animals can lead substantial errors. forward speed assumed respect medium track derived 'track-made-good', .e., geographic movement animal. estimates movement animal respect medium. numerous sources error use risk!","code":""},{"path":[]},{"path":"/reference/ptrack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate simple dead-reckoned track — ptrack","text":"","code":"if (FALSE) { BW <- beaked_whale list <- ptrack(A = BW$A$data, M = BW$M$data, s = 3,  sampling_rate = BW$A$sampling_rate, fc = NULL,  return_pe = TRUE) plot(list$T$easting, list$T$northing, xlab = \"Easting, m\", ylab = \"Northing, m\") }"},{"path":"/reference/read_cats.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a CATS data file and convert to .nc — read_cats","title":"Read a CATS data file and convert to .nc — read_cats","text":"Read .csv file data CATS tag deployment, including associated metadata, store resulting data .nc file.","code":""},{"path":"/reference/read_cats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a CATS data file and convert to .nc — read_cats","text":"","code":"read_cats(fname, depid)"},{"path":"/reference/read_cats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a CATS data file and convert to .nc — read_cats","text":"fname file name CATS CSV file including complete path name file current working directory directory path. .csv suffix optional. depid string containing deployment identification code assigned deployment, example, 'mn12_186a'.","code":""},{"path":"/reference/read_cats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a CATS data file and convert to .nc — read_cats","text":"string (constructed : 'depid_raw.nc'; example, 'mn12_186a_raw.nc') containing file name netCDF (.nc) file output saved. function generates netCDF file current working directory containing \t\ttag data variables, including:  , Accelerometer data structure M, Magnetometer data structure T, Temperature sensor data structure info\tInformation structure deployment","code":""},{"path":"/reference/read_cats.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Read a CATS data file and convert to .nc — read_cats","text":"CATS loggers can produce large csv files slow process. function (somewhat) optimised speed memory use tolerate large files. processing slow.","code":""},{"path":"/reference/read_cats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a CATS data file and convert to .nc — read_cats","text":"","code":"if (FALSE) { nc_filename <- read_cats(\"my_cats_file.csv\", \"my_cats_deplyment_name\") load_nc(\"my_cats_deployment_name_raw.nc\") }"},{"path":"/reference/read_cats_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a CSV file with sensor data from a CATS tag — read_cats_csv","title":"Read a CSV file with sensor data from a CATS tag — read_cats_csv","text":"Read data CATS tag deployment (stored .csv file). function usable normally called read_cats handles metadata creates NetCDF file.","code":""},{"path":"/reference/read_cats_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a CSV file with sensor data from a CATS tag — read_cats_csv","text":"","code":"read_cats_csv(fname, max_samps = Inf, skip_samps = 0)"},{"path":"/reference/read_cats_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a CSV file with sensor data from a CATS tag — read_cats_csv","text":"fname file name CATS CSV file including complete path name file current working directory directory path. .csv suffix optional. max_samps optional used limit reading maximum number samples (rows) per sensor. useful read part large file testing. max_samps given, entire file read. skip_samps Number lines data skip (excluding header) starting read data. Defaults 0 (start beginning file), can used read part file, read process large file chunks.","code":""},{"path":"/reference/read_cats_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a CSV file with sensor data from a CATS tag — read_cats_csv","text":"tibble data frame containing data read file. column names taken first line CSV file include units axis. columns may empty (example, tag record data certain sensor type).","code":""},{"path":"/reference/read_cats_csv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Read a CSV file with sensor data from a CATS tag — read_cats_csv","text":"CATS csv files can extremely large; perhaps large read entire file memory work .","code":""},{"path":"/reference/read_cats_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a CSV file with sensor data from a CATS tag — read_cats_csv","text":"","code":"if (FALSE) { V <- read_cats_csv(\"cats_test_sample\") }"},{"path":"/reference/rotate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate data. — rotate_data","title":"Rotate data. — rotate_data","text":"Rotate numeric vector (rotation_test, set event times).  \"Rotating\" vector entails advancing values random increment, subtracting maximum expected value rotated entries exceed maximum. utility function used rotation_test, advanced users may wish use directly carry non-standard rotation tests.","code":""},{"path":"/reference/rotate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate data. — rotate_data","text":"","code":"rotate_data(event_times, full_period)"},{"path":"/reference/rotate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate data. — rotate_data","text":"event_times vector times events. Times can given format. event_times sorted prior analysis (example, times given hours day times dataset span several days), sure specify skip_sort=TRUE. full_period length two vector giving start end times full period events event_times might occurred. missing, default range(event_times).","code":""},{"path":"/reference/rotate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate data. — rotate_data","text":"vector numeric values length event_times generated rotating event times random amount","code":""},{"path":"/reference/rotate_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rotate data. — rotate_data","text":"rotation test applied Miller et al. 2004 detailed DeRuiter Solow 2008. test variation standard randomization permutation tests appropriate time-series non-independent events (example, time series behavioral events tend occur clusters). implementation rotation test compares test statistic (summary \"experimental\" time-period) expected value non-experimental periods. Instead resampling random subsets observations original dataset, rotation test samples many contiguous blocks original data, duration experimental period. summary statistic, computed \"rotated\" samples, provides distribution test statistic data can compared.","code":""},{"path":"/reference/rotate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate data. — rotate_data","text":"","code":"my_events <- 1500 * stats::runif(10) # 10 events at \"times\" between 0 and 1500 my_events #>  [1]  700.3796  824.1559  351.9395 1296.1793 1180.5162  247.9480 1316.5622 #>  [8]  517.7959  171.6060  778.6419 rotated_events <- rotate_data(my_events, full_period = c(0, 1500)) rotated_events #>  [1]    0.627441   76.969379  180.960917  346.817350  529.400970  607.663324 #>  [7]  653.177272 1009.537610 1125.200683 1145.583601"},{"path":"/reference/rotate_vecs.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate triaxial vector measurements — rotate_vecs","title":"Rotate triaxial vector measurements — rotate_vecs","text":"function used rotate triaxial vector measurements one frame another.","code":""},{"path":"/reference/rotate_vecs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate triaxial vector measurements — rotate_vecs","text":"","code":"rotate_vecs(V, Q)"},{"path":"/reference/rotate_vecs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate triaxial vector measurements — rotate_vecs","text":"V tag data structure, 3-element vector 3-column matrix vector measurements example V accelerometer magnetometer. Q rotation matrix. Q single 3x3 matrix, rotation applied vectors V. Q 3x3xn matrix n number rows V, different transformation given Q[,, k] applied row V.","code":""},{"path":"/reference/rotate_vecs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate triaxial vector measurements — rotate_vecs","text":"rotated vector matrix size input V.","code":""},{"path":"/reference/rotate_vecs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rotate triaxial vector measurements — rotate_vecs","text":"Frame: function makes assumptions frame.","code":""},{"path":"/reference/rotate_vecs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate triaxial vector measurements — rotate_vecs","text":"","code":"if (FALSE) { x <- (pi / 180) * matrix(c(25, -60, 33), ncol = 3) Q <- euler2rotmat(x[, 1], x[, 2], x[, 3]) V <- rotate_vecs(c(0.77, -0.6, -0.22), Q) }"},{"path":"/reference/rotation_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Carry out a rotation randomization test. — rotation_test","title":"Carry out a rotation randomization test. — rotation_test","text":"Carry rotation test (applied Miller et al. 2004 detailed DeRuiter Solow 2008). test variation standard randomization permutation tests appropriate time-series non-independent events (example, time series behavioral events tend occur clusters).","code":""},{"path":"/reference/rotation_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Carry out a rotation randomization test. — rotation_test","text":"","code":"rotation_test(   event_times,   exp_period,   full_period = range(event_times, na.rm = TRUE),   n_rot = 10000,   ts_fun = length,   skip_sort = FALSE,   conf_level = 0.95,   return_rot_stats = FALSE,   ... )"},{"path":"/reference/rotation_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Carry out a rotation randomization test. — rotation_test","text":"event_times vector times events. Times can given format. event_times sorted prior analysis (example, times given hours day times dataset span several days), sure specify skip_sort=TRUE. exp_period two-column vector, matrix, data frame specifying start end times \"experimental\" period test. matrix data frame provided, one column start time(s) end time(s).  Note data falls experimental period concatenated passed ts_fun. finer control desired, consider writing test using underlying function rotate_data. full_period length two vector giving start end times full period events event_times might occurred. missing, default range(event_times). n_rot Number rotations (randomizations) carry . Default n_rot=10000. ts_fun function compute test statistic. Input provided function times events occur \"experimental\" period.  default function length - words, default test statistis number events happen experimental period. skip_sort Logical. times sorted ascending order? Default skip_sort=FALSE. conf_level Confidence level used bootstrap CI calculation, specified proportion. (default conf_level=0.95, 95% confidence.) return_rot_stats Logical. output include test statistics computed rotation data? Default return_rot_stats=FALSE. ... Additional inputs passed ts_fun","code":""},{"path":"/reference/rotation_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Carry out a rotation randomization test. — rotation_test","text":"list containing following components: result, one-row data frame rows: statistic: Test statistic (original data) p_value: P-value test (2-sided) n_rot: Number rotations CI_low: Lower bound rotation-resampling percentile-based confidence interval CI_up: Upper bound rotation-resampling percentile-based confidence interval conf_level: Confidence level, proportion rot_stats (return_rot_stats TRUE), vector n_rot statistics rotated datasets","code":""},{"path":"/reference/rotation_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Carry out a rotation randomization test. — rotation_test","text":"implementation rotation test compares test statistic (summary \"experimental\" time-period) expected value non-experimental periods. Instead resampling random subsets observations original dataset, rotation test samples many contiguous blocks original data, duration experimental period. summary statistic, computed \"rotated\" samples, provides distribution test statistic data can compared.","code":""},{"path":"/reference/rotation_test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Carry out a rotation randomization test. — rotation_test","text":"Miller, P. J. O., Shapiro, . D., Tyack, P. L. Solow, . R. (2004). Call-type matching vocal exchanges free-ranging resident killer whales, Orcinus orca. Anim. Behav. 67, 1099–1107. DeRuiter, S. L. Solow, . R. (2008). rotation test behavioural point-process data. Anim. Behav. 76, 1103–1452.","code":""},{"path":[]},{"path":"/reference/rotation_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Carry out a rotation randomization test. — rotation_test","text":"","code":"r <- rotation_test(   event_times =     2000 * runif(500),   exp_period = c(100, 200),   return_rot_stats = TRUE, ts_fun = mean )"},{"path":"/reference/rotmat2euler.html","id":null,"dir":"Reference","previous_headings":"","what":"Decompose a rotation (or direction cosine) matrix — rotmat2euler","title":"Decompose a rotation (or direction cosine) matrix — rotmat2euler","text":"function used decompose rotation (direction cosine) matrix Euler angles, pitch, roll, heading.","code":""},{"path":"/reference/rotmat2euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decompose a rotation (or direction cosine) matrix — rotmat2euler","text":"","code":"rotmat2euler(Q)"},{"path":"/reference/rotmat2euler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decompose a rotation (or direction cosine) matrix — rotmat2euler","text":"Q 3x3 rotation matrix.","code":""},{"path":"/reference/rotmat2euler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decompose a rotation (or direction cosine) matrix — rotmat2euler","text":"1x3 vector containing: prh=[p,r,h] p pitch angle radians, r roll angle radians, h heading yaw angle radians.","code":""},{"path":"/reference/rotmat2euler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decompose a rotation (or direction cosine) matrix — rotmat2euler","text":"","code":"set <- matrix(c(0.6765458, 0.7227523, 0.1411200, 0.3675912, -0.4975063, 0.7857252, 0.6380928, -0.4797047, -0.6022632), nrow = 3, ncol = 3) rotmat2euler(set) #> [1] 0.1415926 2.2247779 0.8184074"},{"path":"/reference/rough_cal_3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate scale factors and offsets — rough_cal_3d","title":"Estimate scale factors and offsets — rough_cal_3d","text":"function used estimate scale factors offsets measurements triaxial field sensor. function estimates scale factor needed make magnitude X close expected field strength. calls fix_offset_3d correct offset errors X. function try optimize results. See spherical_cal powerful data-driven calibration method.","code":""},{"path":"/reference/rough_cal_3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate scale factors and offsets — rough_cal_3d","text":"","code":"rough_cal_3d(X, fstr)"},{"path":"/reference/rough_cal_3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate scale factors and offsets — rough_cal_3d","text":"X sensor structure matrix containing measurements triaxial field sensor accelerometer magnetometer. X can units frame. fstr expected field strength measurement location units X","code":""},{"path":"/reference/rough_cal_3d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate scale factors and offsets — rough_cal_3d","text":"list 2 elements: X:  sensor structure matrix containing adjusted triaxial sensor measurements. size sampling rate units input data. input sensor structure, output also. G:  calibration structure containing one field: G.poly. first column G.poly three scale factors applied columns X. second column G.poly offset added column X scaling.","code":""},{"path":"/reference/rough_cal_3d.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate scale factors and offsets — rough_cal_3d","text":"function requires lot data looking extreme values axis. minimum data size 1000 samples used. function usable field sensors. work gyroscope data.","code":""},{"path":"/reference/rough_cal_3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate scale factors and offsets — rough_cal_3d","text":"","code":"if (FALSE) { BW <- beaked_whale plot(x = c(1:length(BW$M$data)), y = BW$M$data) # see what the data looks like first rcal <- rough_cal_3d(BW$M$data, fstr = 38.2) cal <- list(x = c(1:length(rcal$X)), y = rcal$X) plot(cal) }"},{"path":"/reference/save_nc.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a tag dataset to a netCDF file. — save_nc","title":"Save a tag dataset to a netCDF file. — save_nc","text":"function saves tag dataset netCDF file (archival file format supported tagtools package suitable submission online data archives).","code":""},{"path":"/reference/save_nc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a tag dataset to a netCDF file. — save_nc","text":"","code":"save_nc(file, X, ...)"},{"path":"/reference/save_nc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a tag dataset to a netCDF file. — save_nc","text":"file name data metadata file written. file include .nc suffix, added automatically. X animaltag object, list tag sensor /metadata lists. Alternatively, sensor metadata lists may input multiple separate unnamed inputs. kind variables can saved NetCDF file supporting information structures needed describe contents file. non-archive non-portable storage variables, consider using save various functions write data text files. ... Additional sensor metadata lists, user bundled list already providing individual structures.","code":""},{"path":"/reference/save_nc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save a tag dataset to a netCDF file. — save_nc","text":"Warning: overwrite previous NetCDF file name. file assumed current working directory unless file includes file path information.","code":""},{"path":"/reference/save_nc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a tag dataset to a netCDF file. — save_nc","text":"","code":"if (FALSE) { save_nc(\"dog17_124a\", A, M, P, info) save_nc(\"dog17_124a\", X = list(A, M, P, info)) }"},{"path":"/reference/sens_struct.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a sensor structure from a sensor data vector or matrix. — sens_struct","title":"Generate a sensor structure from a sensor data vector or matrix. — sens_struct","text":"Generate sensor structure sensor data vector matrix.","code":""},{"path":"/reference/sens_struct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a sensor structure from a sensor data vector or matrix. — sens_struct","text":"","code":"sens_struct(   data,   sampling_rate = NULL,   T = NULL,   depid,   type,   unit = NULL,   frame = NULL,   name = NULL,   start_offset = 0,   start_offset_units = \"second\" )"},{"path":"/reference/sens_struct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a sensor structure from a sensor data vector or matrix. — sens_struct","text":"data sensor data vector matrix sampling_rate (optional) sensor data sampling rate Hz T (optional) time seconds measurement data irregularly sampled data. time reference (.e., 0 time) respect start time deployment. depid string provides unique identifier tag deployment type string containing first letters sensor type, e.g., acc acceleration. matched list sensor names sensor_names.csv file. one sensor matches type, warning given. type can upper lower case. unit (optional) units data sampled. Default determined matching type defaults sensor_names.csv frame (optional) frame reference data axes, example 'animal' 'tag'. Default determined matching type defaults sensor_names.csv. name (optional) \"full name\" assign variable. Default determined matching type defaults sensor_names.csv/ start_offset (optional) offset start time sensor relative start tag recording. Defaults 0. start_offset_units (optional) units start_offset. default 'second'.","code":""},{"path":"/reference/sens_struct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a sensor structure from a sensor data vector or matrix. — sens_struct","text":"sensor list field data containing data metadata fields pre-populated sensor_names.csv file. Change manually needed (specify relevant inputs sens_struct) correct values.","code":""},{"path":"/reference/sens_struct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a sensor structure from a sensor data vector or matrix. — sens_struct","text":"","code":"if (FALSE) { A <- sens_struct(data=Aw,sampling_rate=fs,depid='md13_134a', type='acc') }"},{"path":"/reference/smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Low pass filter a time series — smooth","title":"Low pass filter a time series — smooth","text":"function used low pass filter (smooth) regularly-sampled time series.","code":""},{"path":"/reference/smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low pass filter a time series — smooth","text":"","code":"smooth(x, n)"},{"path":"/reference/smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low pass filter a time series — smooth","text":"x signal filtered. can multi-channel signal column, e.g., acceleration matrix. number samples (.e., number rows x) must larger filter length, n. n smoothing parameter - use larger number smooth . n must greater 1. Signal components 1/n Nyquist frequency filtered .","code":""},{"path":"/reference/smooth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low pass filter a time series — smooth","text":"input signal first fifth harmonic. Applying low-pass filter removes fifth harmonic output appears sinewave except first samples affected filter startup transient. Smooth uses fir_nodelay perform filtering introduces delay.","code":""},{"path":"/reference/smooth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Low pass filter a time series — smooth","text":"","code":"if (FALSE) { y1 <- sin((2 * pi * 0.05) %*% t(c(1:100))) + cos((2 * pi * 0.25) %*% t(c(1:100))) plot(x = c(1:length(y1)), y = y1) y2 <- smooth(x, n = 4) plot(x = c(1:length(y2)), y = y2) }"},{"path":"/reference/sound_speed.html","id":null,"dir":"Reference","previous_headings":"","what":"Sound speed estimation — sound_speed","title":"Sound speed estimation — sound_speed","text":"function used estimate sound speed using Coppens equation","code":""},{"path":"/reference/sound_speed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sound speed estimation — sound_speed","text":"","code":"sound_speed(T, D = NULL, S = NULL)"},{"path":"/reference/sound_speed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sound speed estimation — sound_speed","text":"T temperature degrees C D (optional) depth meters (defaults 1 m) S salinity part-per-thousand (defaults 35 ppt)","code":""},{"path":"/reference/sound_speed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sound speed estimation — sound_speed","text":"sound speed m/s","code":""},{"path":"/reference/sound_speed.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sound speed estimation — sound_speed","text":"Range validity: temperature 0 35 °C, salinity 0 45 parts per thousand, depth 0 4000 m Source: http://resource.npl.co.uk/acoustics/techguides/soundseawater/content.html#UNESCO","code":""},{"path":"/reference/sound_speed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sound speed estimation — sound_speed","text":"","code":"sound_speed(8, 1000, 34) #> [1] 1497.708"},{"path":"/reference/spectrum_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the spectrum level of a signal x. — spectrum_level","title":"Compute the spectrum level of a signal x. — spectrum_level","text":"function used compute spectrum level signal x.","code":""},{"path":"/reference/spectrum_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the spectrum level of a signal x. — spectrum_level","text":"","code":"spectrum_level(x, nfft, sampling_rate, w, nov)"},{"path":"/reference/spectrum_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the spectrum level of a signal x. — spectrum_level","text":"x vector containing signal processed. signals multiple channels, channel column x. nfft length fft use. Choose power two fastest operation. Default value 512. sampling_rate sampling rate x Hz. Default value 1. sampling_rate vector frequencies SL calculated. w window length. default value nfft. w<nfft, segment w samples zero-padded nfft. nov number samples overlap segment. default value half window length.","code":""},{"path":"/reference/spectrum_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the spectrum level of a signal x. — spectrum_level","text":"list 2 elements: SL: spectrum level frequency dB RMS re root-Hz. spectrum single-sided extends sampling_rate/2. reference level 1.0 (.e., white noise unit variance spectrum level 3-10*log10(sampling_rate). 3dB negative positive spectra added together total power signal total power spectrum. f:  vector frequencies SL calculated.","code":""},{"path":"/reference/spectrum_level.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute the spectrum level of a signal x. — spectrum_level","text":"spectrum single-sided extends sampling_rate/2. reference level 1.0 (.e., white noise unit variance spectrum level 3-10*log10(sampling_rate). 3dB negative positive spectra added together total power signal total power spectrum.","code":""},{"path":"/reference/spectrum_level.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the spectrum level of a signal x. — spectrum_level","text":"","code":"if (FALSE) { BW <- beaked_whale list <- spectrum_level(x = BW$P$data, nfft = 4, sampling_rate = BW$P$sampling_rate) }"},{"path":"/reference/speed_from_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the forward speed of a diving animal — speed_from_depth","title":"Estimate the forward speed of a diving animal — speed_from_depth","text":"function used estimate forward speed diving animal first computing depth-rate (.e., first differential depth) correcting pitch angle.","code":""},{"path":"/reference/speed_from_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the forward speed of a diving animal — speed_from_depth","text":"","code":"speed_from_depth(   p,   A = NULL,   fs_p = NULL,   fs_A = NULL,   fc = 0.2,   plim = 20/180 * pi )"},{"path":"/reference/speed_from_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the forward speed of a diving animal — speed_from_depth","text":"p depth vector (regularly sampled time series) meters. sampled sampling_rate Hz. can either animaltags sensor list, vector. (optional) matrix animaltags sensor data list containing acceleration data. provided vertical velocity returned (output depth_rate()). Acceleration can consistent unit, e.g., g m/s^2. Acceleration data must number rows p. fs_p (optional) sampling rate p Hz (samples per second). Required p vector rather sensor data list. fs_A (optional) sampling rate Hz (samples per second). Required vector rather sensor data list. fc (optional) Specifies cut-frequency low-pass filter apply p computing depth-rate computing pitch. filter cut-frequency Hz. filter length 4*sampling_rate/fc. Filtering adds group delay. fc empty given, default value 0.2 Hz (.e., 5 second time constant) used. plim (optional) Minimum pitch angle, radians, speed can computed. Default: 0.3490659 radians = 20 degrees. Errors speed estimation using method increase strongly low pitch angles. avoid estimates poor accuracy used later analyses, speed estimates low pitch angles replaced NaN (--number). default threshold 20 degrees.","code":""},{"path":"/reference/speed_from_depth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the forward speed of a diving animal — speed_from_depth","text":"Either forward speed vertical speed: s:  p input, forward speed estimate m/s returned v:  p input, depth-rate (vertical velocity) m/s returned","code":""},{"path":"/reference/speed_from_depth.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate the forward speed of a diving animal — speed_from_depth","text":"Output sampling rate input sampling rate. p input higher sampling rate, p output interpolated match using interp2length . Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. frames, positive pitch angle anti-clockwise rotation around y-axis. descending animal negative pitch angle. Forward velocity animals negative vertical velocity negative pitch angle positive, , vertical velocity positive pitch angle negative. One avoid getting negative forward velocity taking absolute value output.","code":""},{"path":"/reference/speed_from_depth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the forward speed of a diving animal — speed_from_depth","text":"","code":"s <- speed_from_depth(harbor_seal$P, harbor_seal$A)"},{"path":"/reference/spherical_cal.html","id":null,"dir":"Reference","previous_headings":"","what":"Deduce the calibration constants — spherical_cal","title":"Deduce the calibration constants — spherical_cal","text":"function used deduce calibration constants triaxial field sensor, accelerometer magnetometer, based movement data. can used 'bench' calibration sensor.","code":""},{"path":"/reference/spherical_cal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deduce the calibration constants — spherical_cal","text":"","code":"spherical_cal(X, n = NULL, method = NULL)"},{"path":"/reference/spherical_cal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deduce the calibration constants — spherical_cal","text":"X segment triaxial sensor data calibrate. must 3-column matrix. X can come triaxial field sensor can unit frame. n target field magnitude e.g., 9.81 accelerometer data using m/s^2 unit. method optional string selecting type calibration. default calibrate offset scaling . options : 'gain' adjust gain axes 2 3 relative 1, 'cross' adjust gain remove cross-axis correlations","code":""},{"path":"/reference/spherical_cal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deduce the calibration constants — spherical_cal","text":"list 2 elements: Y:  matrix converted sensor values. units input argument n. size Y size X frame sampling rate. G:  calibration structure containing fields: G.poly matrix polynomials. first column G.poly three scale factors applied columns X. second column offset added column X scaling. G.cross 3x3 matrix cross-factors. cross-terms, identity matrix. -axis terms correct cross-axis sensitivity. message also printed screen presenting","code":""},{"path":"/reference/spherical_cal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deduce the calibration constants — spherical_cal","text":"function reports residual axial balance data. low residual e.g., <5% indicates data can calibrated well much noise. axial balance indicates whether movement X suitable data-driven calibration. movement covers directions fairly equally, axial balance high. balance <20 % may lead unreliable calibration. bench calibrations, high axial balance achieved rotating sensor full 3-dimensions. Sampling rate frame Y input data Y size X. units Y units used n. n specified, units Y input data. good idea low-pass filter /remove outliers sensor data using function reduce errors specific acceleration sensor noise.","code":""},{"path":"/reference/spherical_cal.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Deduce the calibration constants — spherical_cal","text":"function uses Simplex search optimal calibration parameters can slow data size large. reason suitable bench calibrations rather field data. function usable field sensors. work gyroscope data.","code":""},{"path":"/reference/spherical_cal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deduce the calibration constants — spherical_cal","text":"","code":"s <- spherical_cal(harbor_seal$A$data)"},{"path":"/reference/tag2animal.html","id":null,"dir":"Reference","previous_headings":"","what":"Tag-frame to animal-frame conversion — tag2animal","title":"Tag-frame to animal-frame conversion — tag2animal","text":"Convert tag frame measurements animal frame using pre-determined tag orientation(s) animal.","code":""},{"path":"/reference/tag2animal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tag-frame to animal-frame conversion — tag2animal","text":"","code":"tag2animal(X, sampling_rate, OTAB, Ya = NULL)"},{"path":"/reference/tag2animal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tag-frame to animal-frame conversion — tag2animal","text":"X Data triaxial sensor accelerometer, magnetometer gyroscope. X can three column matrix sensor structure (data frame tbl). either case, X tag frame, .e., expressed canonical axes tag, animal. X can unit regular sampling rate (.e., measurements regularly sampled; equally spaced time). sampling_rate (optional) sampling rate sensor data Hz (samples per second). needed X sensor structure. X sensor data list, sampling_rate obtained metadata (X$sampling_rate). OTAB matrix defining orientation tag animal function time. row OTAB : cue1, cue2, pitch, roll, heading. (See Details.) Ya optional sensor structure sensor data already converted animal frame. OTAB extracted structure. useful, example, replicate tag--animal conversions different sampling rates.","code":""},{"path":"/reference/tag2animal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tag-frame to animal-frame conversion — tag2animal","text":"Xa,sensor data animal frame, .e., rotated correct tag orientation animal. X sensor structure, Xa also one. case structure elements 'frame' 'name' changed. OTAB also added structure.","code":""},{"path":"/reference/tag2animal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tag-frame to animal-frame conversion — tag2animal","text":"function uses OTAB matrix convert sensor data X tag frame reference whale frame reference. row OTAB : cue1, cue2, pitch, roll, heading cue1 start time move seconds respect start X. cue2 end time move. cue1 cue2 , move instantaneous, otherwise gradual move implemented orientation tag linearly interpolated previous new orientation. pitch, roll heading angles describe tag orientation animal end move (angles radians). first row OTAB must cue1 cue2 equal 0 initial orientation tag animal. Subsequent rows () OTAB describe","code":""},{"path":[]},{"path":"/reference/tag2animal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tag-frame to animal-frame conversion — tag2animal","text":"","code":"Aw <- tag2animal(beaked_whale$A, OTAB = matrix(c(0,0,0.1, 0.04, -0.2), nrow = 1))"},{"path":"/reference/tortuosity.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure tortuosity index — tortuosity","title":"Measure tortuosity index — tortuosity","text":"function used measure tortuosity regularly sampled horizontal track. Tortuosity can measured number ways. function compares stretched-track length (STL) interval time distance made good (DMG, .e., distance actually covered interval). index returned (STL-DMG)/STL 0 straightline movement 1 extreme circular movement.","code":""},{"path":"/reference/tortuosity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure tortuosity index — tortuosity","text":"","code":"tortuosity(T, sampling_rate, intvl)"},{"path":"/reference/tortuosity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure tortuosity index — tortuosity","text":"T Contains animal positions local horizontal plane. T row position two columns: northing easting. positions can consistent spatial unit, e.g., metres, km, nautical miles, referenced arbitrary 0,0 location. T degrees distance equivalent degree latitude degree longitude. sampling_rate sampling rate positions Hertz (samples per second). intvl time interval seconds tortuosity calculated. chosen according scale interest, e.g., typical length foraging bout.","code":""},{"path":"/reference/tortuosity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Measure tortuosity index — tortuosity","text":"tortuosity index 0 1 described . t contains value period intvl seconds.","code":""},{"path":"/reference/tortuosity.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Measure tortuosity index — tortuosity","text":"tortuosity index fairly insensitive speed T produced dead-reckoning (e.g., using ptrack htrack), speed estimate important. Also frame T important long two axes (nominally called northing easting) used describe positions perpendicular.","code":""},{"path":"/reference/tortuosity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure tortuosity index — tortuosity","text":"","code":"if (FALSE) { BW <- beaked_whale T <- ptrack(   A = BW$A$data, M = BW$M$data, s = 3,   sampling_rate = BW$A$sampling_rate,   fc = NULL, return_pe = TRUE )$T t <- tortuosity(T, sampling_rate = BW$A$sampling_rate, intvl = 25) }"},{"path":"/reference/track3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct a track from pitch, heading and depth data, given a starting position — track3D","title":"Reconstruct a track from pitch, heading and depth data, given a starting position — track3D","text":"track3D function use data tag reconstruct track fitting state space model using Kalman filter. x,y observations provided corresponds pseudo-track obtained via dead reckoning extreme care required interpreting results.","code":""},{"path":"/reference/track3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct a track from pitch, heading and depth data, given a starting position — track3D","text":"","code":"track3D(   z,   phi,   psi,   sf,   r = 0.001,   q1p = 0.02,   q2p = 0.08,   q3p = 1.6e-05,   tagonx,   tagony,   enforce = T,   x,   y )"},{"path":"/reference/track3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct a track from pitch, heading and depth data, given a starting position — track3D","text":"z vector depth time (meters, observation) phi vector pitch time (Radians, assumed known covariate) psi vector heading time (Radians, assumed known covariate) sf scalar defining sampling rate (Hz) r Observation error q1p speed state error q2p depth state error q3p x y state error tagonx Easting starting position (meters, requires projected data) tagony Northing starting position (meters, requires projected data) enforce TRUE (default), speed depth kept strictly positive x Direct observations Easting (meters, requires projected data) y Direct observations Northing (meters, requires projected data)","code":""},{"path":"/reference/track3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct a track from pitch, heading and depth data, given a starting position — track3D","text":"list 10 elements: p:  smoothed speeds fit.ks:  fitted speeds fit.kd:  fitted depths fit.xs:  fitted xs fit.ys:  fitted ys fit.rd:  smoothed depths fit.rx:  smoothed xs fit.ry:  smoothed ys fit.kp:  kalman posteriori state covariance fit.ksmo:  kalman smoother variance","code":""},{"path":"/reference/track3D.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Reconstruct a track from pitch, heading and depth data, given a starting position — track3D","text":"Output sampling rate input sampling rate. Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. frames, positive pitch angle anti-clockwise rotation around y-axis. positive roll angle clockwise rotation around x-axis. descending animal negative pitch angle animal rolled right side positive roll angle. function output can quite sensitive inputs used, namely define relative weight given existing data, particular regarding (x,y)=(lat,long); increasing q3p, (x,y) state variance, increase weight given independent observations (x,y), say GPS readings","code":""},{"path":[]},{"path":"/reference/track3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reconstruct a track from pitch, heading and depth data, given a starting position — track3D","text":"","code":"if (FALSE) { p <- a2pr(A = beaked_whale$A$data) h <- m2h(M = beaked_whale$M$data, A = beaked_whale$A$data) track <- track3D(z = beaked_whale$P$data, phi = p$p,  psi = h$h, sf = beaked_whale$A$sampling_rate,  r = 0.001, q1p = 0.02, q2p = 0.08, q3p = 1.6e-05,  tagonx = 1000, tagony = 1000, enforce = T, x = NA, y = NA) par(mfrow = c(2, 1), mar = c(4, 4, 0.5, 0.5)) plot(-beaked_whale$P$data, pch = \".\", ylab = \"Depth (m)\",  xlab = \"Time\") plot(track$fit.rx, track$fit.ry, xlab = \"X\",  ylab = \"Y\", pch = \".\") points(track$fit.rx[c(1, length(track$fit.rx))],  track$fit.ry[c(1, length(track$fit.rx))], pch = 21, bg = 5:6) legend(\"bottomright\", cex = 0.7, legend = c(\"Start\", \"End\"),  col = c(5, 6), pt.bg = c(5, 6), pch = c(21, 21)) }"},{"path":"/reference/undo_cal.html","id":null,"dir":"Reference","previous_headings":"","what":"Undo calibrations steps — undo_cal","title":"Undo calibrations steps — undo_cal","text":"function used undo calibration steps applied sensor data. reverse re-mapping, scaling offset adjustments applied data, reverting sensor data state read source (excluding filtering decimation steps).","code":""},{"path":"/reference/undo_cal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undo calibrations steps — undo_cal","text":"","code":"undo_cal(X, T)"},{"path":"/reference/undo_cal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undo calibrations steps — undo_cal","text":"X sensor list set sensor lists tag frame, .e., calibrations applied. T vector temperature measurements number samples sampling rate data input sensor data structure X. T indicates temperature experienced sensor data collection (necessarily ambient temperature experienced animal), may affect calibration many sensors’ output values change depending temperature.","code":""},{"path":"/reference/undo_cal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Undo calibrations steps — undo_cal","text":"sensor list set sensor lists reverted sensor frame, .e., without calibrations.","code":""},{"path":"/reference/undo_cal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Undo calibrations steps — undo_cal","text":"","code":"if (FALSE) { BW <- beaked_whale undo_cal(BW) }"},{"path":"/reference/zero_crossings.html","id":null,"dir":"Reference","previous_headings":"","what":"Find zero-crossings in a vector — zero_crossings","title":"Find zero-crossings in a vector — zero_crossings","text":"function used find zero-crossings vector using hysteretic detector. useful, e.g., locate cyclic postural changes due propulsion.","code":""},{"path":"/reference/zero_crossings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find zero-crossings in a vector — zero_crossings","text":"","code":"zero_crossings(x, TH, Tmax = NULL)"},{"path":"/reference/zero_crossings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find zero-crossings in a vector — zero_crossings","text":"x vector data. can sensor sampling rate. TH magnitude threshold detecting zero-crossing. zero-crossing detected values x pass -TH +TH vice versa. Tmax (optional) maximum duration samples threshold crossings. accepted zero-crossing, signal must pass -TH TH, vice versa, Tmax samples. useful eliminate slow transitions. Tmax given, limit number samples threshold crossings.","code":""},{"path":"/reference/zero_crossings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find zero-crossings in a vector — zero_crossings","text":"list elements K:  vector cues (samples) zero-crossings x. s:  vector containing sign zero-crossing (1 = positive-going, -1 = negative-going). s size K. zero-crossings found, K s empty KK:  zero crossings vertical velocity vector","code":""},{"path":"/reference/zero_crossings.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find zero-crossings in a vector — zero_crossings","text":"Frame: function assumes [north,east,] navigation frame [forward,right,] local frame. M must rotated needed match animal's cardinal axes otherwise track meaningful. CAUTION: dead-reckoned tracks usually inaccurate. useful get idea animals move rather go.  animals probably travel exactly direction longitudinal axis anyway measuring precise orientation longitudinal axis non-rigid animal fraught error.  Moreover, net flow medium, animal advected flow addition autonomous movement. swimming animals can lead substantial errors.  forward speed assumed  respect medium track derived 'track-made-good', .e., geographic movement animal. estimates movement animal respect medium.  numerous sources error use risk!","code":""},{"path":"/reference/zero_crossings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find zero-crossings in a vector — zero_crossings","text":"","code":"if (FALSE) { R <- zero_crossings(sin(2 * pi * 0.033 * c(1:100)), 0.3) s <- c(-1, 1, -1, 1, -1, 1) }"},{"path":"/news/index.html","id":"tagtools-0009000","dir":"Changelog","previous_headings":"","what":"tagtools 0.0.0.9000","title":"tagtools 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
